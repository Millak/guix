# SOME DESCRIPTIVE TITLE
# Copyright (C) 2021 the authors of Guix (msgids) and the following authors (msgstr)
# This file is distributed under the same license as the guix manual package.
# Rafael Fontenelle <rafaelff@gnome.org>, 2021.
# Camila Flores Granella <cgranell@redhat.com>, 2022, 2023, 2024.
# Fábio Rodrigues Ribeiro <farribeiro@gmail.com>, 2022, 2023.
# Alexandre de Siqueira <alex.desiqueira@igdore.org>, 2023.
# Florian Pelz <pelzflorian@pelzflorian.de>, 2023, 2024, 2025.
# Frank McCay <frank.mccay@outlook.com.br>, 2024.
# Weblate Translation Memory <noreply-mt-weblate-translation-memory@weblate.org>, 2024, 2025.
# Krascovict Petrov <krascovict@yandex.ru>, 2024.
# Arthur Rodrigues <arthurhdrodrigues@proton.me>, 2025.
msgid ""
msgstr ""
"Project-Id-Version: guix manual checkout\n"
"Report-Msgid-Bugs-To: bug-guix@gnu.org\n"
"POT-Creation-Date: 2025-10-21 03:18+0000\n"
"PO-Revision-Date: 2025-10-28 17:20+0000\n"
"Last-Translator: pelzflorian <pelzflorian@noreply.codeberg.org>\n"
"Language-Team: Portuguese (Brazil) <https://translate.codeberg.org/projects/guix/documentation-cookbook/pt_BR/>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 5.13.3\n"

msgid "@documentencoding UTF-8"
msgstr ""
"@documentencoding UTF-8\n"
"@documentlanguage pt_BR\n"
"@frenchspacing on"

msgid "GNU Guix Cookbook"
msgstr "Livro de receitas do GNU Guix"

msgid "Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license is included in the section entitled ``GNU Free Documentation License''."
msgstr "Permissão concedida para copiar, distribuir e/ou modificar este documento sob os termos da Licença de Documentação Livre GNU, Versão 1.3 ou qualquer versão mais recente publicada pela Free Software Foundation; sem Seções Invariantes, Textos de Capa Frontal, e sem Textos de Contracapa. Uma cópia da licença está incluída na seção intitulada ``GNU Free Documentation License''."

msgid "System administration"
msgstr "Administração do sistema"

msgid "Guix cookbook: (guix-cookbook)"
msgstr "Livro de receitas do Guix: (guix-cookbook.pt_BR)"

msgid "Tutorials and examples for GNU Guix."
msgstr "Tutoriais e exemplos para o GNU Guix."

msgid "Tutorials and examples for using the GNU Guix Functional Package Manager"
msgstr "Tutoriais e exemplos para usar o Gerenciador de Pacotes Funcional do GNU Guix"

msgid "The GNU Guix Developers"
msgstr "Desenvolvedores do GNU Guix"

msgid "Top"
msgstr "Top"

msgid "This document presents tutorials and detailed examples for GNU@tie{}Guix, a functional package management tool written for the GNU system.  Please @pxref{Top,,, guix, GNU Guix reference manual} for details about the system, its API, and related concepts."
msgstr "Este documento apresenta tutoriais e exemplos detalhados para o GNU@tie{}Guix, uma ferramenta funcional de gerenciamento de pacotes escrita para o sistema GNU. Por favor, acesse o @pxref{Top,,, guix.pt_BR, Manual de Referência do GNU Guix} para mais detalhes sobre o sistema, sua API, e conceitos relacionados."

msgid "This manual is also available in Simplified Chinese (@pxref{Top,,, guix-cookbook.zh_CN, GNU Guix 烹饪书}), French (@pxref{Top,,, guix-cookbook.fr, Livre de recettes de GNU Guix}), German (@pxref{Top,,, guix-cookbook.de, GNU-Guix-Kochbuch}), Korean (@pxref{Top,,, guix-cookbook.ko, GNU Guix 쿡북}), Spanish (@pxref{Top,,, guix-cookbook.es, Libro de recetas de GNU Guix}), Italian (@pxref{Top,,, guix-cookbook.it, Ricettario di GNU Guix}), Brazilian Portuguese (@pxref{Top,,, guix-cookbook.pt_BR, Livro de receitas do GNU Guix}), Russian (@pxref{Top,,, guix-cookbook.ru, GNU Guix Рецепты}), Slovak (@pxref{Top,,, guix-cookbook.sk, Receptár GNU Guix}), and Swedish (@pxref{Top,,, guix-cookbook.sv, Kokbok för GNU Guix}).  If you would like to translate this document in your native language, consider joining @uref{https://translate.codeberg.org/projects/guix/documentation-cookbook, Weblate} (@pxref{Translating Guix,,, guix, GNU Guix Reference Manual})."
msgstr "Esse manual também está disponível em inglês (@pxref{Top,,, guix-cookbook, GNU Guix Cookbook}), chinês simplificado (@pxref{Top,,, guix-cookbook.zh_CN, GNU Guix 烹饪书}), francês (@pxref{Top,,, guix-cookbook.fr, Livre de recettes de GNU Guix}), alemão (@pxref{Top,,, guix-cookbook.de, GNU-Guix-Kochbuch}), na língua coreana (@pxref{Top,,, guix-cookbook.ko, GNU Guix 쿡북}), em espanhol (@pxref{Top,,, guix-cookbook.es, Libro de recetas de GNU Guix}), italiano (@pxref{Top,,, guix-cookbook.it, Ricettario di GNU Guix}), russo (@pxref{Top,,, guix-cookbook.ru, GNU Guix Рецепты}), eslovaco (@pxref{Top,,, guix-cookbook.sk, Receptár GNU Guix}) e sueco (@pxref{Top,,, guix-cookbook.sv, Kokbok för GNU Guix}). Se você gostaria de contribuir com a tradução deste documento em sua língua nativa, considere se juntar a nós @uref{https://translate.codeberg.org/projects/guix/documentation-cookbook, Weblate} (@pxref{Traduzindo o Guix,,, guix.pt_BR, Manual de referência do GNU Guix})."

msgid "Scheme tutorials"
msgstr "Tutoriais sobre Scheme"

msgid "Meet your new favorite language!"
msgstr "Conheça sua nova linguagem favorita!"

msgid "Packaging"
msgstr "Empacotamento"

msgid "Packaging tutorials"
msgstr "Tutoriais sobre empacotamento"

msgid "System Configuration"
msgstr "Configuração do sistema"

msgid "Customizing the GNU System"
msgstr "Customizando o Sistema GNU"

msgid "Containers"
msgstr "Contêineres"

msgid "Isolated environments and nested systems"
msgstr "Ambientes isolados e sistemas aninhados"

msgid "Virtual Machines"
msgstr "Máquinas Virtuais"

msgid "Virtual machines usage and configuration"
msgstr "Uso e configuração de máquinas virtuais"

msgid "Advanced package management"
msgstr "Gerenciamento avançado de pacotes"

msgid "Power to the users!"
msgstr "Poder aos usuários!"

msgid "Software Development"
msgstr "Desenvolvimento de software"

msgid "Environments, continuous integration, etc."
msgstr "Ambientes, integração contínua, etc."

msgid "Environment management"
msgstr "Gerenciamento de ambientes"

msgid "Control environment"
msgstr "Ambiente de controle"

msgid "Installing Guix on a Cluster"
msgstr "Instalando Guix em um Cluster"

msgid "High-performance computing."
msgstr "Computação de alta performance."

msgid "Guix System Management"
msgstr "Gerenciamento do sistema Guix"

msgid "System Management specifics."
msgstr "Especificidades de gerenciamento de sistema."

msgid "Acknowledgments"
msgstr "Agradecimentos"

msgid "Thanks!"
msgstr "Obrigado!"

msgid "GNU Free Documentation License"
msgstr "Licença de Documentação Livre GNU"

msgid "The license of this document."
msgstr "A licença deste documento."

msgid "Concept Index"
msgstr "Índice de conceitos"

msgid "Concepts."
msgstr "Conceitos."

msgid "--- The Detailed Node Listing ---"
msgstr "--- A listagem detalhada de nós ---"

msgid "A Scheme Crash Course"
msgstr "Um curso intensivo de Scheme"

msgid "Packaging Tutorial"
msgstr "Tutorial sobre empacotamento"

msgid "A tutorial on how to add packages to Guix."
msgstr "Um tutorial sobre como adicionar pacotes ao Guix."

msgid "Packaging Workflows"
msgstr "Fluxos de trabalho de empacotamento"

msgid "Real life examples on working with specific build systems."
msgstr "Exemplos reais sobre como trabalhar com sistemas de compilação específicos."

msgid "A ``Hello World'' package"
msgstr "Um pacote ``Hello World''"

msgid "Setup"
msgstr "Configuração"

msgid "Extended example"
msgstr "Exemplo estendido"

msgid "Other build systems"
msgstr "Outros sistemas de construção"

msgid "Programmable and automated package definition"
msgstr "Definição de pacote programável e automatizada"

msgid "Getting help"
msgstr "Obtendo ajuda"

msgid "Conclusion"
msgstr "Conclusão"

msgid "References"
msgstr "Referências"

msgid "Local file"
msgstr "Arquivo local"

msgid "Channels"
msgstr "Canais"

msgid "Direct checkout hacking"
msgstr "Conferir o hacking direto"

msgid "Recursive importers"
msgstr "Importadores recursivos"

msgid "Automatic update"
msgstr "Atualização automática"

msgid "Inheritance"
msgstr "Herança"

msgid "Packaging Rust Crates"
msgstr "Empacotando Crates de Rust"

msgid "Common Workflow for Rust Packaging"
msgstr "Fluxo de trabalho comum para empacotamento em Rust"

msgid "Cargo Workspaces and Development Snapshots"
msgstr "Espaços de trabalho do Cargo e snapshots de desenvolvimento"

msgid "Using Rust Libraries in Other Build Systems"
msgstr "Usando bibliotecas de Rust em outros sistemas de compilação"

msgid "Auto-Login to a Specific TTY"
msgstr "Login automático em um TTY específico"

msgid "Automatically Login a User to a Specific TTY"
msgstr "Faça login automaticamente de um usuário em um TTY específico"

msgid "Customizing the Kernel"
msgstr "Customizando o Kernel"

msgid "Creating and using a custom Linux kernel on Guix System."
msgstr "Criando e usando um kernel Linux customizado no Sistema Guix."

msgid "Guix System Image API"
msgstr "API de imagem do sistema Guix"

msgid "Customizing images to target specific platforms."
msgstr "Customizando imagens visando plataformas específicas."

msgid "Using security keys"
msgstr "Usando chaves de segurança"

msgid "How to use security keys with Guix System."
msgstr "Como usar chaves de segurança com o Sistema Guix."

msgid "Dynamic DNS mcron job"
msgstr "Trabalho mcron de DNS dinâmico"

msgid "Job to update the IP address behind a DuckDNS host name."
msgstr "Tarefa para atualizar o endereço IP por trás de um nome de host DuckDNS."

msgid "Connecting to Wireguard VPN"
msgstr "Conectando-se à VPN Wireguard"

msgid "Connecting to a Wireguard VPN."
msgstr "Conectando-se a uma VPN Wireguard."

msgid "Customizing a Window Manager"
msgstr "Customizando um Gerenciador de Janelas"

msgid "Handle customization of a Window manager on Guix System."
msgstr "Customização de um gerenciador de janelas no Sistema Guix."

msgid "Running Guix on a Linode Server"
msgstr "Executando Guix em um Servidor Linode"

msgid "Running Guix on a Linode Server."
msgstr "Executando Guix em um Servidor Linode."

msgid "Running Guix on a Kimsufi Server"
msgstr "Executando Guix em um servidor Kimsufi"

msgid "Running Guix on a Kimsufi Server."
msgstr "Executando Guix em um servidor Kimsufi."

msgid "Setting up a bind mount"
msgstr "Configurando uma montagem vinculada"

msgid "Setting up a bind mount in the file-systems definition."
msgstr "Configurando uma montagem vinculada na definição de sistemas de arquivos."

msgid "Getting substitutes from Tor"
msgstr "Obtendo substitutos pelo Tor"

msgid "Configuring Guix daemon to get substitutes through Tor."
msgstr "Configurando o daemon Guix para obter substitutos através do Tor."

msgid "Setting up NGINX with Lua"
msgstr "Configurando NGINX com Lua"

msgid "Configuring NGINX web-server to load Lua modules."
msgstr "Configurando o servidor web NGINX para carregar módulos Lua."

msgid "Music Server with Bluetooth Audio"
msgstr "Servidor de música com áudio Bluetooth"

msgid "Headless music player with Bluetooth output."
msgstr "Leitor de música com saída Bluetooth."

msgid "StumpWM"
msgstr "StumpWM"

msgid "Session lock"
msgstr "Bloqueio de sessão"

msgid "Xorg"
msgstr "Xorg"

msgid "Guix Containers"
msgstr "Contêineres Guix"

msgid "Perfectly isolated environments"
msgstr "Ambientes perfeitamente isolados"

msgid "Guix System Containers"
msgstr "Contêineres do Sistema Guix"

msgid "A system inside your system"
msgstr "Um sistema dentro do seu sistema"

msgid "A Database Container"
msgstr "Um banco de dados de contêineres"

msgid "Container Networking"
msgstr "Rede em contêineres"

msgid "Network bridge for QEMU"
msgstr "Ponte de rede para QEMU"

msgid "Routed network for libvirt"
msgstr "Roteamento de rede para libvirt"

msgid "Custom NAT-based network for libvirt"
msgstr "Rede baseado em NAT customizado para libvirt"

msgid "References: VM References"
msgstr "Referências: Referências de MV"

msgid "Further reading on virtual machines."
msgstr "Leituras adicionais sobre máquinas virtuais."

msgid "Guix Profiles in Practice"
msgstr "Perfis Guix na prática"

msgid "Strategies for multiple profiles and manifests."
msgstr "Estratégias para múltiplos perfis e manifestos."

msgid "Basic setup with manifests"
msgstr "Configuração básica com manifestos"

msgid "Required packages"
msgstr "Pacotes necessários"

msgid "Default profile"
msgstr "Perfil padrão"

msgid "The benefits of manifests"
msgstr "Os benefícios dos manifestos"

msgid "Reproducible profiles"
msgstr "Perfis reproduzíveis"

msgid "Getting Started"
msgstr "Começando"

msgid "Step 0: using `guix shell'."
msgstr "Passo 0: usando `guix shell'."

msgid "Building with Guix"
msgstr "Construindo com Guix"

msgid "Step 1: building your code."
msgstr "Etapa 1: construindo seu código."

msgid "The Repository as a Channel"
msgstr "O Repositório como um Canal"

msgid "Step 2: turning the repo in a channel."
msgstr "Passo 2: transformar o repositório em um canal."

msgid "Package Variants"
msgstr "Variantes de Pacotes"

msgid "Bonus: Defining variants."
msgstr "Bônus: definição de variantes."

msgid "Setting Up Continuous Integration"
msgstr "Configurando Integração Contínua"

msgid "Step 3: continuous integration."
msgstr "Etapa 3: integração contínua."

msgid "Build Manifest"
msgstr "Construir Manifesto"

msgid "Bonus: Manifest."
msgstr "Bônus: Manifesto."

msgid "Wrapping Up"
msgstr "Empacotando"

msgid "Recap."
msgstr "Recapitular."

msgid "Guix environment via direnv"
msgstr "Ambiente Guix via direnv"

msgid "Setup Guix environment with direnv"
msgstr "Configurar ambiente Guix com o direnv"

msgid "Setting Up a Head Node"
msgstr "Configurando um nó principal"

msgid "The node that runs the daemon."
msgstr "O nó que executa o daemon."

msgid "Setting Up Compute Nodes"
msgstr "Configurando nós de computação"

msgid "Client nodes."
msgstr "Nós clientes."

msgid "Cluster Network Access"
msgstr "Acesso à rede de cluster"

msgid "Dealing with network access restrictions."
msgstr "Lidando com restrições de acesso à rede."

msgid "Cluster Disk Usage"
msgstr "Uso de disco de cluster"

msgid "Disk usage considerations."
msgstr "Considerações sobre o uso do disco."

msgid "Cluster Security Considerations"
msgstr "Considerações sobre segurança de cluster"

msgid "Keeping the cluster secure."
msgstr "Mantendo o cluster seguro."

msgid "Upgrade Postgres for Cuirass"
msgstr "Atualizar Postgres para Cuirass"

msgid "Upgrading from the default postgres."
msgstr "Atualizando a partir do postgres padrão."

msgid "GNU@tie{}Guix is written in the general purpose programming language Scheme, and many of its features can be accessed and manipulated programmatically.  You can use Scheme to generate package definitions, to modify them, to build them, to deploy whole operating systems, etc."
msgstr "GNU@tie{}Guix foi escrito na linguagem de programação de uso geral Scheme, e muitos de seus recursos podem ser acessados e manipulados programaticamente. Você pode usar Scheme para gerar definições de pacotes, modificá-los, construí-los, implantar sistemas operacionais inteiros, etc."

msgid "Knowing the basics of how to program in Scheme will unlock many of the advanced features Guix provides --- and you don't even need to be an experienced programmer to use them!"
msgstr "Conhecer o básico de como programar com Scheme irá desbloquear muitos dos recursos avançados que o Guix oferece --- e você nem precisa ser um programador experiente para usá-los!"

msgid "Let's get started!"
msgstr "Vamos começar!"

msgid "Scheme, crash course"
msgstr "Scheme, curso intensivo"

msgid "Guix uses the Guile implementation of Scheme.  To start playing with the language, install it with @code{guix install guile} and start a @dfn{REPL}---short for @uref{https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop, @dfn{read-eval-print loop}}---by running @code{guile} from the command line."
msgstr "Guix usa a implementação Guile do Scheme. Para começar a brincar com a linguagem, instale-a com @code{guix install guile} e inicie um @dfn{REPL}---abreviação de @uref{https://pt.wikipedia.org/wiki/REPL, @dfn{read-eval-print loop}}---executando @code{guile} na linha de comando."

msgid "Alternatively you can also run @code{guix shell guile -- guile} if you'd rather not have Guile installed in your user profile."
msgstr "Alternativamente, você também pode executar @code{guix shell guile -- guile} se preferir não ter o Guile instalado em seu perfil de usuário."

msgid "In the following examples, lines show what you would type at the REPL; lines starting with ``@result{}'' show evaluation results, while lines starting with ``@print{}'' show things that get printed.  @xref{Using Guile Interactively,,, guile, GNU Guile Reference Manual}, for more details on the REPL."
msgstr "Nos exemplos a seguir, as linhas mostram o que você digitaria no REPL; linhas que começam com ``@result{}'' mostram resultados de avaliação, enquanto linhas que começam com ``@print{}'' mostram coisas que são exibidas. @xref{Using Guile Interactively,,, guile, Manual de referência do GNU Guile}, para mais detalhes sobre o REPL."

msgid "Scheme syntax boils down to a tree of expressions (or @emph{s-expression} in Lisp lingo).  An expression can be a literal such as numbers and strings, or a compound which is a parenthesized list of compounds and literals.  @code{#true} and @code{#false} (abbreviated @code{#t} and @code{#f}) stand for the Booleans ``true'' and ``false'', respectively."
msgstr "A sintaxe de Scheme se resume a uma árvore de expressões (ou @emph{s-expression} no jargão Lisp). Uma expressão pode ser um literal, como números e strings, ou um composto que é uma lista entre parênteses de compostos e literais. @code{#true} e @code{#false} (abreviados @code{#t} e @code{#f}) representam os booleanos ``true'' e ``false'', respectivamente."

msgid "Examples of valid expressions:"
msgstr "Exemplos de expressões válidas:"

msgid ""
"\"Hello World!\"\n"
"@result{} \"Hello World!\"\n"
"\n"
msgstr ""
"\"Olá mundo!\"\n"
"@result{} \"Olá mundo!\"\n"
"\n"

msgid ""
"17\n"
"@result{} 17\n"
"\n"
msgstr ""
"17\n"
"@result{} 17\n"
"\n"

msgid ""
"(display (string-append \"Hello \" \"Guix\" \"\\n\"))\n"
"@print{} Hello Guix!\n"
"@result{} #<unspecified>\n"
msgstr ""
"(display (string-append \"Olá \" \"Guix\" \"\\n\"))\n"
"@print{} Olá Guix!\n"
"@result{} #<unspecified>\n"

msgid "This last example is a function call nested in another function call.  When a parenthesized expression is evaluated, the first term is the function and the rest are the arguments passed to the function.  Every function returns the last evaluated expression as its return value."
msgstr "Este último exemplo é uma chamada de função aninhada em outra chamada de função. Quando uma expressão entre parênteses é avaliada, o primeiro termo é a função e o restante são os argumentos passados para a função. Cada função retorna a última expressão avaliada como valor de retorno."

msgid "Anonymous functions---@dfn{procedures} in Scheme parlance---are declared with the @code{lambda} term:"
msgstr "Funções anônimas ---@dfn{procedimentos} na linguagem do Scheme --- são declaradas com o termo @code{lambda}:"

msgid ""
"(lambda (x) (* x x))\n"
"@result{} #<procedure 120e348 at <unknown port>:24:0 (x)>\n"
msgstr ""
"(lambda (x) (* x x))\n"
"@result{} #<procedimento 120e348 em <porta desconhecida>:24:0 (x)>\n"

msgid "The above procedure returns the square of its argument.  Since everything is an expression, the @code{lambda} expression returns an anonymous procedure, which can in turn be applied to an argument:"
msgstr "O procedimento acima retorna o quadrado do seu argumento. Como tudo é uma expressão, a expressão @code{lambda} retorna um procedimento anônimo, que por sua vez pode ser aplicado a um argumento:"

msgid ""
"((lambda (x) (* x x)) 3)\n"
"@result{} 9\n"
msgstr ""
"((lambda (x) (* x x)) 3)\n"
"@result{} 9\n"

msgid "Procedures are regular values just like numbers, strings, Booleans, and so on."
msgstr "Os procedimentos são valores regulares, assim como números, strings, booleanos e assim por diante."

msgid "Anything can be assigned a global name with @code{define}:"
msgstr "Qualquer coisa pode receber um nome global com @code{define}:"

msgid ""
"(define a 3)\n"
"(define square (lambda (x) (* x x)))\n"
"(square a)\n"
"@result{} 9\n"
msgstr ""
"(define a 3)\n"
"(define square (lambda (x) (* x x)))\n"
"(square a)\n"
"@result{} 9\n"

msgid "Procedures can be defined more concisely with the following syntax:"
msgstr "Os procedimentos podem ser definidos de forma mais concisa com a seguinte sintaxe:"

msgid "(define (square x) (* x x))\n"
msgstr "(define (square x) (* x x))\n"

msgid "A list structure can be created with the @code{list} procedure:"
msgstr "Uma estrutura de lista pode ser criada com o procedimento @code{list}:"

msgid ""
"(list 2 a 5 7)\n"
"@result{} (2 3 5 7)\n"
msgstr ""
"(list 2 a 5 7)\n"
"@result{} (2 3 5 7)\n"

msgid "Standard procedures are provided by the @code{(srfi srfi-1)} module to create and process lists (@pxref{SRFI-1, list processing,, guile, GNU Guile Reference Manual}).  Here are some of the most useful ones in action:"
msgstr "Os procedimentos padrão são fornecidos pelo módulo @code{(srfi srfi-1)} para criar e processar listas (@pxref{SRFI-1, processamento de listas,, guile, Manual de referência do GNU Guile}). Aqui estão alguns dos mais úteis em ação:"

msgid ""
"(use-modules (srfi srfi-1))  ;import list processing procedures\n"
"\n"
msgstr ""
"(use-modules (srfi srfi-1)) ;importar procedimentos de processamento de lista\n"
"\n"

msgid ""
"(append (list 1 2) (list 3 4))\n"
"@result{} (1 2 3 4)\n"
"\n"
msgstr ""
"(append (list 1 2) (list 3 4))\n"
"@result{} (1 2 3 4)\n"
"\n"

msgid ""
"(map (lambda (x) (* x x)) (list 1 2 3 4))\n"
"@result{} (1 4 9 16)\n"
"\n"
msgstr ""
"(map (lambda (x) (* x x)) (list 1 2 3 4))\n"
"@result{} (1 4 9 16)\n"
"\n"

msgid ""
"(delete 3 (list 1 2 3 4))        @result{} (1 2 4)\n"
"(filter odd? (list 1 2 3 4))     @result{} (1 3)\n"
"(remove even? (list 1 2 3 4))    @result{} (1 3)\n"
"(find number? (list \"a\" 42 \"b\")) @result{} 42\n"
msgstr ""
"(delete 3 (list 1 2 3 4))        @result{} (1 2 4)\n"
"(filter odd? (list 1 2 3 4))     @result{} (1 3)\n"
"(remove even? (list 1 2 3 4))    @result{} (1 3)\n"
"(find number? (list \"a\" 42 \"b\")) @result{} 42\n"

msgid "Notice how the first argument to @code{map}, @code{filter}, @code{remove}, and @code{find} is a procedure!"
msgstr "Observe como o primeiro argumento para @code{map}, @code{filter}, @code{remove} e @code{find} é um procedimento!"

msgid "S-expression"
msgstr "expressão simbólica (\"S-expression\")"

msgid "The @dfn{quote} disables evaluation of a parenthesized expression, also called an S-expression or ``s-exp'': the first term is not called over the other terms (@pxref{Expression Syntax, quote,, guile, GNU Guile Reference Manual}).  Thus it effectively returns a list of terms."
msgstr "O @dfn{quote} desativa a avaliação de uma expressão entre parênteses, também chamada de expressão S ou ``s-exp'': o primeiro termo não é chamado sobre os outros termos (@pxref{Expression Syntax, quote,, guile, Manual de referência do GNU Guile}). Assim, ele efetivamente retorna uma lista de termos."

msgid ""
"'(display (string-append \"Hello \" \"Guix\" \"\\n\"))\n"
"@result{} (display (string-append \"Hello \" \"Guix\" \"\\n\"))\n"
"\n"
msgstr ""
"'(display (string-append \"Hello \" \"Guix\" \"\\n\"))\n"
"@result{} (display (string-append \"Hello \" \"Guix\" \"\\n\"))\n"
"\n"

msgid ""
"'(2 a 5 7)\n"
"@result{} (2 a 5 7)\n"
msgstr ""
"'(2 a 5 7)\n"
"@result{} (2 a 5 7)\n"

msgid "The @code{quasiquote} (@code{`}, a backquote) disables evaluation of a parenthesized expression until @code{unquote} (@code{,}, a comma)  re-enables it.  Thus it provides us with fine-grained control over what is evaluated and what is not."
msgstr "O @code{quasiquote} (@code{`}, uma crase) desativa a avaliação de uma expressão entre parênteses até que @code{unquote} (@code{,}, uma vírgula) a reative. Assim, nos fornece um controle refinado sobre o que é avaliado e o que não é."

msgid ""
"`(2 a 5 7 (2 ,a 5 ,(+ a 4)))\n"
"@result{} (2 a 5 7 (2 3 5 7))\n"
msgstr ""
"`(2 a 5 7 (2 ,a 5 ,(+ a 4)))\n"
"@result{} (2 a 5 7 (2 3 5 7))\n"

msgid "Note that the above result is a list of mixed elements: numbers, symbols (here @code{a}) and the last element is a list itself."
msgstr "Observe que o resultado acima é uma lista de elementos mistos: números, símbolos (aqui @code{a}) e o último elemento é uma lista em si."

msgid "G-expressions, syntax"
msgstr "G-expressions, sintaxe"

msgid "gexps, syntax"
msgstr "gexps, sintaxe"

msgid "#~"
msgstr "#~"

msgid "#$"
msgstr "#$"

msgid "gexp"
msgstr "gexp"

msgid "ungexp"
msgstr "ungexp"

msgid "Guix defines a variant of S-expressions on steroids called @dfn{G-expressions} or ``gexps'', which come with a variant of @code{quasiquote} and @code{unquote}: @code{#~} (or @code{gexp}) and @code{#$} (or @code{ungexp}).  They let you @emph{stage code for later execution}."
msgstr "Guix define uma variante de expressões simbólicas (S-expressions) com esteróides chamada @dfn{G-expressions} ou ``gexps'', que vem com uma variante de @code{quasiquote} e @code{unquote}: @code{#~} ( ou @code{gexp}) e @code{#$} (ou @code{ungexp}). Eles permitem @emph{preparar código para execução posterior}."

msgid "For example, you'll encounter gexps in some package definitions where they provide code to be executed during the package build process.  They look like this:"
msgstr "Por exemplo, você encontrará gexps em algumas definições de pacotes onde eles fornecem código a ser executado durante o processo de construção do pacote. Eles se parecem com isto:"

msgid ""
"(use-modules (guix gexp)           ;so we can write gexps\n"
"             (gnu packages base))  ;for 'coreutils'\n"
"\n"
msgstr ""
"(use-modules (guix gexp)           ; para que possamos escrever gexps\n"
"             (gnu packages base))  ; para 'coreutils'\n"
"\n"

msgid ""
";; Below is a G-expression representing staged code.\n"
"#~(begin\n"
"    ;; Invoke 'ls' from the package defined by the 'coreutils'\n"
"    ;; variable.\n"
"    (system* #$(file-append coreutils \"/bin/ls\") \"-l\")\n"
"\n"
msgstr ""
";; Abaixo está uma expressão G representando código preparado.\n"
"#~(begin\n"
"    ;; Invoca 'ls' do pacote definido pela variável 'coreutils'.\n"
"    (system* #$(file-append coreutils \"/bin/ls\") \"-l\")\n"
"\n"

msgid ""
"    ;; Create this package's output directory.\n"
"    (mkdir #$output))\n"
msgstr ""
"    ;; Crie o diretório de saída deste pacote.\n"
"    (mkdir #$output))\n"

msgid "@xref{G-Expressions,,, guix, GNU Guix Reference Manual}, for more on gexps."
msgstr "@xref{Expressões-G,,, guix.pt_BR, Manual de Referência do GNU Guix}, para saber mais sobre gexps."

msgid "Multiple variables can be named locally with @code{let} (@pxref{Local Bindings,,, guile, GNU Guile Reference Manual}):"
msgstr "Múltiplas variáveis podem ser nomeadas localmente com @code{let} (@pxref{Local Bindings,,, guile, Manual de referência do GNU Guile}):"

msgid ""
"(define x 10)\n"
"(let ((x 2)\n"
"      (y 3))\n"
"  (list x y))\n"
"@result{} (2 3)\n"
"\n"
msgstr ""
"(define x 10)\n"
"(let ((x 2)\n"
"      (y 3))\n"
"  (list x y))\n"
"@result{} (2 3)\n"
"\n"

msgid ""
"x\n"
"@result{} 10\n"
"\n"
msgstr ""
"x\n"
"@result{} 10\n"
"\n"

msgid ""
"y\n"
"@error{} In procedure module-lookup: Unbound variable: y\n"
msgstr ""
"y\n"
"@error{} No procedimento module-lookup: Variável não vinculada: y\n"

msgid "Use @code{let*} to allow later variable declarations to refer to earlier definitions."
msgstr "Use @code{let*} para permitir que declarações de variáveis posteriores se refiram a definições anteriores."

msgid ""
"(let* ((x 2)\n"
"       (y (* x 3)))\n"
"  (list x y))\n"
"@result{} (2 6)\n"
msgstr ""
"(let* ((x 2)\n"
"       (y (* x 3)))\n"
"  (list x y))\n"
"@result{} (2 6)\n"

msgid "@dfn{Keywords} are typically used to identify the named parameters of a procedure.  They are prefixed by @code{#:} (hash, colon) followed by alphanumeric characters: @code{#:like-this}.  @xref{Keywords,,, guile, GNU Guile Reference Manual}."
msgstr "@dfn{Palavras-chave} normalmente são usados para identificar os parâmetros nomeados de um procedimento. Eles são prefixados por @code{#:} (hash, dois pontos) seguido por caracteres alfanuméricos: @code{#:like-this}. @xref{Keywords,,, guile, Manual de referência do GNU Guile}."

msgid "The percentage @code{%} is typically used for read-only global variables in the build stage.  Note that it is merely a convention, like @code{_} in C.  Scheme treats @code{%} exactly the same as any other letter."
msgstr "A porcentagem @code{%} normalmente é usada para variáveis globais somente-leitura no estágio de construção. Observe que é apenas uma convenção, como @code{_} em C. Scheme trata @code{%} exatamente da mesma forma que qualquer outra letra."

msgid "Modules are created with @code{define-module} (@pxref{Creating Guile Modules,,, guile, GNU Guile Reference Manual}).  For instance"
msgstr "Os módulos são criados com @code{define-module} (@pxref{Creating Guile Modules,,, guile, Manual de referência do GNU Guile}). Por exemplo"

msgid ""
"(define-module (guix build-system ruby)\n"
"  #:use-module (guix store)\n"
"  #:export (ruby-build\n"
"            ruby-build-system))\n"
msgstr ""
"(define-module (guix build-system ruby)\n"
"  #:use-module (guix store)\n"
"  #:export (ruby-build\n"
"            ruby-build-system))\n"

msgid "defines the module @code{guix build-system ruby} which must be located in @file{guix/build-system/ruby.scm} somewhere in the Guile load path.  It depends on the @code{(guix store)} module and it exports two variables, @code{ruby-build} and @code{ruby-build-system}."
msgstr "define o módulo @code{guix build-system ruby} que deve estar localizado em @file{guix/build-system/ruby.scm} em algum lugar no caminho de carregamento do Guile. Depende do módulo @code{(guix store)} e exporta duas variáveis, @code{ruby-build} e @code{ruby-build-system}."

msgid "@xref{Package Modules,,, guix, GNU Guix Reference Manual}, for info on modules that define packages."
msgstr "@xref{Módulos de pacote,,, guix.pt_BR, GNU Guix Reference Manual}, para informações sobre módulos que definem pacotes."

msgid "Going further"
msgstr "Indo além"

msgid "Scheme is a language that has been widely used to teach programming and you'll find plenty of material using it as a vehicle.  Here's a selection of documents to learn more about Scheme:"
msgstr "Scheme é uma linguagem que tem sido amplamente utilizada para ensinar programação e você encontrará muito material usando-a como veículo. Aqui está uma seleção de documentos para saber mais sobre o Scheme:"

msgid "@uref{https://spritely.institute/static/papers/scheme-primer.html, @i{A Scheme Primer}}, by Christine Lemmer-Webber and the Spritely Institute."
msgstr "@uref{https://spritely.institute/static/papers/scheme-primer.html, @i{A Scheme Primer}}, por Christine Lemmer-Webber e o Spritely Institute."

msgid "@uref{http://www.troubleshooters.com/codecorn/scheme_guile/hello.htm, @i{Scheme at a Glance}}, by Steve Litt."
msgstr "@uref{http://www.troubleshooters.com/codecorn/scheme_guile/hello.htm, @i{Scheme at a Glance}}, por Steve Litt."

msgid "@uref{https://sarabander.github.io/sicp/, @i{Structure and Interpretation of Computer Programs}}, by Harold Abelson and Gerald Jay Sussman, with Julie Sussman.  Colloquially known as ``SICP'', this book is a reference."
msgstr "@uref{https://sarabander.github.io/sicp/, @i{Structure and Interpretation of Computer Programs}}, por Harold Abelson e Gerald Jay Sussman, com Julie Sussman. Coloquialmente conhecido como ``SICP'', este livro é uma referência."

msgid "You can also install it and read it from your computer:"
msgstr "Você também pode instalá-lo e lê-lo em seu computador:"

msgid "You'll find more books, tutorials and other resources at @url{https://schemers.org/}."
msgstr "Você encontrará mais livros, tutoriais e outros recursos em @url{https://schemers.org/}."

msgid "packaging"
msgstr "Empacotamento"

msgid "This chapter is dedicated to teaching you how to add packages to the collection of packages that come with GNU Guix.  This involves writing package definitions in Guile Scheme, organizing them in package modules, and building them."
msgstr "Este capítulo é dedicado a ensinar como adicionar pacotes à coleção de pacotes que vem com o GNU Guix. Isso envolve escrever definições de pacotes no Guile Scheme, organizá-las em módulos de pacotes e construí-las."

msgid "GNU Guix stands out as the @emph{hackable} package manager, mostly because it uses @uref{https://www.gnu.org/software/guile/, GNU Guile}, a powerful high-level programming language, one of the @uref{https://en.wikipedia.org/wiki/Scheme_%28programming_language%29, Scheme} dialects from the @uref{https://en.wikipedia.org/wiki/Lisp_%28programming_language%29, Lisp family}."
msgstr "GNU Guix se destaca como o gerenciador de pacotes @emph{hackeável}, principalmente porque usa @uref{https://www.gnu.org/software/guile/, GNU Guile}, uma poderosa linguagem de programação de alto nível, um dos dialetos @uref{https://pt.wikipedia.org/wiki/Scheme, Scheme} da família @uref{https://pt.wikipedia.org/wiki/Lisp, Lisp}."

msgid "Package definitions are also written in Scheme, which empowers Guix in some very unique ways, unlike most other package managers that use shell scripts or simple languages."
msgstr "As definições de pacotes também são escritas em Scheme, o que capacita o Guix de maneiras muito exclusivas, ao contrário da maioria dos outros gerenciadores de pacotes que usam shell scripts ou linguagens simples."

msgid "Use functions, structures, macros and all of Scheme expressiveness for your package definitions."
msgstr "Utilize funções, estruturas, macros e toda a expressividade do Scheme para definições de seus pacotes."

msgid "Inheritance makes it easy to customize a package by inheriting from it and modifying only what is needed."
msgstr "A herança facilita a personalização de um pacote, herdando-o e modificando apenas o que é necessário."

msgid "Batch processing: the whole package collection can be parsed, filtered and processed.  Building a headless server with all graphical interfaces stripped out? It's possible.  Want to rebuild everything from source using specific compiler optimization flags? Pass the @code{#:make-flags \"...\"} argument to the list of packages.  It wouldn't be a stretch to think @uref{https://wiki.gentoo.org/wiki/USE_flag, Gentoo USE flags} here, but this goes even further: the changes don't have to be thought out beforehand by the packager, they can be @emph{programmed} by the user!"
msgstr "Processamento em lote: toda a coleção de pacotes pode ser analisada, filtrada e processada. Construindo um servidor headless com todas as interfaces gráficas removidas? É possível. Quer reconstruir tudo, desde o código-fonte usando sinalizadores específicos de otimização do compilador? Passe o argumento @code{#:make-flags \"...\"} para a lista de pacotes. Não seria exagero pensar em @uref{https://wiki.gentoo.org/wiki/USE_flag, Gentoo USE flags} aqui, mas isso vai ainda mais longe: as mudanças não precisam ser pensadas de antemão pelo empacotador, elas podem ser @emph{programadas} pelo usuário!"

msgid "The following tutorial covers all the basics around package creation with Guix.  It does not assume much knowledge of the Guix system nor of the Lisp language.  The reader is only expected to be familiar with the command line and to have some basic programming knowledge."
msgstr "O tutorial a seguir cobre todos os fundamentos da criação de pacotes com Guix. Não pressupõe muito conhecimento do sistema Guix nem da linguagem Lisp. Espera-se apenas que o leitor esteja familiarizado com a linha de comando e tenha alguns conhecimentos básicos de programação."

msgid "The ``Defining Packages'' section of the manual introduces the basics of Guix packaging (@pxref{Defining Packages,,, guix, GNU Guix Reference Manual}).  In the following section, we will partly go over those basics again."
msgstr "A seção ``Definindo Pacotes'' do manual apresenta os fundamentos do empacotamento Guix (@pxref{Definindo pacotes,,, guix.pt_BR, Manual de Referência do GNU Guix}). Na seção seguinte, revisaremos parcialmente esses princípios básicos novamente."

msgid "GNU@tie{}Hello is a dummy project that serves as an idiomatic example for packaging.  It uses the GNU build system (@code{./configure && make && make install}).  Guix already provides a package definition which is a perfect example to start with.  You can look up its declaration with @code{guix edit hello} from the command line.  Let's see how it looks:"
msgstr "GNU@tie{}Hello é um projeto fictício que serve como exemplo idiomático para empacotamento. Ele usa o sistema de compilação GNU (@code{./configure && make && make install}). Guix já fornece uma definição de pacote que é um exemplo perfeito para começar. Você pode consultar sua declaração com @code{guix edit hello} na linha de comando. Vamos ver como fica:"

msgid ""
"(define-public hello\n"
"  (package\n"
"    (name \"hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Hello, GNU world: An example GNU package\")\n"
"    (description\n"
"     \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"
msgstr ""
"(define-public hello\n"
"  (package\n"
"    (name \"hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Hello, GNU world: An example GNU package\")\n"
"    (description\n"
"     \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"

msgid "As you can see, most of it is rather straightforward.  But let's review the fields together:"
msgstr "Como você pode ver, a maior parte é bastante simples. Mas vamos revisar os campos juntos:"

msgid "name"
msgstr "name"

msgid "The project name.  Using Scheme conventions, we prefer to keep it lower case, without underscore and using dash-separated words."
msgstr "O nome do projeto. Usando as convenções do Scheme, preferimos mantê-lo em minúsculas, sem sublinhado e usando palavras separadas por traços."

msgid "source"
msgstr "source"

msgid "This field contains a description of the source code origin.  The @code{origin} record contains these fields:"
msgstr "Este campo contém uma descrição da origem do código-fonte. O registro @code{origin} contém estes campos:"

msgid "The method, here @code{url-fetch} to download via HTTP/FTP, but other methods"
msgstr "O método, aqui @code{url-fetch} para download via HTTP/FTP, mas outros métodos"

msgid "exist, such as @code{git-fetch} for Git repositories."
msgstr "existem, como @code{git-fetch} para repositórios Git."

msgid "The URI, which is typically some @code{https://} location for @code{url-fetch}.  Here"
msgstr "O URI, que normalmente é alguma @code{https://} localização para @code{url-fetch}. Aqui"

msgid "the special `mirror://gnu` refers to a set of well known locations, all of which can be used by Guix to fetch the source, should some of them fail."
msgstr "o especial `mirror://gnu` refere-se a um conjunto de locais bem conhecidos, todos os quais podem ser usados pelo Guix para buscar a fonte, caso alguns deles falhem."

msgid "The @code{sha256} checksum of the requested file.  This is essential to ensure"
msgstr "A soma de verificação @code{sha256} do arquivo solicitado. Isto é essencial para garantir"

msgid "the source is not corrupted.  Note that Guix works with base32 strings, hence the call to the @code{base32} function."
msgstr "que a fonte não está corrompida. Observe que o Guix funciona com strings base32, daí a chamada para a função @code{base32}."

msgid "build-system"
msgstr "build-system"

msgid "This is where the power of abstraction provided by the Scheme language really shines: in this case, the @code{gnu-build-system} abstracts away the famous @code{./configure && make && make install} shell invocations.  Other build systems include the @code{trivial-build-system} which does not do anything and requires from the packager to program all the build steps, the @code{python-build-system}, the @code{emacs-build-system}, and many more (@pxref{Build Systems,,, guix, GNU Guix Reference Manual})."
msgstr "É aqui que o poder de abstração fornecido pela linguagem Scheme realmente brilha: neste caso, o @code{gnu-build-system} abstrai as famosas invocações de shell @code{./configure && make && make install}. Outros sistemas de compilação incluem o @code{trivial-build-system} que não faz nada e exige que o empacotador programe todas as etapas de compilação, o @code{python-build-system}, o @code{emacs-build- system} e muito mais (@pxref{Sistemas de compilação,,, guix.pt_BR, Manual de Referência do GNU Guix})."

msgid "synopsis"
msgstr "synopsis"

msgid "It should be a concise summary of what the package does.  For many packages a tagline from the project's home page can be used as the synopsis."
msgstr "Deve ser um resumo conciso do que o pacote faz. Para muitos pacotes, uma etiqueta da página inicial do projeto pode ser usado como sinopse."

msgid "description"
msgstr "description"

msgid "Same as for the synopsis, it's fine to re-use the project description from the homepage.  Note that Guix uses Texinfo syntax."
msgstr "Assim como na sinopse, não há problema em reutilizar a descrição do projeto na página inicial. Observe que o Guix usa a sintaxe de Texinfo."

msgid "home-page"
msgstr "home-page"

msgid "Use HTTPS if available."
msgstr "Use HTTPS, se disponível."

msgid "license"
msgstr "license"

msgid "See @code{guix/licenses.scm} in the project source for a full list of available licenses."
msgstr "Consulte @code{guix/licenses.scm} na fonte do projeto para obter uma lista completa de licenças disponíveis."

msgid "Time to build our first package! Nothing fancy here for now: we will stick to a dummy @code{my-hello}, a copy of the above declaration."
msgstr "É hora de construir nosso primeiro pacote! Nada sofisticado aqui por enquanto: vamos nos ater a um @code{my-hello} fictício, uma cópia da declaração acima."

msgid "As with the ritualistic ``Hello World'' taught with most programming languages, this will possibly be the most ``manual'' approach.  We will work out an ideal setup later; for now we will go the simplest route."
msgstr "Tal como acontece com o ritualístico ``Hello World'' ensinado com a maioria das linguagens de programação, esta será possivelmente a abordagem mais ``manual''. Trabalharemos em uma configuração ideal mais tarde; por enquanto seguiremos o caminho mais simples."

msgid "Save the following to a file @file{my-hello.scm}."
msgstr "Salve o seguinte em um arquivo @file{my-hello.scm}."

msgid ""
"(use-modules (guix packages)\n"
"             (guix download)\n"
"             (guix build-system gnu)\n"
"             (guix licenses))\n"
"\n"
msgstr ""
"(use-modules (guix packages)\n"
"             (guix download)\n"
"             (guix build-system gnu)\n"
"             (guix licenses))\n"
"\n"

msgid ""
"(package\n"
"  (name \"my-hello\")\n"
"  (version \"2.10\")\n"
"  (source (origin\n"
"            (method url-fetch)\n"
"            (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                \".tar.gz\"))\n"
"            (sha256\n"
"             (base32\n"
"              \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"  (build-system gnu-build-system)\n"
"  (synopsis \"Hello, Guix world: An example custom Guix package\")\n"
"  (description\n"
"   \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"  (home-page \"https://www.gnu.org/software/hello/\")\n"
"  (license gpl3+))\n"
msgstr ""
"(package\n"
"  (name \"my-hello\")\n"
"  (version \"2.10\")\n"
"  (source (origin\n"
"            (method url-fetch)\n"
"            (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                \".tar.gz\"))\n"
"            (sha256\n"
"             (base32\n"
"              \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"  (build-system gnu-build-system)\n"
"  (synopsis \"Hello, Guix world: An example custom Guix package\")\n"
"  (description\n"
"   \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"  (home-page \"https://www.gnu.org/software/hello/\")\n"
"  (license gpl3+))\n"

msgid "We will explain the extra code in a moment."
msgstr "Explicaremos o código extra em um momento."

msgid "Feel free to play with the different values of the various fields.  If you change the source, you'll need to update the checksum.  Indeed, Guix refuses to build anything if the given checksum does not match the computed checksum of the source code.  To obtain the correct checksum of the package declaration, we need to download the source, compute the sha256 checksum and convert it to base32."
msgstr "Sinta-se à vontade para brincar com os diferentes valores dos vários campos. Se você alterar a fonte, precisará atualizar a soma de verificação. Na verdade, Guix se recusa a construir qualquer coisa se a soma de verificação fornecida não corresponder à soma de verificação calculada do código-fonte. Para obter a soma de verificação correta da declaração do pacote, precisamos baixar o código-fonte, calcular a soma de verificação sha256 e convertê-la para base32."

msgid "Thankfully, Guix can automate this task for us; all we need is to provide the URI:"
msgstr "Felizmente, o Guix pode automatizar essa tarefa para nós; tudo o que precisamos é fornecer o URI:"

msgid ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz\n"
"\n"
msgstr ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz\n"
"\n"

msgid ""
"Starting download of /tmp/guix-file.JLYgL7\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz...\n"
"following redirection to `https://mirror.ibcp.fr/pub/gnu/hello/hello-2.10.tar.gz'...\n"
" …10.tar.gz  709KiB                                 2.5MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\n"
msgstr ""
"Starting download of /tmp/guix-file.JLYgL7\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz...\n"
"following redirection to `https://mirror.ibcp.fr/pub/gnu/hello/hello-2.10.tar.gz'...\n"
" …10.tar.gz  709KiB                                 2.5MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\n"

msgid "In this specific case the output tells us which mirror was chosen.  If the result of the above command is not the same as in the above snippet, update your @code{my-hello} declaration accordingly."
msgstr "Neste caso específico a saída nos informa qual espelho foi escolhido. Se o resultado do comando acima não for o mesmo do trecho acima, atualize sua declaração @code{my-hello} de acordo."

msgid "Note that GNU package tarballs come with an OpenPGP signature, so you should definitely check the signature of this tarball with `gpg` to authenticate it before going further:"
msgstr "Observe que os tarballs do pacote GNU vêm com uma assinatura OpenPGP, então você definitivamente deve verificar a assinatura deste tarball com `gpg` para autenticá-lo antes de prosseguir:"

msgid ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz.sig\n"
"\n"
msgstr ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz.sig\n"
"\n"

msgid ""
"Starting download of /tmp/guix-file.03tFfb\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz.sig...\n"
"following redirection to `https://ftp.igh.cnrs.fr/pub/gnu/hello/hello-2.10.tar.gz.sig'...\n"
" ….tar.gz.sig  819B                                                                                                                       1.2MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig\n"
"0q0v86n3y38z17rl146gdakw9xc4mcscpk8dscs412j22glrv9jf\n"
"$ gpg --verify /gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig /gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"gpg: Signature made Sun 16 Nov 2014 01:08:37 PM CET\n"
"gpg:                using RSA key A9553245FDE9B739\n"
"gpg: Good signature from \"Sami Kerola <kerolasa@@iki.fi>\" [unknown]\n"
"gpg:                 aka \"Sami Kerola (http://www.iki.fi/kerolasa/) <kerolasa@@iki.fi>\" [unknown]\n"
"gpg: WARNING: This key is not certified with a trusted signature!\n"
"gpg:          There is no indication that the signature belongs to the owner.\n"
"Primary key fingerprint: 8ED3 96E3 7E38 D471 A005  30D3 A955 3245 FDE9 B739\n"
msgstr ""
"Iniciando download de /tmp/guix-file.03tFfb\n"
"De https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz.sig...\n"
"seguindo redirecionamento para `https://ftp.igh.cnrs.fr/pub/gnu/hello/hello-2.10.tar.gz.sig'...\n"
"….tar.gz.sig 819B 1,2 MiB/s 00:00 [#################] 100,0%\n"
"/gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig\n"
"0q0v86n3y38z17rl146gdakw9xc4mcscpk8dscs412j22glrv9jf\n"
"$ gpg --verify /gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig /gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"gpg: Assinatura feita em dom 16 nov 2014 01:08:37 PM CET\n"
"gpg: usando RSA chave A9553245FDE9B739\n"
"gpg: Boa assinatura de \"Sami Kerola <kerolasa@@iki.fi>\" [desconhecido]\n"
"gpg: também conhecido como \"Sami Kerola (http://www.iki.fi/kerolasa/) <kerolasa@@iki.fi>\" [desconhecido]\n"
"gpg: AVISO: Esta chave não é certificada com uma assinatura confiável!\n"
"gpg: Não há indicação de que a assinatura pertença ao proprietário.\n"
"Impressão digital da chave primária: 8ED3 96E3 7E38 D471 A005 30D3 A955 3245 FDE9 B739\n"

msgid "You can then happily run"
msgstr "Você pode então correr alegremente"

msgid "$ guix package --install-from-file=my-hello.scm\n"
msgstr "$ guix package --install-from-file=my-hello.scm\n"

msgid "You should now have @code{my-hello} in your profile!"
msgstr "Agora você deve ter @code{my-hello} em seu perfil!"

msgid ""
"$ guix package --list-installed=my-hello\n"
"my-hello\t2.10\tout\n"
"/gnu/store/f1db2mfm8syb8qvc357c53slbvf1g9m9-my-hello-2.10\n"
msgstr ""
"$ guix package --list-installed=my-hello\n"
"my-hello\t2.10\tout\n"
"/gnu/store/f1db2mfm8syb8qvc357c53slbvf1g9m9-my-hello-2.10\n"

msgid "We've gone as far as we could without any knowledge of Scheme.  Before moving on to more complex packages, now is the right time to brush up on your Scheme knowledge.  @xref{A Scheme Crash Course} to get up to speed."
msgstr "Fomos o mais longe que pudemos sem qualquer conhecimento do Scheme. Antes de passar para pacotes mais complexos, agora é o momento certo para aprimorar seus conhecimentos sobre o Scheme. @xref{A Scheme Crash Course} para se atualizar."

msgid "In the rest of this chapter we will rely on some basic Scheme programming knowledge.  Now let's detail the different possible setups for working on Guix packages."
msgstr "No restante deste capítulo contaremos com alguns conhecimentos básicos de programação de Scheme. Agora vamos detalhar as diferentes configurações possíveis para trabalhar em pacotes Guix."

msgid "There are several ways to set up a Guix packaging environment."
msgstr "Existem várias maneiras de configurar um ambiente de empacotamento Guix."

msgid "We recommend you work directly on the Guix source checkout since it makes it easier for everyone to contribute to the project."
msgstr "Recomendamos que você trabalhe diretamente no checkout do código-fonte do Guix, pois facilita a contribuição de todos para o projeto."

msgid "But first, let's look at other possibilities."
msgstr "Mas primeiro, vamos examinar outras possibilidades."

msgid "This is what we previously did with @samp{my-hello}.  With the Scheme basics we've covered, we are now able to explain the leading chunks.  As stated in @code{guix package --help}:"
msgstr "Isto é o que fizemos anteriormente com @samp{my-hello}. Com os princípios básicos do Scheme que cobrimos, agora podemos explicar os principais pedaços. Conforme declarado em @code{guix package --help}:"

msgid ""
"  -f, --install-from-file=FILE\n"
"                         install the package that the code within FILE\n"
"                         evaluates to\n"
msgstr ""
"  -f, --install-from-file=ARQUIVO\n"
"                         instala o pacote para o qual o código\n"
"                         dentro do ARQUIVO avalia\n"

msgid "Thus the last expression @emph{must} return a package, which is the case in our earlier example."
msgstr "Assim, a última expressão @emph{deve} retornar um pacote, que é o caso do nosso exemplo anterior."

msgid "The @code{use-modules} expression tells which of the modules we need in the file.  Modules are a collection of values and procedures.  They are commonly called ``libraries'' or ``packages'' in other programming languages."
msgstr "A expressão @code{use-modules} informa quais módulos precisamos no arquivo. Módulos são uma coleção de valores e procedimentos. Eles são comumente chamados de ``bibliotecas'' ou ``pacotes'' em outras linguagens de programação."

msgid "channel"
msgstr "canal"

msgid "Guix and its package collection can be extended through @dfn{channels}.  A channel is a Git repository, public or not, containing @file{.scm} files that provide packages (@pxref{Defining Packages,,, guix, GNU Guix Reference Manual}) or services (@pxref{Defining Services,,, guix, GNU Guix Reference Manual})."
msgstr "Guix e sua coleção de pacotes podem ser estendidos através de @dfn{canais}. Um canal é um repositório Git, público ou não, contendo arquivos @file{.scm} que fornecem pacotes (@pxref{Definindo pacotes,,, guix.pt_BR, Manual de Referência do GNU Guix}) ou serviços (@pxref{Definindo serviços,,, guix.pt_BR, Manual de Referência GNU Guix})."

msgid "How would you go about creating a channel? First, create a directory that will contain your @file{.scm} files, say @file{~/my-channel}:"
msgstr "Como você criaria um canal? Primeiro, crie um diretório que conterá seus arquivos @file{.scm}, digamos @file{~/my-channel}:"

msgid "mkdir ~/my-channel\n"
msgstr "mkdir ~/meu-canal\n"

msgid "Suppose you want to add the @samp{my-hello} package we saw previously; it first needs some adjustments:"
msgstr "Suponha que você queira adicionar o pacote @samp{my-hello} que vimos anteriormente; primeiro precisa de alguns ajustes:"

msgid ""
"(define-module (my-hello)\n"
"  #:use-module (guix licenses)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix build-system gnu)\n"
"  #:use-module (guix download))\n"
"\n"
msgstr ""
"(define-module (my-hello)\n"
"  #:use-module (guix licenses)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix build-system gnu)\n"
"  #:use-module (guix download))\n"
"\n"

msgid ""
"(define-public my-hello\n"
"  (package\n"
"    (name \"my-hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Hello, Guix world: An example custom Guix package\")\n"
"    (description\n"
"     \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"
msgstr ""
"(define-public my-hello\n"
"  (package\n"
"    (name \"my-hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Olá, mundo Guix: Um exemplo de pacote Guix personalizado\")\n"
"    (description\n"
"     \"GNU Hello imprime a mensagem \\\"Olá, mundo!\\\" e então sai. Ele\n"
"serve como um exemplo de práticas de codificação GNU padrão. Como tal, ele suporta\n"
"argumentos de linha de comando, vários idiomas e assim por diante.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"

msgid "Note that we have assigned the package value to an exported variable name with @code{define-public}.  This is effectively assigning the package to the @code{my-hello} variable so that it can be referenced, among other as dependency of other packages."
msgstr "Observe que atribuímos o valor do pacote a um nome de variável exportado com @code{define-public}. Isso é efetivamente atribuir o pacote à variável @code{my-hello} para que ele possa ser referenciado, entre outras coisas, como dependência de outros pacotes."

msgid "If you use @code{guix package --install-from-file=my-hello.scm} on the above file, it will fail because the last expression, @code{define-public}, does not return a package.  If you want to use @code{define-public} in this use-case nonetheless, make sure the file ends with an evaluation of @code{my-hello}:"
msgstr "Se você usar @code{guix package --install-from-file=my-hello.scm} no arquivo acima, ele falhará porque a última expressão, @code{define-public}, não retorna um pacote. Mesmo assim, se você quiser usar @code{define-public} neste caso de uso, certifique-se de que o arquivo termine com uma avaliação de @code{my-hello}:"

msgid ""
";; ...\n"
"(define-public my-hello\n"
"  ;; ...\n"
"  )\n"
"\n"
msgstr ""
";; ...\n"
"(define-public my-hello\n"
"  ;; ...\n"
"  )\n"
"\n"

msgid "my-hello\n"
msgstr "my-hello\n"

msgid "This last example is not very typical."
msgstr "Este último exemplo não é muito típico."

msgid "Now how do you make that package visible to @command{guix} commands so you can test your packages? You need to add the directory to the search path using the @option{-L} command-line option, as in these examples:"
msgstr "Agora, como você torna esse pacote visível para os comandos @command{guix} para poder testar seus pacotes? Você precisa adicionar o diretório ao caminho de pesquisa usando a opção de linha de comando @option{-L}, como nestes exemplos:"

msgid ""
"guix show -L ~/my-channel my-hello\n"
"guix build -L ~/my-channel my-hello\n"
msgstr ""
"guix show -L ~/meu-canal my-hello\n"
"guix build -L ~/meu-canal my-hello\n"

msgid "The final step is to turn @file{~/my-channel} into an actual channel, making your package collection seamlessly available @i{via} any @command{guix} command.  To do that, you first need to make it a Git repository:"
msgstr "A etapa final é transformar @file{~/my-channel} em um canal real, disponibilizando sua coleção de pacotes perfeitamente @i{via} qualquer comando @command{guix}. Para fazer isso, primeiro você precisa torná-lo um repositório Git:"

msgid ""
"cd ~/my-channel\n"
"git init\n"
"git add my-hello.scm\n"
"git commit -m \"First commit of my channel.\"\n"
msgstr ""
"cd ~/my-channel\n"
"git init\n"
"git add my-hello.scm\n"
"git commit -m \"Primeiro commit do meu canal.\"\n"

msgid "And that's it, you have a channel! From there on, you can add this channel to your channel configuration in @file{~/.config/guix/channels.scm} (@pxref{Specifying Additional Channels,,, guix, GNU Guix Reference Manual}); assuming you keep your channel local for now, the @file{channels.scm} would look something like this:"
msgstr "E pronto, você tem um canal! A partir daí, você pode adicionar este canal à configuração do seu canal em @file{~/.config/guix/channels.scm} (@pxref{Especificando canais adicionais,,, guix.pt_BR, Manual de Referência do GNU Guix}); supondo que você mantenha seu canal local por enquanto, o @file{channels.scm} ficaria mais ou menos assim:"

msgid ""
"(append (list (channel\n"
"                (name 'my-channel)\n"
"                (url (string-append \"file://\" (getenv \"HOME\")\n"
"                                    \"/my-channel\"))))\n"
"        %default-channels)\n"
msgstr ""
"(append (list (channel\n"
"                (name 'meu-canal)\n"
"                (url (string-append \"file://\" (getenv \"HOME\")\n"
"                                    \"/meu-canal\"))))\n"
"        %default-channels)\n"

msgid "Next time you run @command{guix pull}, your channel will be picked up and the packages it defines will be readily available to all the @command{guix} commands, even if you do not pass @option{-L}.  The @command{guix describe} command will show that Guix is, indeed, using both the @code{my-channel} and the @code{guix} channels."
msgstr "Da próxima vez que você executar @command{guix pull}, seu canal será selecionado e os pacotes que ele definir estarão prontamente disponíveis para todos os comandos @command{guix}, mesmo se você não passar @option{-L}. O comando @command{guix description} mostrará que o Guix está, de fato, usando os canais @code{my-channel} e @code{guix}."

msgid "@xref{Creating a Channel,,, guix, GNU Guix Reference Manual}, for details."
msgstr "@xref{Criando um canal,,, guix.pt_BR, Manual de Referência do GNU Guix}, para detalhes."

msgid "Working directly on the Guix project is recommended: it reduces the friction when the time comes to submit your changes upstream to let the community benefit from your hard work!"
msgstr "É recomendado trabalhar diretamente no projeto Guix: isso reduz o atrito quando chega a hora de enviar suas alterações ao upstream para permitir que a comunidade se beneficie de seu trabalho árduo!"

msgid "Unlike most software distributions, the Guix repository holds in one place both the tooling (including the package manager) and the package definitions.  This choice was made so that it would give developers the flexibility to modify the API without breakage by updating all packages at the same time.  This reduces development inertia."
msgstr "Ao contrário da maioria das distribuições de software, o repositório Guix mantém em um só lugar as ferramentas (incluindo o gerenciador de pacotes) e as definições dos pacotes. Essa escolha foi feita para dar aos desenvolvedores a flexibilidade de modificar a API sem quebras, atualizando todos os pacotes ao mesmo tempo. Isto reduz a inércia do desenvolvimento."

msgid "Check out the official @uref{https://git-scm.com/, Git} repository:"
msgstr "Confira o repositório oficial @uref{https://git-scm.com/, Git}:"

msgid "$ git clone https://git.guix.gnu.org/guix.git\n"
msgstr "$ git clone https://git.guix.gnu.org/guix.git\n"

msgid "In the rest of this article, we use @samp{$GUIX_CHECKOUT} to refer to the location of the checkout."
msgstr "No restante deste artigo, usamos @samp{$GUIX_CHECKOUT} para nos referir ao local do checkout."

msgid "Follow the instructions in the manual (@pxref{Contributing,,, guix, GNU Guix Reference Manual}) to set up the repository environment."
msgstr "Siga as instruções no manual (@pxref{Contribuindo,,, guix.pt_BR, Manual de Referência do GNU Guix}) para configurar o ambiente do repositório."

msgid "Once ready, you should be able to use the package definitions from the repository environment."
msgstr "Quando estiver pronto, você poderá usar as definições de pacote do ambiente do repositório."

msgid "Feel free to edit package definitions found in @samp{$GUIX_CHECKOUT/gnu/packages}."
msgstr "Sinta-se à vontade para editar as definições de pacotes encontradas em @samp{$GUIX_CHECKOUT/gnu/packages}."

msgid "The @samp{$GUIX_CHECKOUT/pre-inst-env} script lets you use @samp{guix} over the package collection of the repository (@pxref{Running Guix Before It Is Installed,,, guix, GNU Guix Reference Manual})."
msgstr "O script @samp{$GUIX_CHECKOUT/pre-inst-env} permite usar @samp{guix} sobre a coleção de pacotes do repositório (@pxref{Executando guix antes dele ser instalado,,, guix.pt_BR, Manual de Referência do GNU Guix}) ."

msgid "Search packages, such as Ruby:"
msgstr "Pesquisa de pacotes, como Ruby:"

msgid ""
"  $ cd $GUIX_CHECKOUT\n"
"  $ ./pre-inst-env guix package --list-available=ruby\n"
"      ruby    1.8.7-p374      out     gnu/packages/ruby.scm:119:2\n"
"      ruby    2.1.6   out     gnu/packages/ruby.scm:91:2\n"
"      ruby    2.2.2   out     gnu/packages/ruby.scm:39:2\n"
msgstr ""
"  $ cd $GUIX_CHECKOUT\n"
"  $ ./pre-inst-env guix package --list-available=ruby\n"
"      ruby    1.8.7-p374      out     gnu/packages/ruby.scm:119:2\n"
"      ruby    2.1.6   out     gnu/packages/ruby.scm:91:2\n"
"      ruby    2.2.2   out     gnu/packages/ruby.scm:39:2\n"

msgid "Build a package, here Ruby version 2.1:"
msgstr "Construa um pacote, como Ruby versão 2.1:"

msgid ""
"  $ ./pre-inst-env guix build --keep-failed ruby@@2.1\n"
"  /gnu/store/c13v73jxmj2nir2xjqaz5259zywsa9zi-ruby-2.1.6\n"
msgstr ""
"  $ ./pre-inst-env guix build --keep-failed ruby@@2.1\n"
"  /gnu/store/c13v73jxmj2nir2xjqaz5259zywsa9zi-ruby-2.1.6\n"

msgid "Install it to your user profile:"
msgstr "Instale-o em seu perfil de usuário:"

msgid "  $ ./pre-inst-env guix package --install ruby@@2.1\n"
msgstr "  $ ./pre-inst-env guix package --install ruby@@2.1\n"

msgid "Check for common mistakes:"
msgstr "Verifique se há erros comuns:"

msgid "  $ ./pre-inst-env guix lint ruby@@2.1\n"
msgstr "  $ ./pre-inst-env guix lint ruby@@2.1\n"

msgid "Guix strives at maintaining a high packaging standard; when contributing to the Guix project, remember to"
msgstr "Guix se esforça para manter um alto padrão de empacotamento; ao contribuir para o projeto Guix, lembre-se de"

msgid "follow the coding style (@pxref{Coding Style,,, guix, GNU Guix Reference Manual}),"
msgstr "seguir o estilo de codificação (@pxref{Estilo de código,,, guix.pt_BR, Manual de Referência do GNU Guix}),"

msgid "and review the check list from the manual (@pxref{Submitting Patches,,, guix, GNU Guix Reference Manual})."
msgstr "e revise a lista de verificação do manual (@pxref{Enviando patches,,, guix.pt_BR, Manual de Referência do GNU Guix})."

msgid "Once you are happy with the result, you are welcome to send your contribution to make it part of Guix.  This process is also detailed in the manual.  (@pxref{Contributing,,, guix, GNU Guix Reference Manual})"
msgstr "Quando estiver satisfeito com o resultado, você pode enviar sua contribuição para torná-lo parte do Guix. Este processo também é detalhado no manual. (@pxref{Contribuindo,,, guix.pt_BR, Manual de Referência GNU Guix})"

msgid "It's a community effort so the more join in, the better Guix becomes!"
msgstr "É um esforço da comunidade, então quanto mais participar, melhor o Guix se torna!"

msgid "The above ``Hello World'' example is as simple as it goes.  Packages can be more complex than that and Guix can handle more advanced scenarios.  Let's look at another, more sophisticated package (slightly modified from the source):"
msgstr "O exemplo ``Hello World'' acima é tão simples quanto parece. Os pacotes podem ser mais complexos do que isso e o Guix pode lidar com cenários mais avançados. Vejamos outro pacote mais sofisticado (ligeiramente modificado em relação à fonte):"

msgid ""
"(define-module (gnu packages version-control)\n"
"  #:use-module ((guix licenses) #:prefix license:)\n"
"  #:use-module (guix utils)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix git-download)\n"
"  #:use-module (guix build-system cmake)\n"
"  #:use-module (gnu packages)\n"
"  #:use-module (gnu packages compression)\n"
"  #:use-module (gnu packages pkg-config)\n"
"  #:use-module (gnu packages python)\n"
"  #:use-module (gnu packages ssh)\n"
"  #:use-module (gnu packages tls)\n"
"  #:use-module (gnu packages web))\n"
"\n"
msgstr ""
"(define-module (gnu packages version-control)\n"
"  #:use-module ((guix licenses) #:prefix license:)\n"
"  #:use-module (guix utils)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix git-download)\n"
"  #:use-module (guix build-system cmake)\n"
"  #:use-module (gnu packages)\n"
"  #:use-module (gnu packages compression)\n"
"  #:use-module (gnu packages pkg-config)\n"
"  #:use-module (gnu packages python)\n"
"  #:use-module (gnu packages ssh)\n"
"  #:use-module (gnu packages tls)\n"
"  #:use-module (gnu packages web))\n"
"\n"

msgid ""
"(define-public my-libgit2\n"
"  (let ((commit \"e98d0a37c93574d2c6107bf7f31140b548c6a7bf\")\n"
"        (revision \"1\"))\n"
"    (package\n"
"      (name \"my-libgit2\")\n"
"      (version (git-version \"0.26.6\" revision commit))\n"
"      (source (origin\n"
"                (method git-fetch)\n"
"                (uri (git-reference\n"
"                      (url \"https://github.com/libgit2/libgit2/\")\n"
"                      (commit commit)))\n"
"                (file-name (git-file-name name version))\n"
"                (sha256\n"
"                 (base32\n"
"                  \"17pjvprmdrx4h6bb1hhc98w9qi6ki7yl57f090n9kbhswxqfs7s3\"))\n"
"                (patches (search-patches \"libgit2-mtime-0.patch\"))\n"
"                (modules '((guix build utils)))\n"
"                ;; Remove bundled software.\n"
"                (snippet '(delete-file-recursively \"deps\"))))\n"
"      (build-system cmake-build-system)\n"
"      (outputs '(\"out\" \"debug\"))\n"
"      (arguments\n"
"       `(#:tests? #true                         ; Run the test suite (this is the default)\n"
"         #:configure-flags '(\"-DUSE_SHA1DC=ON\") ; SHA-1 collision detection\n"
"         #:phases\n"
"         (modify-phases %standard-phases\n"
"           (add-after 'unpack 'fix-hardcoded-paths\n"
"             (lambda _\n"
"               (substitute* \"tests/repo/init.c\"\n"
"                 ((\"#!/bin/sh\") (string-append \"#!\" (which \"sh\"))))\n"
"               (substitute* \"tests/clar/fs.h\"\n"
"                 ((\"/bin/cp\") (which \"cp\"))\n"
"                 ((\"/bin/rm\") (which \"rm\")))))\n"
"           ;; Run checks more verbosely.\n"
"           (replace 'check\n"
"             (lambda* (#:key tests? #:allow-other-keys)\n"
"               (when tests?\n"
"                 (invoke \"./libgit2_clar\" \"-v\" \"-Q\"))))\n"
"           (add-after 'unpack 'make-files-writable-for-tests\n"
"             (lambda _ (for-each make-file-writable (find-files \".\")))))))\n"
"      (inputs\n"
"       (list libssh2 http-parser python-wrapper))\n"
"      (native-inputs\n"
"       (list pkg-config))\n"
"      (propagated-inputs\n"
"       ;; These two libraries are in 'Requires.private' in libgit2.pc.\n"
"       (list openssl zlib))\n"
"      (home-page \"https://libgit2.github.com/\")\n"
"      (synopsis \"Library providing Git core methods\")\n"
"      (description\n"
"       \"Libgit2 is a portable, pure C implementation of the Git core methods\n"
"provided as a re-entrant linkable library with a solid API, allowing you to\n"
"write native speed custom Git applications in any language with bindings.\")\n"
"      ;; GPLv2 with linking exception\n"
"      (license license:gpl2))))\n"
msgstr ""
"(define-public my-libgit2\n"
"  (let ((commit \"e98d0a37c93574d2c6107bf7f31140b548c6a7bf\")\n"
"        (revision \"1\"))\n"
"    (package\n"
"      (name \"my-libgit2\")\n"
"      (version (git-version \"0.26.6\" revision commit))\n"
"      (source (origin\n"
"                (method git-fetch)\n"
"                (uri (git-reference\n"
"                      (url \"https://github.com/libgit2/libgit2/\")\n"
"                      (commit commit)))\n"
"                (file-name (git-file-name name version))\n"
"                (sha256\n"
"                 (base32\n"
"                  \"17pjvprmdrx4h6bb1hhc98w9qi6ki7yl57f090n9kbhswxqfs7s3\"))\n"
"                (patches (search-patches \"libgit2-mtime-0.patch\"))\n"
"                (modules '((guix build utils)))\n"
"                ;; Remover software empacotado.\n"
"                (snippet '(delete-file-recursively \"deps\"))))\n"
"      (build-system cmake-build-system)\n"
"      (outputs '(\"out\" \"debug\"))\n"
"      (arguments\n"
"       `(#:tests? #true                         ; Execute o conjunto de testes (este é o padrão)\n"
"         #:configure-flags '(\"-DUSE_SHA1DC=ON\") ; Detecção de colisão SHA-1\n"
"         #:phases\n"
"         (modify-phases %standard-phases\n"
"           (add-after 'unpack 'fix-hardcoded-paths\n"
"             (lambda _\n"
"               (substitute* \"tests/repo/init.c\"\n"
"                 ((\"#!/bin/sh\") (string-append \"#!\" (which \"sh\"))))\n"
"               (substitute* \"tests/clar/fs.h\"\n"
"                 ((\"/bin/cp\") (which \"cp\"))\n"
"                 ((\"/bin/rm\") (which \"rm\")))))\n"
"           ;; Execute verificações de forma mais detalhada.\n"
"           (replace 'check\n"
"             (lambda* (#:key tests? #:allow-other-keys)\n"
"               (when tests?\n"
"                 (invoke \"./libgit2_clar\" \"-v\" \"-Q\"))))\n"
"           (add-after 'unpack 'make-files-writable-for-tests\n"
"             (lambda _ (for-each make-file-writable (find-files \".\")))))))\n"
"      (inputs\n"
"       (list libssh2 http-parser python-wrapper))\n"
"      (native-inputs\n"
"       (list pkg-config))\n"
"      (propagated-inputs\n"
"       ;; Essas duas bibliotecas estão em 'Requires.private' em libgit2.pc.\n"
"       (list openssl zlib))\n"
"      (home-page \"https://libgit2.github.com/\")\n"
"      (synopsis \"Biblioteca que fornece métodos básicos do Git\")\n"
"      (description\n"
"       \"Libgit2 é uma implementação C pura e portátil dos métodos principais do Git\n"
"fornecida como uma biblioteca vinculável reentrante com uma API sólida, permitindo que você\n"
"escreva aplicativos Git personalizados de velocidade nativa em qualquer linguagem com vinculações.\")\n"
"      ;; GPLv2 com exceção de vinculação\n"
"      (license license:gpl2))))\n"

msgid "(In those cases were you only want to tweak a few fields from a package definition, you should rely on inheritance instead of copy-pasting everything.  See below.)"
msgstr "(Nos casos em que você deseja ajustar apenas alguns campos de uma definição de pacote, você deve confiar na herança em vez de copiar e colar tudo. Veja abaixo.)"

msgid "Let's discuss those fields in depth."
msgstr "Vamos discutir esses campos em profundidade."

msgid "@code{git-fetch} method"
msgstr "Método @code{git-fetch}"

msgid "Unlike the @code{url-fetch} method, @code{git-fetch} expects a @code{git-reference} which takes a Git repository and a commit.  The commit can be any Git reference such as tags, so if the @code{version} is tagged, then it can be used directly.  Sometimes the tag is prefixed with a @code{v}, in which case you'd use @code{(commit (string-append \"v\" version))}."
msgstr "Ao contrário do método @code{url-fetch}, @code{git-fetch} espera um @code{git-reference} que usa um repositório Git e um commit. O commit pode ser qualquer referência do Git, como tags, portanto, se @code{version} estiver marcado, ele poderá ser usado diretamente. Às vezes, a tag é prefixada com @code{v}; nesse caso, você usaria @code{(commit (string-append \"v\" version))}."

msgid "To ensure that the source code from the Git repository is stored in a directory with a descriptive name, we use @code{(file-name (git-file-name name version))}."
msgstr "Para garantir que o código-fonte do repositório Git seja armazenado em um diretório com um nome descritivo, usamos @code{(nome‐do- arquivo (nome-do-arquivo-git versão))}."

msgid "The @code{git-version} procedure can be used to derive the version when packaging programs for a specific commit, following the Guix contributor guidelines (@pxref{Version Numbers,,, guix, GNU Guix Reference Manual})."
msgstr "O procedimento @code{git-version} pode ser usado para derivar a versão ao empacotar programas para um commit específico, seguindo as diretrizes do contribuidor Guix (@pxref{Números de versão,,, guix.pt_BR, Manual de Referência do GNU Guix})."

msgid "How does one obtain the @code{sha256} hash that's in there, you ask? By invoking @command{guix hash} on a checkout of the desired commit, along these lines:"
msgstr "Como obter o hash @code{sha256} que está aí, você pergunta? Invocando @command{guix hash} em um checkout do commit desejado, da seguinte forma:"

msgid ""
"git clone https://github.com/libgit2/libgit2/\n"
"cd libgit2\n"
"git checkout v0.26.6\n"
"guix hash -rx .\n"
msgstr ""
"git clone https://github.com/libgit2/libgit2/\n"
"cd libgit2\n"
"git checkout v0.26.6\n"
"guix hash -rx .\n"

msgid "@command{guix hash -rx} computes a SHA256 hash over the whole directory, excluding the @file{.git} sub-directory (@pxref{Invoking guix hash,,, guix, GNU Guix Reference Manual})."
msgstr "@command{guix hash -rx} calcula um hash SHA256 em todo o diretório, excluindo o subdiretório @file{.git} (@pxref{Invocando guix hash,,, guix.pt_BR, Manual de Referência do GNU Guix})."

msgid "In the future, @command{guix download} will hopefully be able to do these steps for you, just like it does for regular downloads."
msgstr "No futuro, @command{guix download} será capaz de executar essas etapas para você, assim como faz para downloads regulares."

msgid "Snippets"
msgstr "Trechos"

msgid "Snippets are quoted (i.e. non-evaluated) Scheme code that are a means of patching the source.  They are a Guix-y alternative to the traditional @file{.patch} files.  Because of the quote, the code in only evaluated when passed to the Guix daemon for building.  There can be as many snippets as needed."
msgstr "Os trechos (\"Snippets\" ) são códigos de Scheme marcado como literal (ou seja, não avaliados) que são um meio de corrigir a fonte. Eles são uma alternativa Guix-y aos arquivos @file{.patch} tradicionais. Por causa da marcação, o código só é avaliado quando passado para o daemon Guix para construção. Pode haver quantos trechos forem necessários."

msgid "Snippets might need additional Guile modules which can be imported from the @code{modules} field."
msgstr "Os snippets podem precisar de módulos Guile adicionais que podem ser importados do campo @code{modules}."

msgid "Inputs"
msgstr "Entradas"

msgid "There are 3 different input types.  In short:"
msgstr "Existem 3 tipos de entradas diferentes. Resumidamente:"

msgid "native-inputs"
msgstr "native-inputs"

msgid "Required for building but not runtime -- installing a package through a substitute won't install these inputs."
msgstr "Necessário para construção, mas não para tempo de execução - instalar um pacote por meio de um substituto não instalará essas entradas."

msgid "inputs"
msgstr "inputs"

msgid "Installed in the store but not in the profile, as well as being present at build time."
msgstr "Instalado no armazém mas não no perfil, além de estar presente na hora da construção."

msgid "propagated-inputs"
msgstr "propagated-inputs"

msgid "Installed in the store and in the profile, as well as being present at build time."
msgstr "Instalado no armazém e no perfil, além de estar presente na hora da construção."

msgid "@xref{package Reference,,, guix, GNU Guix Reference Manual} for more details."
msgstr "@xref{Referência do package,,, guix.pt_BR, Manual de referência GNU Guix} para mais detalhes."

msgid "The distinction between the various inputs is important: if a dependency can be handled as an @emph{input} instead of a @emph{propagated input}, it should be done so, or else it ``pollutes'' the user profile for no good reason."
msgstr "A distinção entre as diversas entradas é importante: se uma dependência puder ser tratada como uma @emph{input} em vez de uma @emph{propagated input}, isso deverá ser feito, caso contrário ela ``poluirá'' o perfil do usuário sem nenhuma boa razão."

msgid "For instance, a user installing a graphical program that depends on a command line tool might only be interested in the graphical part, so there is no need to force the command line tool into the user profile.  The dependency is a concern to the package, not to the user.  @emph{Inputs} make it possible to handle dependencies without bugging the user by adding undesired executable files (or libraries) to their profile."
msgstr "Por exemplo, um usuário que instala um programa gráfico que depende de uma ferramenta de linha de comando pode estar interessado apenas na parte gráfica, portanto não há necessidade de forçar a ferramenta de linha de comando no perfil do usuário. A dependência é uma preocupação do pacote, não do usuário. @emph{Inputs} tornam possível lidar com dependências sem incomodar o usuário, adicionando arquivos executáveis (ou bibliotecas) indesejados ao seu perfil."

msgid "Same goes for @emph{native-inputs}: once the program is installed, build-time dependencies can be safely garbage-collected.  It also matters when a substitute is available, in which case only the @emph{inputs} and @emph{propagated inputs} will be fetched: the @emph{native inputs} are not required to install a package from a substitute."
msgstr "O mesmo vale para @emph{native-inputs}: depois que o programa é instalado, as dependências em tempo de construção podem ser coletadas como lixo com segurança. Também importa quando um substituto está disponível, caso em que apenas @emph{inputs} e @emph{propagated inputs} serão obtidos: os @emph{native inputs} não são necessários para instalar um pacote de um substituto."

msgid "Note"
msgstr "Nota"

msgid "You may see here and there snippets where package inputs are written quite differently, like so:"
msgstr "Você pode ver aqui e ali trechos onde as entradas do pacote são escritas de maneira bem diferente, assim:"

msgid ""
";; The \"old style\" for inputs.\n"
"(inputs\n"
" `((\"libssh2\" ,libssh2)\n"
"   (\"http-parser\" ,http-parser)\n"
"   (\"python\" ,python-wrapper)))\n"
msgstr ""
";; O \"estilo antigo\" para entradas.\n"
"(inputs\n"
" `((\"libssh2\" ,libssh2)\n"
"   (\"http-parser\" ,http-parser)\n"
"   (\"python\" ,python-wrapper)))\n"

msgid "This is the ``old style'', where each input in the list is explicitly given a label (a string).  It is still supported but we recommend using the style above instead.  @xref{package Reference,,, guix, GNU Guix Reference Manual}, for more info."
msgstr "Este é o ``estilo antigo'', onde cada entrada na lista recebe explicitamente um rótulo (uma string). Ainda é compatível, mas recomendamos usar o estilo acima. @xref{Referência do package,,, guix.pt_BR, Manual de Referência do GNU Guix}, para mais informações."

msgid "Outputs"
msgstr "Saídas"

msgid "Just like how a package can have multiple inputs, it can also produce multiple outputs."
msgstr "Assim como um pacote pode ter múltiplas entradas, ele também pode produzir múltiplas saídas."

msgid "Each output corresponds to a separate directory in the store."
msgstr "Cada saída corresponde a um diretório separado no armazém."

msgid "The user can choose which output to install; this is useful to save space or to avoid polluting the user profile with unwanted executables or libraries."
msgstr "O usuário pode escolher qual saída instalar; isso é útil para economizar espaço ou evitar poluir o perfil do usuário com executáveis ou bibliotecas indesejadas."

msgid "Output separation is optional.  When the @code{outputs} field is left out, the default and only output (the complete package) is referred to as @code{\"out\"}."
msgstr "A separação de saída é opcional. Quando o campo @code{outputs} é omitido, a saída padrão e única (o pacote completo) é referida como @code{\"out\"}."

msgid "Typical separate output names include @code{debug} and @code{doc}."
msgstr "Nomes de saída separados típicos incluem @code{debug} e @code{doc}."

msgid "It's advised to separate outputs only when you've shown it's worth it: if the output size is significant (compare with @code{guix size}) or in case the package is modular."
msgstr "É aconselhável separar as saídas apenas quando você mostrar que vale a pena: se o tamanho da saída for significativo (compare com @code{guix size}) ou caso o pacote seja modular."

msgid "Build system arguments"
msgstr "Argumentos do sistema de compilação"

msgid "The @code{arguments} is a keyword-value list used to configure the build process."
msgstr "O @code{arguments} é uma lista de valores de palavras-chave usadas para configurar o processo de construção."

msgid "The simplest argument @code{#:tests?} can be used to disable the test suite when building the package.  This is mostly useful when the package does not feature any test suite.  It's strongly recommended to keep the test suite on if there is one."
msgstr "O argumento mais simples @code{#:tests?} pode ser usado para desabilitar o conjunto de testes ao construir o pacote. Isso é útil principalmente quando o pacote não apresenta nenhum conjunto de testes. É altamente recomendável manter o conjunto de testes ativado, se houver."

msgid "Another common argument is @code{:make-flags}, which specifies a list of flags to append when running make, as you would from the command line.  For instance, the following flags"
msgstr "Outro argumento comum é @code{:make-flags}, que especifica uma lista de sinalizadores a serem acrescentados ao executar o make, como faria na linha de comando. Por exemplo, os seguintes sinalizadores"

msgid ""
"#:make-flags (list (string-append \"prefix=\" (assoc-ref %outputs \"out\"))\n"
"                   \"CC=gcc\")\n"
msgstr ""
"#:make-flags (list (string-append \"prefix=\" (assoc-ref %outputs \"out\"))\n"
"                   \"CC=gcc\")\n"

msgid "translate into"
msgstr "traduzir para"

msgid "$ make CC=gcc prefix=/gnu/store/...-<out>\n"
msgstr "$ make CC=gcc prefix=/gnu/store/...-<out>\n"

msgid "This sets the C compiler to @code{gcc} and the @code{prefix} variable (the installation directory in Make parlance) to @code{(assoc-ref %outputs \"out\")}, which is a build-stage global variable pointing to the destination directory in the store (something like @file{/gnu/store/...-my-libgit2-20180408})."
msgstr "Isso define o compilador C para @code{gcc} e a variável @code{prefix} (o diretório de instalação no jargão Make) para @code{(assoc-ref %outputs \"out\")}, que é um estágio de construção global variável apontando para o diretório de destino no armazém (algo como @file{/gnu/store/...-my-libgit2-20180408})."

msgid "Similarly, it's possible to set the configure flags:"
msgstr "Da mesma forma, é possível definir os sinalizadores de configuração:"

msgid "#:configure-flags '(\"-DUSE_SHA1DC=ON\")\n"
msgstr "#:configure-flags '(\"-DUSE_SHA1DC=ON\")\n"

msgid "The @code{%build-inputs} variable is also generated in scope.  It's an association table that maps the input names to their store directories."
msgstr "A variável @code{%build-inputs} também é gerada no escopo. Ela é uma tabela de associações que mapeia os nomes de entrada para seus diretórios de armazém."

msgid "The @code{phases} keyword lists the sequential steps of the build system.  Typically phases include @code{unpack}, @code{configure}, @code{build}, @code{install} and @code{check}.  To know more about those phases, you need to work out the appropriate build system definition in @samp{$GUIX_CHECKOUT/guix/build/gnu-build-system.scm}:"
msgstr "A palavra-chave @code{phases} lista as etapas sequenciais do sistema de compilação. Normalmente as fases incluem @code{unpack}, @code{configure}, @code{build}, @code{install} e @code{check}. Para saber mais sobre essas fases, você precisa definir a definição apropriada do sistema de compilação em @samp{$GUIX_CHECKOUT/guix/build/gnu-build-system.scm}:"

msgid ""
"(define %standard-phases\n"
"  ;; Standard build phases, as a list of symbol/procedure pairs.\n"
"  (let-syntax ((phases (syntax-rules ()\n"
"                         ((_ p ...) `((p . ,p) ...)))))\n"
"    (phases set-SOURCE-DATE-EPOCH set-paths install-locale unpack\n"
"            bootstrap\n"
"            patch-usr-bin-file\n"
"            patch-source-shebangs configure patch-generated-file-shebangs\n"
"            build check install\n"
"            patch-shebangs strip\n"
"            validate-runpath\n"
"            validate-documentation-location\n"
"            delete-info-dir-file\n"
"            patch-dot-desktop-files\n"
"            make-dynamic-linker-cache\n"
"            install-license-files\n"
"            reset-gzip-timestamps\n"
"            compress-documentation)))\n"
msgstr ""
"(define %standard-phases\n"
"  ;; Fases de construção padrão, como uma lista de pares de símbolos/procedimentos.\n"
"  (let-syntax ((phases (syntax-rules ()\n"
"                         ((_ p ...) `((p . ,p) ...)))))\n"
"    (phases set-SOURCE-DATE-EPOCH set-paths install-locale unpack\n"
"            bootstrap\n"
"            patch-usr-bin-file\n"
"            patch-source-shebangs configure patch-generated-file-shebangs\n"
"            build check install\n"
"            patch-shebangs strip\n"
"            validate-runpath\n"
"            validate-documentation-location\n"
"            delete-info-dir-file\n"
"            patch-dot-desktop-files\n"
"            make-dynamic-linker-cache\n"
"            install-license-files\n"
"            reset-gzip-timestamps\n"
"            compress-documentation)))\n"

msgid "Or from the REPL:"
msgstr "Ou do REPL:"

msgid ""
"(add-to-load-path \"/path/to/guix/checkout\")\n"
",use (guix build gnu-build-system)\n"
"(map car %standard-phases)\n"
"@result{} (set-SOURCE-DATE-EPOCH set-paths install-locale unpack bootstrap patch-usr-bin-file patch-source-shebangs configure patch-generated-file-shebangs build check install patch-shebangs strip validate-runpath validate-documentation-location delete-info-dir-file patch-dot-desktop-files make-dynamic-linker-cache install-license-files reset-gzip-timestamps compress-documentation)\n"
msgstr ""
"(add-to-load-path \"/path/to/guix/checkout\")\n"
",use (guix build gnu-build-system)\n"
"(map car %standard-phases)\n"
"@result{} (set-SOURCE-DATE-EPOCH set-paths install-locale unpack bootstrap patch-usr-bin-file patch-source-shebangs configure patch-generated-file-shebangs build check install patch-shebangs strip validate-runpath validate-documentation-location delete-info-dir-file patch-dot-desktop-files make-dynamic-linker-cache install-license-files reset-gzip-timestamps compress-documentation)\n"

msgid "If you want to know more about what happens during those phases, consult the associated procedures."
msgstr "Se quiser saber mais sobre o que acontece nessas fases, consulte os procedimentos associados."

msgid "For instance, as of this writing the definition of @code{unpack} for the GNU build system is:"
msgstr "Por exemplo, no momento em que este livro foi escrito, a definição de @code{unpack} para o sistema de compilação GNU era:"

msgid ""
"(define* (unpack #:key source #:allow-other-keys)\n"
"  \"Unpack SOURCE in the working directory, and change directory within the\n"
"source.  When SOURCE is a directory, copy it in a sub-directory of the current\n"
"working directory.\"\n"
"  (if (file-is-directory? source)\n"
"      (begin\n"
"        (mkdir \"source\")\n"
"        (chdir \"source\")\n"
"\n"
msgstr ""
"(define* (unpack #:key source #:allow-other-keys)\n"
"  \"Descompacte SOURCE no diretório de trabalho e altere o diretório dentro do\n"
"source. Quando SOURCE for um diretório, copie-o em um subdiretório do atual\n"
"diretório de trabalho.\"\n"
"  (if (file-is-directory? source)\n"
"      (begin\n"
"        (mkdir \"source\")\n"
"        (chdir \"source\")\n"
"\n"

msgid ""
"        ;; Preserve timestamps (set to the Epoch) on the copied tree so that\n"
"        ;; things work deterministically.\n"
"        (copy-recursively source \".\"\n"
"                          #:keep-mtime? #t)\n"
"        ;; Make the source checkout files writable, for convenience.\n"
"        (for-each (lambda (f)\n"
"                    (false-if-exception (make-file-writable f)))\n"
"                  (find-files \".\")))\n"
"      (begin\n"
"        (cond\n"
"         ((string-suffix? \".zip\" source)\n"
"          (invoke \"unzip\" source))\n"
"         ((tarball? source)\n"
"          (invoke \"tar\" \"xvf\" source))\n"
"         (else\n"
"          (let ((name (strip-store-file-name source))\n"
"                (command (compressor source)))\n"
"            (copy-file source name)\n"
"            (when command\n"
"              (invoke command \"--decompress\" name)))))\n"
"        ;; Attempt to change into child directory.\n"
"        (and=> (first-subdirectory \".\") chdir))))\n"
msgstr ""
"        ;; Preservar os carimbos de data/hora (definidos para a Época) na árvore copiada para que\n"
"        ;; as coisas funcionem deterministicamente.\n"
"        (copy-recursively source \".\"\n"
"                          #:keep-mtime? #t)\n"
"        ;; Faz com que os arquivos fonte tenham permissão de escrita, por conveniência.\n"
"        (for-each (lambda (f)\n"
"                    (false-if-exception (make-file-writable f)))\n"
"                  (find-files \".\")))\n"
"      (begin\n"
"        (cond\n"
"         ((string-suffix? \".zip\" source)\n"
"          (invoke \"unzip\" source))\n"
"         ((tarball? source)\n"
"          (invoke \"tar\" \"xvf\" source))\n"
"         (else\n"
"          (let ((name (strip-store-file-name source))\n"
"                (command (compressor source)))\n"
"            (copy-file source name)\n"
"            (when command\n"
"              (invoke command \"--decompress\" name)))))\n"
"        ;; Tentar mudar para o diretório filho.\n"
"        (and=> (first-subdirectory \".\") chdir))))\n"

msgid "Note the @code{chdir} call: it changes the working directory to where the source was unpacked.  Thus every phase following the @code{unpack} will use the source as a working directory, which is why we can directly work on the source files.  That is to say, unless a later phase changes the working directory to something else."
msgstr "Observe a chamada @code{chdir}: ela altera o diretório de trabalho para onde a fonte foi descompactada. Assim, cada fase após o @code{unpack} usará a fonte como diretório de trabalho, e é por isso que podemos trabalhar diretamente nos arquivos de origem. Isto é, a menos que uma fase posterior mude o diretório de trabalho para outro."

msgid "We modify the list of @code{%standard-phases} of the build system with the @code{modify-phases} macro as per the list of specified modifications, which may have the following forms:"
msgstr "Modificamos a lista de @code{%standard-phases} do sistema de construção com a macro @code{modify-phases} conforme a lista de modificações especificadas, que pode ter os seguintes formatos:"

msgid "@code{(add-before @var{phase} @var{new-phase} @var{procedure})}: Run @var{procedure} named @var{new-phase} before @var{phase}."
msgstr "@code{(add-before @var{phase} @var{new-phase} @var{procedure})}: Execute @var{procedure} chamado @var{new-phase} antes de @var{phase}."

msgid "@code{(add-after @var{phase} @var{new-phase} @var{procedure})}: Same, but afterwards."
msgstr "@code{(add-after @var{phase} @var{new-phase} @var{procedure})}: O mesmo, mas depois."

msgid "@code{(replace @var{phase} @var{procedure})}."
msgstr "@code{(replace @var{phase} @var{procedure})}."

msgid "@code{(delete @var{phase})}."
msgstr "@code{(delete @var{phase})}."

msgid "The @var{procedure} supports the keyword arguments @code{inputs} and @code{outputs}.  Each input (whether @emph{native}, @emph{propagated} or not) and output directory is referenced by their name in those variables.  Thus @code{(assoc-ref outputs \"out\")} is the store directory of the main output of the package.  A phase procedure may look like this:"
msgstr "O @var{procedure} suporta os argumentos de palavra-chave @code{inputs} e @code{outputs}. Cada entrada (seja @emph{native}, @emph{propagated} ou não) e diretório de saída são referenciados por seus nomes nessas variáveis. Assim @code{(assoc-ref outputs \"out\")} é o diretório de armazém da saída principal do pacote. Um procedimento de fase pode ser assim:"

msgid ""
"(lambda* (#:key inputs outputs #:allow-other-keys)\n"
"  (let ((bash-directory (assoc-ref inputs \"bash\"))\n"
"        (output-directory (assoc-ref outputs \"out\"))\n"
"        (doc-directory (assoc-ref outputs \"doc\")))\n"
"    ;; ... ))\n"
msgstr ""
"(lambda* (#:key inputs outputs #:allow-other-keys)\n"
"  (let ((bash-directory (assoc-ref inputs \"bash\"))\n"
"        (output-directory (assoc-ref outputs \"out\"))\n"
"        (doc-directory (assoc-ref outputs \"doc\")))\n"
"    ;; ... ))\n"

msgid "Its return value is ignored."
msgstr "Seu valor de retorno é ignorado."

msgid "Code staging"
msgstr "Preparação de código"

msgid "The astute reader may have noticed the quasi-quote and comma syntax in the argument field.  Indeed, the build code in the package declaration should not be evaluated on the client side, but only when passed to the Guix daemon.  This mechanism of passing code around two running processes is called @uref{https://arxiv.org/abs/1709.00833, code staging}."
msgstr "O leitor astuto deve ter notado a sintaxe de crase e vírgula no campo do argumento. Na verdade, o código de construção na declaração do pacote não deve ser avaliado no lado do cliente, mas apenas quando passado para o daemon Guix. Esse mecanismo de passagem de código entre dois processos em execução é chamado @uref{https://arxiv.org/abs/1709.00833, preparação de código}."

msgid "Utility functions"
msgstr "Funções utilitárias"

msgid "When customizing @code{phases}, we often need to write code that mimics the equivalent system invocations (@code{make}, @code{mkdir}, @code{cp}, etc.)@: commonly used during regular ``Unix-style'' installations."
msgstr "Ao personalizar @code{phases}, muitas vezes precisamos escrever código que imite as invocações equivalentes do sistema (@code{make}, @code{mkdir}, @code{cp}, etc.)@: comumente usado durante `` Instalações regulares no estilo Unix''."

msgid "Some like @code{chmod} are native to Guile.  @xref{,,, guile, Guile reference manual} for a complete list."
msgstr "Alguns como @code{chmod} são nativos do Guile. @xref{,,, guile, manual de referência do Guile} para obter uma lista completa."

msgid "Guix provides additional helper functions which prove especially handy in the context of package management."
msgstr "Guix fornece funções auxiliares adicionais que são especialmente úteis no contexto de gerenciamento de pacotes."

msgid "Some of those functions can be found in @samp{$GUIX_CHECKOUT/guix/guix/build/utils.scm}.  Most of them mirror the behaviour of the traditional Unix system commands:"
msgstr "Algumas dessas funções podem ser encontradas em @samp{$GUIX_CHECKOUT/guix/guix/build/utils.scm}. A maioria delas reflete o comportamento dos comandos tradicionais do sistema Unix:"

msgid "which"
msgstr "which"

msgid "Like the @samp{which} system command."
msgstr "Como o comando do sistema @samp{which}."

msgid "find-files"
msgstr "find-files"

msgid "Akin to the @samp{find} system command."
msgstr "Semelhante ao comando do sistema @samp{find}."

msgid "mkdir-p"
msgstr "mkdir-p"

msgid "Like @samp{mkdir -p}, which creates all parents as needed."
msgstr "Como @samp{mkdir -p}, que cria todos os diretórios conforme necessário."

msgid "install-file"
msgstr "install-file"

msgid "Similar to @samp{install} when installing a file to a (possibly non-existing) directory.  Guile has @code{copy-file} which works like @samp{cp}."
msgstr "Semelhante a @samp{install} ao instalar um arquivo em um diretório (possivelmente inexistente). Guile tem @code{copy-file} que funciona como @samp{cp}."

msgid "copy-recursively"
msgstr "copy-recursively"

msgid "Like @samp{cp -r}."
msgstr "Como @samp{cp -r}."

msgid "delete-file-recursively"
msgstr "delete-file-recursively"

msgid "Like @samp{rm -rf}."
msgstr "Como @samp{rm -rf}."

msgid "invoke"
msgstr "invoke"

msgid "Run an executable.  This should be used instead of @code{system*}."
msgstr "Executar um executável. Deve ser usado em vez de @code{system*}."

msgid "with-directory-excursion"
msgstr "with-directory-excursion"

msgid "Run the body in a different working directory, then restore the previous working directory."
msgstr "Execute o corpo em um diretório de trabalho diferente e restaure o diretório de trabalho anterior."

msgid "substitute*"
msgstr "substitute*"

msgid "A ``@command{sed}-like'' function."
msgstr "Uma função do tipo ``@command{sed}''."

msgid "@xref{Build Utilities,,, guix, GNU Guix Reference Manual}, for more information on these utilities."
msgstr "@xref{Construir utilitários,,, guix.pt_BR, Manual de Referência GNU Guix}, para obter mais informações sobre esses utilitários."

msgid "Module prefix"
msgstr "Prefixo do módulo"

msgid "The license in our last example needs a prefix: this is because of how the @code{license} module was imported in the package, as @code{#:use-module ((guix licenses)  #:prefix license:)}.  The Guile module import mechanism (@pxref{Using Guile Modules,,, guile, Guile reference manual})  gives the user full control over namespacing: this is needed to avoid clashes between, say, the @samp{zlib} variable from @samp{licenses.scm} (a @emph{license} value) and the @samp{zlib} variable from @samp{compression.scm} (a @emph{package} value)."
msgstr "A licença em nosso último exemplo precisa de um prefixo: isso se deve à forma como o módulo @code{license} foi importado no pacote, como @code{#:use-module ((guix Licenses) #:prefix License:)}. O mecanismo de importação do módulo Guile (@pxref{Using Guile Modules,,, guile, manual de referência do Guile}) dá ao usuário controle total sobre o namespace: isso é necessário para evitar conflitos entre, digamos, a variável @samp{zlib} de @samp{licenses.scm} (um valor @emph{license}) e a variável @samp{zlib} de @samp{compression.scm} (um valor @emph{package})."

msgid "What we've seen so far covers the majority of packages using a build system other than the @code{trivial-build-system}.  The latter does not automate anything and leaves you to build everything manually.  This can be more demanding and we won't cover it here for now, but thankfully it is rarely necessary to fall back on this system."
msgstr "O que vimos até agora cobre a maioria dos pacotes que usam um sistema de compilação diferente do @code{trivial-build-system}. Este último não automatiza nada e deixa você construir tudo manualmente. Isso pode ser mais exigente e não abordaremos isso aqui por enquanto, mas felizmente raramente é necessário recorrer a este sistema."

msgid "For the other build systems, such as ASDF, Emacs, Perl, Ruby and many more, the process is very similar to the GNU build system except for a few specialized arguments."
msgstr "Para outros sistemas de construção, como ASDF, Emacs, Perl, Ruby e muitos outros, o processo é muito semelhante ao sistema de construção GNU, exceto por alguns argumentos especializados."

msgid "@xref{Build Systems,,, guix, GNU Guix Reference Manual}, for more information on build systems, or check the source code in the @samp{$GUIX_CHECKOUT/guix/build} and @samp{$GUIX_CHECKOUT/guix/build-system} directories."
msgstr "@xref{Sistemas de compilação,,, guix.pt_BR, Manual de Referência GNU Guix}, para obter mais informações sobre sistemas de construção, ou verifique o código-fonte em @samp{$GUIX_CHECKOUT/guix/build} e @samp{$GUIX_CHECKOUT/guix/build -sistema} diretórios."

msgid "We can't repeat it enough: having a full-fledged programming language at hand empowers us in ways that reach far beyond traditional package management."
msgstr "Não podemos repetir o suficiente: ter uma linguagem de programação completa em mãos nos capacita de maneiras que vão muito além do gerenciamento tradicional de pacotes."

msgid "Let's illustrate this with some awesome features of Guix!"
msgstr "Vamos ilustrar isso com alguns recursos incríveis do Guix!"

msgid "You might find some build systems good enough that there is little to do at all to write a package, to the point that it becomes repetitive and tedious after a while.  A @emph{raison d'être} of computers is to replace human beings at those boring tasks.  So let's tell Guix to do this for us and create the package definition of an R package from CRAN (the output is trimmed for conciseness):"
msgstr "Você pode achar alguns sistemas de compilação bons o suficiente para que haja pouco a fazer para escrever um pacote, a ponto de se tornar repetitivo e tedioso depois de um tempo. Uma @emph{razão de ser} dos computadores é substituir os seres humanos nessas tarefas chatas. Então, vamos dizer ao Guix para fazer isso para nós e criar a definição de pacote de um pacote R do CRAN (a saída é cortada para ser concisa):"

msgid ""
"$ guix import cran --recursive walrus\n"
"\n"
msgstr ""
"$ guix import cran --recursive walrus\n"
"\n"

msgid ""
"(define-public r-mc2d\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"
msgstr ""
"(define-public r-mc2d\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"

msgid ""
"(define-public r-jmvcore\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"
msgstr ""
"(define-public r-jmvcore\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"

msgid ""
"(define-public r-wrs2\n"
"    ; ...\n"
"    (license gpl3)))\n"
"\n"
msgstr ""
"(define-public r-wrs2\n"
"    ; ...\n"
"    (license gpl3)))\n"
"\n"

msgid ""
"(define-public r-walrus\n"
"  (package\n"
"    (name \"r-walrus\")\n"
"    (version \"1.0.3\")\n"
"    (source\n"
"      (origin\n"
"        (method url-fetch)\n"
"        (uri (cran-uri \"walrus\" version))\n"
"        (sha256\n"
"          (base32\n"
"            \"1nk2glcvy4hyksl5ipq2mz8jy4fss90hx6cq98m3w96kzjni6jjj\"))))\n"
"    (build-system r-build-system)\n"
"    (propagated-inputs\n"
"      (list r-ggplot2 r-jmvcore r-r6 r-wrs2))\n"
"    (home-page \"https://github.com/jamovi/walrus\")\n"
"    (synopsis \"Robust Statistical Methods\")\n"
"    (description\n"
"      \"This package provides a toolbox of common robust statistical\n"
"tests, including robust descriptives, robust t-tests, and robust ANOVA.\n"
"It is also available as a module for 'jamovi' (see\n"
"<https://www.jamovi.org> for more information).  Walrus is based on the\n"
"WRS2 package by Patrick Mair, which is in turn based on the scripts and\n"
"work of Rand Wilcox.  These analyses are described in depth in the book\n"
"'Introduction to Robust Estimation & Hypothesis Testing'.\")\n"
"    (license gpl3)))\n"
msgstr ""
"(define-public r-walrus\n"
"  (package\n"
"    (name \"r-walrus\")\n"
"    (version \"1.0.3\")\n"
"    (source\n"
"      (origin\n"
"        (method url-fetch)\n"
"        (uri (cran-uri \"walrus\" version))\n"
"        (sha256\n"
"          (base32\n"
"            \"1nk2glcvy4hyksl5ipq2mz8jy4fss90hx6cq98m3w96kzjni6jjj\"))))\n"
"    (build-system r-build-system)\n"
"    (propagated-inputs\n"
"      (list r-ggplot2 r-jmvcore r-r6 r-wrs2))\n"
"    (home-page \"https://github.com/jamovi/walrus\")\n"
"    (synopsis \"Métodos Estatísticos Robustos\")\n"
"    (description\n"
"      \"Este pacote fornece uma caixa de ferramentas de testes estatísticos robustos\n"
"comuns, incluindo descritivos robustos, testes t robustos e ANOVA robusto.\n"
"Ele também está disponível como um módulo para 'jamovi' (veja\n"
"<https://www.jamovi.org> para mais informações). O Walrus é baseado no\n"
"pacote WRS2 de Patrick Mair, que por sua vez é baseado nos scripts e\n"
"trabalho de Rand Wilcox. Essas análises são descritas em profundidade no livro\n"
"'Introdução à Estimativa Robusta e Teste de Hipóteses'.\")\n"
"    (license gpl3)))\n"

msgid "The recursive importer won't import packages for which Guix already has package definitions, except for the very first."
msgstr "O importador recursivo não importará pacotes para os quais o Guix já possui definições de pacote, exceto o primeiro."

msgid "Not all applications can be packaged this way, only those relying on a select number of supported systems.  Read about the full list of importers in the guix import section of the manual (@pxref{Invoking guix import,,, guix, GNU Guix Reference Manual})."
msgstr "Nem todos os aplicativos podem ser empacotados dessa forma, apenas aqueles que dependem de um número selecionado de sistemas suportados. Leia sobre a lista completa de importadores na seção de importação de guix do manual (@pxref{Invocando guix import,,, guix.pt_BR, Manual de Referência do GNU Guix})."

msgid "Guix can be smart enough to check for updates on systems it knows.  It can report outdated package definitions with"
msgstr "O Guix pode ser inteligente o suficiente para verificar atualizações nos sistemas que conhece. Ele pode relatar definições de pacotes desatualizadas com"

msgid "$ guix refresh hello\n"
msgstr "$ guix refresh hello\n"

msgid "In most cases, updating a package to a newer version requires little more than changing the version number and the checksum.  Guix can do that automatically as well:"
msgstr "Na maioria dos casos, atualizar um pacote para uma versão mais recente requer pouco mais do que alterar o número da versão e a soma de verificação. Guix também pode fazer isso automaticamente:"

msgid "$ guix refresh hello --update\n"
msgstr "$ guix refresh hello --update\n"

msgid "If you've started browsing the existing package definitions, you might have noticed that a significant number of them have a @code{inherit} field:"
msgstr "Se você começou a navegar pelas definições de pacotes existentes, deve ter notado que um número significativo deles possui um campo @code{inherit}:"

msgid ""
"(define-public adwaita-icon-theme\n"
"  (package (inherit gnome-icon-theme)\n"
"    (name \"adwaita-icon-theme\")\n"
"    (version \"3.26.1\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnome/sources/\" name \"/\"\n"
"                                  (version-major+minor version) \"/\"\n"
"                                  name \"-\" version \".tar.xz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"17fpahgh5dyckgz7rwqvzgnhx53cx9kr2xw0szprc6bnqy977fi8\"))))\n"
"    (native-inputs (list `(,gtk+ \"bin\")))))\n"
msgstr ""
"(define-public adwaita-icon-theme\n"
"  (package (inherit gnome-icon-theme)\n"
"    (name \"adwaita-icon-theme\")\n"
"    (version \"3.26.1\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnome/sources/\" name \"/\"\n"
"                                  (version-major+minor version) \"/\"\n"
"                                  name \"-\" version \".tar.xz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"17fpahgh5dyckgz7rwqvzgnhx53cx9kr2xw0szprc6bnqy977fi8\"))))\n"
"    (native-inputs (list `(,gtk+ \"bin\")))))\n"

msgid "All unspecified fields are inherited from the parent package.  This is very convenient to create alternative packages, for instance with different source, version or compilation options."
msgstr "Todos os campos não especificados são herdados do pacote pai. Isto é muito conveniente para criar pacotes alternativos, por exemplo, com diferentes fontes, versões ou opções de compilação."

msgid "Sadly, some applications can be tough to package.  Sometimes they need a patch to work with the non-standard file system hierarchy enforced by the store.  Sometimes the tests won't run properly.  (They can be skipped but this is not recommended.)  Other times the resulting package won't be reproducible."
msgstr "Infelizmente, alguns aplicativos podem ser difíceis de empacotar. Às vezes, eles precisam de um patch para funcionar com a hierarquia do sistema de arquivos não padrão imposta pelo armazém. Às vezes, os testes não funcionam corretamente. (Eles podem ser ignorados, mas isso não é recomendado.) Outras vezes, o pacote resultante não será reproduzível."

msgid "Should you be stuck, unable to figure out how to fix any sort of packaging issue, don't hesitate to ask the community for help."
msgstr "Se você estiver emperrado, incapaz de descobrir como resolver qualquer tipo de problema de empacotamento, não hesite em pedir ajuda à comunidade."

msgid "See the @uref{https://guix.gnu.org/contact/, Guix homepage} for information on the mailing lists, IRC, etc."
msgstr "Consulte @uref{https://guix.gnu.org/contact/, página inicial do Guix} para obter informações sobre listas de discussão, IRC, etc."

msgid "This tutorial was a showcase of the sophisticated package management that Guix boasts.  At this point we have mostly restricted this introduction to the @code{gnu-build-system} which is a core abstraction layer on which more advanced abstractions are based."
msgstr "Este tutorial foi uma amostra do sofisticado gerenciamento de pacotes que o Guix possui. Neste ponto, restringimos principalmente esta introdução ao @code{gnu-build-system}, que é uma camada de abstração central na qual se baseiam abstrações mais avançadas."

msgid "Where do we go from here? Next we ought to dissect the innards of the build system by removing all abstractions, using the @code{trivial-build-system}: this should give us a thorough understanding of the process before investigating some more advanced packaging techniques and edge cases."
msgstr "Para onde vamos daqui? Em seguida, devemos dissecar as entranhas do sistema de construção, removendo todas as abstrações, usando o @code{trivial-build-system}: isso deve nos dar uma compreensão completa do processo antes de investigar algumas técnicas de empacotamento mais avançadas e casos extremos."

msgid "Other features worth exploring are the interactive editing and debugging capabilities of Guix provided by the Guile REPL@."
msgstr "Outros recursos que valem a pena explorar são os recursos interativos de edição e depuração do Guix fornecidos pelo Guile REPL@."

msgid "Those fancy features are completely optional and can wait; now is a good time to take a well-deserved break.  With what we've introduced here you should be well armed to package lots of programs.  You can get started right away and hopefully we will see your contributions soon!"
msgstr "Esses recursos sofisticados são totalmente opcionais e podem esperar; agora é um bom momento para fazer uma pausa bem merecida. Com o que apresentamos aqui você deve estar bem preparado para empacotar muitos programas. Você pode começar imediatamente e esperamos ver suas contribuições em breve!"

msgid "The @uref{https://guix.gnu.org/manual/en/html_node/Defining-Packages.html, package reference in the manual}"
msgstr "O @uref{https://guix.gnu.org/manual/pt-br/html_node/Definindo-pacotes.html, referência do pacote no manual}"

msgid "@uref{https://gitlab.com/pjotrp/guix-notes/blob/master/HACKING.org, Pjotr’s hacking guide to GNU Guix}"
msgstr "@uref{https://gitlab.com/pjotrp/guix-notes/blob/master/HACKING.org, guia de hacking de Pjotr para GNU Guix}"

msgid "@uref{https://guix.gnu.org/guix-ghm-andreas-20130823.pdf, ``GNU Guix: Package without a scheme!''}, by Andreas Enge"
msgstr "@uref{https://guix.gnu.org/guix-ghm-andreas-20130823.pdf, ``GNU Guix: Pacote sem Scheme!''}, por Andreas Enge"

msgid "The following sections provide real-life examples on working with specific build systems, serving as extensions to the concise packaging guidelines (@pxref{Packaging Guidelines,,, guix, GNU Guix Reference Manual})."
msgstr "As seções a seguir fornecem exemplos reais sobre como trabalhar com sistemas de compilação específicos, servindo como extensões para as diretrizes concisas de empacotamento (@pxref{Diretrizes de empacotamento,,, guix.pt_BR, Manual de referência do GNU Guix})."

msgid "In preparation, add the following packages to our environment:"
msgstr "Para começar, adicione os seguintes pacotes ao nosso ambiente:"

msgid "$ guix shell rust rust:cargo cargo-audit cargo-license\n"
msgstr "$ guix shell rust rust:cargo cargo-audit cargo-license\n"

msgid "In this example, we'll package @code{cargo-audit}, which is published on the @uref{https://crates.io, crates.io} Rust package repository.  All its dependencies are on crates.io as well."
msgstr "Neste exemplo, empacotaremos @code{cargo-audit}, que é publicado no repositório de pacotes Rust @uref{https://crates.io, crates.io}. Todas as suas dependências também estão em crates.io."

msgid "Since @code{cargo-audit} is available on crates.io, we can generate a template via the crates.io importer (@pxref{Invoking guix import,,, guix, GNU Guix Reference Manual}):"
msgstr "Como @code{cargo-audit} está disponível no crates.io, podemos gerar um modelo por meio do importador do crates.io (@pxref{Invocando guix import,,, guix.pt_BR, Manual de referência GNU Guix}):"

msgid "$ guix import crate cargo-audit\n"
msgstr "$ guix import crate cargo-audit\n"

msgid "After manual editing, we'll have the following definiton:"
msgstr "Após editar manualmente, teremos a seguinte definição:"

msgid ""
"(define-public cargo-audit\n"
"  (package\n"
"    (name \"cargo-audit\")\n"
"    (version \"0.21.2\")\n"
"    (source\n"
"     (origin\n"
"       (method url-fetch)\n"
"       (uri (crate-uri \"cargo-audit\" version))\n"
"       (file-name (string-append name \"-\" version \".tar.gz\"))\n"
"       (sha256\n"
"        (base32 \"1a00yqpckkw86zh2hg7ra82c5fx0ird5766dyynimbvqiwg2ps0n\"))))\n"
"    (build-system cargo-build-system)\n"
"    (arguments (list #:install-source? #f))\n"
"    (inputs (cargo-inputs 'cargo-audit))\n"
"    (home-page \"https://rustsec.org/\")\n"
"    (synopsis \"Audit Cargo.lock for crates with security vulnerabilities\")\n"
"    (description\n"
"     \"This package provides a Cargo subcommand, @@command@{cargo audit@}, to\n"
"audit @@file@{Cargo.lock@} for crates with security vulnerabilities.\")\n"
"    (license (list license:asl2.0 license:expat))))\n"
msgstr ""
"(define-public cargo-audit\n"
"  (package\n"
"    (name \"cargo-audit\")\n"
"    (version \"0.21.2\")\n"
"    (source\n"
"     (origin\n"
"       (method url-fetch)\n"
"       (uri (crate-uri \"cargo-audit\" version))\n"
"       (file-name (string-append name \"-\" version \".tar.gz\"))\n"
"       (sha256\n"
"        (base32 \"1a00yqpckkw86zh2hg7ra82c5fx0ird5766dyynimbvqiwg2ps0n\"))))\n"
"    (build-system cargo-build-system)\n"
"    (arguments (list #:install-source? #f))\n"
"    (inputs (cargo-inputs 'cargo-audit))\n"
"    (home-page \"https://rustsec.org/\")\n"
"    (synopsis \"Audit Cargo.lock for crates with security vulnerabilities\")\n"
"    (description\n"
"     \"This package provides a Cargo subcommand, @@command@{cargo audit@}, to\n"
"audit @@file@{Cargo.lock@} for crates with security vulnerabilities.\")\n"
"    (license (list license:asl2.0 license:expat))))\n"

msgid "The identifier used to invoke @code{cargo-inputs}, in this case @code{'cargo-audit}, must be unique, usually matching the variable name of the package."
msgstr "O identificador usado para invocar @code{cargo-inputs}, neste caso @code{'cargo-audit}, deve ser único, geralmente correspondendo ao nome da variável do pacote."

msgid "Unpack package source and navigate to the unpacked directory, then run the following commands:"
msgstr "Descompacte o código-fonte do pacote e navegue até o diretório descompactado. Em seguida, execute os seguintes comandos:"

msgid ""
"$ cargo generate-lockfile\n"
"$ cargo audit\n"
"$ cargo license\n"
msgstr ""
"$ cargo generate-lockfile\n"
"$ cargo audit\n"
"$ cargo license\n"

msgid "@command{cargo generate-lockfile} updates dependencies to compatible versions.  Applying it to all Rust applications helps reduce a great number of Rust libraries we need to check later.  Although sometimes libraries may fail to follow the @uref{https://semver.org/, semantic versioning} scheme, it's still acceptable."
msgstr "O comando @command{cargo generate-lockfile} atualiza as dependências para versões compatíveis. Aplicá-lo a todos os aplicativos Rust ajuda a reduzir bastante o número de bibliotecas Rust que precisamos verificar posteriormente. Isso ainda é aceitável, mesmo que algumas bibliotecas possam não seguir o esquema @uref{https://semver.org/, versionamento semântico}."

msgid "@command{cargo audit} checks known vulnerabilities and @command{cargo license} checks licenses, for all the dependencies.  We must have an acceptable output of @command{cargo audit} and ensure all dependencies are licensed with our supported licenses (@pxref{Defining Packages,,, guix, GNU Guix Reference Manual})."
msgstr "O comando @command{cargo audit} verifica vulnerabilidades conhecidas e @command{cargo license} verifica licenças para todas as dependências. Precisamos ter uma saída aceitável de @command{cargo audit} e garantir que todas as dependências estejam licenciadas com nossas licenças suportadas (@pxref{Definindo Pacotes,,, guix, Manual de Referência GNU GUIX})."

msgid "Import dependencies from the generated lockfile:"
msgstr "Importando dependências do lockfile gerado:"

msgid ""
"$ guix import --insert=gnu/packages/rust-crates.scm \\\n"
"      crate --lockfile=/path/to/Cargo.lock cargo-audit\n"
"\n"
msgstr ""
"guix import --insert=gnu/packages/rust-crates.scm \\\n"
"      crate --lockfile=/path/to/Cargo.lock cargo-audit\n"
"\n"

msgid ""
"# Or use short options, in this case the shell processes file names\n"
"# before passing them to Guix, allowing tilde expansion, for example.\n"
"$ guix import -i gnu/packages/rust-crates.scm \\\n"
"      crate -f /path/to/Cargo.lock cargo-audit\n"
msgstr ""
"# Ou use a opção mais curta, nesse caso o shell processa os nomes de\n"
"# arquivos antes de passá-los ao Guix, permitindo a expansão do til, por exemplo\n"
"$ guix import -i gnu/packages/rust-crates.scm \\\n"
"      crate -f /caminho/para/Cargo.lock cargo-audit\n"

msgid "@code{cargo-audit} here must be consistent with the identifier used for @code{cargo-inputs} invocation in the package definition."
msgstr "Aqui @code{cargo-audit} deve ser consistente com o identificador usado para a invocação de @code{cargo-inputs} na definição do pacote."

msgid "At this stage, the package @code{cargo-audit} is buildable."
msgstr "Agora o pacote @code{cargo-audit} pode ser compilado."

msgid ""
"$ ./pre-inst-env guix build cargo-audit\n"
"@dots{}\n"
"starting phase `check-for-pregenerated-files'\n"
"Searching for binary files...\n"
"./guix-vendor/rust-async-compression-0.4.21.tar.gz/tests/artifacts/dictionary-rust\n"
"./guix-vendor/rust-async-compression-0.4.21.tar.gz/tests/artifacts/dictionary-rust-other\n"
"./guix-vendor/rust-async-compression-0.4.21.tar.gz/tests/artifacts/lib.rs.zst\n"
"./guix-vendor/rust-async-compression-0.4.21.tar.gz/tests/artifacts/long-window-size-lib.rs.zst\n"
"./guix-vendor/rust-winapi-i686-pc-windows-gnu-0.4.0.tar.gz/lib/libwinapi_aclui.a\n"
"./guix-vendor/rust-winapi-i686-pc-windows-gnu-0.4.0.tar.gz/lib/libwinapi_activeds.a\n"
"./guix-vendor/rust-winapi-i686-pc-windows-gnu-0.4.0.tar.gz/lib/libwinapi_asycfilt.a\n"
"./guix-vendor/rust-winapi-i686-pc-windows-gnu-0.4.0.tar.gz/lib/libwinapi_amsi.a\n"
"@dots{}\n"
msgstr ""
"$ ./pre-inst-env guix build cargo-audit\n"
"@dots{}\n"
"starting phase `check-for-pregenerated-files'\n"
"Searching for binary files...\n"
"./guix-vendor/rust-async-compression-0.4.21.tar.gz/tests/artifacts/dictionary-rust\n"
"./guix-vendor/rust-async-compression-0.4.21.tar.gz/tests/artifacts/dictionary-rust-other\n"
"./guix-vendor/rust-async-compression-0.4.21.tar.gz/tests/artifacts/lib.rs.zst\n"
"./guix-vendor/rust-async-compression-0.4.21.tar.gz/tests/artifacts/long-window-size-lib.rs.zst\n"
"./guix-vendor/rust-winapi-i686-pc-windows-gnu-0.4.0.tar.gz/lib/libwinapi_aclui.a\n"
"./guix-vendor/rust-winapi-i686-pc-windows-gnu-0.4.0.tar.gz/lib/libwinapi_activeds.a\n"
"./guix-vendor/rust-winapi-i686-pc-windows-gnu-0.4.0.tar.gz/lib/libwinapi_asycfilt.a\n"
"./guix-vendor/rust-winapi-i686-pc-windows-gnu-0.4.0.tar.gz/lib/libwinapi_amsi.a\n"
"@dots{}\n"

msgid "Guix offers a flexible language for declaratively configuring your Guix System.  This flexibility can at times be overwhelming.  The purpose of this chapter is to demonstrate some advanced configuration concepts."
msgstr "Guix oferece uma linguagem flexível para configurar declarativamente seu sistema Guix. Essa flexibilidade às vezes pode ser esmagadora. O objetivo deste capítulo é demonstrar alguns conceitos avançados de configuração."

msgid "@pxref{System Configuration,,, guix, GNU Guix Reference Manual} for a complete reference."
msgstr "@pxref{Configuração do sistema,,, guix.pt_BR, Manual de referência do GNU Guix} para uma referência completa."

msgid "While the Guix manual explains auto-login one user to @emph{all} TTYs (@pxref{auto-login to TTY,,, guix, GNU Guix Reference Manual}), some might prefer a situation, in which one user is logged into one TTY with the other TTYs either configured to login different users or no one at all.  Note that one can auto-login one user to any TTY, but it is usually advisable to avoid @code{tty1}, which, by default, is used to log warnings and errors."
msgstr "Embora o manual do Guix explique o login automático de um usuário para @emph{todas} TTYs (@pxref{auto-login to TTY,,, guix.pt_BR, Manual de Referência do GNU Guix}), alguns podem preferir uma situação em que um usuário está logado em um TTY com os outros TTYs configurados para fazer login com usuários diferentes ou com nenhum. Observe que é possível fazer login automático de um usuário em qualquer TTY, mas geralmente é aconselhável evitar @code{tty1}, que, por padrão, é usado para registrar avisos e erros."

msgid "Here is how one might set up auto login for one user to one tty:"
msgstr "Aqui está como se pode configurar o login automático para um usuário em um tty:"

msgid ""
"(define (auto-login-to-tty config tty user)\n"
"  (if (string=? tty (mingetty-configuration-tty config))\n"
"        (mingetty-configuration\n"
"         (inherit config)\n"
"         (auto-login user))\n"
"        config))\n"
"\n"
msgstr ""
"(define (auto-login-to-tty config tty user)\n"
"  (if (string=? tty (mingetty-configuration-tty config))\n"
"        (mingetty-configuration\n"
"         (inherit config)\n"
"         (auto-login user))\n"
"        config))\n"
"\n"

msgid ""
"(define %my-services\n"
"  (modify-services %base-services\n"
"    ;; @dots{}\n"
"    (mingetty-service-type config =>\n"
"                           (auto-login-to-tty\n"
"                            config \"tty3\" \"alice\"))))\n"
"\n"
msgstr ""
"(define %my-services\n"
"  (modify-services %base-services\n"
"    ;; @dots{}\n"
"    (mingetty-service-type config =>\n"
"                           (auto-login-to-tty\n"
"                            config \"tty3\" \"alice\"))))\n"
"\n"

msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services %my-services))\n"
msgstr ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services %my-services))\n"

msgid "One could also @code{compose} (@pxref{Higher-Order Functions,,, guile, The Guile Reference Manual}) @code{auto-login-to-tty} to login multiple users to multiple ttys."
msgstr "Pode-se também @code{compose} (@pxref{Higher-Order Functions,,,, guile, Manual de referência do GNU Guile}) @code{auto-login-to-tty} para fazer login de vários usuários em vários ttys."

msgid "Finally, here is a note of caution.  Setting up auto login to a TTY, means that anyone can turn on your computer and run commands as your regular user.  However, if you have an encrypted root partition, and thus already need to enter a passphrase when the system boots, auto-login might be a convenient option."
msgstr "Finalmente, aqui está uma nota de cautela. Configurar o login automático em um TTY significa que qualquer pessoa pode ligar seu computador e executar comandos como seu usuário normal. No entanto, se você tiver uma partição raiz criptografada e, portanto, já precisar inserir uma senha quando o sistema inicializar, o login automático pode ser uma opção conveniente."

msgid "Guix is, at its core, a source based distribution with substitutes (@pxref{Substitutes,,, guix, GNU Guix Reference Manual}), and as such building packages from their source code is an expected part of regular package installations and upgrades.  Given this starting point, it makes sense that efforts are made to reduce the amount of time spent compiling packages, and recent changes and upgrades to the building and distribution of substitutes continues to be a topic of discussion within Guix."
msgstr "Guix é, em sua essência, uma distribuição baseada em código-fonte com substitutos (@pxref{Substitutos,,, guix.pt_BR, Manual de Referência do GNU Guix}) e, como tal, construir pacotes a partir de seu código-fonte é uma parte esperada das instalações e atualizações regulares de pacotes. Dado este ponto de partida, faz sentido que sejam feitos esforços para reduzir a quantidade de tempo gasto na compilação de pacotes, e as recentes mudanças e atualizações na construção e distribuição de substitutos continuam a ser um tópico de discussão dentro do Guix."

msgid "The kernel, while not requiring an overabundance of RAM to build, does take a rather long time on an average machine.  The official kernel configuration, as is the case with many GNU/Linux distributions, errs on the side of inclusiveness, and this is really what causes the build to take such a long time when the kernel is built from source."
msgstr "O kernel, embora não exija uma superabundância de RAM para ser construído, leva muito tempo em uma máquina média. A configuração oficial do kernel, como é o caso de muitas distribuições GNU/Linux, erra pelo lado da inclusão, e é isso que realmente faz com que a construção demore tanto tempo quando o kernel é compilado a partir do código-fonte."

msgid "The Linux kernel, however, can also just be described as a regular old package, and as such can be customized just like any other package.  The procedure is a little bit different, although this is primarily due to the nature of how the package definition is written."
msgstr "O kernel do Linux, entretanto, também pode ser descrito apenas como um pacote antigo normal e, como tal, pode ser personalizado como qualquer outro pacote. O procedimento é um pouco diferente, embora isso se deva principalmente à natureza de como a definição do pacote é escrita."

msgid "The @code{linux-libre} kernel package definition is actually a procedure which creates a package."
msgstr "A definição do pacote do kernel @code{linux-libre} é na verdade um procedimento que cria um pacote."

msgid ""
"(define* (make-linux-libre* version gnu-revision source supported-systems\n"
"                            #:key\n"
"                            (extra-version #f)\n"
"                            ;; A function that takes an arch and a variant.\n"
"                            ;; See kernel-config for an example.\n"
"                            (configuration-file #f)\n"
"                            (defconfig \"defconfig\")\n"
"                            (extra-options (default-extra-linux-options version)))\n"
"  ...)\n"
msgstr ""
"(define* (make-linux-libre* versão gnu-revision fonte sistemas-suportados\n"
"                            #:key\n"
"                            (extra-version #f)\n"
"                            ;; Uma função que pega um arch e uma variante.\n"
"                            ;; Veja kernel-config para um exemplo.\n"
"                            (configuration-file #f)\n"
"                            (defconfig \"defconfig\")\n"
"                            (extra-options %default-extra-linux-options))\n"
"  ...)\n"

msgid "The current @code{linux-libre} package is for the 5.15.x series, and is declared like this:"
msgstr "O pacote @code{linux-libre} atual é para a série 5.15.x e é declarado assim:"

msgid ""
"(define-public linux-libre-5.15\n"
"  (make-linux-libre* linux-libre-5.15-version\n"
"                     linux-libre-5.15-gnu-revision\n"
"                     linux-libre-5.15-source\n"
"                     '(\"x86_64-linux\" \"i686-linux\" \"armhf-linux\"\n"
"                       \"aarch64-linux\" \"riscv64-linux\")\n"
"                     #:configuration-file kernel-config))\n"
msgstr ""
"(define-public linux-libre-5.15\n"
"  (make-linux-libre* linux-libre-5.15-version\n"
"                     linux-libre-5.15-gnu-revision\n"
"                     linux-libre-5.15-source\n"
"                     '(\"x86_64-linux\" \"i686-linux\" \"armhf-linux\"\n"
"                       \"aarch64-linux\" \"riscv64-linux\")\n"
"                     #:configuration-file kernel-config))\n"

msgid "Any keys which are not assigned values inherit their default value from the @code{make-linux-libre} definition.  When comparing the two snippets above, notice the code comment that refers to @code{#:configuration-file}.  Because of this, it is not actually easy to include a custom kernel configuration from the definition, but don't worry, there are other ways to work with what we do have."
msgstr "Quaisquer chaves às quais não sejam atribuídos valores herdam seu valor padrão da definição @code{make-linux-libre}. Ao comparar os dois trechos acima, observe o comentário do código que se refere a @code{#:configuration-file}. Por causa disso, não é realmente fácil incluir uma configuração de kernel personalizada na definição, mas não se preocupe, existem outras maneiras de trabalhar com o que temos."

msgid "There are two ways to create a kernel with a custom kernel configuration.  The first is to provide a standard @file{defconfig} to @code{customize-linux} procedure.  To produce such file you need to obtain Linux source code, create a @file{.config} file (using @code{make menuconfig} command, for example) or provide one you already have.  After that you will need to run @code{make savedefconfig} command within the kernel source tree---this will produce the @file{defconfig} file which we will use to build a custom kernel."
msgstr "Há duas maneiras de criar um kernel com configuração customizada.  A primeira é provendo um arquivo padrão @file{defconfig} para que @code{customize-linux}  o processe. Para produzir tal arquivo, você precisa obter o código fonte do Linux, criar um arquivo @file{.config} (usando o comando @code{make menuconfig}, por exemplo) ou prover um arquivo que você já tenha. Depois disso você precisará rodar o comando @code{make savedefconfig} dentro do diretório do código fonte do Linux---isso irá produzir o arquivo @file{defconfig} que usaremos para compilar um kernel customizado."

msgid "Below is a sample kernel package."
msgstr "Abaixo temos um pacote de kernel de exemplo."

msgid ""
"(define-public my-linux-libre\n"
"  (package\n"
"    (inherit (customize-linux\n"
"              #:linux linux-libre\n"
"              #:defconfig\n"
"              (local-file \"defconfig\")))\n"
"    (name \"my-linux-libre\")))\n"
msgstr ""
"(define-public my-linux-libre\n"
"  (package\n"
"    (inherit (customize-linux\n"
"              #:linux linux-libre\n"
"              #:defconfig\n"
"              (local-file \"defconfig\")))\n"
"    (name \"my-linux-libre\")))\n"

msgid "In the same directory as the file defining @code{my-linux-libre} is a file named @file{defconfig}. This way you can provide kernel options you want to have in the result kernel."
msgstr "No mesmo diretório do arquivo definindo @code{my-linux-libre} há um arquivo chamado @file{defconfig}. Dessa maneira você pode fornecer opções de kernel que você queira que o kernel resultante tenha."

msgid "The second way to create a custom kernel is to pass a new value to the @code{extra-options} keyword of the @code{make-linux-libre} procedure.  The @code{extra-options} keyword works with another function defined right below it:"
msgstr "A segunda maneira de criar um kernel customizado é passar um novo valor para a palavra-chave @code{extra-options} do procedimento @code{make-linux-libre}. A palavra-chave @code{extra-options} funciona com outra função definida logo abaixo dela:"

msgid ""
"(define (default-extra-linux-options version)\n"
"  `(;; https://lists.gnu.org/archive/html/guix-devel/2014-04/msg00039.html\n"
"   (\"CONFIG_DEVPTS_MULTIPLE_INSTANCES\" . #true)\n"
"   ;; Modules required for initrd:\n"
"   (\"CONFIG_NET_9P\" . m)\n"
"   (\"CONFIG_NET_9P_VIRTIO\" . m)\n"
"   (\"CONFIG_VIRTIO_BLK\" . m)\n"
"   (\"CONFIG_VIRTIO_NET\" . m)\n"
"   (\"CONFIG_VIRTIO_PCI\" . m)\n"
"   (\"CONFIG_VIRTIO_BALLOON\" . m)\n"
"   (\"CONFIG_VIRTIO_MMIO\" . m)\n"
"   (\"CONFIG_FUSE_FS\" . m)\n"
"   (\"CONFIG_CIFS\" . m)\n"
"   (\"CONFIG_9P_FS\" . m)))\n"
"\n"
msgstr ""
"(define %default-extra-linux-options\n"
"  `(;; https://lists.gnu.org/archive/html/guix-devel/2014-04/msg00039.html\n"
"   (\"CONFIG_DEVPTS_MULTIPLE_INSTANCES\" . #true)\n"
"   ;; Modules required for initrd:\n"
"   (\"CONFIG_NET_9P\" . m)\n"
"   (\"CONFIG_NET_9P_VIRTIO\" . m)\n"
"   (\"CONFIG_VIRTIO_BLK\" . m)\n"
"   (\"CONFIG_VIRTIO_NET\" . m)\n"
"   (\"CONFIG_VIRTIO_PCI\" . m)\n"
"   (\"CONFIG_VIRTIO_BALLOON\" . m)\n"
"   (\"CONFIG_VIRTIO_MMIO\" . m)\n"
"   (\"CONFIG_FUSE_FS\" . m)\n"
"   (\"CONFIG_CIFS\" . m)\n"
"   (\"CONFIG_9P_FS\" . m)))\n"
"\n"

msgid ""
"(define (config->string options)\n"
"  (string-join (map (match-lambda\n"
"                      ((option . 'm)\n"
"                       (string-append option \"=m\"))\n"
"                      ((option . #true)\n"
"                       (string-append option \"=y\"))\n"
"                      ((option . #false)\n"
"                       (string-append option \"=n\")))\n"
"                    options)\n"
"               \"\\n\"))\n"
msgstr ""
"(define (config->string options)\n"
"  (string-join (map (match-lambda\n"
"                      ((option . 'm)\n"
"                       (string-append option \"=m\"))\n"
"                      ((option . #true)\n"
"                       (string-append option \"=y\"))\n"
"                      ((option . #false)\n"
"                       (string-append option \"=n\")))\n"
"                    options)\n"
"               \"\\n\"))\n"

msgid "And in the custom configure script from the `make-linux-libre` package:"
msgstr "E no script de configuração personalizado do pacote `make-linux-libre`:"

msgid ""
";; Appending works even when the option wasn't in the\n"
";; file.  The last one prevails if duplicated.\n"
"(let ((port (open-file \".config\" \"a\"))\n"
"      (extra-configuration ,(config->string extra-options)))\n"
"  (display extra-configuration port)\n"
"  (close-port port))\n"
"\n"
msgstr ""
";; A anexação funciona mesmo quando a opção não estava no arquivo.\n"
";; A última prevalece se duplicada.\n"
"(let ((port (open-file \".config\" \"a\"))\n"
"      (extra-configuration ,(config->string extra-options)))\n"
"  (display extra-configuration port)\n"
"  (close-port port))\n"
"\n"

msgid "(invoke \"make\" \"oldconfig\")\n"
msgstr "(invoke \"make\" \"oldconfig\")\n"

msgid "So by not providing a configuration-file the @file{.config} starts blank, and then we write into it the collection of flags that we want.  Here's another custom kernel:"
msgstr "Portanto, ao não fornecer um arquivo de configuração, o @file{.config} começa em branco e então escrevemos nele a coleção de flags que desejamos. Aqui está outro kernel personalizado:"

msgid ""
"(define %macbook41-full-config\n"
"  (append %macbook41-config-options\n"
"          %file-systems\n"
"          %efi-support\n"
"          %emulation\n"
"          ((@@@@ (gnu packages linux) default-extra-linux-options) version)))\n"
"\n"
msgstr ""
"(define %macbook41-full-config\n"
"  (append %macbook41-config-options\n"
"          %file-systems\n"
"          %efi-support\n"
"          %emulation\n"
"          (@@@@ (gnu packages linux) %default-extra-linux-options)))\n"
"\n"

msgid ""
"(define-public linux-libre-macbook41\n"
"  ;; XXX: Access the internal 'make-linux-libre*' procedure, which is\n"
"  ;; private and unexported, and is liable to change in the future.\n"
"  ((@@@@ (gnu packages linux) make-linux-libre*)\n"
"   (@@@@ (gnu packages linux) linux-libre-version)\n"
"   (@@@@ (gnu packages linux) linux-libre-gnu-revision)\n"
"   (@@@@ (gnu packages linux) linux-libre-source)\n"
"   '(\"x86_64-linux\")\n"
"   #:extra-version \"macbook41\"\n"
"   #:extra-options %macbook41-config-options))\n"
msgstr ""
"(define-public linux-libre-macbook41\n"
"  ;; XXX: Acesso ao procedimento interno 'make-linux-libre*', que é\n"
"  ;; privado e não exportado, e que pode mudar no futuro.\n"
"  ((@@@@ (gnu packages linux) make-linux-libre*)\n"
"   (@@@@ (gnu packages linux) linux-libre-version)\n"
"   (@@@@ (gnu packages linux) linux-libre-gnu-revision)\n"
"   (@@@@ (gnu packages linux) linux-libre-source)\n"
"   '(\"x86_64-linux\")\n"
"   #:extra-version \"macbook41\"\n"
"   #:extra-options %macbook41-config-options))\n"

msgid "In the above example @code{%file-systems} is a collection of flags enabling different file system support, @code{%efi-support} enables EFI support and @code{%emulation} enables a x86_64-linux machine to act in 32-bit mode also.  The @code{default-extra-linux-options} procedure is the one defined above, which had to be used to avoid losing the default configuration options of the @code{extra-options} keyword."
msgstr "No exemplo acima, @code{%file-systems} é uma coleção de sinalizadores que habilitam suporte a diferentes sistemas de arquivos, @code{%efi-support} habilita suporte a EFI e @code{%emulation} habilita uma máquina x86_64-linux para atuar no modo de 32 bits também. O procedimento @code{default-extra-linux-options} é o definido acima, que teve que ser usado para evitar a perda das opções de configuração padrão da palavra-chave @code{extra-options}."

msgid "This all sounds like it should be doable, but how does one even know which modules are required for a particular system? Two places that can be helpful in trying to answer this question is the @uref{https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Kernel, Gentoo Handbook} and the @uref{https://www.kernel.org/doc/html/latest/admin-guide/README.html?highlight=localmodconfig, documentation from the kernel itself}.  From the kernel documentation, it seems that @code{make localmodconfig} is the command we want."
msgstr "Tudo isso parece viável, mas como saber quais módulos são necessários para um sistema específico? Dois lugares que podem ser úteis para tentar responder a esta pergunta são o @uref{https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Kernel, Gentoo Handbook} e o @uref{https://www .kernel.org/doc/html/latest/admin-guide/README.html?highlight=localmodconfig, documentação do próprio kernel}. Pela documentação do kernel, parece que @code{make localmodconfig} é o comando que queremos."

msgid "In order to actually run @code{make localmodconfig} we first need to get and unpack the kernel source code:"
msgstr "Para realmente executar @code{make localmodconfig} primeiro precisamos obter e descompactar o código-fonte do kernel:"

msgid "tar xf $(guix build linux-libre --source)\n"
msgstr "tar xf $(guix build linux-libre --source)\n"

msgid "Once inside the directory containing the source code run @code{touch .config} to create an initial, empty @file{.config} to start with.  @code{make localmodconfig} works by seeing what you already have in @file{.config} and letting you know what you're missing.  If the file is blank then you're missing everything.  The next step is to run:"
msgstr "Uma vez dentro do diretório que contém o código-fonte, execute @code{touch .config} para criar um @file{.config} inicial e vazio para começar. @code{make localmodconfig} funciona vendo o que você já tem em @file{.config} e informando o que está faltando. Se o arquivo estiver em branco, você está perdendo tudo. O próximo passo é executar:"

msgid "guix shell -D linux-libre -- make localmodconfig\n"
msgstr "guix shell -D linux-libre -- make localmodconfig\n"

msgid "and note the output.  Do note that the @file{.config} file is still empty.  The output generally contains two types of warnings.  The first start with \"WARNING\" and can actually be ignored in our case.  The second read:"
msgstr "e observe a saída. Observe que o arquivo @file{.config} ainda está vazio. A saída geralmente contém dois tipos de avisos. O primeiro começa com \"WARNING\" e pode ser ignorado no nosso caso. A segunda leitura:"

msgid "module pcspkr did not have configs CONFIG_INPUT_PCSPKR\n"
msgstr "module pcspkr did not have configs CONFIG_INPUT_PCSPKR\n"

msgid "For each of these lines, copy the @code{CONFIG_XXXX_XXXX} portion into the @file{.config} in the directory, and append @code{=m}, so in the end it looks like this:"
msgstr "Para cada uma dessas linhas, copie a parte @code{CONFIG_XXXX_XXXX} para @file{.config} no diretório e anexe @code{=m}, para que no final fique assim:"

msgid ""
"CONFIG_INPUT_PCSPKR=m\n"
"CONFIG_VIRTIO=m\n"
msgstr ""
"CONFIG_INPUT_PCSPKR=m\n"
"CONFIG_VIRTIO=m\n"

msgid "After copying all the configuration options, run @code{make localmodconfig} again to make sure that you don't have any output starting with ``module''.  After all of these machine specific modules there are a couple more left that are also needed.  @code{CONFIG_MODULES} is necessary so that you can build and load modules separately and not have everything built into the kernel.  @code{CONFIG_BLK_DEV_SD} is required for reading from hard drives.  It is possible that there are other modules which you will need."
msgstr "Após copiar todas as opções de configuração, execute @code{make localmodconfig} novamente para ter certeza de que você não tem nenhuma saída começando com ``module''. Depois de todos esses módulos específicos da máquina, restam mais alguns que também são necessários. @code{CONFIG_MODULES} é necessário para que você possa construir e carregar módulos separadamente e não ter tudo embutido no kernel. @code{CONFIG_BLK_DEV_SD} é necessário para leitura de discos rígidos. É possível que existam outros módulos dos quais você precisará."

msgid "This post does not aim to be a guide to configuring your own kernel however, so if you do decide to build a custom kernel you'll have to seek out other guides to create a kernel which is just right for your needs."
msgstr "Este post não pretende ser um guia para configurar seu próprio kernel, portanto, se você decidir construir um kernel personalizado, você terá que procurar outros guias para criar um kernel adequado às suas necessidades."

msgid "The second way to setup the kernel configuration makes more use of Guix's features and allows you to share configuration segments between different kernels.  For example, all machines using EFI to boot have a number of EFI configuration flags that they need.  It is likely that all the kernels will share a list of file systems to support.  By using variables it is easier to see at a glance what features are enabled and to make sure you don't have features in one kernel but missing in another."
msgstr "A segunda maneira de definir a configuração do kernel faz mais uso dos recursos do Guix e permite compartilhar segmentos de configuração entre diferentes kernels. Por exemplo, todas as máquinas que usam EFI para inicializar possuem vários sinalizadores de configuração EFI necessários. É provável que todos os kernels compartilhem uma lista de sistemas de arquivos para suporte. Ao usar variáveis, é mais fácil ver rapidamente quais recursos estão habilitados e garantir que você não tenha recursos em um kernel, mas ausentes em outro."

msgid "Left undiscussed however, is Guix's initrd and its customization.  It is likely that you'll need to modify the initrd on a machine using a custom kernel, since certain modules which are expected to be built may not be available for inclusion into the initrd."
msgstr "No entanto, não foi discutido o initrd do Guix e sua personalização. É provável que você precise modificar o initrd em uma máquina usando um kernel customizado, já que certos módulos que devem ser compilados podem não estar disponíveis para inclusão no initrd."

msgid "Historically, Guix System is centered around an @code{operating-system} structure.  This structure contains various fields ranging from the bootloader and kernel declaration to the services to install."
msgstr "Historicamente, o Sistema Guix é centrado em uma estrutura @code{operating-system}. Esta estrutura contém vários campos que vão desde o gerenciador de boot e a declaração do kernel até os serviços a serem instalados."

msgid "Depending on the target machine, that can go from a standard @code{x86_64} machine to a small ARM single board computer such as the Pine64, the image constraints can vary a lot.  The hardware manufacturers will impose different image formats with various partition sizes and offsets."
msgstr "Dependendo da máquina de destino, que pode ir de uma máquina @code{x86_64} padrão a um pequeno computador de placa única ARM, como o Pine64, as restrições de imagem podem variar muito. Os fabricantes de hardware imporão diferentes formatos de imagem com vários tamanhos de partição e deslocamentos."

msgid "To create images suitable for all those machines, a new abstraction is necessary: that's the goal of the @code{image} record.  This record contains all the required information to be transformed into a standalone image, that can be directly booted on any target machine."
msgstr "Para criar imagens adequadas para todas essas máquinas, é necessária uma nova abstração: esse é o objetivo do registro @code{image}. Este registro contém todas as informações necessárias para ser transformada em uma imagem autônoma, que pode ser inicializada diretamente em qualquer máquina de destino."

msgid ""
"(define-record-type* <image>\n"
"  image make-image\n"
"  image?\n"
"  (name               image-name ;symbol\n"
"                      (default #f))\n"
"  (format             image-format) ;symbol\n"
"  (target             image-target\n"
"                      (default #f))\n"
"  (size               image-size  ;size in bytes as integer\n"
"                      (default 'guess))\n"
"  (operating-system   image-operating-system  ;<operating-system>\n"
"                      (default #f))\n"
"  (partitions         image-partitions ;list of <partition>\n"
"                      (default '()))\n"
"  (compression?       image-compression? ;boolean\n"
"                      (default #t))\n"
"  (volatile-root?     image-volatile-root? ;boolean\n"
"                      (default #t))\n"
"  (substitutable?     image-substitutable? ;boolean\n"
"                      (default #t)))\n"
msgstr ""
"(define-record-type* <image>\n"
"  image make-image\n"
"  image?\n"
"  (name               image-name ;symbol\n"
"                      (default #f))\n"
"  (format             image-format) ;symbol\n"
"  (target             image-target\n"
"                      (default #f))\n"
"  (size               image-size  ;size in bytes as integer\n"
"                      (default 'guess))\n"
"  (operating-system   image-operating-system  ;<operating-system>\n"
"                      (default #f))\n"
"  (partitions         image-partitions ;list of <partition>\n"
"                      (default '()))\n"
"  (compression?       image-compression? ;boolean\n"
"                      (default #t))\n"
"  (volatile-root?     image-volatile-root? ;boolean\n"
"                      (default #t))\n"
"  (substitutable?     image-substitutable? ;boolean\n"
"                      (default #t)))\n"

msgid "This record contains the operating-system to instantiate. The @code{format} field defines the image type and can be @code{efi-raw}, @code{qcow2} or @code{iso9660} for instance. In the future, it could be extended to @code{docker} or other image types."
msgstr "Este registro contém o sistema operacional a ser instanciado. O campo @code{format} define o tipo de imagem e pode ser @code{efi-raw}, @code{qcow2} ou @code{iso9660} por exemplo. No futuro, poderá ser estendido para @code{docker} ou outros tipos de imagem."

msgid "A new directory in the Guix sources is dedicated to images definition. For now there are four files:"
msgstr "Um novo diretório nas fontes do Guix é dedicado à definição de imagens. Por enquanto existem quatro arquivos:"

msgid "gnu/system/images/hurd.scm"
msgstr "gnu/system/images/hurd.scm"

msgid "gnu/system/images/pine64.scm"
msgstr "gnu/system/images/pine64.scm"

msgid "gnu/system/images/novena.scm"
msgstr "gnu/system/images/novena.scm"

msgid "gnu/system/images/pinebook-pro.scm"
msgstr "gnu/system/images/pinebook-pro.scm"

msgid "Let's have a look to @file{pine64.scm}. It contains the @code{pine64-barebones-os} variable which is a minimal definition of an operating-system dedicated to the @b{Pine A64 LTS} board."
msgstr "Vamos dar uma olhada em @file{pine64.scm}. Ele contém a variável @code{pine64-barebones-os} que é uma definição mínima de um sistema operacional dedicado à placa @b{Pine A64 LTS}."

msgid ""
"(define pine64-barebones-os\n"
"  (operating-system\n"
"   (host-name \"vignemale\")\n"
"   (timezone \"Europe/Paris\")\n"
"   (locale \"en_US.utf8\")\n"
"   (bootloader (bootloader-configuration\n"
"                (bootloader u-boot-pine64-lts-bootloader)\n"
"                (targets '(\"/dev/vda\"))))\n"
"   (initrd-modules '())\n"
"   (kernel linux-libre-arm64-generic)\n"
"   (file-systems (cons (file-system\n"
"                        (device (file-system-label \"my-root\"))\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                       %base-file-systems))\n"
"   (services (cons (service agetty-service-type\n"
"                            (agetty-configuration\n"
"                             (extra-options '(\"-L\")) ; no carrier detect\n"
"                             (baud-rate \"115200\")\n"
"                             (term \"vt100\")\n"
"                             (tty \"ttyS0\")))\n"
"                   %base-services))))\n"
msgstr ""
"(define pine64-barebones-os\n"
"  (operating-system\n"
"   (host-name \"vignemale\")\n"
"   (timezone \"Europe/Paris\")\n"
"   (locale \"en_US.utf8\")\n"
"   (bootloader (bootloader-configuration\n"
"                (bootloader u-boot-pine64-lts-bootloader)\n"
"                (targets '(\"/dev/vda\"))))\n"
"   (initrd-modules '())\n"
"   (kernel linux-libre-arm64-generic)\n"
"   (file-systems (cons (file-system\n"
"                        (device (file-system-label \"my-root\"))\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                       %base-file-systems))\n"
"   (services (cons (service agetty-service-type\n"
"                            (agetty-configuration\n"
"                             (extra-options '(\"-L\")) ; sem detecção de portadora\n"
"                             (baud-rate \"115200\")\n"
"                             (term \"vt100\")\n"
"                             (tty \"ttyS0\")))\n"
"                   %base-services))))\n"

msgid "The @code{kernel} and @code{bootloader} fields are pointing to packages dedicated to this board."
msgstr "Os campos @code{kernel} e @code{bootloader} apontam para pacotes dedicados a esta placa."

msgid "Right below, the @code{pine64-image-type} variable is also defined."
msgstr "Logo abaixo, a variável @code{pine64-image-type} também está definida."

msgid ""
"(define pine64-image-type\n"
"  (image-type\n"
"   (name 'pine64-raw)\n"
"   (constructor (cut image-with-os arm64-disk-image <>))))\n"
msgstr ""
"(define pine64-image-type\n"
"  (image-type\n"
"   (name 'pine64-raw)\n"
"   (constructor (cut image-with-os arm64-disk-image <>))))\n"

msgid "It's using a record we haven't talked about yet, the @code{image-type} record, defined this way:"
msgstr "Ele está usando um registro do qual ainda não falamos, o registro @code{image-type}, definido desta forma:"

msgid ""
"(define-record-type* <image-type>\n"
"  image-type make-image-type\n"
"  image-type?\n"
"  (name           image-type-name) ;symbol\n"
"  (constructor    image-type-constructor)) ;<operating-system> -> <image>\n"
msgstr ""
"(define-record-type* <image-type>\n"
"  image-type make-image-type\n"
"  image-type?\n"
"  (name           image-type-name) ;symbol\n"
"  (constructor    image-type-constructor)) ;<operating-system> -> <image>\n"

msgid "The main purpose of this record is to associate a name to a procedure transforming an @code{operating-system} to an image.  To understand why it is necessary, let's have a look to the command producing an image from an @code{operating-system} configuration file:"
msgstr "O objetivo principal deste registro é associar um nome a um procedimento que transforma um @código{operating-system} em uma imagem. Para entender por que isso é necessário, vamos dar uma olhada no comando que produz uma imagem de um arquivo de configuração @code{operating-system}:"

msgid "guix system image my-os.scm\n"
msgstr "guix system image my-os.scm\n"

msgid "This command expects an @code{operating-system} configuration but how should we indicate that we want an image targeting a Pine64 board? We need to provide an extra information, the @code{image-type}, by passing the @code{--image-type} or @code{-t} flag, this way:"
msgstr "Este comando espera uma configuração @code{operating-system} mas como devemos indicar que queremos uma imagem direcionada a uma placa Pine64? Precisamos fornecer uma informação extra, o @code{image-type}, passando o sinalizador @code{--image-type} ou @code{-t}, desta forma:"

msgid "guix system image --image-type=pine64-raw my-os.scm\n"
msgstr "guix system image --image-type=pine64-raw my-os.scm\n"

msgid "This @code{image-type} parameter points to the @code{pine64-image-type} defined above. Hence, the @code{operating-system} declared in @code{my-os.scm} will be applied the @code{(cut image-with-os arm64-disk-image <>)} procedure to turn it into an image."
msgstr "Este parâmetro @code{image-type} aponta para o @code{pine64-image-type} definido acima. Portanto, ao @code{operating-system} declarado em @code{my-os.scm} será aplicado o procedimento @code{(cut image-with-os arm64-disk-image <>)} para transformá-lo em um imagem."

msgid "The resulting image looks like:"
msgstr "A imagem resultante se parece com:"

msgid ""
"(image\n"
" (format 'disk-image)\n"
" (target \"aarch64-linux-gnu\")\n"
" (operating-system my-os)\n"
" (partitions\n"
"  (list (partition\n"
"         (inherit root-partition)\n"
"         (offset root-offset)))))\n"
msgstr ""
"(image\n"
" (format 'disk-image)\n"
" (target \"aarch64-linux-gnu\")\n"
" (operating-system my-os)\n"
" (partitions\n"
"  (list (partition\n"
"         (inherit root-partition)\n"
"         (offset root-offset)))))\n"

msgid "which is the aggregation of the @code{operating-system} defined in @code{my-os.scm} to the @code{arm64-disk-image} record."
msgstr "que é a agregação do @code{operating-system} definido em @code{my-os.scm} ao registro @code{arm64-disk-image}."

msgid "But enough Scheme madness. What does this image API bring to the Guix user?"
msgstr "Mas chega de loucura do Scheme. O que essa API de imagem traz para o usuário do Guix?"

msgid "One can run:"
msgstr "Pode-se executar:"

msgid ""
"mathieu@@cervin:~$ guix system --list-image-types\n"
"The available image types are:\n"
"\n"
msgstr ""
"mathieu@@cervin:~$ guix system --list-image-types\n"
"Os tipos de imagem disponíveis são:\n"
"\n"

msgid ""
"   - unmatched-raw\n"
"   - rock64-raw\n"
"   - pinebook-pro-raw\n"
"   - pine64-raw\n"
"   - novena-raw\n"
"   - hurd-raw\n"
"   - hurd-qcow2\n"
"   - qcow2\n"
"   - iso9660\n"
"   - uncompressed-iso9660\n"
"   - tarball\n"
"   - efi-raw\n"
"   - mbr-raw\n"
"   - docker\n"
"   - wsl2\n"
"   - raw-with-offset\n"
"   - efi32-raw\n"
msgstr ""
"   - unmatched-raw\n"
"   - rock64-raw\n"
"   - pinebook-pro-raw\n"
"   - pine64-raw\n"
"   - novena-raw\n"
"   - hurd-raw\n"
"   - hurd-qcow2\n"
"   - qcow2\n"
"   - iso9660\n"
"   - uncompressed-iso9660\n"
"   - tarball\n"
"   - efi-raw\n"
"   - mbr-raw\n"
"   - docker\n"
"   - wsl2\n"
"   - raw-with-offset\n"
"   - efi32-raw\n"

msgid "and by writing an @code{operating-system} file based on @code{pine64-barebones-os}, you can customize your image to your preferences in a file (@file{my-pine-os.scm}) like this:"
msgstr "e escrevendo um arquivo @code{operating-system} baseado em @code{pine64-barebones-os}, você pode personalizar sua imagem de acordo com suas preferências em um arquivo (@file{my-pine-os.scm}) como este :"

msgid ""
"(use-modules (gnu services linux)\n"
"             (gnu system images pine64))\n"
"\n"
msgstr ""
"(use-modules (gnu services linux)\n"
"             (gnu system images pine64))\n"
"\n"

msgid ""
"(let ((base-os pine64-barebones-os))\n"
"  (operating-system\n"
"    (inherit base-os)\n"
"    (timezone \"America/Indiana/Indianapolis\")\n"
"    (services\n"
"     (cons\n"
"      (service earlyoom-service-type\n"
"               (earlyoom-configuration\n"
"                (prefer-regexp \"icecat|chromium\")))\n"
"      (operating-system-user-services base-os)))))\n"
msgstr ""
"(let ((base-os pine64-barebones-os))\n"
"  (operating-system\n"
"    (inherit base-os)\n"
"    (timezone \"America/Indiana/Indianapolis\")\n"
"    (services\n"
"     (cons\n"
"      (service earlyoom-service-type\n"
"               (earlyoom-configuration\n"
"                (prefer-regexp \"icecat|chromium\")))\n"
"      (operating-system-user-services base-os)))))\n"

msgid "run:"
msgstr "execute:"

msgid "guix system image --image-type=pine64-raw my-pine-os.scm\n"
msgstr "guix system image --image-type=pine64-raw my-pine-os.scm\n"

msgid "or,"
msgstr "ou,"

msgid "guix system image --image-type=hurd-raw my-hurd-os.scm\n"
msgstr "guix system image --image-type=hurd-raw my-hurd-os.scm\n"

msgid "to get an image that can be written directly to a hard drive and booted from."
msgstr "para obter uma imagem que pode ser gravada diretamente em um disco rígido e inicializada."

msgid "Without changing anything to @code{my-hurd-os.scm}, calling:"
msgstr "Sem alterar nada em @code{my-hurd-os.scm}, chamando:"

msgid "guix system image --image-type=hurd-qcow2 my-hurd-os.scm\n"
msgstr "guix system image --image-type=hurd-qcow2 my-hurd-os.scm\n"

msgid "will instead produce a Hurd QEMU image."
msgstr "em vez disso, produzirá uma imagem Hurd QEMU."

msgid "2FA, two-factor authentication"
msgstr "2FA, autenticação de dois fatores"

msgid "U2F, Universal 2nd Factor"
msgstr "U2F, 2º Fator Universal"

msgid "security key, configuration"
msgstr "chave de segurança, configuração"

msgid "The use of security keys can improve your security by providing a second authentication source that cannot be easily stolen or copied, at least for a remote adversary (something that you have), to the main secret (a passphrase -- something that you know), reducing the risk of impersonation."
msgstr "O uso de chaves de segurança pode melhorar sua segurança, fornecendo uma segunda fonte de autenticação que não pode ser facilmente roubada ou copiada, pelo menos para um adversário remoto (algo que você possui), para o segredo principal (uma senha - algo que você conhece). , reduzindo o risco de falsificação de identidade."

msgid "The example configuration detailed below showcases what minimal configuration needs to be made on your Guix System to allow the use of a Yubico security key.  It is hoped the configuration can be useful for other security keys as well, with minor adjustments."
msgstr "O exemplo de configuração detalhado abaixo mostra qual configuração mínima precisa ser feita em seu sistema Guix para permitir o uso de uma chave de segurança Yubico. Espera-se que a configuração também possa ser útil para outras chaves de segurança, com pequenos ajustes."

msgid "Configuration for use as a two-factor authenticator (2FA)"
msgstr "Configuração para uso como autenticador de dois fatores (2FA)"

msgid "To be usable, the udev rules of the system should be extended with key-specific rules.  The following shows how to extend your udev rules with the @file{lib/udev/rules.d/70-u2f.rules} udev rule file provided by the @code{libfido2} package from the @code{(gnu packages security-token)} module and add your user to the @samp{\"plugdev\"} group it uses:"
msgstr "Para serem utilizáveis, as regras do udev do sistema devem ser estendidas com regras específicas de chave. O seguinte mostra como estender suas regras do udev com o arquivo de regras do udev @file{lib/udev/rules.d/70-u2f.rules} fornecido pelo pacote @code{libfido2} do @code{(gnu packages security- token)} e adicione seu usuário ao grupo @samp{\"plugdev\"} que ele usa:"

msgid ""
"(use-package-modules ... security-token ...)\n"
"...\n"
"(operating-system\n"
" ...\n"
" (users (cons* (user-account\n"
"               (name \"your-user\")\n"
"               (group \"users\")\n"
"               (supplementary-groups\n"
"\t\t'(\"wheel\" \"netdev\" \"audio\" \"video\"\n"
"                  \"plugdev\"))           ;<- added system group\n"
"               (home-directory \"/home/your-user\"))\n"
"              %base-user-accounts))\n"
" ...\n"
" (services\n"
"  (cons*\n"
"   ...\n"
"   (udev-rules-service 'fido2 libfido2 #:groups '(\"plugdev\")))))\n"
msgstr ""
"(use-package-modules ... security-token ...)\n"
"...\n"
"(operating-system\n"
" ...\n"
" (users (cons* (user-account\n"
"               (name \"your-user\")\n"
"               (group \"users\")\n"
"               (supplementary-groups\n"
"\t\t'(\"wheel\" \"netdev\" \"audio\" \"video\"\n"
"                  \"plugdev\"))           ;<- grupo de sistema adicionado\n"
"               (home-directory \"/home/your-user\"))\n"
"              %base-user-accounts))\n"
" ...\n"
" (services\n"
"  (cons*\n"
"   ...\n"
"   (udev-rules-service 'fido2 libfido2 #:groups '(\"plugdev\")))))\n"

msgid "After re-configuring your system and re-logging in your graphical session so that the new group is in effect for your user, you can verify that your key is usable by launching:"
msgstr "Depois de reconfigurar seu sistema e fazer login novamente em sua sessão gráfica para que o novo grupo esteja em vigor para seu usuário, você pode verificar se sua chave pode ser usada iniciando:"

msgid "guix shell ungoogled-chromium -- chromium chrome://settings/securityKeys\n"
msgstr "guix shell ungoogled-chromium -- chromium chrome://settings/securityKeys\n"

msgid "and validating that the security key can be reset via the ``Reset your security key'' menu.  If it works, congratulations, your security key is ready to be used with applications supporting two-factor authentication (2FA)."
msgstr "e validar que a chave de segurança pode ser redefinida através do menu ``Redefinir sua chave de segurança''. Se funcionar, parabéns, sua chave de segurança está pronta para ser usada com aplicativos que suportam autenticação de dois fatores (2FA)."

msgid "Disabling OTP code generation for a Yubikey"
msgstr "Desativando a geração de código OTP para um Yubikey"

msgid "disabling yubikey OTP"
msgstr "desabilitando o yubikey OTP"

msgid "If you use a Yubikey security key and are irritated by the spurious OTP codes it generates when inadvertently touching the key (e.g. causing you to become a spammer in the @samp{#guix} channel when discussing from your favorite IRC client!), you can disable it via the following @command{ykman} command:"
msgstr "Se você usa uma chave de segurança Yubikey e fica irritado com os códigos OTP falsos que ela gera ao tocar inadvertidamente na chave (por exemplo, fazendo com que você se torne um spammer no canal @samp{#guix} ao discutir sobre seu cliente de IRC favorito!), você pode desativá-lo através do seguinte comando @command{ykman}:"

msgid "guix shell python-yubikey-manager -- ykman config usb --force --disable OTP\n"
msgstr "guix shell python-yubikey-manager -- ykman config usb --force --disable OTP\n"

msgid "Alternatively, you could use the @command{ykman-gui} command provided by the @code{yubikey-manager-qt} package and either wholly disable the @samp{OTP} application for the USB interface or, from the @samp{Applications -> OTP} view, delete the slot 1 configuration, which comes pre-configured with the Yubico OTP application."
msgstr "Alternativamente, você pode usar o comando @command{ykman-gui} fornecido pelo pacote @code{yubikey-manager-qt} e desativar totalmente o aplicativo @samp{OTP} para a interface USB ou, a partir do pacote @samp{Applications -> Visualização OTP}, exclua a configuração do slot 1, que vem pré-configurada com o aplicativo Yubico OTP."

msgid "Requiring a Yubikey to open a KeePassXC database"
msgstr "Exigindo que um Yubikey abra um banco de dados KeePassXC"

msgid "yubikey, keepassxc integration"
msgstr "yubikey, integração com keepassxc"

msgid "The KeePassXC password manager application has support for Yubikeys, but it requires installing a udev rules for your Guix System and some configuration of the Yubico OTP application on the key."
msgstr "O aplicativo gerenciador de senhas KeePassXC tem suporte para Yubikeys, mas requer a instalação de regras udev para seu sistema Guix e algumas configurações do aplicativo Yubico OTP na chave."

msgid "The necessary udev rules file comes from the @code{yubikey-personalization} package, and can be installed like:"
msgstr "O arquivo de regras do udev necessário vem do pacote @code{yubikey-personalization} e pode ser instalado como:"

msgid ""
"(use-package-modules ... security-token ...)\n"
"...\n"
"(operating-system\n"
" ...\n"
" (services\n"
"  (cons*\n"
"   ...\n"
"   (udev-rules-service 'yubikey yubikey-personalization))))\n"
msgstr ""
"(use-package-modules ... security-token ...)\n"
"...\n"
"(operating-system\n"
" ...\n"
" (services\n"
"  (cons*\n"
"   ...\n"
"   (udev-rules-service 'yubikey yubikey-personalization))))\n"

msgid "After reconfiguring your system (and reconnecting your Yubikey), you'll then want to configure the OTP challenge/response application of your Yubikey on its slot 2, which is what KeePassXC uses.  It's easy to do so via the Yubikey Manager graphical configuration tool, which can be invoked with:"
msgstr "Depois de reconfigurar seu sistema (e reconectar seu Yubikey), você desejará configurar o aplicativo de desafio/resposta OTP de seu Yubikey em seu slot 2, que é o que o KeePassXC usa. É fácil fazer isso por meio da ferramenta de configuração gráfica Yubikey Manager, que pode ser invocada com:"

msgid "guix shell yubikey-manager-qt -- ykman-gui\n"
msgstr "guix shell yubikey-manager-qt -- ykman-gui\n"

msgid "First, ensure @samp{OTP} is enabled under the @samp{Interfaces} tab, then navigate to @samp{Applications -> OTP}, and click the @samp{Configure} button under the @samp{Long Touch (Slot 2)} section.  Select @samp{Challenge-response}, input or generate a secret key, and click the @samp{Finish} button.  If you have a second Yubikey you'd like to use as a backup, you should configure it the same way, using the @emph{same} secret key."
msgstr "Primeiro, certifique-se de que @samp{OTP} esteja habilitado na aba @samp{Interfaces}, depois navegue até @samp{Applications -> OTP} e clique no botão @samp{Configure} abaixo de @samp{Long Touch (Slot 2 )} seção. Selecione @samp{Challenge-response}, insira ou gere uma chave secreta e clique no botão @samp{Finish}. Se você tiver um segundo Yubikey que gostaria de usar como backup, você deve configurá-lo da mesma forma, usando a chave secreta @emph{mesma}."

msgid "Your Yubikey should now be detected by KeePassXC.  It can be added to a database by navigating to KeePassXC's @samp{Database -> Database Security...} menu, then clicking the @samp{Add additional protection...} button, then @samp{Add Challenge-Response}, selecting the security key from the drop-down menu and clicking the @samp{OK} button to complete the setup."
msgstr "Seu Yubikey agora deve ser detectado pelo KeePassXC. Ele pode ser adicionado a um banco de dados navegando até o menu @samp{Database -> Database Security...} do KeePassXC e clicando no botão @samp{Adicionar proteção adicional...} e em @samp{Add Challenge-Response}, selecionando a chave de segurança no menu suspenso e clicando no botão @samp{OK} para concluir a configuração."

msgid "dynamic DNS, DDNS"
msgstr "DNS dinâmico, DDNS"

msgid "If your @acronym{ISP, Internet Service Provider} only provides dynamic IP addresses, it can be useful to setup a dynamic @acronym{DNS, Domain Name System} (also known as @acronym{DDNS, Dynamic DNS}) service to associate a static host name to a public but dynamic (often changing) IP address.  There are multiple existing services that can be used for this; in the following mcron job, @url{https://duckdns.org, DuckDNS} is used.  It should also work with other dynamic DNS services that offer a similar interface to update the IP address, such as @url{https://freedns.afraid.org/}, with minor adjustments."
msgstr "Se o seu @acronym{ISP, Internet Service Provider} fornece apenas endereços IP dinâmicos, pode ser útil configurar um serviço @acronym{DNS, Domain Name System} dinâmico (também conhecido como @acronym{DDNS, Dynamic DNS}) para associar um nome de host estático para um endereço IP público, mas dinâmico. Existem vários serviços que podem ser usados para isso; no job mcron a seguir, @url{https://duckdns.org, DuckDNS} é usado. Também deve funcionar com outros serviços DNS dinâmicos que oferecem uma interface semelhante para atualizar o endereço IP."

msgid "The mcron job is provided below, where @var{DOMAIN} should be substituted for your own domain prefix, and the DuckDNS provided token associated to @var{DOMAIN} added to the @file{/etc/duckdns/@var{DOMAIN}.token} file."
msgstr "O Job mcron é fornecido abaixo, onde @var{DOMAIN} deve ser substituído pelo seu próprio prefixo de domínio, e o token fornecido pelo DuckDNS é associado a @var{DOMAIN} e adicionado ao arquivo @file{/etc/duckdns/@var{DOMAIN} arquivo .token}."

msgid ""
"(define duckdns-job\n"
"  ;; Update personal domain IP every 5 minutes.\n"
"  #~(job '(next-minute (range 0 60 5))\n"
"\t #$(program-file\n"
"            \"duckdns-update\"\n"
"            (with-extensions (list guile-gnutls) ;required by (web client)\n"
"              #~(begin\n"
"                  (use-modules (ice-9 textual-ports)\n"
"                               (web client))\n"
"                  (let ((token (string-trim-both\n"
"                                (call-with-input-file \"/etc/duckdns/@var{DOMAIN}.token\"\n"
"                                  get-string-all)))\n"
"                        (query-template (string-append \"https://www.duckdns.org/\"\n"
"                                                       \"update?domains=@var{DOMAIN}\"\n"
"                                                       \"&token=~a&ip=\")))\n"
"                    (http-get (format #f query-template token))))))\n"
"         \"duckdns-update\"\n"
"         #:user \"nobody\"))\n"
msgstr ""
"(define duckdns-job\n"
"  ;; Atualize o IP do domínio pessoal a cada 5 minutos.\n"
"  #~(job '(next-minute (range 0 60 5))\n"
"\t #$(program-file\n"
"            \"duckdns-update\"\n"
"            (with-extensions (list guile-gnutls) ;required by (web client)\n"
"              #~(begin\n"
"                  (use-modules (ice-9 textual-ports)\n"
"                               (web client))\n"
"                  (let ((token (string-trim-both\n"
"                                (call-with-input-file \"/etc/duckdns/@var{DOMAIN}.token\"\n"
"                                  get-string-all)))\n"
"                        (query-template (string-append \"https://www.duckdns.org/\"\n"
"                                                       \"update?domains=@var{DOMAIN}\"\n"
"                                                       \"&token=~a&ip=\")))\n"
"                    (http-get (format #f query-template token))))))\n"
"         \"duckdns-update\"\n"
"         #:user \"nobody\"))\n"

msgid "The job then needs to be added to the list of mcron jobs for your system, using something like:"
msgstr "O Job então precisa ser adicionado à lista de trabalhos mcron do seu sistema, usando algo como:"

msgid ""
"(operating-system\n"
" (services\n"
"  (cons* (service mcron-service-type\n"
"           (mcron-configuration\n"
"             (jobs (list duckdns-job ...))))\n"
"         ...\n"
"         %base-services)))\n"
msgstr ""
"(operating-system\n"
" (services\n"
"  (cons* (service mcron-service-type\n"
"           (mcron-configuration\n"
"             (jobs (list duckdns-job ...))))\n"
"         ...\n"
"         %base-services)))\n"

msgid "To connect to a Wireguard VPN server you need the kernel module to be loaded in memory and a package providing networking tools that support it (e.g.  @code{wireguard-tools} or @code{network-manager})."
msgstr "Para se conectar a um servidor VPN Wireguard, você precisa que o módulo do kernel esteja carregado na memória e um pacote que forneça ferramentas de rede que o suportem (por exemplo, @code{wireguard-tools} ou @code{network-manager})."

msgid "Here is a configuration example for Linux-Libre < 5.6, where the module is out of tree and need to be loaded manually---following revisions of the kernel have it built-in and so don't need such configuration:"
msgstr "Aqui está um exemplo de configuração para Linux-Libre versão menor que 5.6, onde o módulo está fora da árvore e precisa ser carregado manualmente --- as seguintes revisões do kernel o possuem integrado e, portanto, não precisam de tal configuração:"

msgid ""
"(use-modules (gnu))\n"
"(use-service-modules desktop)\n"
"(use-package-modules vpn)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-service-modules desktop)\n"
"(use-package-modules vpn)\n"
"\n"

msgid ""
"(operating-system\n"
"  ;; …\n"
"  (services (cons (simple-service 'wireguard-module\n"
"                                  kernel-module-loader-service-type\n"
"                                  '(\"wireguard\"))\n"
"                  %desktop-services))\n"
"  (packages (cons wireguard-tools %base-packages))\n"
"  (kernel-loadable-modules (list wireguard-linux-compat)))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (services (cons (simple-service 'wireguard-module\n"
"                                  kernel-module-loader-service-type\n"
"                                  '(\"wireguard\"))\n"
"                  %desktop-services))\n"
"  (packages (cons wireguard-tools %base-packages))\n"
"  (kernel-loadable-modules (list wireguard-linux-compat)))\n"

msgid "After reconfiguring and restarting your system you can either use Wireguard tools or NetworkManager to connect to a VPN server."
msgstr "Após reconfigurar e reiniciar seu sistema, você pode usar as ferramentas Wireguard ou NetworkManager para conectar-se a um servidor VPN."

msgid "Using Wireguard tools"
msgstr "Usando ferramentas Wireguard"

msgid "To test your Wireguard setup it is convenient to use @command{wg-quick}.  Just give it a configuration file @command{wg-quick up ./wg0.conf}; or put that file in @file{/etc/wireguard} and run @command{wg-quick up wg0} instead."
msgstr "Para testar a configuração do Wireguard é conveniente usar @command{wg-quick}. Basta fornecer um arquivo de configuração @command{wg-quick up ./wg0.conf}; ou coloque esse arquivo em @file{/etc/wireguard} e execute @command{wg-quick up wg0}."

msgid "Be warned that the author described this command as a: “[…] very quick and dirty bash script […]”."
msgstr "Esteja avisado que o autor descreveu este comando como um: “[…] script bash muito rápido e sujo […]”."

msgid "Using NetworkManager"
msgstr "Usando o NetworkManager"

msgid "Thanks to NetworkManager support for Wireguard we can connect to our VPN using @command{nmcli} command.  Up to this point this guide assumes that you're using Network Manager service provided by @code{%desktop-services}.  Ortherwise you need to adjust your services list to load @code{network-manager-service-type} and reconfigure your Guix system."
msgstr "Graças ao suporte do NetworkManager para Wireguard, podemos conectar-nos à nossa VPN usando o comando @command{nmcli}. Até este ponto, este guia pressupõe que você esteja usando o serviço Network Manager fornecido por @code{%desktop-services}. Caso contrário, você precisará ajustar sua lista de serviços para carregar @code{network-manager-service-type} e reconfigurar seu sistema Guix."

msgid "To import your VPN configuration execute nmcli import command:"
msgstr "Para importar sua configuração VPN, execute o comando \"nmcli import\":"

msgid ""
"# nmcli connection import type wireguard file wg0.conf\n"
"Connection 'wg0' (edbee261-aa5a-42db-b032-6c7757c60fde) successfully added\n"
msgstr ""
"# nmcli connection import type wireguard file wg0.conf\n"
"Connection 'wg0' (edbee261-aa5a-42db-b032-6c7757c60fde) successfully added\n"

msgid "This will create a configuration file in @file{/etc/NetworkManager/wg0.nmconnection}.  Next connect to the Wireguard server:"
msgstr "Isso criará um arquivo de configuração em @file{/etc/NetworkManager/wg0.nmconnection}. Em seguida, conecte-se ao servidor Wireguard:"

msgid ""
"$ nmcli connection up wg0\n"
"Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/6)\n"
msgstr ""
"$ nmcli connection up wg0\n"
"Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/6)\n"

msgid "By default NetworkManager will connect automatically on system boot.  To change that behaviour you need to edit your config:"
msgstr "Por padrão, o NetworkManager se conectará automaticamente na inicialização do sistema. Para mudar esse comportamento você precisa editar sua configuração:"

msgid "# nmcli connection modify wg0 connection.autoconnect no\n"
msgstr "# nmcli connection modify wg0 connection.autoconnect no\n"

msgid "For more specific information about NetworkManager and wireguard @uref{https://blogs.gnome.org/thaller/2019/03/15/wireguard-in-networkmanager/,see this post by thaller}."
msgstr "Para obter informações mais específicas sobre NetworkManager e wireguard @uref{https://blogs.gnome.org/thaller/2019/03/15/wireguard-in-networkmanager/, consulte este artigo}."

msgid "wm"
msgstr "wm"

msgid "stumpwm"
msgstr "stumpwm"

msgid "You could install StumpWM with a Guix system by adding @code{stumpwm} and optionally @code{`(,stumpwm \"lib\")} packages to a system configuration file, e.g.@: @file{/etc/config.scm}."
msgstr "Você pode instalar o StumpWM com um sistema Guix adicionando pacotes @code{stumpwm} e opcionalmente @code{`(,stumpwm \"lib\")} a um arquivo de configuração do sistema, por exemplo, @file{/etc/config.scm}."

msgid "An example configuration can look like this:"
msgstr "Um exemplo de configuração pode ser assim:"

msgid ""
"(use-modules (gnu))\n"
"(use-package-modules wm)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-package-modules wm)\n"
"\n"

msgid ""
"(operating-system\n"
"  ;; …\n"
"  (packages (append (list sbcl stumpwm `(,stumpwm \"lib\"))\n"
"                    %base-packages)))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (packages (append (list sbcl stumpwm `(,stumpwm \"lib\"))\n"
"                    %base-packages)))\n"

msgid "stumpwm fonts"
msgstr "fontes stumpwm"

msgid "By default StumpWM uses X11 fonts, which could be small or pixelated on your system.  You could fix this by installing StumpWM contrib Lisp module @code{sbcl-ttf-fonts}, adding it to Guix system packages:"
msgstr "Por padrão, o StumpWM usa fontes X11, que podem ser pequenas ou pixeladas em seu sistema. Você pode corrigir isso instalando o módulo StumpWM contrib Lisp @code{sbcl-ttf-fonts}, adicionando-o aos pacotes do sistema Guix:"

msgid ""
"(use-modules (gnu))\n"
"(use-package-modules fonts wm)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-package-modules fonts wm)\n"
"\n"

msgid ""
"(operating-system\n"
"  ;; …\n"
"  (packages (append (list sbcl stumpwm `(,stumpwm \"lib\"))\n"
"                    sbcl-ttf-fonts font-dejavu %base-packages)))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (packages (append (list sbcl stumpwm `(,stumpwm \"lib\"))\n"
"                    sbcl-ttf-fonts font-dejavu %base-packages)))\n"

msgid "Then you need to add the following code to a StumpWM configuration file @file{~/.stumpwm.d/init.lisp}:"
msgstr "Então você precisa adicionar o seguinte código a um arquivo de configuração do StumpWM @file{~/.stumpwm.d/init.lisp}:"

msgid ""
"(require :ttf-fonts)\n"
"(setf xft:*font-dirs* '(\"/run/current-system/profile/share/fonts/\"))\n"
"(setf clx-truetype:+font-cache-filename+ (concat (getenv \"HOME\")\n"
"                                                 \"/.fonts/font-cache.sexp\"))\n"
"(xft:cache-fonts)\n"
"(set-font (make-instance 'xft:font :family \"DejaVu Sans Mono\"\n"
"                                   :subfamily \"Book\" :size 11))\n"
msgstr ""
"(require :ttf-fonts)\n"
"(setf xft:*font-dirs* '(\"/run/current-system/profile/share/fonts/\"))\n"
"(setf clx-truetype:+font-cache-filename+ (concat (getenv \"HOME\")\n"
"                                                 \"/.fonts/font-cache.sexp\"))\n"
"(xft:cache-fonts)\n"
"(set-font (make-instance 'xft:font :family \"DejaVu Sans Mono\"\n"
"                                   :subfamily \"Book\" :size 11))\n"

msgid "sessionlock"
msgstr "bloqueio de sessão"

msgid "Depending on your environment, locking the screen of your session might come built in or it might be something you have to set up yourself. If you use a desktop environment like GNOME or KDE, it's usually built in. If you use a plain window manager like StumpWM or EXWM, you might have to set it up yourself."
msgstr "Dependendo do seu ambiente, o bloqueio da tela da sua sessão pode ser incorporado ou pode ser algo que você mesmo precisa configurar. Se você usa um ambiente de área de trabalho como GNOME ou KDE, ele geralmente está integrado. Se você usa um gerenciador de janelas simples como StumpWM ou EXWM, talvez seja necessário configurá-lo você mesmo."

msgid "If you use Xorg, you can use the utility @uref{https://www.mankier.com/1/xss-lock, xss-lock} to lock the screen of your session.  xss-lock is triggered by DPMS which since Xorg 1.8 is auto-detected and enabled if ACPI is also enabled at kernel runtime."
msgstr "Se você usa Xorg, você pode usar o utilitário @uref{https://www.mankier.com/1/xss-lock, xss-lock} para bloquear a tela da sua sessão. xss-lock é acionado pelo DPMS que, desde o Xorg 1.8, é detectado automaticamente e habilitado se o ACPI também estiver habilitado no tempo de execução do kernel."

msgid "To use xss-lock, you can simple execute it and put it into the background before you start your window manager from e.g. your @file{~/.xsession}:"
msgstr "Para usar o xss-lock, você pode simplesmente executá-lo e colocá-lo em segundo plano antes de iniciar o gerenciador de janelas, por exemplo, seu @file{~/.xsession}:"

msgid ""
"xss-lock -- slock &\n"
"exec stumpwm\n"
msgstr ""
"xss-lock -- slock &\n"
"exec stumpwm\n"

msgid "In this example, xss-lock uses @code{slock} to do the actual locking of the screen when it determines it's appropriate, like when you suspend your device."
msgstr "Neste exemplo, xss-lock usa @code{slock} para fazer o bloqueio real da tela quando determina que é apropriado, como quando você suspende seu dispositivo."

msgid "For slock to be allowed to be a screen locker for the graphical session, it needs to be made setuid-root so it can authenticate users, and it needs a PAM service. This can be achieved by adding the following service to your @file{config.scm}:"
msgstr "Para que o slock possa ser um bloqueador de tela para a sessão gráfica, ele precisa ser definido como setuid-root para poder autenticar usuários e precisa de um serviço PAM. Isso pode ser conseguido adicionando o seguinte serviço ao seu @file{config.scm}:"

msgid ""
"(service screen-locker-service-type\n"
"         (screen-locker-configuration\n"
"          (name \"slock\")\n"
"          (program (file-append slock \"/bin/slock\"))))\n"
msgstr ""
"(service screen-locker-service-type\n"
"         (screen-locker-configuration\n"
"          (name \"slock\")\n"
"          (program (file-append slock \"/bin/slock\"))))\n"

msgid "If you manually lock your screen, e.g. by directly calling slock when you want to lock your screen but not suspend it, it's a good idea to notify xss-lock about this so no confusion occurs. This can be done by executing @code{xset s activate} immediately before you execute slock."
msgstr "Se você bloquear sua tela manualmente, por exemplo, chamando slock diretamente quando quiser bloquear sua tela, mas não suspendê-la, é uma boa ideia notificar xss-lock sobre isso para que não ocorra confusão. Isso pode ser feito executando @code{xset s activate} imediatamente antes de executar o slock."

msgid "linode, Linode"
msgstr "linode, Linode"

msgid "To run Guix on a server hosted by @uref{https://www.linode.com, Linode}, start with a recommended Debian server.  We recommend using the default distro as a way to bootstrap Guix. Create your SSH keys."
msgstr "Para executar o Guix num servidor hospedado por @uref{https://www.linode.com, Linode}, comece com um servidor Debian recomendado. Recomendamos usar a distribuição padrão como forma de inicializar o Guix. Crie suas chaves SSH."

msgid "ssh-keygen\n"
msgstr "ssh-keygen\n"

msgid "Be sure to add your SSH key for easy login to the remote server.  This is trivially done via Linode's graphical interface for adding SSH keys.  Go to your profile and click add SSH Key.  Copy into it the output of:"
msgstr "Certifique-se de adicionar sua chave SSH para facilitar o login no servidor remoto. Isto é feito trivialmente através da interface gráfica do Linode para adicionar chaves SSH. Vá para o seu perfil e clique em adicionar chave SSH. Copie nele a saída de:"

msgid "cat ~/.ssh/<username>_rsa.pub\n"
msgstr "cat ~/.ssh/<username>_rsa.pub\n"

msgid "Power the Linode down."
msgstr "Desligue o Linode."

msgid "In the Linode's Storage tab, resize the Debian disk to be smaller.  30 GB free space is recommended.  Then click \"Add a disk\", and fill out the form with the following:"
msgstr "Na aba Armazenamento do Linode, redimensione o disco Debian para ser menor. Recomenda-se 30 GB de espaço livre. Em seguida, clique em \"Adicionar um disco\" e preencha o formulário com o seguinte:"

msgid "Label: \"Guix\""
msgstr "Label: \"Guix\""

msgid "Filesystem: ext4"
msgstr "Filesystem: ext4"

msgid "Set it to the remaining size"
msgstr "Defina-o para o tamanho restante"

msgid "In the Configurations tab, press \"Edit\" on the default Debian profile.  Under \"Block Device Assignment\" click \"Add a Device\". It should be @file{/dev/sdc} and you can select the \"Guix\" disk. Save Changes."
msgstr "Na aba Configurações, pressione “Editar” no perfil Debian padrão. Em \"Bloquear atribuição de dispositivo\", clique em \"Adicionar um dispositivo\". Deve ser @file{/dev/sdc} e você pode selecionar o disco \"Guix\". Salvar alterações."

msgid "Now \"Add a Configuration\", with the following:"
msgstr "Agora \"Adicionar uma configuração\", com o seguinte:"

msgid "Label: Guix"
msgstr "Etiqueta: Guix"

msgid "Kernel:GRUB 2 (it's at the bottom! This step is @b{IMPORTANT!})"
msgstr "Kernel:GRUB 2 (está na parte inferior! Esta etapa é @b{IMPORTANTE!})"

msgid "Block device assignment:"
msgstr "Bloquear atribuição de dispositivo:"

msgid "@file{/dev/sda}: Guix"
msgstr "@file{/dev/sda}: Guix"

msgid "@file{/dev/sdb}: swap"
msgstr "@file{/dev/sdb}: swap"

msgid "Root device: @file{/dev/sda}"
msgstr "Dispositivo raiz: @file{/dev/sda}"

msgid "Turn off all the filesystem/boot helpers"
msgstr "Desligue todos os auxiliares de sistema de arquivos/inicialização"

msgid "Now power it back up, booting with the Debian configuration.  Once it's running, ssh to your server via @code{ssh root@@@var{<your-server-IP-here>}}. (You can find your server IP address in your Linode Summary section.) Now you can run the \"install guix from @pxref{Binary Installation,,, guix, GNU Guix}\" steps:"
msgstr "Agora ligue-o novamente, inicializando com a configuração do Debian. Quando estiver em execução, faça ssh para o seu servidor via @code{ssh root@@@var{<your-server-IP-here>}}. (Você pode encontrar o endereço IP do seu servidor na seção Resumo do Linode.) Agora você pode executar as etapas \"instalar o guix de @pxref{Instalação de binários,,, guix.pt_BR, GNU Guix}\":"

msgid ""
"sudo apt-get install gpg\n"
"wget https://sv.gnu.org/people/viewgpg.php?user_id=15145 -qO - | gpg --import -\n"
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"
msgstr ""
"sudo apt-get install gpg\n"
"wget https://sv.gnu.org/people/viewgpg.php?user_id=15145 -qO - | gpg --import -\n"
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"

msgid "Now it's time to write out a config for the server.  The key information is below. Save the resulting file as @file{guix-config.scm}."
msgstr "Agora é hora de escrever uma configuração para o servidor. As principais informações estão abaixo. Salve o arquivo resultante como @file{guix-config.scm}."

msgid ""
"(use-modules (gnu)\n"
"             (guix modules))\n"
"(use-service-modules networking\n"
"                     ssh)\n"
"(use-package-modules admin\n"
"                     package-management\n"
"                     ssh\n"
"                     tls)\n"
"\n"
msgstr ""
"(use-modules (gnu)\n"
"             (guix modules))\n"
"(use-service-modules networking\n"
"                     ssh)\n"
"(use-package-modules admin\n"
"                     package-management\n"
"                     ssh\n"
"                     tls)\n"
"\n"

msgid ""
"(operating-system\n"
"  (host-name \"my-server\")\n"
"  (timezone \"America/New_York\")\n"
"  (locale \"en_US.UTF-8\")\n"
"  ;; This goofy code will generate the grub.cfg\n"
"  ;; without installing the grub bootloader on disk.\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader\n"
"                (bootloader\n"
"                 (inherit grub-bootloader)\n"
"                 (installer #~(const #true))))))\n"
"  (file-systems (cons (file-system\n"
"                        (device \"/dev/sda\")\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                      %base-file-systems))\n"
"\n"
msgstr ""
"(operating-system\n"
"  (host-name \"my-server\")\n"
"  (timezone \"America/New_York\")\n"
"  (locale \"en_US.UTF-8\")\n"
"  ;; Este código bobo irá gerar o grub.cfg\n"
"  ;; sem instalar o bootloader grub no disco.\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader\n"
"                (bootloader\n"
"                 (inherit grub-bootloader)\n"
"                 (installer #~(const #true))))))\n"
"  (file-systems (cons (file-system\n"
"                        (device \"/dev/sda\")\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                      %base-file-systems))\n"
"\n"

msgid ""
"  (swap-devices (list \"/dev/sdb\"))\n"
"\n"
msgstr ""
"  (swap-devices (list \"/dev/sdb\"))\n"
"\n"

msgid ""
"  (initrd-modules (cons \"virtio_scsi\"    ; Needed to find the disk\n"
"                        %base-initrd-modules))\n"
"\n"
msgstr ""
"  (initrd-modules (cons \"virtio_scsi\" ; Necessário para encontrar o disco\n"
"                        %base-initrd-modules))\n"
"\n"

msgid ""
"  (users (cons (user-account\n"
"                (name \"janedoe\")\n"
"                (group \"users\")\n"
"                ;; Adding the account to the \"wheel\" group\n"
"                ;; makes it a sudoer.\n"
"                (supplementary-groups '(\"wheel\"))\n"
"                (home-directory \"/home/janedoe\"))\n"
"               %base-user-accounts))\n"
"\n"
msgstr ""
"  (users (cons (user-account\n"
"                (name \"janedoe\")\n"
"                (group \"users\")\n"
"                ;; Adicionando a conta ao grupo \"wheel\"\n"
"                ;; o torna um super-usuário\n"
"                (supplementary-groups '(\"wheel\"))\n"
"                (home-directory \"/home/janedoe\"))\n"
"               %base-user-accounts))\n"
"\n"

msgid ""
"  (packages (cons* openssh-sans-x\n"
"                   %base-packages))\n"
"\n"
msgstr ""
"  (packages (cons* openssh-sans-x\n"
"                   %base-packages))\n"
"\n"

msgid ""
"  (services (cons*\n"
"             (service dhcp-client-service-type)\n"
"             (service openssh-service-type\n"
"                      (openssh-configuration\n"
"                       (openssh openssh-sans-x)\n"
"                       (password-authentication? #false)\n"
"                       (authorized-keys\n"
"                        `((\"janedoe\" ,(local-file \"janedoe_rsa.pub\"))\n"
"                          (\"root\" ,(local-file \"janedoe_rsa.pub\"))))))\n"
"             %base-services)))\n"
msgstr ""
"  (services (cons*\n"
"             (service dhcp-client-service-type)\n"
"             (service openssh-service-type\n"
"                      (openssh-configuration\n"
"                       (openssh openssh-sans-x)\n"
"                       (password-authentication? #false)\n"
"                       (authorized-keys\n"
"                        `((\"janedoe\" ,(local-file \"janedoe_rsa.pub\"))\n"
"                          (\"root\" ,(local-file \"janedoe_rsa.pub\"))))))\n"
"             %base-services)))\n"

msgid "Replace the following fields in the above configuration:"
msgstr "Substitua os seguintes campos na configuração acima:"

msgid ""
"(host-name \"my-server\")       ; replace with your server name\n"
"; if you chose a linode server outside the U.S., then\n"
"; use tzselect to find a correct timezone string\n"
"(timezone \"America/New_York\") ; if needed replace timezone\n"
"(name \"janedoe\")              ; replace with your username\n"
"(\"janedoe\" ,(local-file \"janedoe_rsa.pub\")) ; replace with your ssh key\n"
"(\"root\" ,(local-file \"janedoe_rsa.pub\")) ; replace with your ssh key\n"
msgstr ""
"(host-name \"my-server\"); substitua pelo nome do seu servidor\n"
"; se você escolheu um servidor linode fora dos EUA, então\n"
"; use tzselect para encontrar uma string de fuso horário correta\n"
"(timezone \"America/New_York\"); se necessário, substitua o fuso horário\n"
"(name \"janedoe\"); substitua pelo seu nome de usuário\n"
"(\"janedoe\" ,(local-file \"janedoe_rsa.pub\")) ; substitua pela sua chave ssh\n"
"(\"root\" ,(local-file \"janedoe_rsa.pub\")) ; substitua pela sua chave ssh\n"

msgid "The last line in the above example lets you log into the server as root and set the initial root password (see the note at the end of this recipe about root login).  After you have done this, you may delete that line from your configuration and reconfigure to prevent root login."
msgstr "A última linha no exemplo acima permite que você faça login no servidor como root e defina a senha root inicial (veja a nota no final desta receita sobre login root). Depois de fazer isso, você pode excluir essa linha da sua configuração e reconfigurar para evitar o login root."

msgid "Copy your ssh public key (eg: @file{~/.ssh/id_rsa.pub}) as @file{@var{<your-username-here>}_rsa.pub} and put @file{guix-config.scm} in the same directory.  In a new terminal run these commands."
msgstr "Copie sua chave pública ssh (por exemplo: @file{~/.ssh/id_rsa.pub}) como @file{@var{<seu-nome-de-usuário-aqui>}_rsa.pub} e coloque @file{guix-config.scm } no mesmo diretório. Em um novo terminal execute estes comandos."

msgid ""
"sftp root@@<remote server ip address>\n"
"put /path/to/files/<username>_rsa.pub .\n"
"put /path/to/files/guix-config.scm .\n"
msgstr ""
"sftp root@@<endereço IP do servidor remoto>\n"
"put /caminho/para/arquivos/<nome de usuário>_rsa.pub .\n"
"put /caminho/para/arquivos/guix-config.scm .\n"

msgid "In your first terminal, mount the guix drive:"
msgstr "No seu primeiro terminal, monte o drive guix:"

msgid ""
"mkdir /mnt/guix\n"
"mount /dev/sdc /mnt/guix\n"
msgstr ""
"mkdir /mnt/guix\n"
"mount /dev/sdc /mnt/guix\n"

msgid "Due to the way we set up the bootloader section of the guix-config.scm, only the grub configuration file will be installed.  So, we need to copy over some of the other GRUB stuff already installed on the Debian system:"
msgstr "Devido à forma como configuramos a seção bootloader do guix-config.scm, apenas o arquivo de configuração grub será instalado. Então, precisamos copiar algumas das outras coisas do GRUB já instaladas no sistema Debian:"

msgid ""
"mkdir -p /mnt/guix/boot/grub\n"
"cp -r /boot/grub/* /mnt/guix/boot/grub/\n"
msgstr ""
"mkdir -p /mnt/guix/boot/grub\n"
"cp -r /boot/grub/* /mnt/guix/boot/grub/\n"

msgid "Now initialize the Guix installation:"
msgstr "Agora inicialize a instalação do Guix:"

msgid "guix system init guix-config.scm /mnt/guix\n"
msgstr "guix system init guix-config.scm /mnt/guix\n"

msgid "Ok, power it down! Now from the Linode console, select boot and select \"Guix\"."
msgstr "Ok, desligue-o! Agora, no console Linode, selecione boot e selecione \"Guix\"."

msgid "Once it boots, you should be able to log in via SSH! (The server config will have changed though.)  You may encounter an error like:"
msgstr "Depois de inicializar, você poderá fazer login via SSH! (A configuração do servidor terá mudado.) Você pode encontrar um erro como:"

msgid ""
"$ ssh root@@<server ip address>\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
"Someone could be eavesdropping on you right now (man-in-the-middle attack)!\n"
"It is also possible that a host key has just been changed.\n"
"The fingerprint for the ECDSA key sent by the remote host is\n"
"SHA256:0B+wp33w57AnKQuHCvQP0+ZdKaqYrI/kyU7CfVbS7R4.\n"
"Please contact your system administrator.\n"
"Add correct host key in /home/joshua/.ssh/known_hosts to get rid of this message.\n"
"Offending ECDSA key in /home/joshua/.ssh/known_hosts:3\n"
"ECDSA host key for 198.58.98.76 has changed and you have requested strict checking.\n"
"Host key verification failed.\n"
msgstr ""
"$ ssh root@@<server ip address>\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
"Someone could be eavesdropping on you right now (man-in-the-middle attack)!\n"
"It is also possible that a host key has just been changed.\n"
"The fingerprint for the ECDSA key sent by the remote host is\n"
"SHA256:0B+wp33w57AnKQuHCvQP0+ZdKaqYrI/kyU7CfVbS7R4.\n"
"Please contact your system administrator.\n"
"Add correct host key in /home/joshua/.ssh/known_hosts to get rid of this message.\n"
"Offending ECDSA key in /home/joshua/.ssh/known_hosts:3\n"
"ECDSA host key for 198.58.98.76 has changed and you have requested strict checking.\n"
"Host key verification failed.\n"

msgid "Either delete @file{~/.ssh/known_hosts} file, or delete the offending line starting with your server IP address."
msgstr "Exclua o arquivo @file{~/.ssh/known_hosts} ou exclua a linha incorreta começando com o endereço IP do seu servidor."

msgid "Be sure to set your password and root's password."
msgstr "Certifique-se de definir sua senha e a senha do root."

msgid ""
"ssh root@@<remote ip address>\n"
"passwd  ; for the root password\n"
"passwd <username> ; for the user password\n"
msgstr ""
"ssh root@@<endereço IP remoto>\n"
"passwd; para a senha root\n"
"passwd <nome de usuário>; para a senha do usuário\n"

msgid "You may not be able to run the above commands at this point.  If you have issues remotely logging into your linode box via SSH, then you may still need to set your root and user password initially by clicking on the ``Launch Console'' option in your linode.  Choose the ``Glish'' instead of ``Weblish''.  Now you should be able to ssh into the machine."
msgstr "Talvez você não consiga executar os comandos acima neste momento. Se você tiver problemas para fazer login remotamente em sua caixa linode via SSH, então você ainda pode precisar definir sua senha root e de usuário inicialmente clicando na opção ``Launch Console'' em seu linode. Escolha ``Glish'' em vez de ``Weblish''. Agora você deve conseguir fazer o ssh na máquina."

msgid "Hooray! At this point you can shut down the server, delete the Debian disk, and resize the Guix to the rest of the size.  Congratulations!"
msgstr "Viva! Neste ponto você pode desligar o servidor, excluir o disco Debian e redimensionar o Guix para o restante do tamanho. Parabéns!"

msgid "By the way, if you save it as a disk image right at this point, you'll have an easy time spinning up new Guix images! You may need to down-size the Guix image to 6144MB, to save it as an image.  Then you can resize it again to the max size."
msgstr "A propósito, se você salvá-lo como uma imagem de disco neste momento, será fácil criar novas imagens Guix! Pode ser necessário reduzir o tamanho da imagem Guix para 6144 MB para salvá-la como uma imagem. Então você pode redimensioná-lo novamente para o tamanho máximo."

msgid "kimsufi, Kimsufi, OVH"
msgstr "kimsufi, Kimsufi, OVH"

msgid "To run Guix on a server hosted by @uref{https://www.kimsufi.com/, Kimsufi}, click on the netboot tab then select rescue64-pro and restart."
msgstr "Para executar o Guix em um servidor hospedado por @uref{https://www.kimsufi.com/, Kimsufi}, clique na guia netboot, selecione Rescue64-pro e reinicie."

msgid "OVH will email you the credentials required to ssh into a Debian system."
msgstr "A OVH enviar-lhe-á por e-mail as credenciais necessárias para efetuar o ssh num sistema Debian."

msgid "Now you can run the \"install guix from @pxref{Binary Installation,,, guix, GNU Guix}\" steps:"
msgstr "Agora você pode executar as etapas \"instalar guix de @pxref{Instalação de binários,,, guix.pt_BR, GNU Guix}\":"

msgid ""
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"
msgstr ""
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"

msgid "Partition the drives and format them, first stop the raid array:"
msgstr "Particione as unidades e formate-as, primeiro interrompa a matriz raid:"

msgid ""
"mdadm --stop /dev/md127\n"
"mdadm --zero-superblock /dev/sda2 /dev/sdb2\n"
msgstr ""
"mdadm --stop /dev/md127\n"
"mdadm --zero-superblock /dev/sda2 /dev/sdb2\n"

msgid "Then wipe the disks and set up the partitions, we will create a RAID 1 array."
msgstr "Em seguida, limpe os discos e configure as partições, criaremos uma matriz RAID 1."

msgid ""
"wipefs -a /dev/sda\n"
"wipefs -a /dev/sdb\n"
"\n"
msgstr ""
"wipefs -a /dev/sda\n"
"wipefs -a /dev/sdb\n"
"\n"

msgid ""
"parted /dev/sda --align=opt -s -m -- mklabel gpt\n"
"parted /dev/sda --align=opt -s -m -- \\\n"
" mkpart bios_grub 1049kb 512MiB \\\n"
" set 1 bios_grub on\n"
"parted /dev/sda --align=opt -s -m -- \\\n"
" mkpart primary 512MiB -512MiB\n"
" set 2 raid on\n"
"parted /dev/sda --align=opt -s -m -- mkpart primary linux-swap 512MiB 100%\n"
"\n"
msgstr ""
"parted /dev/sda --align=opt -s -m -- mklabel gpt\n"
"parted /dev/sda --align=opt -s -m -- \\\n"
" mkpart bios_grub 1049kb 512MiB \\\n"
" set 1 bios_grub on\n"
"parted /dev/sda --align=opt -s -m -- \\\n"
" mkpart primary 512MiB -512MiB\n"
" set 2 raid on\n"
"parted /dev/sda --align=opt -s -m -- mkpart primary linux-swap 512MiB 100%\n"
"\n"

msgid ""
"parted /dev/sdb --align=opt -s -m -- mklabel gpt\n"
"parted /dev/sdb --align=opt -s -m -- \\\n"
"     mkpart bios_grub 1049kb 512MiB \\\n"
"     set 1 bios_grub on\n"
"parted /dev/sdb --align=opt -s -m -- \\\n"
"     mkpart primary 512MiB -512MiB \\\n"
"     set 2 raid on\n"
"parted /dev/sdb --align=opt -s -m -- mkpart primary linux-swap 512MiB 100%\n"
msgstr ""
"parted /dev/sdb --align=opt -s -m -- mklabel gpt\n"
"parted /dev/sdb --align=opt -s -m -- \\\n"
"     mkpart bios_grub 1049kb 512MiB \\\n"
"     set 1 bios_grub on\n"
"parted /dev/sdb --align=opt -s -m -- \\\n"
"     mkpart primary 512MiB -512MiB \\\n"
"     set 2 raid on\n"
"parted /dev/sdb --align=opt -s -m -- mkpart primary linux-swap 512MiB 100%\n"

msgid "Create the array:"
msgstr "Crie a matriz:"

msgid ""
"mdadm --create /dev/md127 --level=1 --raid-disks=2 \\\n"
"  --metadata=0.90 /dev/sda2 /dev/sdb2\n"
msgstr ""
"mdadm --create /dev/md127 --level=1 --raid-disks=2 \\\n"
"  --metadata=0.90 /dev/sda2 /dev/sdb2\n"

msgid "Now create file systems on the relevant partitions, first the boot partitions:"
msgstr "Agora crie sistemas de arquivos nas partições relevantes, primeiro as partições de inicialização:"

msgid ""
"mkfs.ext4  /dev/sda1\n"
"mkfs.ext4  /dev/sdb1\n"
msgstr ""
"mkfs.ext4  /dev/sda1\n"
"mkfs.ext4  /dev/sdb1\n"

msgid "Then the root partition:"
msgstr "Então a partição raiz:"

msgid "mkfs.ext4 /dev/md127\n"
msgstr "mkfs.ext4 /dev/md127\n"

msgid "Initialize the swap partitions:"
msgstr "Inicialize as partições swap:"

msgid ""
"mkswap /dev/sda3\n"
"swapon /dev/sda3\n"
"mkswap /dev/sdb3\n"
"swapon /dev/sdb3\n"
msgstr ""
"mkswap /dev/sda3\n"
"swapon /dev/sda3\n"
"mkswap /dev/sdb3\n"
"swapon /dev/sdb3\n"

msgid "Mount the guix drive:"
msgstr "Monte a unidade guix:"

msgid ""
"mkdir /mnt/guix\n"
"mount /dev/md127 /mnt/guix\n"
msgstr ""
"mkdir /mnt/guix\n"
"mount /dev/md127 /mnt/guix\n"

msgid "Now is time to write an operating system declaration @file{os.scm} file; here is a sample:"
msgstr "Agora é hora de escrever um arquivo @file{os.scm} de declaração do sistema operacional; aqui está uma amostra:"

msgid ""
"(use-modules (gnu) (guix))\n"
"(use-service-modules networking ssh vpn virtualization sysctl admin mcron)\n"
"(use-package-modules ssh tls tmux vpn virtualization)\n"
"\n"
msgstr ""
"(use-modules (gnu) (guix))\n"
"(use-service-modules networking ssh vpn virtualization sysctl admin mcron)\n"
"(use-package-modules ssh tls tmux vpn virtualization)\n"
"\n"

msgid ""
"(operating-system\n"
"  (host-name \"kimsufi\")\n"
"\n"
msgstr ""
"(operating-system\n"
"  (host-name \"kimsufi\")\n"
"\n"

msgid ""
"  (bootloader (bootloader-configuration\n"
"\t       (bootloader grub-bootloader)\n"
"\t       (targets (list \"/dev/sda\" \"/dev/sdb\"))\n"
"\t       (terminal-outputs '(console))))\n"
"\n"
msgstr ""
"  (bootloader (bootloader-configuration\n"
"\t       (bootloader grub-bootloader)\n"
"\t       (targets (list \"/dev/sda\" \"/dev/sdb\"))\n"
"\t       (terminal-outputs '(console))))\n"
"\n"

msgid ""
"  ;; Add a kernel module for RAID-1 (aka. \"mirror\").\n"
"  (initrd-modules (cons* \"raid1\"  %base-initrd-modules))\n"
"\n"
msgstr ""
"  ;; Adicionar um módulo de kernel para RAID-1 (conhecido como. \"espelho\").\n"
"  (initrd-modules (cons* \"raid1\"  %base-initrd-modules))\n"
"\n"

msgid ""
"  (mapped-devices\n"
"   (list (mapped-device\n"
"          (source (list \"/dev/sda2\" \"/dev/sdb2\"))\n"
"          (target \"/dev/md127\")\n"
"          (type raid-device-mapping))))\n"
"\n"
msgstr ""
"  (mapped-devices\n"
"   (list (mapped-device\n"
"          (source (list \"/dev/sda2\" \"/dev/sdb2\"))\n"
"          (target \"/dev/md127\")\n"
"          (type raid-device-mapping))))\n"
"\n"

msgid ""
"  (swap-devices\n"
"   (list (swap-space\n"
"          (target \"/dev/sda3\"))\n"
"         (swap-space\n"
"          (target \"/dev/sdb3\"))))\n"
"\n"
msgstr ""
"  (swap-devices\n"
"   (list (swap-space\n"
"          (target \"/dev/sda3\"))\n"
"         (swap-space\n"
"          (target \"/dev/sdb3\"))))\n"
"\n"

msgid ""
"  (issue\n"
"   ;; Default contents for /etc/issue.\n"
"   \"\\\n"
"This is the GNU system at Kimsufi.  Welcome.\\n\")\n"
"\n"
msgstr ""
"  (issue\n"
"   ;;Conteúdo padrão para /etc/issue.\n"
"   \"\\\n"
"Este é o sistema GNU em Kimsufi. Bem-vindo.\\n\")\n"
"\n"

msgid ""
"  (file-systems (cons* (file-system\n"
"\t\t         (mount-point \"/\")\n"
"\t\t         (device \"/dev/md127\")\n"
"\t\t         (type \"ext4\")\n"
"\t\t         (dependencies mapped-devices))\n"
"\t\t       %base-file-systems))\n"
"\n"
msgstr ""
"  (file-systems (cons* (file-system\n"
"\t\t         (mount-point \"/\")\n"
"\t\t         (device \"/dev/md127\")\n"
"\t\t         (type \"ext4\")\n"
"\t\t         (dependencies mapped-devices))\n"
"\t\t       %base-file-systems))\n"
"\n"

msgid ""
"  (users (cons (user-account\n"
"\t        (name \"guix\")\n"
"\t        (comment \"guix\")\n"
"\t        (group \"users\")\n"
"\t        (supplementary-groups '(\"wheel\"))\n"
"\t        (home-directory \"/home/guix\"))\n"
"\t       %base-user-accounts))\n"
"\n"
msgstr ""
"  (users (cons (user-account\n"
"\t        (name \"guix\")\n"
"\t        (comment \"guix\")\n"
"\t        (group \"users\")\n"
"\t        (supplementary-groups '(\"wheel\"))\n"
"\t        (home-directory \"/home/guix\"))\n"
"\t       %base-user-accounts))\n"
"\n"

msgid ""
"  (sudoers-file\n"
"   (plain-file \"sudoers\" \"\\\n"
"root ALL=(ALL) ALL\n"
"%wheel ALL=(ALL) ALL\n"
"guix ALL=(ALL) NOPASSWD:ALL\\n\"))\n"
"\n"
msgstr ""
"  (sudoers-file\n"
"   (plain-file \"sudoers\" \"\\\n"
"root ALL=(ALL) ALL\n"
"%wheel ALL=(ALL) ALL\n"
"guix ALL=(ALL) NOPASSWD:ALL\\n\"))\n"
"\n"

msgid ""
"  ;; Globally-installed packages.\n"
"  (packages (cons* tmux gnutls wireguard-tools %base-packages))\n"
"  (services\n"
"   (cons*\n"
"    (service static-networking-service-type\n"
"\t     (list (static-networking\n"
"\t\t    (addresses (list (network-address\n"
"\t\t\t\t      (device \"enp3s0\")\n"
"\t\t\t\t      (value \"@var{server-ip-address}/24\"))))\n"
"\t\t    (routes (list (network-route\n"
"\t\t\t\t   (destination \"default\")\n"
"\t\t\t\t   (gateway \"@var{server-gateway}\"))))\n"
"\t\t    (name-servers '(\"213.186.33.99\")))))\n"
"\n"
msgstr ""
"  ;; Pacotes instalados globalmente.\n"
"  (packages (cons* tmux nss-certs gnutls wireguard-tools %base-packages))\n"
"  (services\n"
"   (cons*\n"
"    (service static-networking-service-type\n"
"\t     (list (static-networking\n"
"\t\t    (addresses (list (network-address\n"
"\t\t\t\t      (device \"enp3s0\")\n"
"\t\t\t\t      (value \"@var{server-ip-address}/24\"))))\n"
"\t\t    (routes (list (network-route\n"
"\t\t\t\t   (destination \"default\")\n"
"\t\t\t\t   (gateway \"@var{server-gateway}\"))))\n"
"\t\t    (name-servers '(\"213.186.33.99\")))))\n"
"\n"

msgid ""
"    (service unattended-upgrade-service-type)\n"
"\n"
msgstr ""
"    (service unattended-upgrade-service-type)\n"
"\n"

msgid ""
"    (service openssh-service-type\n"
"\t     (openssh-configuration\n"
"\t      (openssh openssh-sans-x)\n"
"\t      (permit-root-login #f)\n"
"\t      (authorized-keys\n"
"\t       `((\"guix\" ,(plain-file \"@var{ssh-key-name.pub}\"\n"
"                                      \"@var{ssh-public-key-content}\"))))))\n"
"    (modify-services %base-services\n"
"      (sysctl-service-type\n"
"       config =>\n"
"       (sysctl-configuration\n"
"\t(settings (append '((\"net.ipv6.conf.all.autoconf\" . \"0\")\n"
"\t\t\t    (\"net.ipv6.conf.all.accept_ra\" . \"0\"))\n"
"\t\t\t  %default-sysctl-settings))))))))\n"
msgstr ""
"    (service openssh-service-type\n"
"\t     (openssh-configuration\n"
"\t      (openssh openssh-sans-x)\n"
"\t      (permit-root-login #f)\n"
"\t      (authorized-keys\n"
"\t       `((\"guix\" ,(plain-file \"@var{ssh-key-name.pub}\"\n"
"                                      \"@var{ssh-public-key-content}\"))))))\n"
"    (modify-services %base-services\n"
"      (sysctl-service-type\n"
"       config =>\n"
"       (sysctl-configuration\n"
"\t(settings (append '((\"net.ipv6.conf.all.autoconf\" . \"0\")\n"
"\t\t\t    (\"net.ipv6.conf.all.accept_ra\" . \"0\"))\n"
"\t\t\t  %default-sysctl-settings))))))))\n"

msgid "Don't forget to substitute the @var{server-ip-address}, @var{server-gateway}, @var{ssh-key-name} and @var{ssh-public-key-content} variables with your own values."
msgstr "Não se esqueça de substituir as variáveis @var{server-ip-address}, @var{server-gateway}, @var{ssh-key-name} e @var{ssh-public-key-content} pelos seus próprias valores."

msgid "The gateway is the last usable IP in your block so if you have a server with an IP of @samp{37.187.79.10} then its gateway will be @samp{37.187.79.254}."
msgstr "O gateway é o último IP utilizável em seu bloco, portanto, se você tiver um servidor com IP @samp{37.187.79.10}, seu gateway será @samp{37.187.79.254}."

msgid "Transfer your operating system declaration @file{os.scm} file on the server via the @command{scp} or @command{sftp} commands."
msgstr "Transfira o arquivo de declaração do sistema operacional @file{os.scm} para o servidor por meio dos comandos @command{scp} ou @command{sftp}."

msgid "Now all that is left is to install Guix with a @code{guix system init} and restart."
msgstr "Agora só falta instalar o Guix com @code{guix system init} e reiniciar."

msgid "However we first need to set up a chroot, because the root partition of the rescue system is mounted on an aufs partition and if you try to install Guix it will fail at the GRUB install step complaining about the canonical path of \"aufs\"."
msgstr "No entanto, primeiro precisamos configurar um chroot, porque a partição raiz do sistema de recuperação é montada em uma partição aufs e se você tentar instalar o Guix ele falhará na etapa de instalação do GRUB reclamando do caminho canônico de \"aufs\"."

msgid "Install packages that will be used in the chroot:"
msgstr "Instale os pacotes que serão usados no chroot:"

msgid "guix install bash-static parted util-linux-with-udev coreutils guix\n"
msgstr "guix install bash-static parted util-linux-with-udev coreutils guix\n"

msgid "Then run the following to create directories needed for the chroot:"
msgstr "Em seguida, execute o seguinte para criar os diretórios necessários para o chroot:"

msgid ""
"cd /mnt && \\\n"
"mkdir -p bin etc gnu/store root/.guix-profile/ root/.config/guix/current \\\n"
"  var/guix proc sys dev\n"
msgstr ""
"cd /mnt && \\\n"
"mkdir -p bin etc gnu/store root/.guix-profile/ root/.config/guix/current \\\n"
"  var/guix proc sys dev\n"

msgid "Copy the host resolv.conf in the chroot:"
msgstr "Copie o host resolv.conf no chroot:"

msgid "cp /etc/resolv.conf etc/\n"
msgstr "cp /etc/resolv.conf etc/\n"

msgid "Mount block devices, the store and its database and the current guix config:"
msgstr "Monte os dispositivos de bloco, o armazém e seu banco de dados e a configuração atual do guix:"

msgid ""
"mount --rbind /proc /mnt/proc\n"
"mount --rbind /sys /mnt/sys\n"
"mount --rbind /dev /mnt/dev\n"
"mount --rbind /var/guix/ var/guix/\n"
"mount --rbind /gnu/store gnu/store/\n"
"mount --rbind /root/.config/ root/.config/\n"
"mount --rbind /root/.guix-profile/bin/ bin\n"
"mount --rbind /root/.guix-profile root/.guix-profile/\n"
msgstr ""
"mount --rbind /proc /mnt/proc\n"
"mount --rbind /sys /mnt/sys\n"
"mount --rbind /dev /mnt/dev\n"
"mount --rbind /var/guix/ var/guix/\n"
"mount --rbind /gnu/store gnu/store/\n"
"mount --rbind /root/.config/ root/.config/\n"
"mount --rbind /root/.guix-profile/bin/ bin\n"
"mount --rbind /root/.guix-profile root/.guix-profile/\n"

msgid "Chroot in /mnt and install the system:"
msgstr "Faça chroot em /mnt e instale o sistema:"

msgid ""
"chroot /mnt/ /bin/bash\n"
"\n"
msgstr ""
"chroot /mnt/ /bin/bash\n"
"\n"

msgid "guix system init /root/os.scm /guix\n"
msgstr "guix system init /root/os.scm /guix\n"

msgid "Finally, from the web user interface (UI), change @samp{netboot} to @samp{boot to disk} and restart (also from the web UI)."
msgstr "Por fim, na interface do usuário (IU) da web, altere @samp{netboot} para @samp{boot to disk} e reinicie (também na IU da web)."

msgid "Wait a few minutes and try to ssh with @code{ssh guix@@@var{server-ip-address>} -i @var{path-to-your-ssh-key}}"
msgstr "Aguarde alguns minutos e tente fazer ssh com @code{ssh guix@@@var{endereço IP do servidor>} -i @var{caminho para sua chave ssh}}"

msgid "You should have a Guix system up and running on Kimsufi; congratulations!"
msgstr "Você deve ter um sistema Guix instalado e funcionando no Kimsufi; Parabéns!"

msgid "To bind mount a file system, one must first set up some definitions before the @code{operating-system} section of the system definition.  In this example we will bind mount a folder from a spinning disk drive to @file{/tmp}, to save wear and tear on the primary SSD, without dedicating an entire partition to be mounted as @file{/tmp}."
msgstr "Para vincular a montagem de um sistema de arquivos, é necessário primeiro configurar algumas definições antes da seção @code{operating-system} da definição do sistema. Neste exemplo, vincularemos a montagem de uma pasta de uma unidade de disco rígido a @file{/tmp}, para evitar desgaste no SSD primário, sem dedicar uma partição inteira para ser montada como @file{/tmp}."

msgid "First, the source drive that hosts the folder we wish to bind mount should be defined, so that the bind mount can depend on it."
msgstr "Primeiro, a unidade de origem que hospeda a pasta que desejamos vincular a montagem deve ser definida, para que a montagem de ligação possa depender dela."

msgid ""
"(define source-drive ;; \"source-drive\" can be named anything you want.\n"
"   (file-system\n"
"    (device (uuid \"UUID goes here\"))\n"
"    (mount-point \"/path-to-spinning-disk-goes-here\")\n"
"    (type \"ext4\"))) ;Make sure to set this to the appropriate type for your drive.\n"
msgstr ""
"(define source-drive ;; \"source-drive\" pode ser nomeado como você quiser.\n"
"   (file-system\n"
"    (device (uuid \"UUID vai aqui\"))\n"
"    (mount-point \"/path-to-spinning-disk-goes-here\")\n"
"    (type \"ext4\"))) ;; Certifique-se de definir isso para o tipo apropriado para sua unidade.\n"

msgid "The source folder must also be defined, so that guix will know it's not a regular block device, but a folder."
msgstr "A pasta de origem também deve ser definida, para que o guix saiba que não é um dispositivo de bloco normal, mas uma pasta."

msgid ""
";; \"source-directory\" can be named any valid variable name.\n"
"(define (%source-directory) \"/path-to-spinning-disk-goes-here/tmp\")\n"
msgstr ""
";; \"%source-directory\" pode receber qualquer nome de variável válido.\n"
"(define (%source-directory) \"/caminho_para_ o_disco_vai_aqui/tmp\")\n"

msgid "Finally, inside the @code{file-systems} definition, we must add the mount itself."
msgstr "Finalmente, dentro da definição @code{file-systems}, devemos adicionar a própria montagem."

msgid ""
"(file-systems (cons*\n"
"\n"
msgstr ""
"(file-systems (cons*\n"
"\n"

msgid ""
"                ...<other drives omitted for clarity>...\n"
"\n"
msgstr ""
"                ...<other drives omitted for clarity>...\n"
"\n"

msgid ""
"                ;; Must match the name you gave the source drive in the earlier definition.\n"
"                source-drive\n"
"\n"
msgstr ""
"                ;; Deve corresponder ao nome que você deu à unidade\n"
"                ;; de origem na definição anterior.\n"
"                source-drive\n"
"\n"

msgid ""
"                (file-system\n"
"                 ;; Make sure \"source-directory\" matches your earlier definition.\n"
"                 (device (%source-directory))\n"
"                 (mount-point \"/tmp\")\n"
"                 ;; We are mounting a folder, not a partition, so this type needs to be \"none\"\n"
"                 (type \"none\")\n"
"                 (flags '(bind-mount))\n"
"                 ;; Ensure \"source-drive\" matches what you've named the variable for the drive.\n"
"                 (dependencies (list source-drive))\n"
"                 )\n"
"\n"
msgstr ""
"                (file-system\n"
"                 ;; Certifique-se de que \"source-directory\" corresponde\n"
"                 ;; à sua definição anterior.\n"
"                 (device (%source-directory))\n"
"                 (mount-point \"/tmp\")\n"
"                 ;; Estamos montando uma pasta, não uma partição, então\n"
"                 ;; esse tipo precisa ser \"none\"\n"
"                 (type \"none\")\n"
"                 (flags '(bind-mount))\n"
"                 ;; Certifique-se de que \"source-drive\" corresponde ao\n"
"                 ;; nome que você deu à variável para a unidade\n"
"                 (dependencies (list source-drive))\n"
"                 )\n"
"\n"

msgid ""
"                 ...<other drives omitted for clarity>...\n"
"\n"
msgstr ""
"                 ...<outras unidades omitidas para maior clareza>...\n"
"\n"

msgid "                ))\n"
msgstr "                ))\n"

msgid "Guix daemon can use a HTTP proxy to get substitutes, here we are configuring it to get them via Tor."
msgstr "O daemon Guix pode usar um proxy HTTP para obter substitutos, aqui estamos configurando-o para obtê-los via Tor."

msgid "Warning"
msgstr "Aviso"

msgid "@emph{Not all} Guix daemon's traffic will go through Tor! Only HTTP/HTTPS will get proxied; FTP, Git protocol, SSH, etc connections will still go through the clearnet.  Again, this configuration isn't foolproof some of your traffic won't get routed by Tor at all.  Use it at your own risk."
msgstr "@emph{Nem todo} o tráfego do daemon Guix passará pelo Tor! Somente HTTP/HTTPS será encaminhado ao proxy; As conexões FTP, o protocolo Git, SSH, etc. ainda passarão pela rede aberta. Novamente, esta configuração não é infalível, pois parte do seu tráfego não será roteado pelo Tor. Use-o por sua conta e risco."

msgid "Also note that the procedure described here applies only to package substitution. When you update your guix distribution with @command{guix pull}, you still need to use @command{torsocks} if you want to route the connection to guix's git repository servers through Tor."
msgstr "Observe também que o procedimento descrito aqui se aplica apenas à substituição de pacotes. Ao atualizar sua distribuição guix com @command{guix pull}, você ainda precisará usar @command{torsocks} se quiser rotear a conexão para os servidores de repositório git do guix através do Tor."

msgid "Guix's substitute server is available as a Onion service, if you want to use it to get your substitutes through Tor configure your system as follow:"
msgstr "O servidor substituto do Guix está disponível como um serviço Onion, se você quiser usá-lo para obter seus substitutos através do Tor, configure seu sistema da seguinte forma:"

msgid ""
"(use-modules (gnu))\n"
"(use-service-module base networking)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-service-module base networking)\n"
"\n"

msgid ""
"(operating-system\n"
"  …\n"
"  (services\n"
"    (cons\n"
"      (service tor-service-type\n"
"              (tor-configuration\n"
"                (config-file (plain-file \"tor-config\"\n"
"                                         \"HTTPTunnelPort 127.0.0.1:9250\"))))\n"
"      (modify-services %base-services\n"
"        (guix-service-type\n"
"          config => (guix-configuration\n"
"                      (inherit config)\n"
"                      ;; ci.guix.gnu.org's Onion service\n"
"                      (substitute-urls \"\\\n"
"@value{SUBSTITUTE-TOR-URL}\")\n"
"                      (http-proxy \"http://localhost:9250\")))))))\n"
msgstr ""
"(operating-system\n"
"  …\n"
"  (services\n"
"    (cons\n"
"      (service tor-service-type\n"
"              (tor-configuration\n"
"                (config-file (plain-file \"tor-config\"\n"
"                                         \"HTTPTunnelPort 127.0.0.1:9250\"))))\n"
"      (modify-services %base-services\n"
"        (guix-service-type\n"
"          config => (guix-configuration\n"
"                      (inherit config)\n"
"                      ;; ci.guix.gnu.org's  Serviço onion\n"
"                      (substitute-urls\n"
"                       \"@value{SUBSTITUTE-TOR-URL}\")\n"
"                      (http-proxy \"http://localhost:9250\")))))))\n"

msgid "This will keep a tor process running that provides a HTTP CONNECT tunnel which will be used by @command{guix-daemon}.  The daemon can use other protocols than HTTP(S) to get remote resources, request using those protocols won't go through Tor since we are only setting a HTTP tunnel here.  Note that @code{substitutes-urls} is using HTTPS and not HTTP or it won't work, that's a limitation of Tor's tunnel; you may want to use @command{privoxy} instead to avoid such limitations."
msgstr "Isso manterá um processo tor em execução que fornece um túnel HTTP CONNECT que será usado por @command{guix-daemon}. O daemon pode usar outros protocolos além do HTTP(S) para obter recursos remotos. A solicitação usando esses protocolos não passará pelo Tor, pois estamos apenas configurando um túnel HTTP aqui. Observe que @code{substitutes-urls} está usando HTTPS e não HTTP ou não funcionará, isso é uma limitação do túnel do Tor; você pode querer usar @command{privoxy} para evitar tais limitações."

msgid "If you don't want to always get substitutes through Tor but using it just some of the times, then skip the @code{guix-configuration}.  When you want to get a substitute from the Tor tunnel run:"
msgstr "Se você não deseja sempre obter substitutos através do Tor, mas usá-lo apenas algumas vezes, pule o @code{guix-configuration}. Quando você deseja obter um substituto da execução do túnel Tor:"

msgid ""
"sudo herd set-http-proxy guix-daemon http://localhost:9250\n"
"guix build \\\n"
"  --substitute-urls=@value{SUBSTITUTE-TOR-URL} @dots{}\n"
msgstr ""
"sudo herd set-http-proxy guix-daemon http://localhost:9250\n"
"guix build \\\n"
"  --substitute-urls=@value{SUBSTITUTE-TOR-URL} @dots{}\n"

msgid "nginx, lua, openresty, resty"
msgstr "nginx, lua, openresty, resty"

msgid "NGINX could be extended with Lua scripts."
msgstr "O NGINX pode ser estendido com scripts Lua."

msgid "Guix provides NGINX service with ability to load Lua module and specific Lua packages, and reply to requests by evaluating Lua scripts."
msgstr "Guix fornece serviço NGINX com capacidade de carregar módulos Lua e pacotes Lua específicos, e responder a solicitações avaliando scripts Lua."

msgid "The following example demonstrates system definition with configuration to evaluate @file{index.lua} Lua script on HTTP request to @uref{http://localhost/hello} endpoint:"
msgstr "O exemplo a seguir demonstra a definição do sistema com configuração para avaliar o script Lua @file{index.lua} na solicitação HTTP para o endpoint @uref{http://localhost/hello}:"

msgid ""
"local shell = require \"resty.shell\"\n"
"\n"
msgstr ""
"local shell = require \"resty.shell\"\n"
"\n"

msgid ""
"local stdin = \"\"\n"
"local timeout = 1000  -- ms\n"
"local max_size = 4096  -- byte\n"
"\n"
msgstr ""
"local stdin = \"\"\n"
"local timeout = 1000  -- ms\n"
"local max_size = 4096  -- byte\n"
"\n"

msgid ""
"local ok, stdout, stderr, reason, status =\n"
"   shell.run([[/run/current-system/profile/bin/ls /tmp]], stdin, timeout, max_size)\n"
"\n"
msgstr ""
"local ok, stdout, stderr, reason, status =\n"
"   shell.run([[/run/current-system/profile/bin/ls /tmp]], stdin, timeout, max_size)\n"
"\n"

msgid "ngx.say(stdout)\n"
msgstr "ngx.say(stdout)\n"

msgid ""
"(use-modules (gnu))\n"
"(use-service-modules #;… web)\n"
"(use-package-modules #;… lua)\n"
"(operating-system\n"
"  ;; …\n"
"  (services\n"
"   ;; …\n"
"   (service nginx-service-type\n"
"            (nginx-configuration\n"
"             (modules\n"
"              (list\n"
"               (file-append nginx-lua-module \"/etc/nginx/modules/ngx_http_lua_module.so\")))\n"
"             (lua-package-path (list lua-resty-core\n"
"                                     lua-resty-lrucache\n"
"                                     lua-resty-signal\n"
"                                     lua-tablepool\n"
"                                     lua-resty-shell))\n"
"             (lua-package-cpath (list lua-resty-signal))\n"
"             (server-blocks\n"
"              (list (nginx-server-configuration\n"
"                     (server-name '(\"localhost\"))\n"
"                     (listen '(\"80\"))\n"
"                     (root \"/etc\")\n"
"                     (locations (list\n"
"                                 (nginx-location-configuration\n"
"                                  (uri \"/hello\")\n"
"                                  (body (list #~(format #f \"content_by_lua_file ~s;\"\n"
"                                                        #$(local-file \"index.lua\"))))))))))))))\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-service-modules #;… web)\n"
"(use-package-modules #;… lua)\n"
"(operating-system\n"
"  ;; …\n"
"  (services\n"
"   ;; …\n"
"   (service nginx-service-type\n"
"            (nginx-configuration\n"
"             (modules\n"
"              (list\n"
"               (file-append nginx-lua-module \"/etc/nginx/modules/ngx_http_lua_module.so\")))\n"
"             (lua-package-path (list lua-resty-core\n"
"                                     lua-resty-lrucache\n"
"                                     lua-resty-signal\n"
"                                     lua-tablepool\n"
"                                     lua-resty-shell))\n"
"             (lua-package-cpath (list lua-resty-signal))\n"
"             (server-blocks\n"
"              (list (nginx-server-configuration\n"
"                     (server-name '(\"localhost\"))\n"
"                     (listen '(\"80\"))\n"
"                     (root \"/etc\")\n"
"                     (locations (list\n"
"                                 (nginx-location-configuration\n"
"                                  (uri \"/hello\")\n"
"                                  (body (list #~(format #f \"content_by_lua_file ~s;\"\n"
"                                                        #$(local-file \"index.lua\"))))))))))))))\n"

msgid "mpd"
msgstr "mpd"

msgid "music server, headless"
msgstr "servidor de música, headless"

msgid "bluetooth, ALSA configuration"
msgstr "Bluetooth, configuração ALSA"

msgid "MPD, the Music Player Daemon, is a flexible server-side application for playing music.  Client programs on different machines on the network --- a mobile phone, a laptop, a desktop workstation --- can connect to it to control the playback of audio files from your local music collection.  MPD decodes the audio files and plays them back on one or many outputs."
msgstr "MPD, o Music Player Daemon, é um aplicativo flexível do lado do servidor para tocar música. Programas clientes em diferentes máquinas na rede --- um telefone celular, um laptop, uma estação de trabalho de mesa --- podem se conectar a ele para controlar a reprodução de arquivos de áudio da sua coleção de música local. O MPD decodifica os arquivos de áudio e os reproduz em uma ou muitas saídas."

msgid "By default MPD will play to the default audio device.  In the example below we make things a little more interesting by setting up a headless music server.  There will be no graphical user interface, no Pulseaudio daemon, and no local audio output.  Instead we will configure MPD with two outputs: a bluetooth speaker and a web server to serve audio streams to any streaming media player."
msgstr "Por padrão, o MPD reproduzirá no dispositivo de áudio padrão. No exemplo abaixo, tornamos as coisas um pouco mais interessantes configurando um servidor de música headless. Não haverá interface gráfica de usuário, nenhum daemon Pulseaudio e nenhuma saída de áudio local. Em vez disso, configuraremos o MPD com duas saídas: um alto-falante bluetooth e um servidor web para servir fluxos de áudio para qualquer reprodutor de mídia de streaming."

msgid "Bluetooth is often rather frustrating to set up.  You will have to pair your Bluetooth device and make sure that the device is automatically connected as soon as it powers on.  The Bluetooth system service returned by the @code{bluetooth-service} procedure provides the infrastructure needed to set this up."
msgstr "O Bluetooth costuma ser bastante frustrante de configurar. Você terá que parear seu dispositivo Bluetooth e certificar-se de que o dispositivo seja conectado automaticamente assim que for ligado. O serviço do sistema Bluetooth retornado pelo procedimento @code{bluetooth-service} fornece a infraestrutura necessária para configurar isso."

msgid "Reconfigure your system with at least the following services and packages:"
msgstr "Reconfigure seu sistema com pelo menos os seguintes serviços e pacotes:"

msgid ""
"(operating-system\n"
"  ;; …\n"
"  (packages (cons* bluez bluez-alsa\n"
"                   %base-packages))\n"
"  (services\n"
"   ;; …\n"
"   (dbus-service #:services (list bluez-alsa))\n"
"   (bluetooth-service #:auto-enable? #t)))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (packages (cons* bluez bluez-alsa\n"
"                   %base-packages))\n"
"  (services\n"
"   ;; …\n"
"   (dbus-service #:services (list bluez-alsa))\n"
"   (bluetooth-service #:auto-enable? #t)))\n"

msgid "Start the @code{bluetooth} service and then use @command{bluetoothctl} to scan for Bluetooth devices.  Try to identify your Bluetooth speaker and pick out its device ID from the resulting list of devices that is indubitably dominated by a baffling smorgasbord of your neighbors' home automation gizmos.  This only needs to be done once:"
msgstr "Inicie o serviço @code{bluetooth} e então use @command{bluetoothctl} para escanear dispositivos Bluetooth. Tente identificar seu alto-falante Bluetooth e escolher seu ID de dispositivo na lista resultante de dispositivos que é indubitavelmente dominada por uma desconcertante miscelânea de engenhocas de automação residencial de seus vizinhos. Isso só precisa ser feito uma vez:"

msgid ""
"$ bluetoothctl \n"
"[NEW] Controller 00:11:22:33:95:7F BlueZ 5.40 [default]\n"
"\n"
msgstr ""
"$ bluetoothctl \n"
"[NEW] Controller 00:11:22:33:95:7F BlueZ 5.40 [default]\n"
"\n"

msgid ""
"[bluetooth]# power on\n"
"[bluetooth]# Changing power on succeeded\n"
"\n"
msgstr ""
"[bluetooth]# power on\n"
"[bluetooth]# Changing power on succeeded\n"
"\n"

msgid ""
"[bluetooth]# agent on\n"
"[bluetooth]# Agent registered\n"
"\n"
msgstr ""
"[bluetooth]# agent on\n"
"[bluetooth]# Agent registered\n"
"\n"

msgid ""
"[bluetooth]# default-agent\n"
"[bluetooth]# Default agent request successful\n"
"\n"
msgstr ""
"[bluetooth]# default-agent\n"
"[bluetooth]# Default agent request successful\n"
"\n"

msgid ""
"[bluetooth]# scan on\n"
"[bluetooth]# Discovery started\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: yes\n"
"[NEW] Device AA:BB:CC:A4:AA:CD My Bluetooth Speaker\n"
"[NEW] Device 44:44:FF:2A:20:DC My Neighbor's TV\n"
"@dots{}\n"
"\n"
msgstr ""
"[bluetooth]# scan on\n"
"[bluetooth]# Discovery started\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: yes\n"
"[NEW] Device AA:BB:CC:A4:AA:CD My Bluetooth Speaker\n"
"[NEW] Device 44:44:FF:2A:20:DC My Neighbor's TV\n"
"@dots{}\n"
"\n"

msgid ""
"[bluetooth]# pair AA:BB:CC:A4:AA:CD\n"
"Attempting to pair with AA:BB:CC:A4:AA:CD\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"\n"
msgstr ""
"[bluetooth]# pair AA:BB:CC:A4:AA:CD\n"
"Attempting to pair with AA:BB:CC:A4:AA:CD\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"\n"

msgid ""
"[My Bluetooth Speaker]# [CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110b-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110c-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110e-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Paired: yes\n"
"Pairing successful\n"
"\n"
msgstr ""
"[Meu alto-falante Bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110b-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110c-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110e-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Paired: yes\n"
"Pairing successful\n"
"\n"

msgid ""
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: no\n"
"\n"
msgstr ""
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: no\n"
"\n"

msgid ""
"[bluetooth]# \n"
"[bluetooth]# trust AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD Trusted: yes\n"
"Changing AA:BB:CC:A4:AA:CD trust succeeded\n"
"\n"
msgstr ""
"[bluetooth]# \n"
"[bluetooth]# trust AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD Trusted: yes\n"
"Changing AA:BB:CC:A4:AA:CD trust succeeded\n"
"\n"

msgid ""
"[bluetooth]# \n"
"[bluetooth]# connect AA:BB:CC:A4:AA:CD\n"
"Attempting to connect to AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD RSSI: -63\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"Connection successful\n"
"\n"
msgstr ""
"[bluetooth]# \n"
"[bluetooth]# connect AA:BB:CC:A4:AA:CD\n"
"Attempting to connect to AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD RSSI: -63\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"Connection successful\n"
"\n"

msgid ""
"[My Bluetooth Speaker]# scan off\n"
"[CHG] Device AA:BB:CC:A4:AA:CD RSSI is nil\n"
"Discovery stopped\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: no\n"
msgstr ""
"[My Bluetooth Speaker]# scan off\n"
"[CHG] Device AA:BB:CC:A4:AA:CD RSSI is nil\n"
"Discovery stopped\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: no\n"

msgid "Congratulations, you can now automatically connect to your Bluetooth speaker!"
msgstr "Parabéns, agora você pode se conectar automaticamente ao seu alto-falante Bluetooth!"

msgid "It is now time to configure ALSA to use the @emph{bluealsa} Bluetooth module, so that you can define an ALSA pcm device corresponding to your Bluetooth speaker.  For a headless server using @emph{bluealsa} with a fixed Bluetooth device is likely simpler than configuring Pulseaudio and its stream switching behavior.  We configure ALSA by crafting a custom @code{alsa-configuration} for the @code{alsa-service-type}.  The configuration will declare a @code{pcm} type @code{bluealsa} from the @code{bluealsa} module provided by the @code{bluez-alsa} package, and then define a @code{pcm} device of that type for your Bluetooth speaker."
msgstr "Agora é hora de configurar o ALSA para usar o módulo Bluetooth @emph{bluealsa}, para que você possa definir um dispositivo ALSA pcm correspondente ao seu alto-falante Bluetooth. Para um servidor headless, usar @emph{bluealsa} com um dispositivo Bluetooth fixo é provavelmente mais simples do que configurar o Pulseaudio e seu comportamento de troca de fluxo. Configuramos o ALSA criando um @code{alsa-configuration} personalizado para o @code{alsa-service-type}. A configuração declarará um tipo @code{pcm} @code{bluealsa} do módulo @code{bluealsa} fornecido pelo pacote @code{bluez-alsa} e, em seguida, definirá um dispositivo @code{pcm} desse tipo para seu alto-falante Bluetooth."

msgid "All that is left then is to make MPD send audio data to this ALSA device.  We also add a secondary MPD output that makes the currently played audio files available as a stream through a web server on port 8080.  When enabled a device on the network could listen to the audio stream by connecting any capable media player to the HTTP server on port 8080, independent of the status of the Bluetooth speaker."
msgstr "Tudo o que resta então é fazer o MPD enviar dados de áudio para este dispositivo ALSA. Também adicionamos uma saída MPD secundária que torna os arquivos de áudio atualmente reproduzidos disponíveis como um fluxo por meio de um servidor web na porta 8080. Quando habilitado, um dispositivo na rede pode ouvir o fluxo de áudio conectando qualquer reprodutor de mídia capaz ao servidor HTTP na porta 8080, independentemente do status do alto-falante Bluetooth."

msgid "What follows is the outline of an @code{operating-system} declaration that should accomplish the above-mentioned tasks:"
msgstr "O que se segue é o esboço de uma declaração @code{operating-system} que deve realizar as tarefas mencionadas acima:"

msgid ""
"(use-modules (gnu))\n"
"(use-service-modules audio dbus sound #;… etc)\n"
"(use-package-modules audio linux #;… etc)\n"
"(operating-system\n"
"  ;; …\n"
"  (packages (cons* bluez bluez-alsa\n"
"                   %base-packages))\n"
"  (services\n"
"   ;; …\n"
"   (service mpd-service-type\n"
"            (mpd-configuration\n"
"             (user \"your-username\")\n"
"             (music-dir \"/path/to/your/music\")\n"
"             (address \"192.168.178.20\")\n"
"             (outputs (list (mpd-output\n"
"                             (type \"alsa\")\n"
"                             (name \"MPD\")\n"
"                             (extra-options\n"
"                              ;; Use the same name as in the ALSA\n"
"                              ;; configuration below.\n"
"                              '((device . \"pcm.btspeaker\"))))\n"
"                            (mpd-output\n"
"                             (type \"httpd\")\n"
"                             (name \"streaming\")\n"
"                             (enabled? #false)\n"
"                             (always-on? #true)\n"
"                             (tags? #true)\n"
"                             (mixer-type 'null)\n"
"                             (extra-options\n"
"                              '((encoder . \"vorbis\")\n"
"                                (port    . \"8080\")\n"
"                                (bind-to-address . \"192.168.178.20\")\n"
"                                (max-clients . \"0\") ;no limit\n"
"                                (quality . \"5.0\")\n"
"                                (format  . \"44100:16:1\"))))))))\n"
"   (dbus-service #:services (list bluez-alsa))\n"
"   (bluetooth-service #:auto-enable? #t)\n"
"   (service alsa-service-type\n"
"            (alsa-configuration\n"
"             (pulseaudio? #false) ;we don't need it\n"
"             (extra-options\n"
"              #~(string-append \"\\\n"
"# Declare Bluetooth audio device type \\\"bluealsa\\\" from bluealsa module\n"
"pcm_type.bluealsa @{\n"
"    lib \\\"\"\n"
"#$(file-append bluez-alsa \"/lib/alsa-lib/libasound_module_pcm_bluealsa.so\") \"\\\"\n"
"@}\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-service-modules audio dbus sound #;… etc)\n"
"(use-package-modules audio linux #;… etc)\n"
"(operating-system\n"
"  ;; …\n"
"  (packages (cons* bluez bluez-alsa\n"
"                   %base-packages))\n"
"  (services\n"
"   ;; …\n"
"   (service mpd-service-type\n"
"            (mpd-configuration\n"
"             (user \"your-username\")\n"
"             (music-dir \"/path/to/your/music\")\n"
"             (address \"192.168.178.20\")\n"
"             (outputs (list (mpd-output\n"
"                             (type \"alsa\")\n"
"                             (name \"MPD\")\n"
"                             (extra-options\n"
"                              ;; Use o mesmo nome que no ALSA\n"
"                              ;; configuração abaixo.\n"
"                              '((device . \"pcm.btspeaker\"))))\n"
"                            (mpd-output\n"
"                             (type \"httpd\")\n"
"                             (name \"streaming\")\n"
"                             (enabled? #false)\n"
"                             (always-on? #true)\n"
"                             (tags? #true)\n"
"                             (mixer-type 'null)\n"
"                             (extra-options\n"
"                              '((encoder . \"vorbis\")\n"
"                                (port    . \"8080\")\n"
"                                (bind-to-address . \"192.168.178.20\")\n"
"                                (max-clients . \"0\") ;no limit\n"
"                                (quality . \"5.0\")\n"
"                                (format  . \"44100:16:1\"))))))))\n"
"   (dbus-service #:services (list bluez-alsa))\n"
"   (bluetooth-service #:auto-enable? #t)\n"
"   (service alsa-service-type\n"
"            (alsa-configuration\n"
"             (pulseaudio? #false) ;nós não precisamos disso\n"
"             (extra-options\n"
"              #~(string-append \"\\\n"
"# Declarar o tipo de dispositivo de áudio Bluetooth \\\"bluealsa\\\" do módulo bluealsa\n"
"pcm_type.bluealsa @{\n"
"    lib \\\"\"\n"
"#$(file-append bluez-alsa \"/lib/alsa-lib/libasound_module_pcm_bluealsa.so\") \"\\\"\n"
"@}\n"
"\n"

msgid ""
"# Declare control device type \\\"bluealsa\\\" from the same module\n"
"ctl_type.bluealsa @{\n"
"    lib \\\"\"\n"
"#$(file-append bluez-alsa \"/lib/alsa-lib/libasound_module_ctl_bluealsa.so\") \"\\\"\n"
"@}\n"
"\n"
msgstr ""
"# Declarar tipo de dispositivo de controle \\\"bluealsa\\\" do mesmo módulo\n"
"ctl_type.bluealsa @{\n"
"    lib \\\"\"\n"
"#$(file-append bluez-alsa \"/lib/alsa-lib/libasound_module_ctl_bluealsa.so\") \"\\\"\n"
"@}\n"
"\n"

msgid ""
"# Define the actual Bluetooth audio device.\n"
"pcm.btspeaker @{\n"
"    type bluealsa\n"
"    device \\\"AA:BB:CC:A4:AA:CD\\\" # unique device identifier\n"
"    profile \\\"a2dp\\\"\n"
"@}\n"
"\n"
msgstr ""
"# Defina o dispositivo de áudio Bluetooth real.\n"
"pcm.btspeaker @{\n"
"    type bluealsa\n"
"    device \\\"AA:BB:CC:A4:AA:CD\\\" # identificador de dispositivo exclusivo\n"
"    profile \\\"a2dp\\\"\n"
"@}\n"
"\n"

msgid ""
"# Define an associated controller.\n"
"ctl.btspeaker @{\n"
"    type bluealsa\n"
"@}\n"
"\"))))))\n"
msgstr ""
"# Defina um controlador associado.\n"
"ctl.btspeaker @{\n"
"    type bluealsa\n"
"@}\n"
"\"))))))\n"

msgid "Enjoy the music with the MPD client of your choice or a media player capable of streaming via HTTP!"
msgstr "Aproveite a música com o cliente MPD de sua escolha ou um media player capaz de transmitir via HTTP!"

msgid "The kernel Linux provides a number of shared facilities that are available to processes in the system.  These facilities include a shared view on the file system, other processes, network devices, user and group identities, and a few others.  Since Linux 3.19 a user can choose to @emph{unshare} some of these shared facilities for selected processes, providing them (and their child processes) with a different view on the system."
msgstr "O kernel Linux fornece uma série de facilidades compartilhadas que estão disponíveis para processos no sistema. Essas facilidades incluem uma visão compartilhada no sistema de arquivos, outros processos, dispositivos de rede, identidades de usuários e grupos e alguns outros. Desde o Linux 3.19, um usuário pode escolher @emph{unshare} algumas dessas facilidades compartilhadas para processos selecionados, fornecendo a eles (e seus processos filhos) uma visão diferente do sistema."

msgid "A process with an unshared @code{mount} namespace, for example, has its own view on the file system --- it will only be able to see directories that have been explicitly bound in its mount namespace.  A process with its own @code{proc} namespace will consider itself to be the only process running on the system, running as PID 1."
msgstr "Um processo com um namespace @code{mount} não compartilhado, por exemplo, tem sua própria visão no sistema de arquivos --- ele só poderá ver diretórios que foram explicitamente vinculados em seu namespace mount. Um processo com seu próprio namespace @code{proc} se considerará o único processo em execução no sistema, executando como PID 1."

msgid "Guix uses these kernel features to provide fully isolated environments and even complete Guix System containers, lightweight virtual machines that share the host system's kernel.  This feature comes in especially handy when using Guix on a foreign distribution to prevent interference from foreign libraries or configuration files that are available system-wide."
msgstr "O Guix usa esses recursos do kernel para fornecer ambientes totalmente isolados e até mesmo contêineres Guix System completos, máquinas virtuais leves que compartilham o kernel do sistema host. Esse recurso é especialmente útil ao usar o Guix em uma distribuição estrangeira para evitar interferência de bibliotecas estrangeiras ou arquivos de configuração que estão disponíveis em todo o sistema."

msgid "The easiest way to get started is to use @command{guix shell} with the @option{--container} option.  @xref{Invoking guix shell,,, guix, GNU Guix Reference Manual} for a reference of valid options."
msgstr "A maneira mais fácil de começar é usar @command{guix shell} com a opção @option{--container}. @xref{Invocando guix shell,,, guix.pt_BR, Manual de Referência GNU Guix} para uma referência de opções válidas."

msgid "The following snippet spawns a minimal shell process with most namespaces unshared from the system.  The current working directory is visible to the process, but anything else on the file system is unavailable.  This extreme isolation can be very useful when you want to rule out any sort of interference from environment variables, globally installed libraries, or configuration files."
msgstr "O snippet a seguir gera um processo de shell mínimo com a maioria dos namespaces não compartilhados do sistema. O diretório de trabalho atual é visível para o processo, mas qualquer outra coisa no sistema de arquivos não está disponível. Esse isolamento extremo pode ser muito útil quando você deseja descartar qualquer tipo de interferência de variáveis de ambiente, bibliotecas instaladas globalmente ou arquivos de configuração."

msgid "guix shell --container\n"
msgstr "guix shell --container\n"

msgid "It is a bleak environment, barren, desolate.  You will find that not even the GNU coreutils are available here, so to explore this deserted wasteland you need to use built-in shell commands.  Even the usually gigantic @file{/gnu/store} directory is reduced to a faint shadow of itself."
msgstr "O trecho a seguir gera um processo de shell mínimo como a maioria dos namespaces não compartilhados do sistema. O diretório de trabalho atual é visível para o processo, mas qualquer outra coisa no sistema de arquivos não está disponível. Esse extremo de isolamento pode ser muito útil quando você deseja descartar qualquer tipo de interferência de variáveis de ambiente, bibliotecas instaladas globalmente ou arquivos de configuração."

msgid ""
"$ echo /gnu/store/*\n"
"/gnu/store/@dots{}-gcc-10.3.0-lib\n"
"/gnu/store/@dots{}-glibc-2.33\n"
"/gnu/store/@dots{}-bash-static-5.1.8\n"
"/gnu/store/@dots{}-ncurses-6.2.20210619\n"
"/gnu/store/@dots{}-bash-5.1.8\n"
"/gnu/store/@dots{}-profile\n"
"/gnu/store/@dots{}-readline-8.1.1\n"
msgstr ""
"$ echo /gnu/store/*\n"
"/gnu/store/@dots{}-gcc-10.3.0-lib\n"
"/gnu/store/@dots{}-glibc-2.33\n"
"/gnu/store/@dots{}-bash-static-5.1.8\n"
"/gnu/store/@dots{}-ncurses-6.2.20210619\n"
"/gnu/store/@dots{}-bash-5.1.8\n"
"/gnu/store/@dots{}-profile\n"
"/gnu/store/@dots{}-readline-8.1.1\n"

msgid "exiting a container"
msgstr "saindo de um contêiner"

msgid "There isn't much you can do in an environment like this other than exiting it.  You can use @key{^D} or @command{exit} to terminate this limited shell environment."
msgstr "Não há muito que você possa fazer em um ambiente como esse além de sair dele. Você pode usar @key{^D} ou @command{exit} para encerrar esse ambiente de shell limitado."

msgid "exposing directories, container"
msgstr "expondo diretórios, contêiner"

msgid "sharing directories, container"
msgstr "compartilhamento de diretórios, contêiner"

msgid "mapping locations, container"
msgstr "localizações de mapeamento, contêiner"

msgid "You can make other directories available inside of the container environment; use @option{--expose=DIRECTORY} to bind-mount the given directory as a read-only location inside the container, or use @option{--share=DIRECTORY} to make the location writable.  With an additional mapping argument after the directory name you can control the name of the directory inside the container.  In the following example we map @file{/etc} on the host system to @file{/the/host/etc} inside a container in which the GNU coreutils are installed."
msgstr "Você pode tornar outros diretórios disponíveis dentro do ambiente do contêiner; use @option{--expose=DIRECTORY} para montar o diretório fornecido como um local somente leitura dentro do contêiner, ou use @option{--share=DIRECTORY} para tornar o local gravável. Com um argumento de mapeamento adicional após o nome do diretório, você pode controlar o nome do diretório dentro do contêiner. No exemplo a seguir, mapeamos @file{/etc} no sistema host para @file{/the/host/etc} dentro de um contêiner no qual os GNU coreutils estão instalados."

msgid ""
"$ guix shell --container --share=/etc=/the/host/etc coreutils\n"
"$ ls /the/host/etc\n"
msgstr ""
"$ guix shell --container --share=/etc=/etc/do/hospedeiro coreutils\n"
"$ ls /etc/do/hospedeiro\n"

msgid "Similarly, you can prevent the current working directory from being mapped into the container with the @option{--no-cwd} option.  Another good idea is to create a dedicated directory that will serve as the container's home directory, and spawn the container shell from that directory."
msgstr "Da mesma forma, você pode evitar que o diretório de trabalho atual seja mapeado para o contêiner com a opção @option{--no-cwd}. Outra boa ideia é criar um diretório dedicado que servirá como o diretório home do contêiner e gerar o shell do contêiner a partir desse diretório."

msgid "hide system libraries, container"
msgstr "ocultar bibliotecas do sistema, contêiner"

msgid "avoid ABI mismatch, container"
msgstr "evitar incompatibilidade de ABI, contêiner"

msgid "On a foreign system a container environment can be used to compile software that cannot possibly be linked with system libraries or with the system's compiler toolchain.  A common use-case in a research context is to install packages from within an R session.  Outside of a container environment there is a good chance that the foreign compiler toolchain and incompatible system libraries are found first, resulting in incompatible binaries that cannot be used by R.  In a container shell this problem disappears, as system libraries and executables simply aren't available due to the unshared @code{mount} namespace."
msgstr "Em um sistema estrangeiro, um ambiente de contêiner pode ser usado para compilar software que não pode ser vinculado a bibliotecas do sistema ou à cadeia de ferramentas do compilador do sistema. Um caso de uso comum em um contexto de pesquisa é instalar pacotes de dentro de uma sessão R. Fora de um ambiente de contêiner, há uma boa chance de que a cadeia de ferramentas do compilador estrangeiro e bibliotecas de sistema incompatíveis sejam encontradas primeiro, resultando em binários incompatíveis que não podem ser usados pelo R. Em um shell de contêiner, esse problema desaparece, pois as bibliotecas e executáveis do sistema simplesmente não estão disponíveis devido ao namespace @code{mount} não compartilhado."

msgid "Let's take a comprehensive manifest providing a comfortable development environment for use with R:"
msgstr "Vamos pegar um manifesto abrangente que fornece um ambiente de desenvolvimento confortável para uso com R:"

msgid ""
"(specifications->manifest\n"
"  (list \"r-minimal\"\n"
"\n"
msgstr ""
"(specifications->manifest\n"
"  (list \"r-minimal\"\n"
"\n"

msgid ""
"        ;; base packages\n"
"        \"bash-minimal\"\n"
"        \"glibc-locales\"\n"
"        \"nss-certs\"\n"
"\n"
msgstr ""
"        ;; pacote base\n"
"        \"bash-minimal\"\n"
"        \"glibc-locales\"\n"
"        \"nss-certs\"\n"
"\n"

msgid ""
"        ;; Common command line tools lest the container is too empty.\n"
"        \"coreutils\"\n"
"        \"grep\"\n"
"        \"which\"\n"
"        \"wget\"\n"
"        \"sed\"\n"
"\n"
msgstr ""
"        ;; Ferramentas comuns de linha de comando para o caso de o contêiner ficar muito vazio.\n"
"        \"coreutils\"\n"
"        \"grep\"\n"
"        \"which\"\n"
"        \"wget\"\n"
"        \"sed\"\n"
"\n"

msgid ""
"        ;; R markdown tools\n"
"        \"pandoc\"\n"
"\n"
msgstr ""
"        ;; Ferramenta de marcação R\n"
"        \"pandoc\"\n"
"\n"

msgid ""
"        ;; Toolchain and common libraries for \"install.packages\"\n"
"        \"gcc-toolchain@@10\"\n"
"        \"gfortran-toolchain\"\n"
"        \"gawk\"\n"
"        \"tar\"\n"
"        \"gzip\"\n"
"        \"unzip\"\n"
"        \"make\"\n"
"        \"cmake\"\n"
"        \"pkg-config\"\n"
"        \"cairo\"\n"
"        \"libxt\"\n"
"        \"openssl\"\n"
"        \"curl\"\n"
"        \"zlib\"))\n"
msgstr ""
"        ;; Cadeia de ferramentas e bibliotecas comuns para \"install.packages\"\n"
"        \"gcc-toolchain@@10\"\n"
"        \"gfortran-toolchain\"\n"
"        \"gawk\"\n"
"        \"tar\"\n"
"        \"gzip\"\n"
"        \"unzip\"\n"
"        \"make\"\n"
"        \"cmake\"\n"
"        \"pkg-config\"\n"
"        \"cairo\"\n"
"        \"libxt\"\n"
"        \"openssl\"\n"
"        \"curl\"\n"
"        \"zlib\"))\n"

msgid "Let's use this to run R inside a container environment.  For convenience we share the @code{net} namespace to use the host system's network interfaces.  Now we can build R packages from source the traditional way without having to worry about ABI mismatch or incompatibilities."
msgstr "Vamos usar isso para executar o R dentro de um ambiente de contêiner. Por conveniência, compartilhamos o namespace @code{net} para usar as interfaces de rede do sistema host. Agora podemos construir pacotes R a partir da fonte da maneira tradicional, sem ter que nos preocupar com incompatibilidades ou incompatibilidades de ABI."

msgid ""
"$ guix shell --container --network --manifest=manifest.scm -- R\n"
"\n"
msgstr ""
"$ guix shell --container --network --manifest=manifest.scm -- R\n"
"\n"

msgid ""
"R version 4.2.1 (2022-06-23) -- \"Funny-Looking Kid\"\n"
"Copyright (C) 2022 The R Foundation for Statistical Computing\n"
"@dots{}\n"
"> e <- Sys.getenv(\"GUIX_ENVIRONMENT\")\n"
"> Sys.setenv(GIT_SSL_CAINFO=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_FILE=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_DIR=paste0(e, \"/etc/ssl/certs\"))\n"
"> install.packages(\"Cairo\", lib=paste0(getwd()))\n"
"@dots{}\n"
"* installing *source* package 'Cairo' ...\n"
"@dots{}\n"
"* DONE (Cairo)\n"
"\n"
msgstr ""
"R version 4.2.1 (2022-06-23) -- \"Funny-Looking Kid\"\n"
"Copyright (C) 2022 The R Foundation for Statistical Computing\n"
"@dots{}\n"
"> e <- Sys.getenv(\"GUIX_ENVIRONMENT\")\n"
"> Sys.setenv(GIT_SSL_CAINFO=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_FILE=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_DIR=paste0(e, \"/etc/ssl/certs\"))\n"
"> install.packages(\"Cairo\", lib=paste0(getwd()))\n"
"@dots{}\n"
"* installing *source* package 'Cairo' ...\n"
"@dots{}\n"
"* DONE (Cairo)\n"
"\n"

msgid ""
"The downloaded source packages are in\n"
"\t'/tmp/RtmpCuwdwM/downloaded_packages'\n"
"> library(\"Cairo\", lib=getwd())\n"
"> # success!\n"
msgstr ""
"The downloaded source packages are in\n"
"\t'/tmp/RtmpCuwdwM/downloaded_packages'\n"
"> library(\"Cairo\", lib=getwd())\n"
"> # sucesso!\n"

msgid "Using container shells is fun, but they can become a little cumbersome when you want to go beyond just a single interactive process.  Some tasks become a lot easier when they sit on the rock solid foundation of a proper Guix System and its rich set of system services.  The next section shows you how to launch a complete Guix System inside of a container."
msgstr "Usar shells de contêiner é divertido, mas eles podem se tornar um pouco trabalhosos quando você quer ir além de apenas um único processo interativo. Algumas tarefas se tornam muito mais fáceis quando se assentam na fundação sólida de um Sistema Guix adequado e seu rico conjunto de serviços de sistema. A próxima seção mostra como iniciar um Sistema Guix completo dentro de um contêiner."

msgid "The Guix System provides a wide array of interconnected system services that are configured declaratively to form a dependable stateless GNU System foundation for whatever tasks you throw at it.  Even when using Guix on a foreign distribution you can benefit from the design of Guix System by running a system instance as a container.  Using the same kernel features of unshared namespaces mentioned in the previous section, the resulting Guix System instance is isolated from the host system and only shares file system locations that you explicitly declare."
msgstr "O Guix System fornece uma ampla gama de serviços de sistema interconectados que são configurados declarativamente para formar uma fundação GNU System sem estado confiável para quaisquer tarefas que você jogue nele. Mesmo ao usar o Guix em uma distribuição estrangeira, você pode se beneficiar do design do Guix System executando uma instância do sistema como um contêiner. Usando os mesmos recursos do kernel de namespaces não compartilhados mencionados na seção anterior, a instância do Guix System resultante é isolada do sistema host e compartilha apenas os locais do sistema de arquivos que você declara explicitamente."

msgid "A Guix System container differs from the shell process created by @command{guix shell --container} in a number of important ways.  While in a container shell the containerized process is a Bash shell process, a Guix System container runs the Shepherd as PID 1.  In a system container all system services (@pxref{Services,,, guix, GNU Guix Reference Manual}) are set up just as they would be on a Guix System in a virtual machine or on bare metal---this includes daemons managed by the GNU@tie{}Shepherd (@pxref{Shepherd Services,,, guix, GNU Guix Reference Manual}) as well as other kinds of extensions to the operating system (@pxref{Service Composition,,, guix, GNU Guix Reference Manual})."
msgstr "Um contêiner do Sistema Guix difere do processo shell criado por @command{guix shell --container} em várias maneiras importantes. Enquanto em um shell de contêiner o processo containerizado é um processo de shell Bash, um contêiner do Sistema Guix executa o Shepherd como PID 1. Em um contêiner do sistema, todos os serviços do sistema (@pxref{Serviços,,, guix.pt_BR, Manual de Referência do GNU Guix}) são configurados exatamente como seriam em um Sistema Guix em uma máquina virtual ou em bare metal --- isso inclui daemons gerenciados pelo GNU@tie{}Shepherd (@pxref{Serviços do Shepherd,,, guix.pt_BR, Manual de Referência do GNU Guix}), bem como outros tipos de extensões para o sistema operacional (@pxref{Composição de serviço,,, guix.pt_BR, Manual de Referência do GNU Guix})."

msgid "The perceived increase in complexity of running a Guix System container is easily justified when dealing with more complex applications that have higher or just more rigid requirements on their execution contexts---configuration files, dedicated user accounts, directories for caches or log files, etc.  In Guix System the demands of this kind of software are satisfied through the deployment of system services."
msgstr "O aumento percebido na complexidade da execução de um contêiner do Guix System é facilmente justificado ao lidar com aplicativos mais complexos que têm requisitos mais altos ou mais rígidos em seus contextos de execução: arquivos de configuração, contas de usuários dedicadas, diretórios para caches ou arquivos de log, etc. No Guix System, as demandas desse tipo de software são satisfeitas por meio da implantação de serviços do sistema."

msgid "A good example might be a PostgreSQL database server.  Much of the complexity of setting up such a database server is encapsulated in this deceptively short service declaration:"
msgstr "Um bom exemplo pode ser um servidor de banco de dados PostgreSQL. Grande parte da complexidade de configurar tal servidor de banco de dados está encapsulada nesta declaração de serviço enganosamente curta:"

msgid ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (postgresql postgresql-14)))\n"
msgstr ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (postgresql postgresql-14)))\n"

msgid "A complete operating system declaration for use with a Guix System container would look something like this:"
msgstr "Uma declaração completa do sistema operacional para uso com um contêiner do sistema Guix seria algo como isto:"

msgid ""
"(use-modules (gnu))\n"
"(use-package-modules databases)\n"
"(use-service-modules databases)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-package-modules databases)\n"
"(use-service-modules databases)\n"
"\n"

msgid ""
"(operating-system\n"
"  (host-name \"container\")\n"
"  (timezone \"Europe/Berlin\")\n"
"  (file-systems (cons (file-system\n"
"                        (device (file-system-label \"does-not-matter\"))\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                      %base-file-systems))\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader grub-bootloader)\n"
"               (targets '(\"/dev/sdX\"))))\n"
"  (services\n"
"   (cons* (service postgresql-service-type\n"
"                   (postgresql-configuration\n"
"                    (postgresql postgresql-14)\n"
"                    (config-file\n"
"                     (postgresql-config-file\n"
"                      (log-destination \"stderr\")\n"
"                      (hba-file\n"
"                       (plain-file \"pg_hba.conf\"\n"
"                                   \"\\\n"
"local\tall\tall\t\t\ttrust\n"
"host\tall\tall\t10.0.0.1/32 \ttrust\"))\n"
"                      (extra-config\n"
"                       '((\"listen_addresses\" \"*\")\n"
"                         (\"log_directory\"    \"/var/log/postgresql\")))))))\n"
"          (service postgresql-role-service-type\n"
"                   (postgresql-role-configuration\n"
"                    (roles\n"
"                     (list (postgresql-role\n"
"                            (name \"test\")\n"
"                            (create-database? #t))))))\n"
"          %base-services)))\n"
msgstr ""
"(operating-system\n"
"  (host-name \"container\")\n"
"  (timezone \"Europe/Berlin\")\n"
"  (file-systems (cons (file-system\n"
"                        (device (file-system-label \"does-not-matter\"))\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                      %base-file-systems))\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader grub-bootloader)\n"
"               (targets '(\"/dev/sdX\"))))\n"
"  (services\n"
"   (cons* (service postgresql-service-type\n"
"                   (postgresql-configuration\n"
"                    (postgresql postgresql-14)\n"
"                    (config-file\n"
"                     (postgresql-config-file\n"
"                      (log-destination \"stderr\")\n"
"                      (hba-file\n"
"                       (plain-file \"pg_hba.conf\"\n"
"                                   \"\\\n"
"local\tall\tall\t\t\ttrust\n"
"host\tall\tall\t10.0.0.1/32 \ttrust\"))\n"
"                      (extra-config\n"
"                       '((\"listen_addresses\" \"*\")\n"
"                         (\"log_directory\"    \"/var/log/postgresql\")))))))\n"
"          (service postgresql-role-service-type\n"
"                   (postgresql-role-configuration\n"
"                    (roles\n"
"                     (list (postgresql-role\n"
"                            (name \"test\")\n"
"                            (create-database? #t))))))\n"
"          %base-services)))\n"

msgid "With @code{postgresql-role-service-type} we define a role ``test'' and create a matching database, so that we can test right away without any further manual setup.  The @code{postgresql-config-file} settings allow a client from IP address 10.0.0.1 to connect without requiring authentication---a bad idea in production systems, but convenient for this example."
msgstr "Com @code{postgresql-role-service-type} definimos uma função ``test'' e criamos um banco de dados correspondente, para que possamos testar imediatamente sem nenhuma configuração manual adicional. As configurações do @code{postgresql-config-file} permitem que um cliente do endereço IP 10.0.0.1 se conecte sem exigir autenticação --- uma má ideia em sistemas de produção, mas conveniente para este exemplo."

msgid "Let's build a script that will launch an instance of this Guix System as a container.  Write the @code{operating-system} declaration above to a file @file{os.scm} and then use @command{guix system container} to build the launcher.  (@pxref{Invoking guix system,,, guix, GNU Guix Reference Manual})."
msgstr "Vamos construir um script que irá iniciar uma instância deste Guix System como um contêiner. Escreva a declaração @code{operating-system} acima em um arquivo @file{os.scm} e então use @command{guix system container} para construir o inicializador. (@pxref{Invocando guix system,,, guix.pt_BR, Manual de Referência do GNU Guix})."

msgid ""
"$ guix system container os.scm\n"
"The following derivations will be built:\n"
"  /gnu/store/@dots{}-run-container.drv\n"
"  @dots{}\n"
"building /gnu/store/@dots{}-run-container.drv...\n"
"/gnu/store/@dots{}-run-container\n"
msgstr ""
"$ guix system container os.scm\n"
"As seguintes derivações serão compiladas::\n"
"/gnu/store/@dots{}-run-container.drv\n"
"@dots{}\n"
"compilando /gnu/store/@dots{}-run-container.drv...\n"
"/gnu/store/@dots{}-run-container\n"

msgid "Now that we have a launcher script we can run it to spawn the new system with a running PostgreSQL service.  Note that due to some as yet unresolved limitations we need to run the launcher as the root user, for example with @command{sudo}."
msgstr "Agora que temos um script de launcher, podemos executá-lo para gerar o novo sistema com um serviço PostgreSQL em execução. Observe que, devido a algumas limitações ainda não resolvidas, precisamos executar o launcher como usuário root, por exemplo, com @command{sudo}."

msgid ""
"$ sudo /gnu/store/@dots{}-run-container\n"
"system container is running as PID 5983\n"
"@dots{}\n"
msgstr ""
"$ sudo /gnu/store/@dots{}-run-container\n"
"O contêiner de sistema está rodando como PID 5983\n"
"@dots{}\n"

msgid "Background the process with @key{Ctrl-z} followed by @command{bg}.  Note the process ID in the output; we will need it to connect to the container later.  You know what? Let's try attaching to the container right now.  We will use @command{nsenter}, a tool provided by the @code{util-linux} package:"
msgstr "Coloque o processo em segundo plano com @key{Ctrl-z} seguido por @command{bg}. Observe o ID do processo na saída; precisaremos dele para conectar ao contêiner mais tarde. Quer saber? Vamos tentar anexar ao contêiner agora mesmo. Usaremos @command{nsenter}, uma ferramenta fornecida pelo pacote @code{util-linux}:"

msgid ""
"$ guix shell util-linux\n"
"$ sudo nsenter -a -t 5983\n"
"root@@container /# pgrep -a postgres\n"
"49 /gnu/store/@dots{}-postgresql-14.4/bin/postgres -D /var/lib/postgresql/data --config-file=/gnu/store/@dots{}-postgresql.conf -p 5432\n"
"51 postgres: checkpointer\n"
"52 postgres: background writer\n"
"53 postgres: walwriter\n"
"54 postgres: autovacuum launcher\n"
"55 postgres: stats collector\n"
"56 postgres: logical replication launcher\n"
"root@@container /# exit\n"
msgstr ""
"$ guix shell util-linux\n"
"$ sudo nsenter -a -t 5983\n"
"root@@container /# pgrep -a postgres\n"
"49 /gnu/store/@dots{}-postgresql-14.4/bin/postgres -D /var/lib/postgresql/data --config-file=/gnu/store/@dots{}-postgresql.conf -p 5432\n"
"51 postgres: checkpointer\n"
"52 postgres: background writer\n"
"53 postgres: walwriter\n"
"54 postgres: autovacuum launcher\n"
"55 postgres: stats collector\n"
"56 postgres: logical replication launcher\n"
"root@@container /# exit\n"

msgid "The PostgreSQL service is running in the container!"
msgstr "O serviço PostgreSQL está sendo executado no contêiner!"

msgid "container networking"
msgstr "rede do contêiner"

msgid "What good is a Guix System running a PostgreSQL database service as a container when we can only talk to it with processes originating in the container? It would be much better if we could talk to the database over the network."
msgstr "De que adianta um Sistema Guix rodando um serviço de banco de dados PostgreSQL como um contêiner quando só podemos falar com ele com processos originados no contêiner? Seria muito melhor se pudéssemos falar com o banco de dados pela rede."

msgid "The easiest way to do this is to create a pair of connected virtual Ethernet devices (known as @code{veth}).  We move one of the devices (@code{ceth-test}) into the @code{net} namespace of the container and leave the other end (@code{veth-test}) of the connection on the host system."
msgstr "A maneira mais fácil de fazer isso é criar um par de dispositivos Ethernet virtuais conectados (conhecidos como @code{veth}). Movemos um dos dispositivos (@code{ceth-test}) para o namespace @code{net} do contêiner e deixamos a outra extremidade (@code{veth-test}) da conexão no sistema host."

msgid ""
"pid=5983\n"
"ns=\"guix-test\"\n"
"host=\"veth-test\"\n"
"client=\"ceth-test\"\n"
"\n"
msgstr ""
"pid=5983\n"
"ns=\"guix-test\"\n"
"host=\"veth-test\"\n"
"client=\"ceth-test\"\n"
"\n"

msgid ""
"# Attach the new net namespace \"guix-test\" to the container PID.\n"
"sudo ip netns attach $ns $pid\n"
"\n"
msgstr ""
"# Anexe o novo namespace de rede \"guix-test\" ao PID do contêiner.\n"
"sudo ip netns attach $ns $pid\n"
"\n"

msgid ""
"# Create the pair of devices\n"
"sudo ip link add $host type veth peer name $client\n"
"\n"
msgstr ""
"# Crie o par de dispositivos\n"
"sudo ip link add $host type veth peer name $client\n"
"\n"

msgid ""
"# Move the client device into the container's net namespace\n"
"sudo ip link set $client netns $ns\n"
msgstr ""
"# Mova o dispositivo cliente para o namespace de rede do contêiner\n"
"sudo ip link set $client netns $ns\n"

msgid "Then we configure the host side:"
msgstr "Em seguida, configuramos o lado do host:"

msgid ""
"sudo ip link set $host up\n"
"sudo ip addr add 10.0.0.1/24 dev $host\n"
msgstr ""
"sudo ip link set $host up\n"
"sudo ip addr add 10.0.0.1/24 dev $host\n"

msgid "@dots{}and then we configure the client side:"
msgstr "@dots{}e então configuramos o lado do cliente:"

msgid ""
"sudo ip netns exec $ns  ip link set lo up\n"
"sudo ip netns exec $ns  ip link set $client up\n"
"sudo ip netns exec $ns  ip addr add 10.0.0.2/24 dev $client\n"
msgstr ""
"sudo ip netns exec $ns  ip link set lo up\n"
"sudo ip netns exec $ns  ip link set $client up\n"
"sudo ip netns exec $ns  ip addr add 10.0.0.2/24 dev $client\n"

msgid "At this point the host can reach the container at IP address 10.0.0.2, and the container can reach the host at IP 10.0.0.1.  This is all we need to talk to the database server inside the container from the host system on the outside."
msgstr "Neste ponto, o host pode alcançar o contêiner no endereço IP 10.0.0.2, e o contêiner pode alcançar o host no IP 10.0.0.1. Isso é tudo o que precisamos para falar com o servidor de banco de dados dentro do contêiner do sistema host do lado de fora."

msgid ""
"$ psql -h 10.0.0.2 -U test\n"
"psql (14.4)\n"
"Type \"help\" for help.\n"
"\n"
msgstr ""
"$ psql -h 10.0.0.2 -U test\n"
"psql (14.4)\n"
"Type \"help\" for help.\n"
"\n"

msgid ""
"test=> CREATE TABLE hello (who TEXT NOT NULL);\n"
"CREATE TABLE\n"
"test=> INSERT INTO hello (who) VALUES ('world');\n"
"INSERT 0 1\n"
"test=> SELECT * FROM hello;\n"
"  who\n"
"-------\n"
" world\n"
"(1 row)\n"
msgstr ""
"test=> CREATE TABLE hello (who TEXT NOT NULL);\n"
"CREATE TABLE\n"
"test=> INSERT INTO hello (who) VALUES ('world');\n"
"INSERT 0 1\n"
"test=> SELECT * FROM hello;\n"
"  who\n"
"-------\n"
" world\n"
"(1 row)\n"

msgid "Now that we're done with this little demonstration let's clean up:"
msgstr "Agora que terminamos esta pequena demonstração, vamos limpar:"

msgid ""
"sudo kill $pid\n"
"sudo ip netns del $ns\n"
"sudo ip link del $host\n"
msgstr ""
"sudo kill $pid\n"
"sudo ip netns del $ns\n"
"sudo ip link del $host\n"

msgid "Guix can produce disk images (@pxref{Invoking guix system,,, guix, GNU Guix Reference Manual}) that can be used with virtual machines solutions such as virt-manager, GNOME Boxes or the more bare QEMU, among others."
msgstr "O Guix pode produzir imagens de disco (@pxref{Invocando guix system,,, guix.pt_BR, Manual de Referência do GNU Guix}) que podem ser usadas com soluções de máquinas virtuais como virt-manager, GNOME Boxes ou o mais simples QEMU, entre outros."

msgid "This chapter aims to provide hands-on, practical examples that relates to the usage and configuration of virtual machines on a Guix System."
msgstr "Este capítulo tem como objetivo fornecer exemplos práticos e práticos relacionados ao uso e à configuração de máquinas virtuais em um sistema Guix."

msgid "Network bridge interface"
msgstr "Interface de ponte de rede"

msgid "networking, bridge"
msgstr "rede, ponte"

msgid "qemu, network bridge"
msgstr "qemu, ponte de rede"

msgid "By default, QEMU uses a so-called ``user mode'' host network back-end, which is convenient as it does not require any configuration.  Unfortunately, it is also quite limited.  In this mode, the guest @abbr{VM, virtual machine} can access the network the same way the host would, but it cannot be reached from the host.  Additionally, since the QEMU user networking mode relies on ICMP, ICMP-based networking tools such as @command{ping} do @emph{not} work in this mode.  Thus, it is often desirable to configure a network bridge, which enables the guest to fully participate in the network.  This is necessary, for example, when the guest is to be used as a server."
msgstr "Por padrão, o QEMU usa um back-end de rede host chamado ``modo usuário'', o que é conveniente, pois não requer nenhuma configuração. Infelizmente, também é bastante limitado. Neste modo, o convidado @abbr{VM, máquina virtual} pode acessar a rede da mesma forma que o host, mas não pode ser alcançado a partir do host. Além disso, como o modo de rede do usuário do QEMU depende do ICMP, ferramentas de rede baseadas em ICMP, como @command{ping}, @emph{não} funcionam neste modo. Portanto, geralmente é desejável configurar uma ponte de rede, que permite que o convidado participe totalmente da rede. Isso é necessário, por exemplo, quando o convidado deve ser usado como um servidor."

msgid "Creating a network bridge interface"
msgstr "Criando uma interface de ponte de rede"

msgid "There are many ways to create a network bridge.  The following command shows how to use NetworkManager and its @command{nmcli} command line interface (CLI) tool, which should already be available if your operating system declaration is based on one of the desktop templates:"
msgstr "Há muitas maneiras de criar uma ponte de rede. O comando a seguir mostra como usar o NetworkManager e sua ferramenta de interface de linha de comando (CLI) @command{nmcli}, que já deve estar disponível se a declaração do seu sistema operacional for baseada em um dos modelos de desktop:"

msgid "# nmcli con add type bridge con-name br0 ifname br0\n"
msgstr "# nmcli con add type bridge con-name br0 ifname br0\n"

msgid "To have this bridge be part of your network, you must associate your network bridge with the Ethernet interface used to connect with the network.  Assuming your interface is named @samp{enp2s0}, the following command can be used to do so:"
msgstr "Para que essa ponte faça parte da sua rede, você deve associar sua ponte de rede à interface Ethernet usada para conectar-se à rede. Supondo que sua interface seja chamada @samp{enp2s0}, o comando a seguir pode ser usado para fazer isso:"

msgid "# nmcli con add type bridge-slave ifname enp2s0 master br0\n"
msgstr "# nmcli con add type bridge-slave ifname enp2s0 master br0\n"

msgid "Important"
msgstr "Importante"

msgid "Only Ethernet interfaces can be added to a bridge.  For wireless interfaces, consider the routed network approach detailed in @xref{Routed network for libvirt}."
msgstr "Somente interfaces Ethernet podem ser adicionadas a uma ponte. Para interfaces sem fio, considere a abordagem de rede roteada detalhada em @xref{Routed network for libvirt}."

msgid "By default, the network bridge will allow your guests to obtain their IP address via DHCP, if available on your local network.  For simplicity, this is what we will use here.  To easily find the guests, they can be configured to advertise their host names via mDNS."
msgstr "Por padrão, a ponte de rede permitirá que seus convidados obtenham seus endereços IP via DHCP, se disponível em sua rede local. Para simplificar, é isso que usaremos aqui. Para encontrar facilmente os convidados, eles podem ser configurados para anunciar seus nomes de host via mDNS."

msgid "Configuring the QEMU bridge helper script"
msgstr "Configurando o script auxiliar da ponte QEMU"

msgid "QEMU comes with a helper program to conveniently make use of a network bridge interface as an unprivileged user @pxref{Network options,,, QEMU, QEMU Documentation}.  The binary must be made setuid root for proper operation; this can be achieved by adding it to the @code{privileged-programs} field of your (host) @code{operating-system} definition, as shown below:"
msgstr "O QEMU vem com um programa auxiliar para usar convenientemente uma interface de ponte de rede como um usuário sem privilégios @pxref{Network options,,, QEMU, Documentação do QEMU}. O binário deve ser definido como setuid root para operação adequada; isso pode ser obtido adicionando-o ao campo @code{privileged-programs} da sua definição @code{operating-system} (host), conforme mostrado abaixo:"

msgid ""
"(privileged-programs\n"
" (cons (privileged-program\n"
"         (program (file-append qemu \"/libexec/qemu-bridge-helper\"))\n"
"         (setuid? #t))\n"
"       %default-privileged-programs))\n"
msgstr ""
"(privileged-programs\n"
" (cons (privileged-program\n"
"         (program (file-append qemu \"/libexec/qemu-bridge-helper\"))\n"
"         (setuid? #t))\n"
"       %default-privileged-programs))\n"

msgid "The file @file{/etc/qemu/bridge.conf} must also be made to allow the bridge interface, as the default is to deny all.  Add the following to your list of services to do so:"
msgstr "O arquivo @file{/etc/qemu/bridge.conf} também deve ser feito para permitir a interface bridge, já que o padrão é negar tudo. Adicione o seguinte à sua lista de serviços para fazer isso:"

msgid "Invoking QEMU with the right command line options"
msgstr "Invocando QEMU com as opções de linha de comando corretas"

msgid "When invoking QEMU, the following options should be provided so that the network bridge is used, after having selected a unique MAC address for the guest."
msgstr "Ao invocar o QEMU, as seguintes opções devem ser fornecidas para que a ponte de rede seja usada, após selecionar um endereço MAC exclusivo para o convidado."

msgid "By default, a single MAC address is used for all guests, unless provided.  Failing to provide different MAC addresses to each virtual machine making use of the bridge would cause networking issues."
msgstr "Por padrão, um único endereço MAC é usado para todos os convidados, a menos que seja fornecido. Deixar de fornecer endereços MAC diferentes para cada máquina virtual que faz uso da ponte causaria problemas de rede."

msgid ""
"$ qemu-system-x86_64 [...] \\\n"
"    -device virtio-net-pci,netdev=user0,mac=XX:XX:XX:XX:XX:XX \\\n"
"    -netdev bridge,id=user0,br=br0 \\\n"
"    [...]\n"
msgstr ""
"$ qemu-system-x86_64 [...] \\\n"
"    -device virtio-net-pci,netdev=user0,mac=XX:XX:XX:XX:XX:XX \\\n"
"    -netdev bridge,id=user0,br=br0 \\\n"
"    [...]\n"

msgid "To generate MAC addresses that have the QEMU registered prefix, the following snippet can be employed:"
msgstr "Para gerar endereços MAC que tenham o prefixo registrado QEMU, o seguinte snippet pode ser empregado:"

msgid ""
"mac_address=\"52:54:00:$(dd if=/dev/urandom bs=512 count=1 2>/dev/null \\\n"
"                           | md5sum \\\n"
"                           | sed -E 's/^(..)(..)(..).*$/\\1:\\2:\\3/')\"\n"
"echo $mac_address\n"
msgstr ""
"mac_address=\"52:54:00:$(dd if=/dev/urandom bs=512 count=1 2>/dev/null \\\n"
"                           | md5sum \\\n"
"                           | sed -E 's/^(..)(..)(..).*$/\\1:\\2:\\3/')\"\n"
"echo $mac_address\n"

msgid "Networking issues caused by Docker"
msgstr "Problemas de rede causados pelo Docker"

msgid "If you use Docker on your machine, you may experience connectivity issues when attempting to use a network bridge, which are caused by Docker also relying on network bridges and configuring its own routing rules.  The solution is add the following @code{iptables} snippet to your @code{operating-system} declaration:"
msgstr "Se você usa o Docker na sua máquina, você pode ter problemas de conectividade ao tentar usar uma ponte de rede, que são causados pelo Docker também depender de pontes de rede e configurar suas próprias regras de roteamento. A solução é adicionar o seguinte snippet @code{iptables} à sua declaração @code{operating-system}:"

msgid ""
"(service iptables-service-type\n"
"             (iptables-configuration\n"
"              (ipv4-rules (plain-file \"iptables.rules\" \"\\\n"
"*filter\n"
":INPUT ACCEPT [0:0]\n"
":FORWARD DROP [0:0]\n"
":OUTPUT ACCEPT [0:0]\n"
"-A FORWARD -i br0 -o br0 -j ACCEPT\n"
"COMMIT\n"
"\"))\n"
msgstr ""
"(service iptables-service-type\n"
"             (iptables-configuration\n"
"              (ipv4-rules (plain-file \"iptables.rules\" \"\\\n"
"*filter\n"
":INPUT ACCEPT [0:0]\n"
":FORWARD DROP [0:0]\n"
":OUTPUT ACCEPT [0:0]\n"
"-A FORWARD -i br0 -o br0 -j ACCEPT\n"
"COMMIT\n"
"\"))\n"

msgid "Virtual network bridge interface"
msgstr "Interface de ponte de rede virtual"

msgid "networking, virtual bridge"
msgstr "rede, ponte virtual"

msgid "libvirt, virtual network switch"
msgstr "libvirt, comutador de rede virtual"

msgid "If the machine hosting your virtual machines is connected wirelessly to the network, you won't be able to use a true network bridge as explained in the preceding section (@pxref{Network bridge for QEMU}).  In this case, the next best option is to use a @emph{virtual network switch} with static routing and to configure a libvirt-powered virtual machine to use it (via the @command{virt-manager} GUI for example).  This is similar to the default mode of operation of QEMU/libvirt, except that instead of using @abbr{NAT, Network Address Translation}, it relies on static routes to join the @abbr{VM, virtual machine} IP address to the @abbr{LAN, local area network}.  This provides two-way connectivity to and from the virtual machine, which is needed for exposing services hosted on the virtual machine."
msgstr "Se a máquina que hospeda suas máquinas virtuais estiver conectada sem fio à rede, você não poderá usar uma ponte de rede verdadeira, conforme explicado na seção anterior (@pxref{Network bridge for QEMU}). Nesse caso, a próxima melhor opção é usar um @emph{comutador virtual} com roteamento estático e configurar uma máquina virtual com libvirt para usá-la (por meio da GUI @command{virt-manager}, por exemplo). Isso é semelhante ao modo de operação padrão do QEMU/libvirt, exceto que, em vez de usar @abbr{NAT, Network Address Translation}, ele depende de rotas estáticas para unir o endereço IP da @abbr{VM, máquina virtual} à @abbr{LAN, rede local}. Isso fornece conectividade bidirecional de e para a máquina virtual, necessária para expor serviços hospedados na máquina virtual."

msgid "Creating a virtual network switch"
msgstr "Criando um comutador de rede virtual"

msgid "A virtual network switch consists of a virtual network device called a `virtual bridge', DHCP server (dnsmasq) and firewall rules (iptables). See the @url{https://wiki.libvirt.org/VirtualNetworking.html, libvirt Wiki article on Virtual Networking} for more details on the modes of operation, management and implementation of virtual network switches."
msgstr "Um comutador de rede virtual consiste em um dispositivo de rede virtual chamado `ponte virtual', servidor DHCP (dnsmasq) e regras de firewall (iptables). Veja o @url{https://wiki.libvirt.org/VirtualNetworking.html, artigo da Wiki do libvirt sobre redes virtuais} para mais detalhes sobre modos de operação, gerenciamento e implementação de comutadores de rede virtual."

msgid "The @command{virsh} command, provided by the @code{libvirt} package, makes it very easy to create a virtual switch.  You first need to choose a network subnet for your virtual switch; if your home LAN is in the @samp{192.168.1.0/24} network, you could opt to use e.g.@: @samp{192.168.2.0/24}.  Define an XML file, e.g.@: @file{/tmp/virbr0.xml}, containing the following:"
msgstr "O comando @command{virsh}, fornecido pelo pacote @code{libvirt}, torna muito fácil criar um comutador virtual. Primeiro, você precisa escolher uma sub-rede de rede para seu comutador virtual; se sua LAN doméstica estiver na rede @samp{192.168.1.0/24}, você pode optar por usar, por exemplo, @samp{192.168.2.0/24}. Defina um arquivo XML, por exemplo, @file{/tmp/virbr0.xml}, contendo o seguinte:"

msgid ""
"<network>\n"
"  <name>virbr0</name>\n"
"  <bridge name=\"virbr0\" />\n"
"  <forward mode=\"route\"/>\n"
"  <ip address=\"192.168.2.0\" netmask=\"255.255.255.0\">\n"
"    <dhcp>\n"
"      <range start=\"192.168.2.1\" end=\"192.168.2.254\"/>\n"
"    </dhcp>\n"
"  </ip>\n"
"</network>\n"
msgstr ""
"<network>\n"
"  <name>virbr0</name>\n"
"  <bridge name=\"virbr0\" />\n"
"  <forward mode=\"route\"/>\n"
"  <ip address=\"192.168.2.0\" netmask=\"255.255.255.0\">\n"
"    <dhcp>\n"
"      <range start=\"192.168.2.1\" end=\"192.168.2.254\"/>\n"
"    </dhcp>\n"
"  </ip>\n"
"</network>\n"

msgid "Then create and configure the interface using the @command{virsh} command, as root:"
msgstr "Em seguida, crie e configure a interface usando o comando @command{virsh}, como root:"

msgid ""
"virsh net-define /tmp/virbr0.xml\n"
"virsh net-autostart virbr0\n"
"virsh net-start virbr0\n"
msgstr ""
"virsh net-define /tmp/virbr0.xml\n"
"virsh net-autostart virbr0\n"
"virsh net-start virbr0\n"

msgid "The @samp{virbr0} interface should now be visible e.g.@: via the @samp{ip address} command.  It will be automatically started every time your libvirt virtual machine is started."
msgstr "A interface @samp{virbr0} agora deve estar visível, por exemplo, via o comando @samp{ip address}. Ela será iniciada automaticamente toda vez que sua máquina virtual libvirt for iniciada."

msgid "Configuring the static routes for your virtual bridge"
msgstr "Configurando as rotas estáticas para sua ponte virtual"

msgid "If you configured your virtual machine to use your newly created @samp{virbr0} virtual bridge interface, it should already receive an IP via DHCP such as @samp{192.168.2.15} and be reachable from the server hosting it, e.g.@: via @samp{ping 192.168.2.15}.  There's one last configuration needed so that the VM can reach the external network: adding static routes to the network's router."
msgstr "Se você configurou sua máquina virtual para usar sua interface de ponte virtual @samp{virbr0} recém-criada, ela já deve receber um IP via DHCP, como @samp{192.168.2.15} e ser acessível a partir do servidor que a hospeda, por exemplo, via @samp{ping 192.168.2.15}. Há uma última configuração necessária para que a VM possa alcançar a rede externa: adicionar rotas estáticas ao roteador da rede."

msgid "In this example, the LAN network is @samp{192.168.1.0/24} and the router configuration web page may be accessible via e.g.@: the @url{http://192.168.1.1} page.  On a router running the @url{https://librecmc.org/, libreCMC} firmware, you would navigate to the @clicksequence{Network @click{} Static Routes} page (@url{https://192.168.1.1/cgi-bin/luci/admin/network/routes}), and you would add a new entry to the @samp{Static IPv4 Routes} with the following information:"
msgstr "Neste exemplo, a rede LAN é @samp{192.168.1.0/24} e a página da web de configuração do roteador pode ser acessada por meio de, por exemplo, a página @url{http://192.168.1.1}. Em um roteador executando o firmware @url{https://librecmc.org/, libreCMC}, você navegaria até a página @clicksequence{Network @click{} Static Routes} (@url{https://192.168.1.1/cgi-bin/luci/admin/network/routes}) e adicionaria uma nova entrada em @samp{Static IPv4 Routes} com as seguintes informações:"

msgid "Interface"
msgstr "Interface"

msgid "lan"
msgstr "rede local"

msgid "Target"
msgstr "Alvo"

msgid "192.168.2.0"
msgstr "192.168.2.0"

msgid "IPv4-Netmask"
msgstr "Rede-IPV4"

msgid "255.255.255.0"
msgstr "255.255.255.0"

msgid "IPv4-Gateway"
msgstr "IPv4-Ponto de entrada"

msgid "server-ip"
msgstr "servidor-ip"

msgid "Route type"
msgstr "Tipo de rota"

msgid "unicast"
msgstr "unicast"

msgid "where @var{server-ip} is the IP address of the machine hosting the VMs, which should be static."
msgstr "onde @var{server-ip} é o endereço IP da máquina que hospeda as VMs, que deve ser estático."

msgid "After saving/applying this new static route, external connectivity should work from within your VM; you can e.g.@: run @samp{ping gnu.org} to verify that it functions correctly."
msgstr "Depois de salvar/aplicar essa nova rota estática, a conectividade externa deve funcionar de dentro da sua VM; você pode, por exemplo, executar @samp{ping gnu.org} para verificar se ela funciona corretamente."

msgid "As mentioned in the preceding section (@pxref{Routed network for libvirt}), libvirt allows virtual networks to be defined via XML files and managed by the @command{virsh} command.  The details of the creation and removal of virtual network switches are handled by libvirt, so the user does not have to deal with them."
msgstr "Como mencionado na seção anterior (@pxref{Routed network for libvirt}), libvirt permite que redes virtuais seja definidas usando arquivos XML e gerenciadas pelo comando @command{virsh}.  Os detalhes da criação e remoção de comutadores de rede virtual são tratados pelo libvirt, então o usuário não precisa lidar com eles."

msgid "However, libvirt's handling of virtual network switches can sometimes clash with more complex networking setups.  In particular, the iptables rules inserted by libvirt for switches operating in the NAT mode can clash with existing iptables/nftables rules, leading to insecure or broken packet filtering."
msgstr "No entanto, a maneira que libvirt trata comutadores de rede virtuais pode, às vezes, entrar em conflito com configurações de rede mais complexas. Em particular, as regras de iptables inseridas pelo libvirt para comutadores operando no modo NAT podem entrar em conflito com as regras iptables/nftables existentes, levando a uma filtragem de pacotes insegura ou quebrada."

msgid "In such cases, the only solution is to manually set up a virtual network switch.  This section will provide instructions on how to do so using Guix System services."
msgstr "Nesses casos, a única solução é configurar manualmente um comutador de rede virtual. Essa seção irá fornecer instruções de como fazer isso usando serviços do Guix System."

msgid "Creating the virtual network bridge"
msgstr "Criando a ponte de rede virtual"

msgid "The @code{static-networking-service-type} can be used to create a virtual network bridge and assign an IP address to it:"
msgstr "O @code{static-networking-service-type} pode ser usado para criar uma ponte de rede virtual e atribuir um endereço IP a ela:"

msgid ""
"(service static-networking-service-type\n"
"         (list (static-networking\n"
"                ;; The default provision is 'networking; if you're using any\n"
"                ;; other service with this provision, such as\n"
"                ;; `network-manager-service-type`, then you need to change the\n"
"                ;; default.\n"
"                (provision '(static-networking))\n"
"                (links\n"
"                 (list (network-link\n"
"                        (name \"virbr0\")\n"
"                        (type 'bridge)\n"
"                        (arguments '()))))\n"
"                (addresses\n"
"                 (list (network-address\n"
"                        (device \"virbr0\")\n"
"                        (value \"192.168.10.1/24\")))))))\n"
msgstr ""
"(service static-networking-service-type\n"
"         (list (static-networking\n"
"                ;; O provisionamento padrão é 'networking; se você está usando\n"
"                ;; qualquer outro serviço com esse provisionamento, tal como\n"
"                ;; `network-manager-service-type`, então você precisa mudar o\n"
"                ;; padrão.\n"
"                (provision '(static-networking))\n"
"                (links\n"
"                 (list (network-link\n"
"                        (name \"virbr0\")\n"
"                        (type 'bridge)\n"
"                        (arguments '()))))\n"
"                (addresses\n"
"                 (list (network-address\n"
"                        (device \"virbr0\")\n"
"                        (value \"192.168.10.1/24\")))))))\n"

msgid "Running dnsmasq for the virtual network bridge"
msgstr "Executando dnsmasq para a ponte de rede virtual"

msgid "The @code{dnsmasq-service-type} can be used to provide DNS and DHCP for guests connected to this virtual network switch:"
msgstr "O @code{dnsmasq-service-type} pode ser usado para fornecer serviços de DNS e DHCP para convidados conectados a esse comutador de rede virtual:"

msgid ""
"(service dnsmasq-service-type\n"
"         (dnsmasq-configuration\n"
"          ;; You can have multiple instances of `dnsmasq-service-type` as long\n"
"          ;; as each one has a different shepherd-provision.\n"
"          (shepherd-provision '(dnsmasq-virbr0))\n"
"          (extra-options (list\n"
"                          ;; Only bind to the virtual bridge. This\n"
"                          ;; avoids conflicts with other running\n"
"                          ;; dnsmasq instances.\n"
"                          \"--except-interface=lo\"\n"
"                          \"--interface=virbr0\"\n"
"                          \"--bind-dynamic\"\n"
"                          ;; IPv4 addresses to offer to VMs. This\n"
"                          ;; should match the chosen subnet.\n"
"                          \"--dhcp-range=192.168.10.2,192.168.10.254\"))))\n"
msgstr ""
"(service dnsmasq-service-type\n"
"         (dnsmasq-configuration\n"
"          ;; Você pode ter múltiplas instâncias de `dnsmasq-service-type` desde\n"
"          ;; que cada uma tenha um provisionamento (shepherd-provision) diferente.\n"
"          (shepherd-provision '(dnsmasq-virbr0))\n"
"          (extra-options (list\n"
"                          ;; Somente liga à ponte virtual. Isso\n"
"                          ;; evita conflitos com outras instâncias\n"
"                          ;; de dnsmasq em execução.\n"
"                          \"--except-interface=lo\"\n"
"                          \"--interface=virbr0\"\n"
"                          \"--bind-dynamic\"\n"
"                          ;; Endereços IPv4 oferecidos para VMs.\n"
"                          ;; Isso deve corresponder à sub-rede escolhida.\n"
"                          \"--dhcp-range=192.168.10.2,192.168.10.254\"))))\n"

msgid "Configuring NAT for the virtual network switch"
msgstr "Configurando NAT para o comutador de rede virtual"

msgid "If you intend to use the virtual network switch in NAT mode, you will need to use nftables (or iptables) rules to set up IP masquerading.  The following example shows how to use @code{nftables-service-type} to do this:"
msgstr "Se você pretende usar o comutador de rede virtual em modo NAT, você precisará usar regras nftables (ou iptables) para configurar mascaramento de IP. O seguinte exemplo mostra como usar @code{nftables-service-type} para fazer isso:"

msgid ""
"(service nftables-service-type\n"
"         (nftables-configuration\n"
"          (ruleset\n"
"           (plain-file \"nftables.conf\"\n"
"                       \"\\\n"
"table inet filter @{\n"
"\n"
msgstr ""
"(service nftables-service-type\n"
"         (nftables-configuration\n"
"          (ruleset\n"
"           (plain-file \"nftables.conf\"\n"
"                       \"\\\n"
"table inet filter @{\n"
"\n"

msgid ""
"  chain input @{\n"
"    type filter hook input priority filter; policy drop;\n"
"    # Add your existing packet filtering rules here...\n"
"    iifname virbr0 udp dport 67 counter accept comment \\\"allow dhcp on virbr0\\\"\n"
"    iifname virbr0 meta l4proto @{tcp, udp@} th dport 53 accept \\\\\n"
"        comment \\\"allow dns on virbr0\\\"\n"
"  @}\n"
"\n"
msgstr ""
"  chain input @{\n"
"    type filter hook input priority filter; policy drop;\n"
"    # Adicione suas regras de filtragem de pacotes existente aqui...\n"
"    iifname virbr0 udp dport 67 counter accept comment \\\"allow dhcp on virbr0\\\"\n"
"    iifname virbr0 meta l4proto @{tcp, udp@} th dport 53 accept \\\\\n"
"        comment \\\"allow dns on virbr0\\\"\n"
"  @}\n"
"\n"

msgid ""
"  chain forward @{\n"
"    type filter hook forward priority filter; policy drop;\n"
"    # Add your existing forwarding rules here...\n"
"    iifname virbr0 accept comment \\\"allow outbound traffic from virbr0\\\"\n"
"    oifname virbr0 ct state @{established, related @} accept \\\\\n"
"        comment \\\"allow established traffic to virbr0\\\"\n"
"  @}\n"
"\n"
msgstr ""
"  chain forward @{\n"
"    type filter hook forward priority filter; policy drop;\n"
"    # Adicione suas regras de redirecionamento aqui...\n"
"    iifname virbr0 accept comment \\\"allow outbound traffic from virbr0\\\"\n"
"    oifname virbr0 ct state @{established, related @} accept \\\\\n"
"        comment \\\"allow established traffic to virbr0\\\"\n"
"  @}\n"
"\n"

msgid ""
"@}\n"
"\n"
msgstr ""
"@}\n"
"\n"

msgid ""
"table inet nat @{\n"
"  chain postrouting @{\n"
"    type nat hook postrouting priority srcnat; policy accept;\n"
"    # Add your existing nat rules here...\n"
"    iifname virbr0 ip daddr @{ 224.0.0.0/24, 255.255.255.255/32 @} return \\\\\n"
"        comment \\\"don't masquerade to reserved address blocks\\\"\n"
"    iifname virbr0 oifname != virbr0 masquerade \\\\\n"
"        comment \\\"masquerade all outgoing traffic from VMs\\\"\n"
"  @}\n"
"@}\n"
"\"))))\n"
msgstr ""
"table inet nat @{\n"
"  chain postrouting @{\n"
"    type nat hook postrouting priority srcnat; policy accept;\n"
"    # Adicione suas regras de NAT existentes aqui...\n"
"    iifname virbr0 ip daddr @{ 224.0.0.0/24, 255.255.255.255/32 @} return \\\\\n"
"        comment \\\"don't masquerade to reserved address blocks\\\"\n"
"    iifname virbr0 oifname != virbr0 masquerade \\\\\n"
"        comment \\\"masquerade all outgoing traffic from VMs\\\"\n"
"  @}\n"
"@}\n"
"\"))))\n"

msgid "Ensure that you have IPv4 forwarding enabled (you can use @code{sysctl-service-type} for this)."
msgstr "Certifique-se de que o encaminhamento IPv4 esteja habilitado (você pode usar @code{sysctl-service-type} para isso)."

msgid "VM References"
msgstr "Referências de MV"

msgid "@uref{https://jamielinux.com/docs/libvirt-networking-handbook/index.html, The (unofficial) libvirt Networking Handbook}@* Note that this resource is rather outdated at the time of writing (as of March 2025, it was last updated in 2015).  Nevertheless, the authors of this chapter have found it to be a valuable source of information."
msgstr "@uref{https://jamielinux.com/docs/libvirt-networking-handbook/index.html, O Manual de Rede (não oficial) da libvirt}@* Note que este recurso está bastante desatualizado no momento da escrita (em março de 2025, foi atualizado pela última vez em 2015). No entanto, os autores deste capítulo descobriram que ele é uma fonte valiosa de informações."

msgid "Guix is a functional package manager that offers many features beyond what more traditional package managers can do.  To the uninitiated, those features might not have obvious use cases at first.  The purpose of this chapter is to demonstrate some advanced package management concepts."
msgstr "Guix é um gerenciador de pacotes funcional que oferece muitos recursos além do que os gerenciadores de pacotes mais tradicionais podem fazer. Para os não iniciados, esses recursos podem não ter casos de uso óbvios a princípio. O propósito deste capítulo é demonstrar alguns conceitos avançados de gerenciamento de pacotes."

msgid "@pxref{Package Management,,, guix, GNU Guix Reference Manual} for a complete reference."
msgstr "@pxref{Gerenciamento de pacotes,,, guix.pt_BR, Manual de Referência GNU Guix} para uma referência completa."

msgid "Guix provides a very useful feature that may be quite foreign to newcomers: @dfn{profiles}.  They are a way to group package installations together and all users on the same system are free to use as many profiles as they want."
msgstr "Guix fornece um recurso muito útil que pode ser bem estranho para novatos: @dfn{profiles}. Eles são uma maneira de agrupar instalações de pacotes e todos os usuários no mesmo sistema são livres para usar quantos perfis quiserem."

msgid "Whether you're a developer or not, you may find that multiple profiles bring you great power and flexibility.  While they shift the paradigm somewhat compared to @emph{traditional package managers}, they are very convenient to use once you've understood how to set them up."
msgstr "Seja você um desenvolvedor ou não, você pode descobrir que múltiplos perfis trazem grande poder e flexibilidade. Embora eles mudem um pouco o paradigma em comparação aos @emph{gerenciadores de pacotes tradicionais}, eles são muito convenientes de usar depois que você entende como configurá-los."

msgid "This section is an opinionated guide on the use of multiple profiles.  It predates @command{guix shell} and its fast profile cache (@pxref{Invoking guix shell,,, guix, GNU Guix Reference Manual})."
msgstr "Esta seção é um guia opinativo sobre o uso de múltiplos perfis. Ele é anterior ao @command{guix shell} e seu cache de perfil rápido (@pxref{Invocando guix shell,,, guix.pt_BR, Manual de Referência do GNU Guix})."

msgid "In many cases, you may find that using @command{guix shell} to set up the environment you need, when you need it, is less work that maintaining a dedicated profile.  Your call!"
msgstr "Em muitos casos, você pode descobrir que usar @command{guix shell} para configurar o ambiente que você precisa, quando você precisa, dá menos trabalho do que manter um perfil dedicado. Sua escolha!"

msgid "If you are familiar with Python's @samp{virtualenv}, you can think of a profile as a kind of universal @samp{virtualenv} that can hold any kind of software whatsoever, not just Python software.  Furthermore, profiles are self-sufficient: they capture all the runtime dependencies which guarantees that all programs within a profile will always work at any point in time."
msgstr "Se você estiver familiarizado com o @samp{virtualenv} do Python, você pode pensar em um perfil como um tipo de @samp{virtualenv} universal que pode conter qualquer tipo de software, não apenas software Python. Além disso, os perfis são autossuficientes: eles capturam todas as dependências de tempo de execução, o que garante que todos os programas dentro de um perfil sempre funcionarão em qualquer ponto do tempo."

msgid "Multiple profiles have many benefits:"
msgstr "Perfis múltiplos têm muitos benefícios:"

msgid "Clean semantic separation of the various packages a user needs for different contexts."
msgstr "Separação semântica limpa dos vários pacotes que um usuário precisa para diferentes contextos."

msgid "Multiple profiles can be made available into the environment either on login or within a dedicated shell."
msgstr "Vários perfis podem ser disponibilizados no ambiente no login ou em um shell dedicado."

msgid "Profiles can be loaded on demand.  For instance, the user can use multiple shells, each of them running different profiles."
msgstr "Os perfis podem ser carregados sob demanda. Por exemplo, o usuário pode usar vários shells, cada um deles executando perfis diferentes."

msgid "Isolation: Programs from one profile will not use programs from the other, and the user can even install different versions of the same programs to the two profiles without conflict."
msgstr "Isolamento: programas de um perfil não usarão programas do outro, e o usuário pode até instalar versões diferentes dos mesmos programas nos dois perfis sem conflito."

msgid "Deduplication: Profiles share dependencies that happens to be the exact same.  This makes multiple profiles storage-efficient."
msgstr "Deduplicação: Perfis compartilham dependências que são exatamente as mesmas. Isso torna o armazenamento de múltiplos perfis eficiente."

msgid "Reproducible: when used with declarative manifests, a profile can be fully specified by the Guix commit that was active when it was set up.  This means that the exact same profile can be @uref{https://guix.gnu.org/blog/2018/multi-dimensional-transactions-and-rollbacks-oh-my/, set up anywhere and anytime}, with just the commit information.  See the section on @ref{Reproducible profiles}."
msgstr "Reproduzível: quando usado com manifestos declarativos, um perfil pode ser totalmente especificado pelo commit do Guix que estava ativo quando foi configurado. Isso significa que o mesmo perfil exato pode ser @uref{https://guix.gnu.org/blog/2018/multi-dimensional-transactions-and-rollbacks-oh-my/, configurado em qualquer lugar e a qualquer hora}, com apenas as informações de commit. Veja a seção sobre @ref{Reproducible profiles}."

msgid "Easier upgrades and maintenance: Multiple profiles make it easy to keep package listings at hand and make upgrades completely frictionless."
msgstr "Atualizações e manutenção mais fáceis: vários perfis facilitam a manutenção de listas de pacotes em mãos e tornam as atualizações completamente sem atrito."

msgid "Concretely, here follows some typical profiles:"
msgstr "Concretamente, seguem alguns perfis típicos:"

msgid "The dependencies of a project you are working on."
msgstr "As dependências de um projeto no qual você está funcionando."

msgid "Your favourite programming language libraries."
msgstr "Suas bibliotecas de linguagens de programação favoritas."

msgid "Laptop-specific programs (like @samp{powertop}) that you don't need on a desktop."
msgstr "Programas específicos para laptop (como @samp{powertop}) que você não precisa em um desktop."

msgid "@TeX{}live (this one can be really useful when you need to install just one package for this one document you've just received over email)."
msgstr "@TeX{}live (este pode ser muito útil quando você precisa instalar apenas um pacote para este documento que acabou de receber por e-mail)."

msgid "Games."
msgstr "Jogos."

msgid "Let's dive in the set up!"
msgstr "Vamos mergulhar na configuração!"

msgid "A Guix profile can be set up @i{via} a @dfn{manifest}.  A manifest is a snippet of Scheme code that specifies the set of packages you want to have in your profile; it looks like this:"
msgstr "Um perfil Guix pode ser configurado @i{via} um @dfn{manifest}. Um manifesto é um trecho de código Scheme que especifica o conjunto de pacotes que você quer ter em seu perfil; parece com isso:"

msgid ""
"(specifications->manifest\n"
"  '(\"package-1\"\n"
"    ;; Version 1.3 of package-2.\n"
"    \"package-2@@1.3\"\n"
"    ;; The \"lib\" output of package-3.\n"
"    \"package-3:lib\"\n"
"    ; ...\n"
"    \"package-N\"))\n"
msgstr ""
"(specifications->manifest\n"
" '(\"pacote-1\"\n"
"   ;; Versão 1.3 do pacote-2.\n"
"   \"pacote-2@@1.3\"\n"
"   ;; A saída \"lib\" do pacote-3.\n"
"   \"pacote-3:lib\"\n"
"   ; ...\n"
"   \"pacote-N\"))\n"

msgid "@xref{Writing Manifests,,, guix, GNU Guix Reference Manual}, for more information about the syntax."
msgstr "@xref{Escrevendo manifestos,,, guix.pt_BR, Manual de referência do GNU Guix}, para mais informações sobre a sintaxe."

msgid "We can create a manifest specification per profile and install them this way:"
msgstr "Podemos criar uma especificação de manifesto por perfil e instalá-los desta maneira:"

msgid ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"mkdir -p \"$GUIX_EXTRA_PROFILES\"/my-project # if it does not exist yet\n"
"guix package --manifest=/path/to/guix-my-project-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"
msgstr ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"mkdir -p \"$GUIX_EXTRA_PROFILES\"/meu-projeto # se ainda não existir\n"
"guix package --manifest=/caminho/para/guix-meu-projeto-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/meu-projeto/meu-projeto\n"

msgid "Here we set an arbitrary variable @samp{GUIX_EXTRA_PROFILES} to point to the directory where we will store our profiles in the rest of this article."
msgstr "Aqui definimos uma variável arbitrária @samp{GUIX_EXTRA_PROFILES} para apontar para o diretório onde armazenaremos nossos perfis no restante deste artigo."

msgid "Placing all your profiles in a single directory, with each profile getting its own sub-directory, is somewhat cleaner.  This way, each sub-directory will contain all the symlinks for precisely one profile.  Besides, ``looping over profiles'' becomes obvious from any programming language (e.g.@: a shell script) by simply looping over the sub-directories of @samp{$GUIX_EXTRA_PROFILES}."
msgstr "Colocar todos os seus perfis em um único diretório, com cada perfil recebendo seu próprio subdiretório, é um pouco mais limpo. Dessa forma, cada subdiretório conterá todos os links simbólicos para precisamente um perfil. Além disso, ``fazer loop sobre perfis'' se torna óbvio em qualquer linguagem de programação (por exemplo, um script de shell) simplesmente fazendo loop sobre os subdiretórios de @samp{$GUIX_EXTRA_PROFILES}."

msgid "Note that it's also possible to loop over the output of"
msgstr "Observe que também é possível fazer um loop na saída de"

msgid "guix package --list-profiles\n"
msgstr "guix package --list-profiles\n"

msgid "although you'll probably have to filter out @file{~/.config/guix/current}."
msgstr "embora você provavelmente tenha que filtrar @file{~/.config/guix/current}."

msgid "To enable all profiles on login, add this to your @file{~/.bash_profile} (or similar):"
msgstr "Para habilitar todos os perfis no login, adicione isto ao seu @file{~/.bash_profile} (ou similar):"

msgid ""
"for i in $GUIX_EXTRA_PROFILES/*; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"
msgstr ""
"for i in $GUIX_EXTRA_PROFILES/*; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"

msgid "Note to Guix System users: the above reflects how your default profile @file{~/.guix-profile} is activated from @file{/etc/profile}, that latter being loaded by @file{~/.bashrc} by default."
msgstr "Nota para usuários do sistema Guix: o acima reflete como seu perfil padrão @file{~/.guix-profile} é ativado a partir de @file{/etc/profile}, sendo este último carregado por @file{~/.bashrc} por padrão."

msgid "You can obviously choose to only enable a subset of them:"
msgstr "Obviamente, você pode escolher habilitar apenas um subconjunto deles:"

msgid ""
"for i in \"$GUIX_EXTRA_PROFILES\"/my-project-1 \"$GUIX_EXTRA_PROFILES\"/my-project-2; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"
msgstr ""
"for i in \"$GUIX_EXTRA_PROFILES\"/meu-projeto-1 \"$GUIX_EXTRA_PROFILES\"/meu-projeto-2; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"

msgid "When a profile is off, it's straightforward to enable it for an individual shell without \"polluting\" the rest of the user session:"
msgstr "Quando um perfil está desativado, é fácil habilitá-lo para um shell individual sem \"poluir\" o restante da sessão do usuário:"

msgid "GUIX_PROFILE=\"path/to/my-project\" ; . \"$GUIX_PROFILE\"/etc/profile\n"
msgstr "GUIX_PROFILE=\"caminho/para/meu-projeto\" ; . \"$GUIX_PROFILE\"/etc/profile\n"

msgid "The key to enabling a profile is to @emph{source} its @samp{etc/profile} file.  This file contains shell code that exports the right environment variables necessary to activate the software contained in the profile.  It is built automatically by Guix and meant to be sourced.  It contains the same variables you would get if you ran:"
msgstr "A chave para habilitar um perfil é @emph{source} seu arquivo @samp{etc/profile}. Este arquivo contém código shell que exporta as variáveis de ambiente corretas necessárias para ativar o software contido no perfil. Ele é construído automaticamente pelo Guix e deve ser sourced. Ele contém as mesmas variáveis que você obteria se executasse:"

msgid "guix package --search-paths=prefix --profile=$my_profile\"\n"
msgstr "guix package --search-paths=prefix --profile=$meu_perfil\"\n"

msgid "Once again, see @ref{Invoking guix package,,, guix, GNU Guix Reference Manual} for the command line options."
msgstr "Mais uma vez, veja @ref{Invocando guix package,,, guix.pt_BR, Manual de referência do GNU Guix} para as opções de linha de comando."

msgid "To upgrade a profile, simply install the manifest again:"
msgstr "Para atualizar um perfil, basta instalar o manifesto novamente:"

msgid ""
"guix package -m /path/to/guix-my-project-manifest.scm \\\n"
" -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"
msgstr ""
"guix package -m /caminho/para/guix-meu-projeto-manifest.scm \\\n"
" -p \"$GUIX_EXTRA_PROFILES\"/meu-projeto/meu-projeto\n"

msgid "To upgrade all profiles, it's easy enough to loop over them.  For instance, assuming your manifest specifications are stored in @file{~/.guix-manifests/guix-$profile-manifest.scm}, with @samp{$profile} being the name of the profile (e.g.@: \"project1\"), you could do the following in Bourne shell:"
msgstr "Para atualizar todos os perfis, é fácil fazer um loop sobre eles. Por exemplo, supondo que suas especificações de manifesto estejam armazenadas em @file{~/.guix-manifests/guix-$profile-manifest.scm}, com @samp{$profile} sendo o nome do perfil (por exemplo, \"project1\"), você pode fazer o seguinte no Bourne shell:"

msgid ""
"for profile in \"$GUIX_EXTRA_PROFILES\"/*; do\n"
"  guix package --profile=\"$profile\" \\\n"
"   --manifest=\"$HOME/.guix-manifests/guix-$profile-manifest.scm\"\n"
"done\n"
msgstr ""
"for profile in \"$GUIX_EXTRA_PROFILES\"/*; do\n"
"  guix package --profile=\"$profile\" \\\n"
"   --manifest=\"$HOME/.guix-manifests/guix-$profile-manifest.scm\"\n"
"done\n"

msgid "Each profile has its own generations:"
msgstr "Cada perfil tem suas próprias gerações:"

msgid "guix package -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project --list-generations\n"
msgstr "guix package -p \"$GUIX_EXTRA_PROFILES\"/meu-projeto/meu-projeto --list-generations\n"

msgid "You can roll-back to any generation of a given profile:"
msgstr "Você pode reverter para qualquer geração de um determinado perfil:"

msgid "guix package -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project --switch-generations=17\n"
msgstr "guix package -p \"$GUIX_EXTRA_PROFILES\"/meu-projeto/meu-projeto --switch-generations=17\n"

msgid "Finally, if you want to switch to a profile without inheriting from the current environment, you can activate it from an empty shell:"
msgstr "Por fim, se você quiser alternar para um perfil sem herdar do ambiente atual, poderá ativá-lo a partir de um shell vazio:"

msgid ""
"env -i $(which bash) --login --noprofile --norc\n"
". my-project/etc/profile\n"
msgstr ""
"env -i $(which bash) --login --noprofile --norc\n"
". meu-projeto/etc/profile\n"

msgid "Activating a profile essentially boils down to exporting a bunch of environmental variables.  This is the role of the @samp{etc/profile} within the profile."
msgstr "Ativar um perfil basicamente se resume a exportar um monte de variáveis ambientais. Essa é a função do @samp{etc/profile} dentro do perfil."

msgid "Note: Only the environmental variables of the packages that consume them will be set."
msgstr "Nota: Somente as variáveis de ambiente dos pacotes que os consomem serão definidas."

msgid "For instance, @samp{MANPATH} won't be set if there is no consumer application for man pages within the profile.  So if you need to transparently access man pages once the profile is loaded, you've got two options:"
msgstr "Por exemplo, @samp{MANPATH} não será definido se não houver um aplicativo de consumidor para páginas de manual dentro do perfil. Então, se você precisar acessar páginas de manual de forma transparente depois que o perfil for carregado, você tem duas opções:"

msgid "Either export the variable manually, e.g."
msgstr "Exporte a variável manualmente, por exemplo."

msgid "export MANPATH=/path/to/profile$@{MANPATH:+:@}$MANPATH\n"
msgstr "export MANPATH=/caminho/para/perfil$@{MANPATH:+:@}$MANPATH\n"

msgid "Or include @samp{man-db} to the profile manifest."
msgstr "Ou inclua @samp{man-db} no manifesto do perfil."

msgid "The same is true for @samp{INFOPATH} (you can install @samp{info-reader}), @samp{PKG_CONFIG_PATH} (install @samp{pkg-config}), etc."
msgstr "O mesmo vale para @samp{INFOPATH} (você pode instalar @samp{info-reader}), @samp{PKG_CONFIG_PATH} (instale @samp{pkg-config}), etc."

msgid "What about the default profile that Guix keeps in @file{~/.guix-profile}?"
msgstr "E quanto ao perfil padrão que o Guix mantém em @file{~/.guix-profile}?"

msgid "You can assign it the role you want.  Typically you would install the manifest of the packages you want to use all the time."
msgstr "Você pode atribuir a ele o papel que quiser. Normalmente, você instalaria o manifesto dos pacotes que deseja usar o tempo todo."

msgid "Alternatively, you could keep it ``manifest-less'' for throw-away packages that you would just use for a couple of days.  This way makes it convenient to run"
msgstr "Alternativamente, você pode mantê-lo ``sem manifesto'' para pacotes descartáveis que você usaria apenas por alguns dias. Dessa forma, é conveniente executar"

msgid ""
"guix install package-foo\n"
"guix upgrade package-bar\n"
msgstr ""
"guix install package-foo\n"
"guix upgrade package-bar\n"

msgid "without having to specify the path to a profile."
msgstr "sem precisar especificar o caminho para um perfil."

msgid "Manifests let you @dfn{declare} the set of packages you'd like to have in a profile (@pxref{Writing Manifests,,, guix, GNU Guix Reference Manual}).  They are a convenient way to keep your package lists around and, say, to synchronize them across multiple machines using a version control system."
msgstr "Manifestos permitem que você @dfn{declare} o conjunto de pacotes que você gostaria de ter em um perfil (@pxref{Escrevendo manifestos,,, guix.pt_BR, Manual de Referência do GNU Guix}). Eles são uma maneira conveniente de manter suas listas de pacotes por perto e, digamos, sincronizá-las em várias máquinas usando um sistema de controle de versão."

msgid "A common complaint about manifests is that they can be slow to install when they contain large number of packages.  This is especially cumbersome when you just want get an upgrade for one package within a big manifest."
msgstr "Uma reclamação comum sobre manifestos é que eles podem ser lentos para instalar quando contêm um grande número de pacotes. Isso é especialmente trabalhoso quando você só quer obter uma atualização para um pacote dentro de um grande manifesto."

msgid "This is one more reason to use multiple profiles, which happen to be just perfect to break down manifests into multiple sets of semantically connected packages.  Using multiple, small profiles provides more flexibility and usability."
msgstr "Esse é mais um motivo para usar múltiplos perfis, que são perfeitos para dividir manifestos em múltiplos conjuntos de pacotes semanticamente conectados. Usar múltiplos perfis pequenos fornece mais flexibilidade e usabilidade."

msgid "Manifests come with multiple benefits.  In particular, they ease maintenance:"
msgstr "Os manifestos vêm com múltiplos benefícios. Em particular, eles facilitam a manutenção:"

msgid "When a profile is set up from a manifest, the manifest itself is self-sufficient to keep a ``package listing'' around and reinstall the profile later or on a different system.  For ad-hoc profiles, we would need to generate a manifest specification manually and maintain the package versions for the packages that don't use the default version."
msgstr "Quando um perfil é configurado a partir de um manifesto, o manifesto em si é autossuficiente para manter uma ``listagem de pacotes'' por perto e reinstalar o perfil mais tarde ou em um sistema diferente. Para perfis ad-hoc, precisaríamos gerar uma especificação de manifesto manualmente e manter as versões de pacote para os pacotes que não usam a versão padrão."

msgid "@code{guix package --upgrade} always tries to update the packages that have propagated inputs, even if there is nothing to do.  Guix manifests remove this problem."
msgstr "@code{guix package --upgrade} sempre tenta atualizar os pacotes que propagaram entradas, mesmo que não haja nada a fazer. Os manifestos Guix removem esse problema."

msgid "When partially upgrading a profile, conflicts may arise (due to diverging dependencies between the updated and the non-updated packages) and they can be annoying to resolve manually.  Manifests remove this problem altogether since all packages are always upgraded at once."
msgstr "Ao atualizar parcialmente um perfil, podem surgir conflitos (devido a dependências divergentes entre os pacotes atualizados e não atualizados) e eles podem ser irritantes para resolver manualmente. Manifestos removem esse problema completamente, já que todos os pacotes são sempre atualizados de uma vez."

msgid "As mentioned above, manifests allow for reproducible profiles, while the imperative @code{guix install}, @code{guix upgrade}, etc. do not, since they produce different profiles every time even when they hold the same packages.  See @uref{https://issues.guix.gnu.org/issue/33285, the related discussion on the matter}."
msgstr "Conforme mencionado acima, manifestos permitem perfis reproduzíveis, enquanto os imperativos @code{guix install}, @code{guix upgrade}, etc. não, pois eles produzem perfis diferentes a cada vez, mesmo quando contêm os mesmos pacotes. Veja @uref{https://issues.guix.gnu.org/issue/33285, a discussão relacionada sobre o assunto}."

msgid "Manifest specifications are usable by other @samp{guix} commands.  For example, you can run @code{guix weather -m manifest.scm} to see how many substitutes are available, which can help you decide whether you want to try upgrading today or wait a while.  Another example: you can run @code{guix pack -m manifest.scm} to create a pack containing all the packages in the manifest (and their transitive references)."
msgstr "As especificações do manifesto podem ser usadas por outros comandos @samp{guix}. Por exemplo, você pode executar @code{guix weather -m manifest.scm} para ver quantos substitutos estão disponíveis, o que pode ajudar você a decidir se quer tentar atualizar hoje ou esperar um pouco. Outro exemplo: você pode executar @code{guix pack -m manifest.scm} para criar uma embalagem contenda todos os pacotes no manifesto (e suas referências transitivas)."

msgid "Finally, manifests have a Scheme representation, the @samp{<manifest>} record type.  They can be manipulated in Scheme and passed to the various Guix @uref{https://en.wikipedia.org/wiki/Api, APIs}."
msgstr "Finalmente, manifestos têm uma representação Scheme, o tipo de registro @samp{<manifest>}. Eles podem ser manipulados no Scheme e passados para as várias Guix @uref{https://pt.wikipedia.org/wiki/Interface_de_programa%C3%A7%C3%A3o_de_aplica%C3%A7%C3%B5es, APIs}."

msgid "It's important to understand that while manifests can be used to declare profiles, they are not strictly equivalent: profiles have the side effect that they ``pin'' packages in the store, which prevents them from being garbage-collected (@pxref{Invoking guix gc,,, guix, GNU Guix Reference Manual})  and ensures that they will still be available at any point in the future.  The @command{guix shell} command also protects recently-used profiles from garbage collection; profiles that have not been used for a while may be garbage-collected though, along with the packages they refer to."
msgstr "É importante entender que, embora manifestos possam ser usados para declarar perfis, eles não são estritamente equivalentes: perfis têm o efeito colateral de ``fixar'' pacotes no armazém, o que os impede de serem coletados como lixo (@pxref{Invocando guix gc,,, guix.pt_BR, Manual de Referência do GNU Guix}) e garante que eles ainda estarão disponíveis em qualquer ponto no futuro. O comando @command{guix shell} também protege perfis usados recentemente da coleta de lixo; perfis que não foram usados por um tempo podem ser coletados como lixo, junto com os pacotes aos quais eles se referem."

msgid "To be 100% sure that a given profile will never be collected, install the manifest to a profile and use @code{GUIX_PROFILE=/the/profile; . \"$GUIX_PROFILE\"/etc/profile} as explained above: this guarantees that our hacking environment will be available at all times."
msgstr "Para ter 100% de certeza de que um determinado perfil nunca será coletado, instale o manifesto em um perfil e use @code{GUIX_PROFILE=/o/perfil; . \"$GUIX_PROFILE\"/etc/profile} conforme explicado acima: isso garante que nosso ambiente de hacking estará disponível o tempo todo."

msgid "@emph{Security warning:} While keeping old profiles around can be convenient, keep in mind that outdated packages may not have received the latest security fixes."
msgstr "@emph{Aviso de segurança:} Embora manter perfis antigos possa ser conveniente, tenha em mente que pacotes desatualizados podem não ter recebido as correções de segurança mais recentes."

msgid "To reproduce a profile bit-for-bit, we need two pieces of information:"
msgstr "Para reproduzir um perfil bit por bit, precisamos de duas informações:"

msgid "a manifest (@pxref{Writing Manifests,,, guix, GNU Guix Reference Manual});"
msgstr "um manifesto (@pxref{Escrevendo manifestos,,, guix.pt_BR, Manual de referência do GNU Guix});"

msgid "a Guix channel specification (@pxref{Replicating Guix,,, guix, GNU Guix Reference Manual})."
msgstr "uma especificação de canal Guix (@pxref{Replicando Guix,,, guix.pt_BR, Manual de referência do GNU Guix})."

msgid "Indeed, manifests alone might not be enough: different Guix versions (or different channels) can produce different outputs for a given manifest."
msgstr "De fato, manifestos por si só podem não ser suficientes: diferentes versões do Guix (ou diferentes canais) podem produzir saídas diferentes para um determinado manifesto."

msgid "You can output the Guix channel specification with @samp{guix describe --format=channels} (@pxref{Invoking guix describe,,, guix, GNU Guix Reference Manual}).  Save this to a file, say @samp{channel-specs.scm}."
msgstr "Você pode emitir a especificação do canal Guix com @samp{guix describe --format=channels} (@pxref{Invocando guix describe,,, guix.pt_BR, Manual de referência do GNU Guix}). Salve isso em um arquivo, digamos @samp{channel-specs.scm}."

msgid "On another computer, you can use the channel specification file and the manifest to reproduce the exact same profile:"
msgstr "Em outro computador, você pode usar o arquivo de especificação de canal e o manifesto para reproduzir exatamente o mesmo perfil:"

msgid ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"GUIX_EXTRA=$HOME/.guix-extra\n"
"\n"
msgstr ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"GUIX_EXTRA=$HOME/.guix-extra\n"
"\n"

msgid ""
"mkdir -p \"$GUIX_EXTRA\"/my-project\n"
"guix pull --channels=channel-specs.scm --profile=\"$GUIX_EXTRA/my-project/guix\"\n"
"\n"
msgstr ""
"mkdir -p \"$GUIX_EXTRA\"/meu-projeto\n"
"guix pull --channels=channel-specs.scm --profile=\"$GUIX_EXTRA/meu-projeto/guix\"\n"
"\n"

msgid ""
"mkdir -p \"$GUIX_EXTRA_PROFILES/my-project\"\n"
"\"$GUIX_EXTRA\"/my-project/guix/bin/guix package \\\n"
" --manifest=/path/to/guix-my-project-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"
msgstr ""
"mkdir -p \"$GUIX_EXTRA_PROFILES/meu-projeto\"\n"
"\"$GUIX_EXTRA\"/meu-projeto/guix/bin/guix package \\\n"
" --manifest=/caminho/para/guix-meu-projeto-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/meu-projeto/meu-projeto\n"

msgid "It's safe to delete the Guix channel profile you've just installed with the channel specification, the project profile does not depend on it."
msgstr "É seguro excluir o perfil de canal Guix que você acabou de instalar com a especificação do canal, o perfil do projeto não depende dele."

msgid "development, with Guix"
msgstr "desenvolvimento, com Guix"

msgid "software development, with Guix"
msgstr "desenvolvimento de software, com Guix"

msgid "Guix is a handy tool for developers; @command{guix shell}, in particular, gives a standalone development environment for your package, no matter what language(s) it's written in (@pxref{Invoking guix shell,,, guix, GNU Guix Reference Manual}).  To benefit from it, you have to initially write a package definition and have it either in Guix proper, or in a channel, or directly in your project's source tree as a @file{guix.scm} file.  This last option is appealing: all developers have to do to get set up is clone the project's repository and run @command{guix shell}, with no arguments."
msgstr "Guix é uma ferramenta útil para desenvolvedores; @command{guix shell}, em particular, fornece um ambiente de desenvolvimento autônomo para seu pacote, não importa em qual(is) idioma(s) ele foi escrito (@pxref{Invocando guix shell,,, guix.pt_BR, Manual de referência do GNU Guix}). Para se beneficiar dele, você tem que inicialmente escrever uma definição de pacote e tê-la no Guix propriamente dito, ou em um canal, ou diretamente na árvore de código-fonte do seu projeto como um arquivo @file{guix.scm}. Esta última opção é atraente: tudo o que os desenvolvedores precisam fazer para configurar é clonar o repositório do projeto e executar @command{guix shell}, sem argumentos."

msgid "Development needs go beyond development environments though.  How can developers perform continuous integration of their code in Guix build environments? How can they deliver their code straight to adventurous users? This chapter describes a set of files developers can add to their repository to set up Guix-based development environments, continuous integration, and continuous delivery---all at once@footnote{This chapter is adapted from a @uref{https://guix.gnu.org/en/blog/2023/from-development-environments-to-continuous-integrationthe-ultimate-guide-to-software-development-with-guix/, blog post} published in June 2023 on the Guix web site.}."
msgstr "As necessidades de desenvolvimento vão além dos ambientes de desenvolvimento. Como os desenvolvedores podem realizar a integração contínua de seu código em ambientes de construção Guix? Como eles podem entregar seu código diretamente para usuários aventureiros? Este capítulo descreve um conjunto de arquivos que os desenvolvedores podem adicionar ao seu repositório para configurar ambientes de desenvolvimento baseados em Guix, integração contínua e entrega contínua --- tudo de uma vez @footnote{Este capítulo é uma adaptação de uma postagem de blog do @uref{https://guix.gnu.org/en/blog/2023/from-development-environments-to-continuous-integrationthe-ultimate-guide-to-software-development-with-guix/} publicada em junho de 2023 no site Guix.}."

msgid "How do we go about ``Guixifying'' a repository? The first step, as we've seen, will be to add a @file{guix.scm} at the root of the repository in question. We'll take @uref{https://www.gnu.org/software/guile,Guile} as an example in this chapter: it's written in Scheme (mostly) and C, and has a number of dependencies---a C compilation tool chain, C libraries, Autoconf and its friends, LaTeX, and so on. The resulting @file{guix.scm} looks like the usual package definition (@pxref{Defining Packages,,, guix, GNU Guix Reference Manual}), just without the @code{define-public} bit:"
msgstr "Como fazemos para ``Guixificar'' um repositório? O primeiro passo, como vimos, será adicionar um @file{guix.scm} na raiz do repositório em questão. Usaremos @uref{https://www.gnu.org/software/guile,Guile} como exemplo neste capítulo: ele é escrito em Scheme (principalmente) e C, e tem várias dependências --- uma cadeia de ferramentas de compilação C, bibliotecas C, Autoconf e seus amigos, LaTeX, e assim por diante. O @file{guix.scm} resultante se parece com a definição de pacote usual (@pxref{Definindo pacotes,,, guix.pt_BR, Manual de Referência GNU Guix}), só que sem o bit @code{define-public}:"

msgid ""
";; The ‘guix.scm’ file for Guile, for use by ‘guix shell’.\n"
"\n"
msgstr ""
";; O arquivo ‘guix.scm’ para Guile, para uso pelo ‘guix shell’.\n"
"\n"

msgid ""
"(use-modules (guix)\n"
"             (guix build-system gnu)\n"
"             ((guix licenses) #:prefix license:)\n"
"             (gnu packages autotools)\n"
"             (gnu packages base)\n"
"             (gnu packages bash)\n"
"             (gnu packages bdw-gc)\n"
"             (gnu packages compression)\n"
"             (gnu packages flex)\n"
"             (gnu packages gdb)\n"
"             (gnu packages gettext)\n"
"             (gnu packages gperf)\n"
"             (gnu packages libffi)\n"
"             (gnu packages libunistring)\n"
"             (gnu packages linux)\n"
"             (gnu packages pkg-config)\n"
"             (gnu packages readline)\n"
"             (gnu packages tex)\n"
"             (gnu packages texinfo)\n"
"             (gnu packages version-control))\n"
"\n"
msgstr ""
"(use-modules (guix)\n"
"             (guix build-system gnu)\n"
"             ((guix licenses) #:prefix license:)\n"
"             (gnu packages autotools)\n"
"             (gnu packages base)\n"
"             (gnu packages bash)\n"
"             (gnu packages bdw-gc)\n"
"             (gnu packages compression)\n"
"             (gnu packages flex)\n"
"             (gnu packages gdb)\n"
"             (gnu packages gettext)\n"
"             (gnu packages gperf)\n"
"             (gnu packages libffi)\n"
"             (gnu packages libunistring)\n"
"             (gnu packages linux)\n"
"             (gnu packages pkg-config)\n"
"             (gnu packages readline)\n"
"             (gnu packages tex)\n"
"             (gnu packages texinfo)\n"
"             (gnu packages version-control))\n"
"\n"

msgid ""
"(package\n"
"  (name \"guile\")\n"
"  (version \"3.0.99-git\")                          ;funky version number\n"
"  (source #f)                                     ;no source\n"
"  (build-system gnu-build-system)\n"
"  (native-inputs\n"
"   (append (list autoconf\n"
"                 automake\n"
"                 libtool\n"
"                 gnu-gettext\n"
"                 flex\n"
"                 texinfo\n"
"                 texlive-base                 ;for \"make pdf\"\n"
"                 texlive-epsf\n"
"                 gperf\n"
"                 git\n"
"                 gdb\n"
"                 strace\n"
"                 readline\n"
"                 lzip\n"
"                 pkg-config)\n"
"\n"
msgstr ""
"(package\n"
"  (name \"guile\")\n"
"  (version \"3.0.99-git\")                          ;número da versão funky\n"
"  (source #f)                                     ;nenhuma fonte\n"
"  (build-system gnu-build-system)\n"
"  (native-inputs\n"
"   (append (list autoconf\n"
"                 automake\n"
"                 libtool\n"
"                 gnu-gettext\n"
"                 flex\n"
"                 texinfo\n"
"                 texlive-base                 ;para \"make pdf\"\n"
"                 texlive-epsf\n"
"                 gperf\n"
"                 git\n"
"                 gdb\n"
"                 strace\n"
"                 readline\n"
"                 lzip\n"
"                 pkg-config)\n"
"\n"

msgid ""
"           ;; When cross-compiling, a native version of Guile itself is\n"
"           ;; needed.\n"
"           (if (%current-target-system)\n"
"               (list this-package)\n"
"               '())))\n"
"  (inputs\n"
"   (list libffi bash-minimal))\n"
"  (propagated-inputs\n"
"   (list libunistring libgc))\n"
"\n"
msgstr ""
"           ;; Ao compilar cruzadamente, uma versão nativa do próprio Guile é\n"
"           ;; needed.\n"
"           (if (%current-target-system)\n"
"               (list this-package)\n"
"               '())))\n"
"  (inputs\n"
"   (list libffi bash-minimal))\n"
"  (propagated-inputs\n"
"   (list libunistring libgc))\n"
"\n"

msgid ""
"  (native-search-paths\n"
"   (list (search-path-specification\n"
"          (variable \"GUILE_LOAD_PATH\")\n"
"          (files '(\"share/guile/site/3.0\")))\n"
"         (search-path-specification\n"
"          (variable \"GUILE_LOAD_COMPILED_PATH\")\n"
"          (files '(\"lib/guile/3.0/site-ccache\")))))\n"
"  (synopsis \"Scheme implementation intended especially for extensions\")\n"
"  (description\n"
"   \"Guile is the GNU Ubiquitous Intelligent Language for Extensions,\n"
"and it's actually a full-blown Scheme implementation!\")\n"
"  (home-page \"https://www.gnu.org/software/guile/\")\n"
"  (license license:lgpl3+))\n"
msgstr ""
"  (native-search-paths\n"
"   (list (search-path-specification\n"
"          (variable \"GUILE_LOAD_PATH\")\n"
"          (files '(\"share/guile/site/3.0\")))\n"
"         (search-path-specification\n"
"          (variable \"GUILE_LOAD_COMPILED_PATH\")\n"
"          (files '(\"lib/guile/3.0/site-ccache\")))))\n"
"  (synopsis \"Scheme implementation intended especially for extensions\")\n"
"  (description\n"
"   \"Guile is the GNU Ubiquitous Intelligent Language for Extensions,\n"
"and it's actually a full-blown Scheme implementation!\")\n"
"  (home-page \"https://www.gnu.org/software/guile/\")\n"
"  (license license:lgpl3+))\n"

msgid "Quite a bit of boilerplate, but now someone who'd like to hack on Guile now only needs to run:"
msgstr "um pouco de clichê, mas agora alguém que queira hackear o Guile só precisa executar:"

msgid "guix shell\n"
msgstr "guix shell\n"

msgid "That gives them a shell containing all the dependencies of Guile: those listed above, but also @emph{implicit dependencies} such as the GCC tool chain, GNU@ Make, sed, grep, and so on.  @xref{Invoking guix shell,,, guix, GNU Guix Reference Manual}, for more info on @command{guix shell}."
msgstr "Isso lhes dá um shell contendo todas as dependências do Guile: aquelas listadas acima, mas também @emph{dependências implícitas}, como a cadeia de ferramentas GCC, GNU@ Make, sed, grep e assim por diante. @xref{Invocando guix shell,,, guix.pt_BR, Manual de Referência do GNU Guix}, para mais informações sobre @command{guix shell}."

msgid "The chef's recommendation"
msgstr "Recomendação do chef"

msgid "Our suggestion is to create development environments like this:"
msgstr "Nossa sugestão é criar ambientes de desenvolvimento como este:"

msgid "guix shell --container --link-profile\n"
msgstr "guix shell --container --link-profile\n"

msgid "... or, for short:"
msgstr "... ou, para abreviar:"

msgid "guix shell -CP\n"
msgstr "guix shell -CP\n"

msgid "That gives a shell in an isolated container, and all the dependencies show up in @code{$HOME/.guix-profile}, which plays well with caches such as @file{config.cache} (@pxref{Cache Files,,, autoconf, Autoconf}) and absolute file names recorded in generated @code{Makefile}s and the likes. The fact that the shell runs in a container brings peace of mind: nothing but the current directory and Guile's dependencies is visible inside the container; nothing from the system can possibly interfere with your development."
msgstr "Isso dá um shell em um contêiner isolado, e todas as dependências aparecem em @code{$HOME/.guix-profile}, que funciona bem com caches como @file{config.cache} (@pxref{Cache Files,,, autoconf, Autoconf}) e nomes de arquivos absolutos registrados em @code{Makefile}s gerados e similares. O fato de o shell rodar em um contêiner traz paz de espírito: nada além do diretório atual e das dependências do Guile é visível dentro do contêiner; nada do sistema pode interferir no seu desenvolvimento."

msgid "Level 1: Building with Guix"
msgstr "Nível 1: Construindo com Guix"

msgid "Now that we have a package definition (@pxref{Getting Started}), why not also take advantage of it so we can build Guile with Guix? We had left the @code{source} field empty, because @command{guix shell} above only cares about the @emph{inputs} of our package---so it can set up the development environment---not about the package itself."
msgstr "Agora que temos uma definição de pacote (@pxref{Getting Started}), por que não tirar vantagem dela também para que possamos construir o Guile com o Guix? Deixamos o campo @code{source} vazio, porque o @command{guix shell} acima só se importa com as @emph{inputs} do nosso pacote---para que ele possa configurar o ambiente de desenvolvimento---não com o pacote em si."

msgid "To build the package with Guix, we'll need to fill out the @code{source} field, along these lines:"
msgstr "Para construir o pacote com Guix, precisaremos preencher o campo @code{source}, desta forma:"

msgid ""
"(use-modules (guix)\n"
"             (guix git-download)  ;for ‘git-predicate’\n"
"             @dots{})\n"
"\n"
msgstr ""
"(use-modules (guix)\n"
"             (guix git-download)  ;para ‘git-predicate’\n"
"             @dots{})\n"
"\n"

msgid ""
"(define vcs-file?\n"
"  ;; Return true if the given file is under version control.\n"
"  (or (git-predicate (current-source-directory))\n"
"      (const #t)))                                ;not in a Git checkout\n"
"\n"
msgstr ""
"(define vcs-file?\n"
"  ;; Retorna verdadeiro se o arquivo fornecido estiver sob controle de versão.\n"
"  (or (git-predicate (current-source-directory))\n"
"      (const #t)))                                ;não em um checkout do Git\n"
"\n"

msgid ""
"(package\n"
"  (name \"guile\")\n"
"  (version \"3.0.99-git\")                          ;funky version number\n"
"  (source (local-file \".\" \"guile-checkout\"\n"
"                      #:recursive? #t\n"
"                      #:select? vcs-file?))\n"
"  @dots{})\n"
msgstr ""
"(package\n"
"  (name \"guile\")\n"
"  (version \"3.0.99-git\")                          ;número da versão funky\n"
"  (source (local-file \".\" \"guile-checkout\"\n"
"                      #:recursive? #t\n"
"                      #:select? vcs-file?))\n"
"  @dots{})\n"

msgid "Here's what we changed compared to the previous section:"
msgstr "Aqui está o que mudamos em comparação à seção anterior:"

msgid "We added @code{(guix git-download)} to our set of imported modules, so we can use its @code{git-predicate} procedure."
msgstr "Adicionamos @code{(guix git-download)} ao nosso conjunto de módulos importados, para que possamos usar seu procedimento @code{git-predicate}."

msgid "We defined @code{vcs-file?} as a procedure that returns true when passed a file that is under version control. For good measure, we add a fallback case for when we're not in a Git checkout: always return true."
msgstr "Definimos @code{vcs-file?} como um procedimento que retorna true quando passado um arquivo que está sob controle de versão. Para uma boa medida, adicionamos um caso de fallback para quando não estamos em um checkout do Git: sempre retorna true."

msgid "We set @code{source} to a @uref{https://guix.gnu.org/manual/devel/en/html_node/G_002dExpressions.html#index-local_002dfile,@code{local-file}}---a recursive copy of the current directory (@code{\".\"}), limited to files under version control (the @code{#:select?} bit)."
msgstr "Definimos @code{source} como um @uref{https://guix.gnu.org/manual/devel/pt-br/html_node/Expressoes_002dG.html#index-local_002dfile,@code{local-file}}---uma cópia recursiva do diretório atual (@code{\".\"}), limitado a arquivos sob controle de versão (o bit @code{#:select?})."

msgid "From there on, our @file{guix.scm} file serves a second purpose: it lets us build the software with Guix. The whole point of building with Guix is that it's a ``clean'' build---you can be sure nothing from your working tree or system interferes with the build result---and it lets you test a variety of things. First, you can do a plain native build:"
msgstr "A partir daí, nosso arquivo @file{guix.scm} serve a um segundo propósito: ele nos permite construir o software com Guix. O ponto principal de construir com Guix é que é uma construção ``limpa'' --- você pode ter certeza de que nada da sua árvore de trabalho ou sistema interfere no resultado da construção --- e ele permite que você teste uma variedade de coisas. Primeiro, você pode fazer uma construção nativa simples:"

msgid "guix build -f guix.scm\n"
msgstr "guix build -f guix.scm\n"

msgid "But you can also build for another system (possibly after setting up @pxref{Daemon Offload Setup, offloading,, guix, GNU Guix Reference Manual} or @pxref{Virtualization Services, transparent emulation,, guix, GNU Guix Reference Manual}):"
msgstr "Mas você também pode compilar para outro sistema (possivelmente após configurar @pxref{Daemon Offload Setup, offloading,, guix, GNU Guix Reference Manual} ou @pxref{Serviços de virtualização, emulação transparente,, guix.pt_BR, Manual de referência do GNU Guix}):"

msgid "guix build -f guix.scm -s aarch64-linux -s riscv64-linux\n"
msgstr "guix build -f guix.scm -s aarch64-linux -s riscv64-linux\n"

msgid "@dots{} or cross-compile:"
msgstr "@dots{} ou compilação cruzada:"

msgid "guix build -f guix.scm --target=x86_64-w64-mingw32\n"
msgstr "guix build -f guix.scm --target=x86_64-w64-mingw32\n"

msgid "You can also use @dfn{package transformations} to test package variants (@pxref{Package Transformation Options,,, guix, GNU Guix Reference Manual}):"
msgstr "Você também pode usar @dfn{transformações de pacotes} para testar variantes de pacotes (@pxref{Opções de transformação de pacote,,, guix.pt_BR, Manual de referência do GNU Guix}):"

msgid ""
"# What if we built with Clang instead of GCC?\n"
"guix build -f guix.scm \\\n"
"  --with-c-toolchain=guile@@3.0.99-git=clang-toolchain\n"
"\n"
msgstr ""
"# E se construíssemos com Clang em vez de GCC?\n"
"guix build -f guix.scm \\\n"
"--with-c-toolchain=guile@@3.0.99-git=clang-toolchain\n"
"\n"

msgid ""
"# What about that under-tested configure flag?\n"
"guix build -f guix.scm \\\n"
"  --with-configure-flag=guile@@3.0.99-git=--disable-networking\n"
msgstr ""
"# E quanto ao sinalizador configure pouco testado?\n"
"guix build -f guix.scm \\\n"
"  --with-configure-flag=guile@@3.0.99-git=--disable-networking\n"

msgid "Handy!"
msgstr "Útil!"

msgid "Level 2: The Repository as a Channel"
msgstr "Nível 2: O Repositório como Canal"

msgid "We now have a Git repository containing (among other things) a package definition (@pxref{Building with Guix}).  Can't we turn it into a @dfn{channel} (@pxref{Channels,,, guix, GNU Guix Reference Manual})? After all, channels are designed to ship package definitions to users, and that's exactly what we're doing with our @file{guix.scm}."
msgstr "Agora temos um repositório Git contendo (entre outras coisas) uma definição de pacote (@pxref{Building with Guix}). Não podemos transformá-lo em um @dfn{channel} (@pxref{Canais,,, guix.pt_BR, Manual de referência do GNU Guix})? Afinal, os canais são projetados para enviar definições de pacotes aos usuários, e é exatamente isso que estamos fazendo com nosso @file{guix.scm}."

msgid "Turns out we can indeed turn it into a channel, but with one caveat: we must create a separate directory for the @code{.scm} file(s) of our channel so that @command{guix pull} doesn't load unrelated @code{.scm} files when someone pulls the channel---and in Guile, there are lots of them! So we'll start like this, keeping a top-level @file{guix.scm} symlink for the sake of @command{guix shell}:"
msgstr "Acontece que podemos realmente transformá-lo em um canal, mas com uma ressalva: precisamos criar um diretório separado para o(s) arquivo(s) @code{.scm} do nosso canal para que @command{guix pull} não carregue arquivos @code{.scm} não relacionados quando alguém puxar o canal --- e no Guile, há muitos deles! Então, começaremos assim, mantendo um link simbólico @file{guix.scm} de nível superior para o bem do @command{guix shell}:"

msgid ""
"mkdir -p .guix/modules\n"
"mv guix.scm .guix/modules/guile-package.scm\n"
"ln -s .guix/modules/guile-package.scm guix.scm\n"
msgstr ""
"mkdir -p .guix/modules\n"
"mv guix.scm .guix/modules/guile-package.scm\n"
"ln -s .guix/modules/guile-package.scm guix.scm\n"

msgid "To make it usable as part of a channel, we need to turn our @file{guix.scm} file into a @dfn{package module} (@pxref{Package Modules,,, guix, GNU Guix Reference Manual}): we do that by changing the @code{use-modules} form at the top to a @code{define-module} form. We also need to actually @emph{export} a package variable, with @code{define-public}, while still returning the package value at the end of the file so we can still use @command{guix shell} and @command{guix build -f guix.scm}. The end result looks like this (not repeating things that haven't changed):"
msgstr "Para torná-lo utilizável como parte de um canal, precisamos transformar nosso arquivo @file{guix.scm} em um @dfn{módulo de pacote} (@pxref{Módulos de pacote,,, guix.pt_BR, Manual de referência do GNU Guix}): fazemos isso alterando o formulário @code{use-modules} no topo para um formulário @code{define-module}. Também precisamos realmente @emph{exportar} uma variável de pacote, com @code{define-public}, enquanto ainda retornamos o valor do pacote no final do arquivo para que ainda possamos usar @command{guix shell} e @command{guix build -f guix.scm}. O resultado final se parece com isso (não repetindo coisas que não mudaram):"

msgid ""
"(define-module (guile-package)\n"
"  #:use-module (guix)\n"
"  #:use-module (guix git-download)   ;for ‘git-predicate’\n"
"  @dots{})\n"
"\n"
msgstr ""
"(define-module (guile-package)\n"
"  #:use-module (guix)\n"
"  #:use-module (guix git-download)   ;para ‘git-predicate’\n"
"  @dots{})\n"
"\n"

msgid ""
"(define vcs-file?\n"
"  ;; Return true if the given file is under version control.\n"
"  (or (git-predicate (dirname (dirname (current-source-directory))))\n"
"      (const #t)))                                ;not in a Git checkout\n"
"\n"
msgstr ""
"(define vcs-file?\n"
"  ;; Retorna verdadeiro se o arquivo fornecido estiver sob controle de versão.\n"
"  (or (git-predicate (dirname (dirname (current-source-directory))))\n"
"      (const #t)))                                ;não em um checkout do Git\n"
"\n"

msgid ""
"(define-public guile\n"
"  (package\n"
"    (name \"guile\")\n"
"    (version \"3.0.99-git\")                          ;funky version number\n"
"    (source (local-file \"../..\" \"guile-checkout\"\n"
"                        #:recursive? #t\n"
"                        #:select? vcs-file?))\n"
"    @dots{}))\n"
"\n"
msgstr ""
"(define-public guile\n"
"  (package\n"
"    (name \"guile\")\n"
"    (version \"3.0.99-git\")                          ;número da versão funky\n"
"    (source (local-file \"../..\" \"guile-checkout\"\n"
"                        #:recursive? #t\n"
"                        #:select? vcs-file?))\n"
"    @dots{}))\n"
"\n"

msgid ""
";; Return the package object define above at the end of the module.\n"
"guile\n"
msgstr ""
";; Retorna o objeto do pacote definido acima no final do módulo.\n"
"guile\n"

msgid "We need one last thing: a @uref{https://guix.gnu.org/manual/devel/en/html_node/Package-Modules-in-a-Sub_002ddirectory.html,@code{.guix-channel} file} so Guix knows where to look for package modules in our repository:"
msgstr "Precisamos de uma última coisa: um arquivo @uref{https://guix.gnu.org/manual/devel/pt-br/html_node/Modulos-de-pacote-em-um-subdiretorio,@code{.guix-channel}} para que o Guix saiba onde procurar módulos de pacote em nosso repositório:"

msgid ""
";; This file lets us present this repo as a Guix channel.\n"
"\n"
msgstr ""
";; Este arquivo nos permite apresentar este repositório como um canal Guix.\n"
"\n"

msgid ""
"(channel\n"
"  (version 0)\n"
"  (directory \".guix/modules\"))  ;look for package modules under .guix/modules/\n"
msgstr ""
"(channel\n"
"  (version 0)\n"
"  (directory \".guix/modules\"))  ;procure por módulos de pacote em .guix/modules/\n"

msgid "To recap, we now have these files:"
msgstr "Para recapitular, agora temos estes arquivos:"

msgid ""
".\n"
"├── .guix-channel\n"
"├── guix.scm → .guix/modules/guile-package.scm\n"
"└── .guix\n"
"    └── modules\n"
"       └── guile-package.scm\n"
msgstr ""
".\n"
"├── .guix-channel\n"
"├── guix.scm → .guix/modules/guile-package.scm\n"
"└── .guix\n"
"    └── modules\n"
"       └── guile-package.scm\n"

msgid "And that's it: we have a channel! (We could do better and support @uref{https://guix.gnu.org/manual/devel/en/html_node/Specifying-Channel-Authorizations.html,@emph{channel authentication}} so users know they're pulling genuine code. We'll spare you the details here but it's worth considering!) Users can pull from this channel by @uref{https://guix.gnu.org/manual/devel/en/html_node/Specifying-Additional-Channels.html,adding it to @code{~/.config/guix/channels.scm}}, along these lines:"
msgstr "E é isso: temos um canal! (Poderíamos fazer melhor e dar suporte a @uref{https://guix.gnu.org/manual/devel/pt-br/html_node/Especificando-autorizacoes-de-canal.html,@emph{autenticação de canal}} para que os usuários saibam que estão extraindo código genuíno. Vamos poupá-lo dos detalhes aqui, mas vale a pena considerar!) Os usuários podem extrair deste canal por @uref{https://guix.gnu.org/manual/devel/pt-br/html_node/Especificando-canais-adicionais.html,adicionando-o a @code{~/.config/guix/channels.scm}}, ao longo destas linhas:"

msgid ""
"(append (list (channel\n"
"                (name 'guile)\n"
"                (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                (branch \"main\")))\n"
"        %default-channels)\n"
msgstr ""
"(append (list (channel\n"
"                (name 'guile)\n"
"                (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                (branch \"main\")))\n"
"        %default-channels)\n"

msgid "After running @command{guix pull}, we can see the new package:"
msgstr "Após executar @command{guix pull}, podemos ver o novo pacote:"

msgid ""
"$ guix describe\n"
"Generation 264  May 26 2023 16:00:35    (current)\n"
"  guile 36fd2b4\n"
"    repository URL: https://git.savannah.gnu.org/git/guile.git\n"
"    branch: main\n"
"    commit: 36fd2b4920ae926c79b936c29e739e71a6dff2bc\n"
"  guix c5bc698\n"
"    repository URL: https://git.guix.gnu.org/guix.git\n"
"    commit: c5bc698e8922d78ed85989985cc2ceb034de2f23\n"
"$ guix package -A ^guile$\n"
"guile   3.0.99-git      out,debug       guile-package.scm:51:4\n"
"guile   3.0.9           out,debug       gnu/packages/guile.scm:317:2\n"
"guile   2.2.7           out,debug       gnu/packages/guile.scm:258:2\n"
"guile   2.2.4           out,debug       gnu/packages/guile.scm:304:2\n"
"guile   2.0.14          out,debug       gnu/packages/guile.scm:148:2\n"
"guile   1.8.8           out             gnu/packages/guile.scm:77:2\n"
"$ guix build guile@@3.0.99-git\n"
"[@dots{}]\n"
"/gnu/store/axnzbl89yz7ld78bmx72vpqp802dwsar-guile-3.0.99-git-debug\n"
"/gnu/store/r34gsij7f0glg2fbakcmmk0zn4v62s5w-guile-3.0.99-git\n"
msgstr ""
"$ guix describe\n"
"Geração 264 26 de maio de 2023 16:00:35 (atual)\n"
"  guile 36fd2b4\n"
"    URL do repositório: https://git.savannah.gnu.org/git/guile.git\n"
"    ramo: main\n"
"    commit: 36fd2b4920ae926c79b936c29e739e71a6dff2bc\n"
"  guix c5bc698\n"
"    URL do repositório: https://git.guix.gnu.org/guix.git\n"
"    commit: c5bc698e8922d78ed85989985cc2ceb034de2f23\n"
"$ guix package -A ^guile$\n"
"guile   3.0.99-git      out,debug       guile-package.scm:51:4\n"
"guile   3.0.9           out,debug       gnu/packages/guile.scm:317:2\n"
"guile   2.2.7           out,debug       gnu/packages/guile.scm:258:2\n"
"guile   2.2.4           out,debug       gnu/packages/guile.scm:304:2\n"
"guile   2.0.14          out,debug       gnu/packages/guile.scm:148:2\n"
"guile   1.8.8           out             gnu/packages/guile.scm:77:2\n"
"$ guix build guile@@3.0.99-git\n"
"[@dots{}]\n"
"/gnu/store/axnzbl89yz7ld78bmx72vpqp802dwsar-guile-3.0.99-git-debug\n"
"/gnu/store/r34gsij7f0glg2fbakcmmk0zn4v62s5w-guile-3.0.99-git\n"

msgid "That's how, as a developer, you get your software delivered directly into the hands of users! No intermediaries, yet no loss of transparency and provenance tracking."
msgstr "É assim que, como desenvolvedor, você tem seu software entregue diretamente nas mãos dos usuários! Sem intermediários, mas sem perda de transparência e rastreamento de procedência."

msgid "With that in place, it also becomes trivial for anyone to create Docker images, Deb/RPM packages, or a plain tarball with @command{guix pack} (@pxref{Invoking guix pack,,, guix, GNU Guix Reference Manual}):"
msgstr "Com isso em prática, também se torna trivial para qualquer um criar imagens Docker, pacotes Deb/RPM ou um tarball simples com @command{guix pack} (@pxref{Invocando guix pack,,, guix.pt_BR, Manual de Referência GNU Guix}):"

msgid ""
"# How about a Docker image of our Guile snapshot?\n"
"guix pack -f docker -S /bin=bin guile@@3.0.99-git\n"
"\n"
msgstr ""
"# Que tal uma imagem Docker do nosso instantâneo Guile?\n"
"guix pack -f docker -S /bin=bin guile@@3.0.99-git\n"
"\n"

msgid ""
"# And a relocatable RPM?\n"
"guix pack -f rpm -R -S /bin=bin guile@@3.0.99-git\n"
msgstr ""
"# E um RPM relocável?\n"
"guix pack -f rpm -R -S /bin=bin guile@@3.0.99-git\n"

msgid "Bonus: Package Variants"
msgstr "Bônus: Variantes do pacote"

msgid "We now have an actual channel, but it contains only one package (@pxref{The Repository as a Channel}).  While we're at it, we can define @dfn{package variants} (@pxref{Defining Package Variants,,, guix, GNU Guix Reference Manual}) in our @file{guile-package.scm} file, variants that we want to be able to test as Guile developers---similar to what we did above with transformation options. We can add them like so:"
msgstr "Agora temos um canal real, mas ele contém apenas um pacote (@pxref{The Repository as a Channel}). Enquanto estamos nisso, podemos definir @dfn{variantes de pacote} (@pxref{Definindo variantes de pacote,,, guix.pt_BR, Manual de Referência do GNU Guix}) em nosso arquivo @file{guile-package.scm}, variantes que queremos poder testar como desenvolvedores Guile---semelhante ao que fizemos acima com opções de transformação. Podemos adicioná-las assim:"

msgid ""
";; This is the ‘.guix/modules/guile-package.scm’ file.\n"
"\n"
msgstr ""
";; Este é o arquivo ‘.guix/modules/guile-package.scm’.\n"
"\n"

msgid ""
"(define-module (guile-package)\n"
"  @dots{})\n"
"\n"
msgstr ""
"(define-module (guile-package)\n"
"  @dots{})\n"
"\n"

msgid ""
"(define-public guile\n"
"  @dots{})\n"
"\n"
msgstr ""
"(define-public guile\n"
"  @dots{})\n"
"\n"

msgid ""
"(define (package-with-configure-flags p flags)\n"
"  \"Return P with FLAGS as additional 'configure' flags.\"\n"
"  (package/inherit p\n"
"    (arguments\n"
"     (substitute-keyword-arguments (package-arguments p)\n"
"       ((#:configure-flags original-flags #~(list))\n"
"        #~(append #$original-flags #$flags))))))\n"
"\n"
msgstr ""
"(define (package-with-configure-flags p flags)\n"
"  \"Retorna P com FLAGS como sinalizadores 'configure' adicionais.\"\n"
"  (package/inherit p\n"
"    (arguments\n"
"     (substitute-keyword-arguments (package-arguments p)\n"
"       ((#:configure-flags original-flags #~(list))\n"
"        #~(append #$original-flags #$flags))))))\n"
"\n"

msgid ""
"(define-public guile-without-threads\n"
"  (package\n"
"    (inherit (package-with-configure-flags guile\n"
"                                           #~(list \"--without-threads\")))\n"
"    (name \"guile-without-threads\")))\n"
"\n"
msgstr ""
"(define-public guile-without-threads\n"
"  (package\n"
"    (inherit (package-with-configure-flags guile\n"
"                                           #~(list \"--without-threads\")))\n"
"    (name \"guile-without-threads\")))\n"
"\n"

msgid ""
"(define-public guile-without-networking\n"
"  (package\n"
"    (inherit (package-with-configure-flags guile\n"
"                                           #~(list \"--disable-networking\")))\n"
"    (name \"guile-without-networking\")))\n"
"\n"
msgstr ""
"(define-public guile-without-networking\n"
"  (package\n"
"    (inherit (package-with-configure-flags guile\n"
"                                           #~(list \"--disable-networking\")))\n"
"    (name \"guile-without-networking\")))\n"
"\n"

msgid ""
";; Return the package object defined above at the end of the module.\n"
"guile\n"
msgstr ""
";; Retorna o objeto do pacote definido acima no final do módulo.\n"
"guile\n"

msgid "We can build these variants as regular packages once we've pulled the channel. Alternatively, from a checkout of Guile, we can run a command like this one from the top level:"
msgstr "Podemos construir essas variantes como pacotes regulares assim que tivermos puxado o canal. Alternativamente, a partir de um checkout do Guile, podemos executar um comando como este do nível superior:"

msgid "guix build -L $PWD/.guix/modules guile-without-threads\n"
msgstr "guix build -L $PWD/.guix/modules guile-without-threads\n"

msgid "Level 3: Setting Up Continuous Integration"
msgstr "Nível 3: Configurando a integração contínua"

msgid "continuous integration (CI)"
msgstr "integração contínua (CI)"

msgid "The channel we defined above (@pxref{The Repository as a Channel})  becomes even more interesting once we set up @uref{https://en.wikipedia.org/wiki/Continuous_integration, @dfn{continuous integration}} (CI). There are several ways to do that."
msgstr "O canal que definimos acima (@pxref{The Repository as a Channel}) se torna ainda mais interessante quando configuramos @uref{https://pt.wikipedia.org/wiki/Integra%C3%A7%C3%A3o_cont%C3%ADnua, @dfn{continuous integration}} (CI). Há várias maneiras de fazer isso."

msgid "You can use one of the mainstream continuous integration tools, such as GitLab-CI. To do that, you need to make sure you run jobs in a Docker image or virtual machine that has Guix installed. If we were to do that in the case of Guile, we'd have a job that runs a shell command like this one:"
msgstr "Você pode usar uma das principais ferramentas de integração contínua, como o GitLab-CI. Para fazer isso, você precisa ter certeza de executar jobs em uma imagem Docker ou máquina virtual que tenha o Guix instalado. Se fizéssemos isso no caso do Guile, teríamos um job que executa um comando shell como este:"

msgid "guix build -L $PWD/.guix/modules guile@@3.0.99-git\n"
msgstr "guix build -L $PWD/.guix/modules guile@@3.0.99-git\n"

msgid "Doing this works great and has the advantage of being easy to achieve on your favorite CI platform."
msgstr "Fazer isso funciona muito bem e tem a vantagem de ser fácil de fazer na sua plataforma de CI favorita."

msgid "That said, you'll really get the most of it by using @uref{https://guix.gnu.org/en/cuirass,Cuirass}, a CI tool designed for and tightly integrated with Guix. Using it is more work than using a hosted CI tool because you first need to set it up, but that setup phase is greatly simplified if you use its Guix System service (@pxref{Continuous Integration,,, guix, GNU Guix Reference Manual}).  Going back to our example, we give Cuirass a spec file that goes like this:"
msgstr "Dito isso, você realmente aproveitará ao máximo usando @uref{https://guix.gnu.org/pt-BR/cuirass,Cuirass}, uma ferramenta de CI projetada para e fortemente integrada com Guix. Usá-la dá mais trabalho do que usar uma ferramenta de CI hospedada porque primeiro você precisa configurá-la, mas essa fase de configuração é bastante simplificada se você usar seu serviço Guix System (@pxref{Integração Contínua,,, guix.pt_BR, Manual de Referência GNU Guix}). Voltando ao nosso exemplo, damos ao Cuirass um arquivo de especificação que é assim:"

msgid ""
";; Cuirass spec file to build all the packages of the ‘guile’ channel.\n"
"(list (specification\n"
"        (name \"guile\")\n"
"        (build '(channels guile))\n"
"        (channels\n"
"         (append (list (channel\n"
"                         (name 'guile)\n"
"                         (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                         (branch \"main\")))\n"
"                 %default-channels))))\n"
msgstr ""
";; Arquivo de especificações do Cuirass para construir todos os pacotes do canal ‘guile’.\n"
"(list (specification\n"
"        (name \"guile\")\n"
"        (build '(channels guile))\n"
"        (channels\n"
"         (append (list (channel\n"
"                         (name 'guile)\n"
"                         (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                         (branch \"main\")))\n"
"                 %default-channels))))\n"

msgid "It differs from what you'd do with other CI tools in two important ways:"
msgstr "Ela difere do que você faria com outras ferramentas de CI em dois aspectos importantes:"

msgid "Cuirass knows it's tracking @emph{two} channels, @code{guile} and @code{guix}. Indeed, our own @code{guile} package depends on many packages provided by the @code{guix} channel---GCC, the GNU libc, libffi, and so on. Changes to packages from the @code{guix} channel can potentially influence our @code{guile} build and this is something we'd like to see as soon as possible as Guile developers."
msgstr "O Cuirass sabe que está rastreando @emph{dois} canais, @code{guile} e @code{guix}. De fato, nosso próprio pacote @code{guile} depende de muitos pacotes fornecidos pelo canal @code{guix}---GCC, o GNU libc, libffi e assim por diante. Mudanças em pacotes do canal @code{guix} podem potencialmente influenciar nossa construção @code{guile} e isso é algo que gostaríamos de ver o mais rápido possível como desenvolvedores do Guile."

msgid "Build results are not thrown away: they can be distributed as @dfn{substitutes} so that users of our @code{guile} channel transparently get pre-built binaries! (@pxref{Substitutes,,, guix, GNU Guix Reference Manual}, for background info on substitutes.)"
msgstr "Os resultados da compilação não são descartados: eles podem ser distribuídos como @dfn{substitutos} para que os usuários do nosso canal @code{guile} obtenham binários pré-compilados de forma transparente! (@pxref{Substitutos,,, guix.pt_BR, Manual de Referência do GNU Guix}, para informações básicas sobre substitutos.)"

msgid "From a developer's viewpoint, the end result is this @uref{https://ci.guix.gnu.org/jobset/guile,status page} listing @emph{evaluations}: each evaluation is a combination of commits of the @code{guix} and @code{guile} channels providing a number of @emph{jobs}---one job per package defined in @file{guile-package.scm} times the number of target architectures."
msgstr "Do ponto de vista de um desenvolvedor, o resultado final é esta @uref{https://ci.guix.gnu.org/jobset/guile,status page} listando @emph{avaliações}: cada avaliação é uma combinação de confirmações dos canais @code{guix} e @code{guile}, fornecendo um número de @emph{trabalhos} — um trabalho por pacote definido em @file{guile-package.scm} vezes o número de arquiteturas de destino."

msgid "As for substitutes, they come for free! As an example, since our @code{guile} jobset is built on ci.guix.gnu.org, which runs @command{guix publish} (@pxref{Invoking guix publish,,, guix, GNU Guix Reference Manual}) in addition to Cuirass, one automatically gets substitutes for @code{guile} builds from ci.guix.gnu.org; no additional work is needed for that."
msgstr "Quanto aos substitutos, eles vêm de graça! Por exemplo, já que nosso jobset @code{guile} é construído em ci.guix.gnu.org, que executa @command{guix publish} (@pxref{Invocando guix publish,,, guix.pt_BR, Manual de Referência do GNU Guix}) além do Cuirass, obtém-se automaticamente substitutos para compilações @code{guile} de ci.guix.gnu.org; nenhum trabalho adicional é necessário para isso."

msgid "Bonus: Build manifest"
msgstr "Bônus: Construir manifesto"

msgid "The Cuirass spec above is convenient: it builds every package in our channel, which includes a few variants (@pxref{Setting Up Continuous Integration}).  However, this might be insufficiently expressive in some cases: one might want specific cross-compilation jobs, transformations, Docker images, RPM/Deb packages, or even system tests."
msgstr "A especificação Cuirass acima é conveniente: ela constrói todos os pacotes em nosso canal, o que inclui algumas variantes (@pxref{Setting Up Continuous Integration}). No entanto, isso pode ser insuficientemente expressivo em alguns casos: pode-se querer trabalhos específicos de compilação cruzada, transformações, imagens Docker, pacotes RPM/Deb ou até mesmo testes de sistema."

msgid "To achieve that, you can write a @dfn{manifest} (@pxref{Writing Manifests,,, guix, GNU Guix Reference Manual}).  The one we have for Guile has entries for the package variants we defined above, as well as additional variants and cross builds:"
msgstr "Para conseguir isso, você pode escrever um @dfn{manifest} (@pxref{Escrevendo manifestos,,, guix.pt_BR, Manual de Referência do GNU Guix}). O que temos para Guile tem entradas para as variantes de pacote que definimos acima, bem como variantes adicionais e compilações cruzadas:"

msgid ""
";; This is ‘.guix/manifest.scm’.\n"
"\n"
msgstr ""
";; Este é ‘.guix/manifest.scm’.\n"
"\n"

msgid ""
"(use-modules (guix)\n"
"             (guix profiles)\n"
"             (guile-package))   ;import our own package module\n"
"\n"
msgstr ""
"(use-modules (guix)\n"
"             (guix profiles)\n"
"             (guile-package)) ;importa nosso próprio módulo de pacote\n"
"\n"

msgid ""
"(define* (package->manifest-entry* package system\n"
"                                   #:key target)\n"
"  \"Return a manifest entry for PACKAGE on SYSTEM, optionally cross-compiled to\n"
"TARGET.\"\n"
"  (manifest-entry\n"
"    (inherit (package->manifest-entry package))\n"
"    (name (string-append (package-name package) \".\" system\n"
"                         (if target\n"
"                             (string-append \".\" target)\n"
"                             \"\")))\n"
"    (item (with-parameters ((%current-system system)\n"
"                            (%current-target-system target))\n"
"            package))))\n"
"\n"
msgstr ""
"(define* (package->manifest-entry* package system\n"
"                                   #:key target)\n"
"  \"Retorna uma entrada de manifesto para pacote PACKAGE no sisteme SYSTEM,\n"
"opcionalmente compilado cruzado para alvo TARGET.\"\n"
"  (manifest-entry\n"
"    (inherit (package->manifest-entry package))\n"
"    (name (string-append (package-name package) \".\" system\n"
"                         (if target\n"
"                             (string-append \".\" target)\n"
"                             \"\")))\n"
"    (item (with-parameters ((%current-system system)\n"
"                            (%current-target-system target))\n"
"            package))))\n"
"\n"

msgid ""
"(define native-builds\n"
"  (manifest\n"
"   (append (map (lambda (system)\n"
"                  (package->manifest-entry* guile system))\n"
"\n"
msgstr ""
"(define native-builds\n"
"  (manifest\n"
"   (append (map (lambda (system)\n"
"                  (package->manifest-entry* guile system))\n"
"\n"

msgid ""
"                '(\"x86_64-linux\" \"i686-linux\"\n"
"                  \"aarch64-linux\" \"armhf-linux\"\n"
"                  \"powerpc64le-linux\"))\n"
"           (map (lambda (guile)\n"
"                  (package->manifest-entry* guile \"x86_64-linux\"))\n"
"                (cons (package\n"
"                        (inherit (package-with-c-toolchain\n"
"                                  guile\n"
"                                  `((\"clang-toolchain\"\n"
"                                     ,(specification->package\n"
"                                       \"clang-toolchain\")))))\n"
"                        (name \"guile-clang\"))\n"
"                      (list guile-without-threads\n"
"                            guile-without-networking\n"
"                            guile-debug\n"
"                            guile-strict-typing))))))\n"
"\n"
msgstr ""
"                '(\"x86_64-linux\" \"i686-linux\"\n"
"                  \"aarch64-linux\" \"armhf-linux\"\n"
"                  \"powerpc64le-linux\"))\n"
"           (map (lambda (guile)\n"
"                  (package->manifest-entry* guile \"x86_64-linux\"))\n"
"                (cons (package\n"
"                        (inherit (package-with-c-toolchain\n"
"                                  guile\n"
"                                  `((\"clang-toolchain\"\n"
"                                     ,(specification->package\n"
"                                       \"clang-toolchain\")))))\n"
"                        (name \"guile-clang\"))\n"
"                      (list guile-without-threads\n"
"                            guile-without-networking\n"
"                            guile-debug\n"
"                            guile-strict-typing))))))\n"
"\n"

msgid ""
"(define cross-builds\n"
"  (manifest\n"
"   (map (lambda (target)\n"
"          (package->manifest-entry* guile \"x86_64-linux\"\n"
"                                    #:target target))\n"
"        '(\"i586-pc-gnu\"\n"
"          \"aarch64-linux-gnu\"\n"
"          \"riscv64-linux-gnu\"\n"
"          \"i686-w64-mingw32\"\n"
"          \"x86_64-linux-gnu\"))))\n"
"\n"
msgstr ""
"(define cross-builds\n"
"  (manifest\n"
"   (map (lambda (target)\n"
"          (package->manifest-entry* guile \"x86_64-linux\"\n"
"                                    #:target target))\n"
"        '(\"i586-pc-gnu\"\n"
"          \"aarch64-linux-gnu\"\n"
"          \"riscv64-linux-gnu\"\n"
"          \"i686-w64-mingw32\"\n"
"          \"x86_64-linux-gnu\"))))\n"
"\n"

msgid "(concatenate-manifests (list native-builds cross-builds))\n"
msgstr "(concatenate-manifests (list native-builds cross-builds))\n"

msgid "We won't go into the details of this manifest; suffice to say that it provides additional flexibility. We now need to tell Cuirass to build this manifest, which is done with a spec slightly different from the previous one:"
msgstr "Não entraremos em detalhes deste manifesto; basta dizer que ele fornece flexibilidade adicional. Agora precisamos dizer ao Cuirass para construir este manifesto, que é feito com uma especificação ligeiramente diferente da anterior:"

msgid ""
";; Cuirass spec file to build all the packages of the ‘guile’ channel.\n"
"(list (specification\n"
"        (name \"guile\")\n"
"        (build '(manifest \".guix/manifest.scm\"))\n"
"        (channels\n"
"         (append (list (channel\n"
"                         (name 'guile)\n"
"                         (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                         (branch \"main\")))\n"
"                 %default-channels))))\n"
msgstr ""
";; Arquivo de especificação do Cuirass para compilar todos os pacotes do canal ‘guile’.\n"
"(list (specification\n"
"        (name \"guile\")\n"
"        (build '(manifest \".guix/manifest.scm\"))\n"
"        (channels\n"
"         (append (list (channel\n"
"                         (name 'guile)\n"
"                         (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                         (branch \"main\")))\n"
"                 %default-channels))))\n"

msgid "We changed the @code{(build @dots{})} part of the spec to @code{'(manifest \".guix/manifest.scm\")} so that it would pick our manifest, and that's it!"
msgstr "Alteramos a parte @code{(build @dots{})} da especificação para @code{'(manifest \".guix/manifest.scm\")} para que ele escolhesse nosso manifesto, e pronto!"

msgid "We picked Guile as the running example in this chapter and you can see the result here:"
msgstr "Escolhemos Guile como exemplo prático neste capítulo e você pode ver o resultado aqui:"

msgid "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix-channel?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix-channel}};"
msgstr "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix-channel?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix-channel}};"

msgid "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix/modules/guile-package.scm?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix/modules/guile-package.scm}} with the top-level @file{guix.scm} symlink;"
msgstr "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix/modules/guile-package.scm?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix/modules/guile-package.scm}} com o link simbólico de nível superior @file{guix.scm};"

msgid "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix/manifest.scm?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix/manifest.scm}}."
msgstr "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix/manifest.scm?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix/manifest.scm}}."

msgid "These days, repositories are commonly peppered with dot files for various tools: @code{.envrc}, @code{.gitlab-ci.yml}, @code{.github/workflows}, @code{Dockerfile}, @code{.buildpacks}, @code{Aptfile}, @code{requirements.txt}, and whatnot. It may sound like we're proposing a bunch of @emph{additional} files, but in fact those files are expressive enough to @emph{supersede} most or all of those listed above."
msgstr "Hoje em dia, os repositórios são comumente recheados com arquivos dot para várias ferramentas: @code{.envrc}, @code{.gitlab-ci.yml}, @code{.github/workflows}, @code{Dockerfile}, @code{.buildpacks}, @code{Aptfile}, @code{requirements.txt} e outros. Pode parecer que estamos propondo um monte de arquivos @emph{adicionais}, mas na verdade esses arquivos são expressivos o suficiente para @emph{substituir} a maioria ou todos os listados acima."

msgid "With a couple of files, we get support for:"
msgstr "Com alguns arquivos, obtemos suporte para:"

msgid "development environments (@command{guix shell});"
msgstr "ambientes de desenvolvimento (@command{guix shell});"

msgid "pristine test builds, including for package variants and for cross-compilation (@command{guix build});"
msgstr "compilações de teste originais, incluindo para variantes de pacote e para compilação cruzada (@command{guix build});"

msgid "continuous integration (with Cuirass or with some other tool);"
msgstr "integração contínua (com Cuirass ou com alguma outra ferramenta);"

msgid "continuous delivery to users (@emph{via} the channel and with pre-built binaries);"
msgstr "entrega contínua aos usuários (@emph{via} o canal e com binários pré-construídos);"

msgid "generation of derivative build artifacts such as Docker images or Deb/RPM packages (@command{guix pack})."
msgstr "geração de artefatos de construção derivados, como imagens Docker ou pacotes Deb/RPM (@command{guix pack})."

msgid "This a nice (in our view!) unified tool set for reproducible software deployment, and an illustration of how you as a developer can benefit from it!"
msgstr "Este é um bom (na nossa opinião!) conjunto de ferramentas unificadas para implantação de software reproduzível e uma ilustração de como você, como desenvolvedor, pode se beneficiar dele!"

msgid "Guix provides multiple tools to manage environment.  This chapter demonstrate such utilities."
msgstr "Guix fornece múltiplas ferramentas para gerenciar o ambiente. Este capítulo demonstra tais utilitários."

msgid "Guix provides a @samp{direnv} package, which could extend shell after directory change.  This tool could be used to prepare a pure Guix environment."
msgstr "Guix fornece um pacote @samp{direnv}, que pode estender o shell após a mudança de diretório. Esta ferramenta pode ser usada para preparar um ambiente Guix puro."

msgid "The following example provides a shell function for @file{~/.direnvrc} file, which could be used from Guix Git repository in @file{~/src/guix/.envrc} file to setup a build environment similar to described in @pxref{Building from Git,,, guix, GNU Guix Reference Manual}."
msgstr "O exemplo a seguir fornece uma função de shell para o arquivo @file{~/.direnvrc}, que pode ser usada no repositório Guix Git no arquivo @file{~/src/guix/.envrc} para configurar um ambiente de compilação semelhante ao descrito em @pxref{Compilando do git,,, guix.pt_BR, Manual de Referência do GNU Guix}."

msgid "Create a @file{~/.direnvrc} with a Bash code:"
msgstr "Crie um @file{~/.direnvrc} com um código Bash:"

msgid ""
"# Thanks <https://github.com/direnv/direnv/issues/73#issuecomment-152284914>\n"
"export_function()\n"
"@{\n"
"  local name=$1\n"
"  local alias_dir=$PWD/.direnv/aliases\n"
"  mkdir -p \"$alias_dir\"\n"
"  PATH_add \"$alias_dir\"\n"
"  local target=\"$alias_dir/$name\"\n"
"  if declare -f \"$name\" >/dev/null; then\n"
"    echo \"#!$SHELL\" > \"$target\"\n"
"    declare -f \"$name\" >> \"$target\" 2>/dev/null\n"
"    # Notice that we add shell variables to the function trigger.\n"
"    echo \"$name \\$*\" >> \"$target\"\n"
"    chmod +x \"$target\"\n"
"  fi\n"
"@}\n"
"\n"
msgstr ""
"# Obrigado <https://github.com/direnv/direnv/issues/73#issuecomment-152284914>\n"
"export_function()\n"
"@{\n"
"  local name=$1\n"
"  local alias_dir=$PWD/.direnv/aliases\n"
"  mkdir -p \"$alias_dir\"\n"
"  PATH_add \"$alias_dir\"\n"
"  local target=\"$alias_dir/$name\"\n"
"  if declare -f \"$name\" >/dev/null; then\n"
"    echo \"#!$SHELL\" > \"$target\"\n"
"    declare -f \"$name\" >> \"$target\" 2>/dev/null\n"
"    # Observe que adicionamos variáveis de shell ao gatilho da função.\n"
"    echo \"$name \\$*\" >> \"$target\"\n"
"    chmod +x \"$target\"\n"
"  fi\n"
"@}\n"
"\n"

msgid ""
"use_guix()\n"
"@{\n"
"    # Set GitHub token.\n"
"    export GUIX_GITHUB_TOKEN=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n"
"\n"
msgstr ""
"use_guix()\n"
"@{\n"
"    # Defina o token do GitHub.\n"
"    export GUIX_GITHUB_TOKEN=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n"
"\n"

msgid ""
"    # Unset 'GUIX_PACKAGE_PATH'.\n"
"    export GUIX_PACKAGE_PATH=\"\"\n"
"\n"
msgstr ""
"    # Cancela definição de 'GUIX_PACKAGE_PATH'.\n"
"    export GUIX_PACKAGE_PATH=\"\"\n"
"\n"

msgid ""
"    # Recreate a garbage collector root.\n"
"    gcroots=\"$HOME/.config/guix/gcroots\"\n"
"    mkdir -p \"$gcroots\"\n"
"    gcroot=\"$gcroots/guix\"\n"
"    if [ -L \"$gcroot\" ]\n"
"    then\n"
"        rm -v \"$gcroot\"\n"
"    fi\n"
"\n"
msgstr ""
"    # Recrie uma raiz do coletor de lixo.\n"
"    gcroots=\"$HOME/.config/guix/gcroots\"\n"
"    mkdir -p \"$gcroots\"\n"
"    gcroot=\"$gcroots/guix\"\n"
"    if [ -L \"$gcroot\" ]\n"
"    then\n"
"        rm -v \"$gcroot\"\n"
"    fi\n"
"\n"

msgid ""
"    # Miscellaneous packages.\n"
"    PACKAGES_MAINTENANCE=(\n"
"        direnv\n"
"        git\n"
"        git:send-email\n"
"        git-cal\n"
"        gnupg\n"
"        guile-colorized\n"
"        guile-readline\n"
"        less\n"
"        ncurses\n"
"        openssh\n"
"        xdot\n"
"    )\n"
"\n"
msgstr ""
"    # Pacotes diversos.\n"
"    PACKAGES_MAINTENANCE=(\n"
"        direnv\n"
"        git\n"
"        git:send-email\n"
"        git-cal\n"
"        gnupg\n"
"        guile-colorized\n"
"        guile-readline\n"
"        less\n"
"        ncurses\n"
"        openssh\n"
"        xdot\n"
"    )\n"
"\n"

msgid ""
"    # Environment packages.\n"
"    PACKAGES=(help2man guile-sqlite3 guile-gcrypt)\n"
"\n"
msgstr ""
"    # Pacotes de ambiente.\n"
"    PACKAGES=(help2man guile-sqlite3 guile-gcrypt)\n"
"\n"

msgid ""
"    # Thanks <https://lists.gnu.org/archive/html/guix-devel/2016-09/msg00859.html>\n"
"    eval \"$(guix shell --search-paths --root=\"$gcroot\" --pure \\\n"
"     --development guix $@{PACKAGES[@@]@} $@{PACKAGES_MAINTENANCE[@@]@} \"$@@\")\"\n"
"\n"
msgstr ""
"    # Obrigado <https://lists.gnu.org/archive/html/guix-devel/2016-09/msg00859.html>\n"
"    eval \"$(guix shell --search-paths --root=\"$gcroot\" --pure \\\n"
"     --development guix $@{PACKAGES[@@]@} $@{PACKAGES_MAINTENANCE[@@]@} \"$@@\")\"\n"
"\n"

msgid ""
"    # Predefine configure flags.\n"
"    configure()\n"
"    @{\n"
"        ./configure\n"
"    @}\n"
"    export_function configure\n"
"\n"
msgstr ""
"    # Predefina sinalizadores de configuração.\n"
"    configure()\n"
"    @{\n"
"        ./configure\n"
"    @}\n"
"    export_function configure\n"
"\n"

msgid ""
"    # Run make and optionally build something.\n"
"    build()\n"
"    @{\n"
"        make -j 2\n"
"        if [ $# -gt 0 ]\n"
"        then\n"
"            ./pre-inst-env guix build \"$@@\"\n"
"        fi\n"
"    @}\n"
"    export_function build\n"
"\n"
msgstr ""
"    # Execute make e, opcionalmente, construa algo.\n"
"    build()\n"
"    @{\n"
"        make -j 2\n"
"        if [ $# -gt 0 ]\n"
"        then\n"
"            ./pre-inst-env guix build \"$@@\"\n"
"        fi\n"
"    @}\n"
"    export_function build\n"
"\n"

msgid ""
"    # Predefine push Git command.\n"
"    push()\n"
"    @{\n"
"        git push --set-upstream origin\n"
"    @}\n"
"    export_function push\n"
"\n"
msgstr ""
"    # Predefina o comando push do Git.\n"
"    push()\n"
"    @{\n"
"        git push --set-upstream origin\n"
"    @}\n"
"    export_function push\n"
"\n"

msgid ""
"    clear                        # Clean up the screen.\n"
"    git-cal --author='Your Name' # Show contributions calendar.\n"
"\n"
msgstr ""
"    clear                        # Limpe a tela.\n"
"    git-cal --author='Seu nome' # Mostrar calendário de contribuições.\n"
"\n"

msgid ""
"    # Show commands help.\n"
"    echo \"\n"
"build          build a package or just a project if no argument provided\n"
"configure      run ./configure with predefined parameters\n"
"push           push to upstream Git repository\n"
"\"\n"
"@}\n"
msgstr ""
"    #Mostrar ajuda de comandos.\n"
"    echo \"\n"
"build          construir um pacote ou apenas um projeto se nenhum argumento for fornecido\n"
"configure      execute ./configure com parâmetros predefinidos\n"
"push           enviar para o repositório Git upstream\n"
"\"\n"
"@}\n"

msgid "Every project containing @file{.envrc} with a string @code{use guix} will have predefined environment variables and procedures."
msgstr "Cada projeto contendo @file{.envrc} com uma string @code{use guix} terá variáveis de ambiente e procedimentos predefinidos."

msgid "Run @command{direnv allow} to setup the environment for the first time."
msgstr "Execute @command{direnv allow} para configurar o ambiente pela primeira vez."

msgid "cluster installation"
msgstr "instalação de cluster"

msgid "high-performance computing, HPC"
msgstr "computação de alto desempenho, HPC"

msgid "HPC, high-performance computing"
msgstr "HPC, computação de alto desempenho"

msgid "Guix is appealing to scientists and @acronym{HPC, high-performance computing} practitioners: it makes it easy to deploy potentially complex software stacks, and it lets you do so in a reproducible fashion---you can redeploy the exact same software on different machines and at different points in time."
msgstr "O Guix é atraente para cientistas e profissionais de @acronym{HPC, computação de alto desempenho}: ele facilita a implantação de pilhas de software potencialmente complexas e permite que você faça isso de forma reproduzível — você pode reimplantar exatamente o mesmo software em máquinas diferentes e em momentos diferentes."

msgid "In this chapter we look at how a cluster sysadmin can install Guix for system-wide use, such that it can be used on all the cluster nodes, and discuss the various tradeoffs@footnote{This chapter is adapted from a @uref{https://hpc.guix.info/blog/2017/11/installing-guix-on-a-cluster/, blog post published on the Guix-HPC web site in 2017}.}."
msgstr "Neste capítulo, veremos como um administrador de sistema de cluster pode instalar o Guix para uso em todo o sistema, de modo que ele possa ser usado em todos os nós do cluster, e discutiremos as várias compensações@footnote{Este capítulo foi adaptado de uma postagem de blog do @uref{https://hpc.guix.info/blog/2017/11/installing-guix-on-a-cluster/, publicada no site Guix-HPC em 2017}.}."

msgid "Here we assume that the cluster is running a GNU/Linux distro other than Guix System and that we are going to install Guix on top of it."
msgstr "Aqui, assumimos que o cluster está executando uma distribuição GNU/Linux diferente do Guix System e que vamos instalar o Guix sobre ele."

msgid "The recommended approach is to set up one @emph{head node} running @command{guix-daemon} and exporting @file{/gnu/store} over NFS to compute nodes."
msgstr "A abordagem recomendada é configurar um @emph{nó principal} executando @command{guix-daemon} e exportando @file{/gnu/store} via NFS para nós de computação."

msgid "Remember that @command{guix-daemon} is responsible for spawning build processes and downloads on behalf of clients (@pxref{Invoking guix-daemon,,, guix, GNU Guix Reference Manual}), and more generally accessing @file{/gnu/store}, which contains all the package binaries built by all the users (@pxref{The Store,,, guix, GNU Guix Reference Manual}).  ``Client'' here refers to all the Guix commands that users see, such as @code{guix install}.  On a cluster, these commands may be running on the compute nodes and we'll want them to talk to the head node's @code{guix-daemon} instance."
msgstr "Lembre-se de que @command{guix-daemon} é responsável por gerar processos de compilação e downloads em nome dos clientes (@pxref{Invocando guix-daemon,,, guix.pt_BR, Manual de Referência do GNU Guix}) e, de forma mais geral, acessando @file{/gnu/store}, que contém todos os binários de pacotes compilados por todos os usuários (@pxref{O armazém,,, guix.pt_BR, Manual de Referência do GNU Guix}). ``Cliente'' aqui se refere a todos os comandos Guix que os usuários veem, como @code{guix install}. Em um cluster, esses comandos podem estar em execução nos nós de computação e queremos que eles conversem com a instância @code{guix-daemon} do nó principal."

msgid "To begin with, the head node can be installed following the usual binary installation instructions (@pxref{Binary Installation,,, guix, GNU Guix Reference Manual}).  Thanks to the installation script, this should be quick.  Once installation is complete, we need to make some adjustments."
msgstr "Para começar, o nó principal pode ser instalado seguindo as instruções usuais de instalação binária (@pxref{Instalação de binários,,, guix.pt_BR, Manual de Referência do GNU Guix}). Graças ao script de instalação, isso deve ser rápido. Assim que a instalação for concluída, precisamos fazer alguns ajustes."

msgid "Since we want @code{guix-daemon} to be reachable not just from the head node but also from the compute nodes, we need to arrange so that it listens for connections over TCP/IP.  To do that, we'll edit the systemd startup file for @command{guix-daemon}, @file{/etc/systemd/system/guix-daemon.service}, and add a @code{--listen} argument to the @code{ExecStart} line so that it looks something like this:"
msgstr "Como queremos que o @code{guix-daemon} seja acessível não apenas do nó principal, mas também dos nós de computação, precisamos organizar para que ele escute conexões por TCP/IP. Para fazer isso, editaremos o arquivo de inicialização do systemd para @command{guix-daemon}, @file{/etc/systemd/system/guix-daemon.service} e adicionaremos um argumento @code{--listen} à linha @code{ExecStart} para que fique parecido com isto:"

msgid ""
"ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon \\\n"
"    --build-users-group=guixbuild \\\n"
"    --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"
msgstr ""
"ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon \\\n"
"    --build-users-group=guixbuild \\\n"
"    --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"

msgid "ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon --build-users-group=guixbuild --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"
msgstr "ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon --build-users-group=guixbuild --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"

msgid "For these changes to take effect, the service needs to be restarted:"
msgstr "Para que essas alterações entrem em vigor, o serviço precisa ser reiniciado:"

msgid ""
"systemctl daemon-reload\n"
"systemctl restart guix-daemon\n"
msgstr ""
"systemctl daemon-reload\n"
"systemctl restart guix-daemon\n"

msgid "The @code{--listen=0.0.0.0} bit means that @code{guix-daemon} will process @emph{all} incoming TCP connections on port 44146 (@pxref{Invoking guix-daemon,,, guix, GNU Guix Reference Manual}). This is usually fine in a cluster setup where the head node is reachable exclusively from the cluster's local area network---you don't want that to be exposed to the Internet!"
msgstr "O bit @code{--listen=0.0.0.0} significa que @code{guix-daemon} processará @emph{todas} as conexões TCP de entrada na porta 44146 (@pxref{Invocando guix-daemon,,, guix.pt_BR, Manual de Referência do GNU Guix}). Isso geralmente é bom em uma configuração de cluster onde o nó principal é acessível exclusivamente da rede local do cluster --- você não quer que isso seja exposto à Internet!"

msgid "The next step is to define our NFS exports in @uref{https://linux.die.net/man/5/exports,@file{/etc/exports}} by adding something along these lines:"
msgstr "O próximo passo é definir nossas exportações NFS em @uref{https://linux.die.net/man/5/exports,@file{/etc/exports}} adicionando algo como isto:"

msgid ""
"/gnu/store    *(ro)\n"
"/var/guix     *(rw, async)\n"
"/var/log/guix *(ro)\n"
msgstr ""
"/gnu/store    *(ro)\n"
"/var/guix     *(rw, async)\n"
"/var/log/guix *(ro)\n"

msgid "The @file{/gnu/store} directory can be exported read-only since only @command{guix-daemon} on the master node will ever modify it.  @file{/var/guix} contains @emph{user profiles} as managed by @code{guix package}; thus, to allow users to install packages with @code{guix package}, this must be read-write."
msgstr "O diretório @file{/gnu/store} pode ser exportado somente para leitura, pois somente @command{guix-daemon} no nó mestre poderá modificá-lo. @file{/var/guix} contém @emph{perfis de usuário} conforme gerenciados por @code{guix package}; portanto, para permitir que os usuários instalem pacotes com @code{guix package}, isso deve ser de leitura e gravação."

msgid "Users can create as many profiles as they like in addition to the default profile, @file{~/.guix-profile}.  For instance, @code{guix package -p ~/dev/python-dev -i python} installs Python in a profile reachable from the @code{~/dev/python-dev} symlink.  To make sure that this profile is protected from garbage collection---i.e., that Python will not be removed from @file{/gnu/store} while this profile exists---, @emph{home directories should be mounted on the head node} as well so that @code{guix-daemon} knows about these non-standard profiles and avoids collecting software they refer to."
msgstr "Os usuários podem criar quantos perfis quiserem, além do perfil padrão, @file{~/.guix-profile}. Por exemplo, @code{guix package -p ~/dev/python-dev -i python} instala o Python em um perfil acessível pelo link simbólico @code{~/dev/python-dev}. Para garantir que esse perfil esteja protegido contra coleta de lixo --- ou seja, que o Python não será removido de @file{/gnu/store} enquanto esse perfil existir ---, @emph{diretórios home devem ser montados no nó principal} também para que @code{guix-daemon} saiba sobre esses perfis não padrão e evite coletar softwares aos quais eles se referem."

msgid "It may be a good idea to periodically remove unused bits from @file{/gnu/store} by running @command{guix gc} (@pxref{Invoking guix gc,,, guix, GNU Guix Reference Manual}).  This can be done by adding a crontab entry on the head node:"
msgstr "Pode ser uma boa ideia remover periodicamente bits não utilizados de @file{/gnu/store} executando @command{guix gc} (@pxref{Invocando guix gc,,, guix.pt_BR, Manual de Referência do GNU Guix}). Isso pode ser feito adicionando uma entrada crontab no nó principal:"

msgid "root@@master# crontab -e\n"
msgstr "root@@master# crontab -e\n"

msgid "... with something like this:"
msgstr "... com algo assim:"

msgid ""
"# Every day at 5AM, run the garbage collector to make sure\n"
"# at least 10 GB are free on /gnu/store.\n"
"0 5 * * 1  /usr/local/bin/guix gc -F10G\n"
msgstr ""
"# Todos os dias às 5h da manhã, execute o coletor de lixo para garantir\n"
"# pelo menos 10 GB estão livres em /gnu/store.\n"
"0 5 * * 1 /usr/local/bin/guix gc -F10G\n"

msgid "We're done with the head node! Let's look at compute nodes now."
msgstr "Terminamos com o nó principal! Vamos dar uma olhada nos nós de computação agora."

msgid "First of all, we need compute nodes to mount those NFS directories that the head node exports.  This can be done by adding the following lines to @uref{https://linux.die.net/man/5/fstab,@file{/etc/fstab}}:"
msgstr "Primeiro, precisamos de nós de computação para montar os diretórios NFS que o nó principal exporta. Isso pode ser feito adicionando as seguintes linhas a @uref{https://linux.die.net/man/5/fstab,@file{/etc/fstab}}:"

msgid ""
"@var{head-node}:/gnu/store    /gnu/store    nfs  defaults,_netdev,vers=3 0 0\n"
"@var{head-node}:/var/guix     /var/guix     nfs  defaults,_netdev,vers=3 0 0\n"
"@var{head-node}:/var/log/guix /var/log/guix nfs  defaults,_netdev,vers=3 0 0\n"
msgstr ""
"@var{head-node}:/gnu/store    /gnu/store    nfs  defaults,_netdev,vers=3 0 0\n"
"@var{head-node}:/var/guix     /var/guix     nfs  defaults,_netdev,vers=3 0 0\n"
"@var{head-node}:/var/log/guix /var/log/guix nfs  defaults,_netdev,vers=3 0 0\n"

msgid "... where @var{head-node} is the name or IP address of your head node.  From there on, assuming the mount points exist, you should be able to mount each of these on the compute nodes."
msgstr "... onde @var{head-node} é o nome ou endereço IP do seu nó principal. A partir daí, assumindo que os pontos de montagem existam, você deve conseguir montar cada um deles nos nós de computação."

msgid "Next, we need to provide a default @command{guix} command that users can run when they first connect to the cluster (eventually they will invoke @command{guix pull}, which will provide them with their ``own'' @command{guix} command).  Similar to what the binary installation script did on the head node, we'll store that in @file{/usr/local/bin}:"
msgstr "Em seguida, precisamos fornecer um comando @command{guix} padrão que os usuários possam executar quando se conectarem ao cluster pela primeira vez (eventualmente, eles invocarão @command{guix pull}, que fornecerá a eles seu ``próprio'' comando @command{guix}). Semelhante ao que o script de instalação binário fez no nó principal, armazenaremos isso em @file{/usr/local/bin}:"

msgid ""
"mkdir -p /usr/local/bin\n"
"ln -s /var/guix/profiles/per-user/root/current-guix/bin/guix \\\n"
"      /usr/local/bin/guix\n"
msgstr ""
"mkdir -p /usr/local/bin\n"
"ln -s /var/guix/profiles/per-user/root/current-guix/bin/guix \\\n"
"      /usr/local/bin/guix\n"

msgid "We then need to tell @code{guix} to talk to the daemon running on our master node, by adding these lines to @code{/etc/profile}:"
msgstr "Precisamos então dizer ao @code{guix} para falar com o daemon em execução no nosso nó mestre, adicionando estas linhas ao @code{/etc/profile}:"

msgid ""
"GUIX_DAEMON_SOCKET=\"guix://@var{head-node}\"\n"
"export GUIX_DAEMON_SOCKET\n"
msgstr ""
"GUIX_DAEMON_SOCKET=\"guix://@var{head-node}\"\n"
"export GUIX_DAEMON_SOCKET\n"

msgid "To avoid warnings and make sure @code{guix} uses the right locale, we need to tell it to use locale data provided by Guix (@pxref{Application Setup,,, guix, GNU Guix Reference Manual}):"
msgstr "Para evitar avisos e garantir que o @code{guix} use o local correto, precisamos instruí-lo a usar os dados de local fornecidos pelo Guix (@pxref{Configuração de aplicativo,,, guix.pt_BR, Manual de Referência do GNU Guix}):"

msgid ""
"GUIX_LOCPATH=/var/guix/profiles/per-user/root/guix-profile/lib/locale\n"
"export GUIX_LOCPATH\n"
"\n"
msgstr ""
"GUIX_LOCPATH=/var/guix/profiles/per-user/root/guix-profile/lib/locale\n"
"export GUIX_LOCPATH\n"
"\n"

msgid ""
"# Here we must use a valid locale name.  Try \"ls $GUIX_LOCPATH/*\"\n"
"# to see what names can be used.\n"
"LC_ALL=fr_FR.utf8\n"
"export LC_ALL\n"
msgstr ""
"# Aqui, devemos usar um nome de localidade válido. Tente \"ls $GUIX_LOCPATH/*\"\n"
"# para ver quais nomes podem ser usados.\n"
"LC_ALL=fr_FR.utf8\n"
"export LC_ALL\n"

msgid "For convenience, @code{guix package} automatically generates @file{~/.guix-profile/etc/profile}, which defines all the environment variables necessary to use the packages---@code{PATH}, @code{C_INCLUDE_PATH}, @code{PYTHONPATH}, etc.  Likewise, @command{guix pull} does that under @file{~/.config/guix/current}.  Thus it's a good idea to source both from @code{/etc/profile}:"
msgstr "Por conveniência, @code{guix package} gera automaticamente @file{~/.guix-profile/etc/profile}, que define todas as variáveis de ambiente necessárias para usar os pacotes---@code{PATH}, @code{C_INCLUDE_PATH}, @code{PYTHONPATH}, etc. Da mesma forma, @command{guix pull} faz isso em @file{~/.config/guix/current}. Portanto, é uma boa ideia obter ambos de @code{/etc/profile}:"

msgid ""
"for GUIX_PROFILE in \"$HOME/.config/guix/current\" \"$HOME/.guix-profile\"\n"
"do\n"
"  if [ -f \"$GUIX_PROFILE/etc/profile\" ]; then\n"
"    . \"$GUIX_PROFILE/etc/profile\"\n"
"  fi\n"
"done\n"
msgstr ""
"for GUIX_PROFILE in \"$HOME/.config/guix/current\" \"$HOME/.guix-profile\"\n"
"do\n"
"  if [ -f \"$GUIX_PROFILE/etc/profile\" ]; then\n"
"    . \"$GUIX_PROFILE/etc/profile\"\n"
"  fi\n"
"done\n"

msgid "Last but not least, Guix provides command-line completion notably for Bash and zsh.  In @code{/etc/bashrc}, consider adding this line:"
msgstr "Por último, mas não menos importante, o Guix fornece conclusão de linha de comando, notavelmente para Bash e zsh. Em @code{/etc/bashrc}, considere adicionar esta linha:"

msgid ". /var/guix/profiles/per-user/root/current-guix/etc/bash_completion.d/guix\n"
msgstr ". /var/guix/profiles/per-user/root/current-guix/etc/bash_completion.d/guix\n"

msgid "Voilà!"
msgstr "Voilà!"

msgid "You can check that everything's in place by logging in on a compute node and running:"
msgstr "Você pode verificar se tudo está no lugar efetuando login em um nó de computação e executando:"

msgid "guix install hello\n"
msgstr "guix install hello\n"

msgid "The daemon on the head node should download pre-built binaries on your behalf and unpack them in @file{/gnu/store}, and @command{guix install} should create @file{~/.guix-profile} containing the @file{~/.guix-profile/bin/hello} command."
msgstr "O daemon no nó principal deve baixar binários pré-compilados em seu nome e descompactá-los em @file{/gnu/store}, e @command{guix install} deve criar @file{~/.guix-profile} contendo o comando @file{~/.guix-profile/bin/hello}."

msgid "Network Access"
msgstr "Acesso à rede"

msgid "Guix requires network access to download source code and pre-built binaries.  The good news is that only the head node needs that since compute nodes simply delegate to it."
msgstr "Guix requer acesso à rede para baixar código-fonte e binários pré-construídos. A boa notícia é que somente o nó principal precisa disso, já que nós de computação simplesmente delegam a ele."

msgid "It is customary for cluster nodes to have access at best to a @emph{white list} of hosts.  Our head node needs at least @code{ci.guix.gnu.org} in this white list since this is where it gets pre-built binaries from by default, for all the packages that are in Guix proper."
msgstr "É costume que nós de cluster tenham acesso, na melhor das hipóteses, a uma @emph{white list}  de hosts. Nosso nó principal precisa de pelo menos @code{ci.guix.gnu.org} nessa lista branca, pois é de lá que ele obtém binários pré-construídos por padrão, para todos os pacotes que estão no Guix propriamente dito."

msgid "Incidentally, @code{ci.guix.gnu.org} also serves as a @emph{content-addressed mirror} of the source code of those packages.  Consequently, it is sufficient to have @emph{only} @code{ci.guix.gnu.org} in that white list."
msgstr "A propósito, @code{ci.guix.gnu.org} também serve como um @emph{content-addressed mirror} do código-fonte desses pacotes. Consequentemente, é suficiente ter @emph{unicamente} @code{ci.guix.gnu.org} nessa lista branca."

msgid "Software packages maintained in a separate repository such as one of the various @uref{https://hpc.guix.info/channels, HPC channels} are of course unavailable from @code{ci.guix.gnu.org}.  For these packages, you may want to extend the white list such that source and pre-built binaries (assuming this-party servers provide binaries for these packages) can be downloaded.  As a last resort, users can always download source on their workstation and add it to the cluster's @file{/gnu/store}, like this:"
msgstr "Pacotes de software mantidos em um repositório separado, como um dos vários @uref{https://hpc.guix.info/channels, canais HPC}, obviamente não estão disponíveis em @code{ci.guix.gnu.org}. Para esses pacotes, você pode querer estender a lista branca de modo que os binários de origem e pré-construídos (assumindo que os servidores desta parte forneçam binários para esses pacotes) possam ser baixados. Como último recurso, os usuários sempre podem baixar o código-fonte em sua estação de trabalho e adicioná-lo ao @file{/gnu/store} do cluster, assim:"

msgid ""
"GUIX_DAEMON_SOCKET=ssh://compute-node.example.org \\\n"
"  guix download http://starpu.gforge.inria.fr/files/starpu-1.2.3/starpu-1.2.3.tar.gz\n"
msgstr ""
"GUIX_DAEMON_SOCKET=ssh://compute-node.example.org \\\n"
"  guix download http://starpu.gforge.inria.fr/files/starpu-1.2.3/starpu-1.2.3.tar.gz\n"

msgid "The above command downloads @code{starpu-1.2.3.tar.gz} @emph{and} sends it to the cluster's @code{guix-daemon} instance over SSH."
msgstr "O comando acima baixa @code{starpu-1.2.3.tar.gz} @emph{e} o envia para a instância @code{guix-daemon} do cluster via SSH."

msgid "Air-gapped clusters require more work.  At the moment, our suggestion would be to download all the necessary source code on a workstation running Guix.  For instance, using the @option{--sources} option of @command{guix build} (@pxref{Invoking guix build,,, guix, GNU Guix Reference Manual}), the example below downloads all the source code the @code{openmpi} package depends on:"
msgstr "Clusters com air-gapped exigem mais trabalho. No momento, nossa sugestão seria baixar todo o código-fonte necessário em uma estação de trabalho executando Guix. Por exemplo, usando a opção @option{--sources} de @command{guix build} (@pxref{Invocando guix build,,, guix.pt_BR, Manual de Referência do GNU Guix}), o exemplo abaixo baixa todo o código-fonte do qual o pacote @code{openmpi} depende:"

msgid ""
"$ guix build --sources=transitive openmpi\n"
"\n"
msgstr ""
"$ guix build --sources=transitive openmpi\n"
"\n"

msgid ""
"@dots{}\n"
"\n"
msgstr ""
"@dots{}\n"
"\n"

msgid ""
"/gnu/store/xc17sm60fb8nxadc4qy0c7rqph499z8s-openmpi-1.10.7.tar.bz2\n"
"/gnu/store/s67jx92lpipy2nfj5cz818xv430n4b7w-gcc-5.4.0.tar.xz\n"
"/gnu/store/npw9qh8a46lrxiwh9xwk0wpi3jlzmjnh-gmp-6.0.0a.tar.xz\n"
"/gnu/store/hcz0f4wkdbsvsdky3c0vdvcawhdkyldb-mpfr-3.1.5.tar.xz\n"
"/gnu/store/y9akh452n3p4w2v631nj0injx7y0d68x-mpc-1.0.3.tar.gz\n"
"/gnu/store/6g5c35q8avfnzs3v14dzl54cmrvddjm2-glibc-2.25.tar.xz\n"
"/gnu/store/p9k48dk3dvvk7gads7fk30xc2pxsd66z-hwloc-1.11.8.tar.bz2\n"
"/gnu/store/cry9lqidwfrfmgl0x389cs3syr15p13q-gcc-5.4.0.tar.xz\n"
"/gnu/store/7ak0v3rzpqm2c5q1mp3v7cj0rxz0qakf-libfabric-1.4.1.tar.bz2\n"
"/gnu/store/vh8syjrsilnbfcf582qhmvpg1v3rampf-rdma-core-14.tar.gz\n"
"…\n"
msgstr ""
"/gnu/store/xc17sm60fb8nxadc4qy0c7rqph499z8s-openmpi-1.10.7.tar.bz2\n"
"/gnu/store/s67jx92lpipy2nfj5cz818xv430n4b7w-gcc-5.4.0.tar.xz\n"
"/gnu/store/npw9qh8a46lrxiwh9xwk0wpi3jlzmjnh-gmp-6.0.0a.tar.xz\n"
"/gnu/store/hcz0f4wkdbsvsdky3c0vdvcawhdkyldb-mpfr-3.1.5.tar.xz\n"
"/gnu/store/y9akh452n3p4w2v631nj0injx7y0d68x-mpc-1.0.3.tar.gz\n"
"/gnu/store/6g5c35q8avfnzs3v14dzl54cmrvddjm2-glibc-2.25.tar.xz\n"
"/gnu/store/p9k48dk3dvvk7gads7fk30xc2pxsd66z-hwloc-1.11.8.tar.bz2\n"
"/gnu/store/cry9lqidwfrfmgl0x389cs3syr15p13q-gcc-5.4.0.tar.xz\n"
"/gnu/store/7ak0v3rzpqm2c5q1mp3v7cj0rxz0qakf-libfabric-1.4.1.tar.bz2\n"
"/gnu/store/vh8syjrsilnbfcf582qhmvpg1v3rampf-rdma-core-14.tar.gz\n"
"…\n"

msgid "(In case you're wondering, that's more than 320@ MiB of @emph{compressed} source code.)"
msgstr "(Caso você esteja se perguntando, isso é mais de 320@ MiB de código-fonte @emph{compactado}.)"

msgid "We can then make a big archive containing all of this (@pxref{Invoking guix archive,,, guix, GNU Guix Reference Manual}):"
msgstr "Podemos então criar um grande arquivamento contendo tudo isso (@pxref{Invocando guix archive,,, guix.pt_BR, Manual de Referência GNU Guix}):"

msgid ""
"$ guix archive --export \\\n"
"    `guix build --sources=transitive openmpi` \\\n"
"    > openmpi-source-code.nar\n"
msgstr ""
"$ guix archive --export \\\n"
"    `guix build --sources=transitive openmpi` \\\n"
"    > openmpi-source-code.nar\n"

msgid "@dots{} and we can eventually transfer that archive to the cluster on removable storage and unpack it there:"
msgstr "@dots{} e podemos eventualmente transferir esse arquivamento para o cluster em armazenamento removível e descompactá-lo lá:"

msgid "$ guix archive --import < openmpi-source-code.nar\n"
msgstr "$ guix archive --import < openmpi-source-code.nar\n"

msgid "This process has to be repeated every time new source code needs to be brought to the cluster."
msgstr "Esse processo precisa ser repetido toda vez que um novo código-fonte precisa ser trazido para o cluster."

msgid "As we write this, the research institutes involved in Guix-HPC do not have air-gapped clusters though. If you have experience with such setups, we would like to hear feedback and suggestions."
msgstr "Enquanto escrevemos isso, os institutos de pesquisa envolvidos no Guix-HPC não têm clusters air-gapped. Se você tem experiência com essas configurações, gostaríamos de ouvir feedback e sugestões."

msgid "Disk Usage"
msgstr "Uso do Disco"

msgid "disk usage, on a cluster"
msgstr "uso de disco, em um cluster"

msgid "A common concern of sysadmins' is whether this is all going to eat a lot of disk space.  If anything, if something is going to exhaust disk space, it's going to be scientific data sets rather than compiled software---that's our experience with almost ten years of Guix usage on HPC clusters.  Nevertheless, it's worth taking a look at how Guix contributes to disk usage."
msgstr "Uma preocupação comum dos administradores de sistemas é se tudo isso vai consumir muito espaço em disco. Se alguma coisa vai esgotar o espaço em disco, serão conjuntos de dados científicos em vez de software compilado --- essa é nossa experiência com quase dez anos de uso do Guix em clusters HPC. No entanto, vale a pena dar uma olhada em como o Guix contribui para o uso do disco."

msgid "First, having several versions or variants of a given package in @file{/gnu/store} does not necessarily cost much, because @command{guix-daemon} implements deduplication of identical files, and package variants are likely to have a number of common files."
msgstr "Primeiro, ter várias versões ou variantes de um determinado pacote em @file{/gnu/store} não custa necessariamente muito, porque @command{guix-daemon} implementa a desduplicação de arquivos idênticos, e as variantes de pacote provavelmente terão vários arquivos em comum."

msgid "As mentioned above, we recommend having a cron job to run @code{guix gc} periodically, which removes @emph{unused} software from @file{/gnu/store}. However, there's always a possibility that users will keep lots of software in their profiles, or lots of old generations of their profiles, which is ``live'' and cannot be deleted from the viewpoint of @command{guix gc}."
msgstr "Conforme mencionado acima, recomendamos ter um cron job para executar @code{guix gc} periodicamente, o que remove o software @emph{não utilizado} de @file{/gnu/store}. No entanto, sempre há a possibilidade de que os usuários mantenham muitos softwares em seus perfis, ou muitas gerações antigas de seus perfis, que são ``ativos'' e não podem ser excluídos do ponto de vista do @command{guix gc}."

msgid "The solution to this is for users to regularly remove old generations of their profile. For instance, the following command removes generations that are more than two-month old:"
msgstr "A solução para isso é que os usuários removam regularmente gerações antigas de seus perfis. Por exemplo, o comando a seguir remove gerações com mais de dois meses de idade:"

msgid "guix package --delete-generations=2m\n"
msgstr "guix package --delete-generations=2m\n"

msgid "Likewise, it's a good idea to invite users to regularly upgrade their profile, which can reduce the number of variants of a given piece of software stored in @file{/gnu/store}:"
msgstr "Da mesma forma, é uma boa ideia convidar os usuários a atualizarem regularmente seus perfis, o que pode reduzir o número de variantes de um determinado software armazenado em @file{/gnu/store}:"

msgid ""
"guix pull\n"
"guix upgrade\n"
msgstr ""
"guix pull\n"
"guix upgrade\n"

msgid "As a last resort, it is always possible for sysadmins to do some of this on behalf of their users. Nevertheless, one of the strengths of Guix is the freedom and control users get on their software environment, so we strongly recommend leaving users in control."
msgstr "Como último recurso, é sempre possível para os administradores de sistemas fazerem parte disso em nome de seus usuários. No entanto, um dos pontos fortes do Guix é a liberdade e o controle que os usuários têm sobre seu ambiente de software, então recomendamos fortemente deixar os usuários no controle."

msgid "Security Considerations"
msgstr "Considerações de segurança"

msgid "security, on a cluster"
msgstr "segurança, em um cluster"

msgid "On an HPC cluster, Guix is typically used to manage scientific software.  Security-critical software such as the operating system kernel and system services such as @code{sshd} and the batch scheduler remain under control of sysadmins."
msgstr "Em um cluster HPC, o Guix é normalmente usado para gerenciar software científico. Softwares críticos de segurança, como o kernel do sistema operacional e serviços do sistema, como @code{sshd} e o agendador de lotes, permanecem sob o controle dos administradores de sistema."

msgid "The Guix project has a good track record delivering security updates in a timely fashion (@pxref{Security Updates,,, guix, GNU Guix Reference Manual}).  To get security updates, users have to run @code{guix pull && guix upgrade}."
msgstr "O projeto Guix tem um bom histórico de entrega de atualizações de segurança em tempo hábil (@pxref{Atualizações de segurança,,, guix.pt_BR, Manual de Referência do GNU Guix}). Para obter atualizações de segurança, os usuários precisam executar @code{guix pull && guix upgrade}."

msgid "Because Guix uniquely identifies software variants, it is easy to see if a vulnerable piece of software is in use. For instance, to check whether the glibc@ 2.25 variant without the mitigation patch against ``@uref{https://www.qualys.com/2017/06/19/stack-clash/stack-clash.txt,Stack Clash}'', one can check whether user profiles refer to it at all:"
msgstr "Como o Guix identifica exclusivamente variantes de software, é fácil ver se um pedaço vulnerável de software está em uso. Por exemplo, para verificar se a variante glibc@ 2.25 sem o patch de mitigação contra ``@uref{https://www.qualys.com/2017/06/19/stack-clash/stack-clash.txt,Stack Clash}'', pode-se verificar se os perfis de usuário fazem referência a ela:"

msgid "guix gc --referrers /gnu/store/…-glibc-2.25\n"
msgstr "guix gc --referrers /gnu/store/…-glibc-2.25\n"

msgid "This will report whether profiles exist that refer to this specific glibc variant."
msgstr "Isso informará se existem perfis que se referem a essa variante glibc específica."

msgid "system management"
msgstr "gerenciamento do sistema"

msgid "sysadmin"
msgstr "Administrador de sistema"

msgid "Since Guix does not handle packaging, system configuration and services the way other (more ``classical'') distributions do, some workflows tend to unfold slightly different as we are used to and need slight adjustment.  This chapter intends to help with such manners."
msgstr "Como o Guix não lida com empacotamento, configuração do sistema e serviços da mesma forma que outras distribuições (mais ``clássicas'') fazem, alguns fluxos de trabalho tendem a ser um pouco diferente do que estamos acostumados e precisam de pequenos ajustes. Este capítulo pretende ajudar com essas diferenças."

msgid "With the deprecation of the default value for the postgres package in postgresql-configuration (see b93434e656eba4260df82158a96c295000d3ff44), system upgrades need some manual action before they can take place.  Here's a handy guide on how to."
msgstr "Com a descontinuação do valor padrão do pacote postgres em postgresql-configuration (veja b93434e656eba4260df82158a96c295000d3ff44), é necessário fazer algumas ações manuais antes de atualizar o sistema. Aqui está um guia prático sobre como fazer isso."

msgid "Please note that this is a straight-forward way for smaller datasets.  For larger databases @url{https://www.postgresql.org/docs/current/pgupgrade.html, @code{pg_upgrade}} may be the better choice.  Handling the service and system upgrade as described in this guide still applies, though."
msgstr "Observe que esta é uma maneira simples para conjuntos de dados menores. Para bancos de dados maiores @url{https://www.postgresql.org/docs/current/pgupgrade.html, @code{pg_upgrade}} pode ser a melhor escolha. Contudo, a atualização do serviço e do sistema conforme descrito neste guia ainda se aplica."

msgid "Stop and disable cuirass."
msgstr "Pare e desabilite cuirass."

msgid "Prevent the service from starting and failing after a reconfiguration:"
msgstr "Evite que o serviço de iniciar e falhar após a reconfiguração:"

msgid "sudo herd stop cuirass && sudo herd disable cuirass"
msgstr "sudo herd stop cuirass && sudo herd disable cuirass"

msgid "Dump the database contents."
msgstr "Exporte o conteúdo do banco de dados."

msgid "sudo su - postgres -s /bin/sh -c pg_dumpall > /tmp/pg.dump"
msgstr "sudo su - postgres -s /bin/sh -c pg_dumpall > /tmp/pg.dump"

msgid "Add or alter the postgres service."
msgstr "Adicione ou altere o serviço do postgres."

msgid "Depending on whether your postgres service is defined implicitly (through the dependency from the cuirass service) or its own entry in your operating system's @code{(services)} property, you need to either add or alter the already existing configuration to reflect your intended version upgrade."
msgstr "Dependendo se o seu serviço postgres é definido implicitamente (por meio da dependência do serviço cuirass) ou por meio de sua própria entrada na propriedade @code{(services)} do seu sistema operacional, você precisa adicionar ou alterar a configuração já existente para refletir a atualização de versão pretendida."

msgid "Be careful not to upgrade directly to postgres-16 -- cuirass service for some reason doesn't like that.  I had to find and purge the relevant files and then re-initialize after a failed upgrade to postgres 16."
msgstr "Tenha cuidado para não atualizar diretamente para o postgres-16 -- por algum motivo, o serviço cuirass não gosta disso. Tive que encontrar e limpar os arquivos relevantes e então reinicializar após uma atualização com falha para o postgres 16."

msgid ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (postgresql (@@ (gnu packages databases) postgresql-15))))\n"
msgstr ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (postgresql (@@ (gnu packages databases) postgresql-15))))\n"

msgid "Note: If you for some reason didn't read the text here but somewhat blindly followed the examples and @emph{did upgrade to 16}, here's how you reset the state:"
msgstr "Observação: Se por algum motivo você não leu esse texto, mas seguiu cegamente os exemplos a seguir e @emph{atualizou para a versão 16}, aqui está como você redefine o estado:"

msgid "Delete the database instance files."
msgstr "Apague os arquivos de instância de banco de dados."

msgid "They default to live under @file{/var/lib/postgres/data}."
msgstr "Por padrão eles ficam em @file{/var/lib/postgres/data}."

msgid "Re-initialize postgres."
msgstr "Reinicialize o postgres."

msgid "sudo su - postgres -s /bin/sh -c 'pg_ctl init -D /var/lib/postgres/data'"
msgstr "sudo su - postgres -s /bin/sh -c 'pg_ctl init -D /var/lib/postgres/data'"

msgid "Reconfigure your system."
msgstr "Reconfigure seu sistema."

msgid "sudo guix system reconfigure path/to/your/altered/config.scm"
msgstr "sudo guix system reconfigure path/to/your/altered/config.scm"

msgid "Restore database contents."
msgstr "Restaure o conteúdo do banco de dados."

msgid "sudo su - postgres -s /bin/sh -c 'psql -d postgres -f /tmp/pg.dump'"
msgstr "sudo su - postgres -s /bin/sh -c 'psql -d postgres -f /tmp/pg.dump'"

msgid "Enable and start the service."
msgstr "Habilite e inicie o serviço."

msgid ""
"sudo herd enable cuirass\n"
"sudo herd start cuirass\n"
msgstr ""
"sudo herd enable cuirass\n"
"sudo herd start cuirass\n"

msgid "Guix is based on the @uref{https://nixos.org/nix/, Nix package manager}, which was designed and implemented by Eelco Dolstra, with contributions from other people (see the @file{nix/AUTHORS} file in Guix.)  Nix pioneered functional package management, and promoted unprecedented features, such as transactional package upgrades and rollbacks, per-user profiles, and referentially transparent build processes.  Without this work, Guix would not exist."
msgstr "Guix é baseado no @uref{https://nixos.org/nix/, gerenciador de pacotes Nix}, que foi projetado e implementado por Eelco Dolstra, com contribuições de outras pessoas (veja o arquivo @file{nix/AUTHORS} no Guix.) O Nix foi pioneiro no gerenciamento funcional de pacotes e promoveu recursos sem precedentes, como atualizações e reversões de pacotes transacionais, perfis por usuário e processos de construção referencialmente transparentes. Sem esse trabalho, o Guix não existiria."

msgid "The Nix-based software distributions, Nixpkgs and NixOS, have also been an inspiration for Guix."
msgstr "As distribuições de software baseadas em Nix, Nixpkgs e NixOS, também foram uma inspiração para o Guix."

msgid "GNU@tie{}Guix itself is a collective work with contributions from a number of people.  See the @file{AUTHORS} file in Guix for more information on these fine people.  The @file{THANKS} file lists people who have helped by reporting bugs, taking care of the infrastructure, providing artwork and themes, making suggestions, and more---thank you!"
msgstr "O GNU@tie{}Guix em si é um trabalho coletivo com contribuições de várias pessoas. Veja o arquivo @file{AUTHORS} no Guix para obter mais informações sobre essas pessoas legais. O arquivo @file{THANKS} lista as pessoas que ajudaram a relatar erros, cuidar da infraestrutura, fornecer ilustrações e temas, fazer sugestões e muito mais -- obrigado!"

msgid "This document includes adapted sections from articles that have previously been published on the Guix blog at @uref{https://guix.gnu.org/blog} and on the Guix-HPC blog at @uref{https://hpc.guix.info/blog}."
msgstr "Este documento inclui seções adaptadas de artigos que foram publicados anteriormente no blog Guix em @uref{https://guix.gnu.org/blog} e no blog Guix-HPC em @uref{https://hpc.guix.info/blog}."

msgid "license, GNU Free Documentation License"
msgstr "licença, Licença de Documentação Livre GNU"

msgid "fdl-1.3.texi"
msgstr "fdl-1.3.texi"
