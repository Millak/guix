# German translations for the Guix Cookbook.
# Copyright (C) 2019, 2020 the authors of Guix (msgids) and the following authors (msgstr)
# This file is distributed under the same license as the guix manual package.
# Florian Pelz <pelzflorian@pelzflorian.de>, 2020, 2021, 2022, 2023, 2024, 2025.
# Jens Maucher <jensmaucher@gmail.com>, 2023.
# Weblate Translation Memory <noreply-mt-weblate-translation-memory@weblate.org>, 2024, 2025.
msgid ""
msgstr ""
"Project-Id-Version: guix 1.0.1.4876-09145-dirty\n"
"Report-Msgid-Bugs-To: bug-guix@gnu.org\n"
"POT-Creation-Date: 2025-10-21 03:18+0000\n"
"PO-Revision-Date: 2025-10-30 11:10+0000\n"
"Last-Translator: pelzflorian <pelzflorian@noreply.codeberg.org>\n"
"Language-Team: German <https://translate.codeberg.org/projects/guix/documentation-cookbook/de/>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.13.3\n"

msgid "@documentencoding UTF-8"
msgstr ""
"@documentencoding UTF-8\n"
"@documentlanguage de\n"
"@frenchspacing on"

msgid "GNU Guix Cookbook"
msgstr "GNU-Guix-Kochbuch"

msgid "Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license is included in the section entitled ``GNU Free Documentation License''."
msgstr "Es ist Ihnen gestattet, dieses Dokument zu vervielfältigen, weiterzugeben und/oder zu verändern, unter den Bedingungen der GNU Free Documentation License, entweder gemäß Version 1.3 der Lizenz oder (nach Ihrer Option) einer späteren Version, die von der Free Software Foundation veröffentlicht wurde, ohne unveränderliche Abschnitte, ohne vorderen Umschlagtext und ohne hinteren Umschlagtext. Eine Kopie der Lizenz finden Sie im Abschnitt mit dem Titel „GNU-Lizenz für freie Dokumentation“."

msgid "System administration"
msgstr "Systemadministration"

msgid "Guix cookbook: (guix-cookbook)"
msgstr "Guix-Kochbuch: (guix-cookbook.de)"

msgid "Tutorials and examples for GNU Guix."
msgstr "Anleitungen und Beispiele für GNU Guix."

msgid "Tutorials and examples for using the GNU Guix Functional Package Manager"
msgstr "Anleitungen und Beispiele, wie man den funktionalen Paketmanager GNU Guix benutzt"

msgid "The GNU Guix Developers"
msgstr "Die Entwickler von GNU Guix"

msgid "Top"
msgstr "Top"

msgid "This document presents tutorials and detailed examples for GNU@tie{}Guix, a functional package management tool written for the GNU system.  Please @pxref{Top,,, guix, GNU Guix reference manual} for details about the system, its API, and related concepts."
msgstr "Dieses Dokument stellt Anleitungen und detaillierte Beispiele vor, wie man GNU@tie{}Guix benutzt, ein Werkzeug zur funktionalen Paketverwaltung, das für das GNU-System geschrieben wurde. Bitte lesen Sie Details zum System, seinen Programmierschnittstellen und ähnlichen Konzepten im @ref{Top,,, guix.de, Referenzhandbuch zu GNU Guix} nach."

msgid "This manual is also available in Simplified Chinese (@pxref{Top,,, guix-cookbook.zh_CN, GNU Guix 烹饪书}), French (@pxref{Top,,, guix-cookbook.fr, Livre de recettes de GNU Guix}), German (@pxref{Top,,, guix-cookbook.de, GNU-Guix-Kochbuch}), Korean (@pxref{Top,,, guix-cookbook.ko, GNU Guix 쿡북}), Spanish (@pxref{Top,,, guix-cookbook.es, Libro de recetas de GNU Guix}), Italian (@pxref{Top,,, guix-cookbook.it, Ricettario di GNU Guix}), Brazilian Portuguese (@pxref{Top,,, guix-cookbook.pt_BR, Livro de receitas do GNU Guix}), Russian (@pxref{Top,,, guix-cookbook.ru, GNU Guix Рецепты}), Slovak (@pxref{Top,,, guix-cookbook.sk, Receptár GNU Guix}), and Swedish (@pxref{Top,,, guix-cookbook.sv, Kokbok för GNU Guix}).  If you would like to translate this document in your native language, consider joining @uref{https://translate.codeberg.org/projects/guix/documentation-cookbook, Weblate} (@pxref{Translating Guix,,, guix, GNU Guix Reference Manual})."
msgstr "Dieses Handbuch ist auch auf Englisch (siehe @ref{Top,,, guix-cookbook, GNU Guix Cookbook}), in Vereinfachtem Chinesisch (siehe @ref{Top,,, guix-cookbook.zh_CN, GNU Guix 烹饪书}), auf Französisch (siehe @ref{Top,,, guix-cookbook.fr, Livre de recettes de GNU Guix}), auf Koreanisch (siehe @ref{Top,,, guix-cookbook.ko, GNU Guix 쿡북}), auf Spanisch (siehe @ref{Top,,, guix-cookbook.es, Libro de recetas de GNU Guix}), auf Italienisch (siehe @ref{Top,,, guix-cookbook.it, Ricettario di GNU Guix}), auf Brasilianischem Portugiesisch (siehe @ref{Top,,, guix-cookbook.pt_BR, Livro de receitas do GNU Guix}), auf Russisch (siehe @ref{Top,,, guix-cookbook.ru, GNU Guix Рецепты}), auf Slowakisch (siehe @ref{Top,,, guix-cookbook.sk, Receptár GNU Guix}) und auf Schwedisch (@pxref{Top,,, guix-cookbook.sv, Kokbok för GNU Guix}) verfügbar. Wenn Sie dieses Dokument in Ihre eigene Sprache übersetzen möchten, dann sind Sie bei @uref{https://translate.codeberg.org/projects/guix/documentation-cookbook, Weblate} herzlich willkommen (siehe @ref{Guix übersetzen,,, guix.de, Referenzhandbuch zu GNU Guix})."

msgid "Scheme tutorials"
msgstr "Anleitungen zu Scheme"

msgid "Meet your new favorite language!"
msgstr "Lernen Sie Ihre neue Lieblingssprache kennen!"

msgid "Packaging"
msgstr "Pakete schreiben"

msgid "Packaging tutorials"
msgstr "Wie man eigene Pakete verfasst."

msgid "System Configuration"
msgstr "Systemkonfiguration"

msgid "Customizing the GNU System"
msgstr "Das GNU-System anpassen."

msgid "Containers"
msgstr "Container"

msgid "Isolated environments and nested systems"
msgstr "Isolierte Umgebungen und verschachtelte Systeme."

msgid "Virtual Machines"
msgstr "Virtuelle Maschinen"

msgid "Virtual machines usage and configuration"
msgstr "Bedienung und Konfiguration von VM."

msgid "Advanced package management"
msgstr "Fortgeschrittene Paketverwaltung"

msgid "Power to the users!"
msgstr "Alle Macht den Nutzern!"

msgid "Software Development"
msgstr "Software-Entwicklung"

msgid "Environments, continuous integration, etc."
msgstr "Umgebungen, kontinuierliche Integration usw."

msgid "Environment management"
msgstr "Umgebungen verwalten"

msgid "Control environment"
msgstr "Umgebungen festlegen."

msgid "Installing Guix on a Cluster"
msgstr "Auf einem Rechencluster installieren"

msgid "High-performance computing."
msgstr "Hochleistungsrechnen mit Guix."

msgid "Guix System Management"
msgstr "Verwalten eines Guix System"

msgid "System Management specifics."
msgstr "Wo die Systemverwaltung anders ist."

msgid "Acknowledgments"
msgstr "Danksagungen"

msgid "Thanks!"
msgstr "Danke!"

msgid "GNU Free Documentation License"
msgstr "GNU-Lizenz für freie Dokumentation"

msgid "The license of this document."
msgstr "Die Lizenz dieses Dokuments."

msgid "Concept Index"
msgstr "Konzeptverzeichnis"

msgid "Concepts."
msgstr "Konzepte."

msgid "--- The Detailed Node Listing ---"
msgstr "--- Detaillierte Liste der Knoten ---"

msgid "A Scheme Crash Course"
msgstr "Ein Schnellkurs in Scheme"

msgid "Packaging Tutorial"
msgstr "Anleitung zum Paketeschreiben"

msgid "A tutorial on how to add packages to Guix."
msgstr "Eine Anleitung, wie Sie Pakete zu Guix hinzufügen."

msgid "A ``Hello World'' package"
msgstr "Ein Hallo-Welt-Paket"

msgid "Setup"
msgstr "Herangehensweisen"

msgid "Extended example"
msgstr "Erweitertes Beispiel"

msgid "Other build systems"
msgstr "Andere Erstellungssysteme"

msgid "Programmable and automated package definition"
msgstr "Programmierbare und automatisierte Paketdefinition"

msgid "Getting help"
msgstr "Hilfe bekommen"

msgid "Conclusion"
msgstr "Schlusswort"

msgid "References"
msgstr "Literaturverzeichnis"

msgid "Local file"
msgstr "Lokale Datei"

msgid "Channels"
msgstr "Kanäle"

msgid "Direct checkout hacking"
msgstr "Direkt am Checkout hacken"

msgid "Recursive importers"
msgstr "Rekursive Importer"

msgid "Automatic update"
msgstr "Automatisch aktualisieren"

msgid "Inheritance"
msgstr "Vererbung"

msgid "Auto-Login to a Specific TTY"
msgstr "Automatisch an virtueller Konsole anmelden"

msgid "Automatically Login a User to a Specific TTY"
msgstr "Benutzer an einem bestimmten TTY automatisch anmelden."

msgid "Customizing the Kernel"
msgstr "Den Kernel anpassen"

msgid "Creating and using a custom Linux kernel on Guix System."
msgstr "Einen eigenen Linux-Kernel auf Guix System erzeugen und benutzen."

msgid "Guix System Image API"
msgstr "Die Image-Schnittstelle von Guix System"

msgid "Customizing images to target specific platforms."
msgstr "Abbilder für bestimmte Plattformen anpassen."

msgid "Using security keys"
msgstr "Sicherheitsschlüssel verwenden"

msgid "How to use security keys with Guix System."
msgstr "Ihre Sicherheitsschlüssel mit Guix System gebrauchen."

msgid "Dynamic DNS mcron job"
msgstr "Dynamisches DNS als mcron-Auftrag"

msgid "Job to update the IP address behind a DuckDNS host name."
msgstr "Mit diesem Auftrag bleibt Ihre IP-Adresse bei DuckDNS aktuell."

msgid "Connecting to Wireguard VPN"
msgstr "Verbinden mit Wireguard VPN"

msgid "Connecting to a Wireguard VPN."
msgstr "Wie man sich mit einem Wireguard-VPN verbindet."

msgid "Customizing a Window Manager"
msgstr "Fensterverwalter (Window Manager) anpassen"

msgid "Handle customization of a Window manager on Guix System."
msgstr "Wie man einen Fensterverwalter auf Guix System anpassen kann."

msgid "Running Guix on a Linode Server"
msgstr "Guix auf einem Linode-Server nutzen"

msgid "Running Guix on a Linode Server."
msgstr "Guix auf einem Linode-Server nutzen."

msgid "Running Guix on a Kimsufi Server"
msgstr "Guix auf einem Kimsufi-Server nutzen"

msgid "Running Guix on a Kimsufi Server."
msgstr "Guix auf einem Kimsufi-Server nutzen."

msgid "Setting up a bind mount"
msgstr "Bind-Mounts anlegen"

msgid "Setting up a bind mount in the file-systems definition."
msgstr "Bind-Mounts als Dateisystemdefinition einrichten."

msgid "Getting substitutes from Tor"
msgstr "Substitute über Tor beziehen"

msgid "Configuring Guix daemon to get substitutes through Tor."
msgstr "Den Guix-Daemon konfigurieren, damit er Substitute über Tor lädt."

msgid "Setting up NGINX with Lua"
msgstr "NGINX mit Lua konfigurieren"

msgid "Configuring NGINX web-server to load Lua modules."
msgstr "Den NGINX-Web-Server so einrichten, dass Lua-Module geladen werden."

msgid "Music Server with Bluetooth Audio"
msgstr "Musik-Server mit Bluetooth-Audio"

msgid "Headless music player with Bluetooth output."
msgstr "Musikzentrale ohne Bildschirm mit Bluetooth-Ausgabe."

msgid "StumpWM"
msgstr "StumpWM"

msgid "Session lock"
msgstr "Sitzungen sperren"

msgid "Xorg"
msgstr "Xorg"

msgid "Guix Containers"
msgstr "Guix-Container"

msgid "Perfectly isolated environments"
msgstr "Völlig isolierte Umgebungen."

msgid "Guix System Containers"
msgstr "Container mit Guix System"

msgid "A system inside your system"
msgstr "Ein System in Ihrem System."

msgid "A Database Container"
msgstr "Ein Datenbank-Container"

msgid "Container Networking"
msgstr "Netzwerkverbindungen im Container"

msgid "Network bridge for QEMU"
msgstr "Netzwerkbrücke für QEMU"

msgid "Routed network for libvirt"
msgstr "Netzwerk-Routing anschalten in libvirt"

msgid "Custom NAT-based network for libvirt"
msgstr "Eigenes NAT-basiertes Netzwerk in libvirt"

msgid "References: VM References"
msgstr "Literaturangaben: Literaturangaben zu VM"

msgid "Further reading on virtual machines."
msgstr "Weiterführende Literatur zu virtuellen Maschinen."

msgid "Guix Profiles in Practice"
msgstr "Guix-Profile in der Praxis"

msgid "Strategies for multiple profiles and manifests."
msgstr "Strategien für mehrere Profile und Manifeste."

msgid "Basic setup with manifests"
msgstr "Grundlegende Einrichtung über Manifeste"

msgid "Required packages"
msgstr "Die nötigen Pakete"

msgid "Default profile"
msgstr "Vorgabeprofil"

msgid "The benefits of manifests"
msgstr "Der Vorteil von Manifesten"

msgid "Reproducible profiles"
msgstr "Reproduzierbare Profile"

msgid "Getting Started"
msgstr "Einstieg"

msgid "Step 0: using `guix shell'."
msgstr "Schritt 0: „guix shell“ benutzen."

msgid "Building with Guix"
msgstr "Erstellen mit Guix"

msgid "Step 1: building your code."
msgstr "Schritt 1: Ihren Code kompilieren."

msgid "The Repository as a Channel"
msgstr "Das Repository als Kanal"

msgid "Step 2: turning the repo in a channel."
msgstr "Schritt 2: Ein Repo in einen Kanal verwandeln."

msgid "Package Variants"
msgstr "Paketvarianten"

msgid "Bonus: Defining variants."
msgstr "Bonus: Varianten definieren."

msgid "Setting Up Continuous Integration"
msgstr "Kontinuierliche Integration einrichten"

msgid "Step 3: continuous integration."
msgstr "Schritt 3: Kontinuierliche Integration."

msgid "Build Manifest"
msgstr "Erstellungs-Manifest"

msgid "Bonus: Manifest."
msgstr "Bonus: Manifest."

msgid "Wrapping Up"
msgstr "Zusammenfassung"

msgid "Recap."
msgstr "Resümee."

msgid "Guix environment via direnv"
msgstr "Guix-Umgebung mit direnv"

msgid "Setup Guix environment with direnv"
msgstr "Mit direnv Guix-Umgebungen einrichten."

msgid "Setting Up a Head Node"
msgstr "Den Zentralrechner konfigurieren"

msgid "The node that runs the daemon."
msgstr "Auf diesem Rechner läuft der Daemon."

msgid "Setting Up Compute Nodes"
msgstr "Die Arbeitsrechner konfigurieren"

msgid "Client nodes."
msgstr "Die Client-Knoten."

msgid "Cluster Network Access"
msgstr "Netzwerkzugriff im Cluster"

msgid "Dealing with network access restrictions."
msgstr "Der Umgang mit eingeschränktem Netzwerkzugriff."

msgid "Cluster Disk Usage"
msgstr "Speicherplatz im Cluster"

msgid "Disk usage considerations."
msgstr "Mit dem Plattenplatz haushalten."

msgid "Cluster Security Considerations"
msgstr "Sicherheit im Cluster"

msgid "Keeping the cluster secure."
msgstr "Sicherheit gewährleisten."

msgid "Upgrade Postgres for Cuirass"
msgstr "Postgres für Cuirass aktualisieren"

msgid "Upgrading from the default postgres."
msgstr "Aktualisieren, wenn man noch das vorgegebene Postgres hat."

msgid "GNU@tie{}Guix is written in the general purpose programming language Scheme, and many of its features can be accessed and manipulated programmatically.  You can use Scheme to generate package definitions, to modify them, to build them, to deploy whole operating systems, etc."
msgstr "GNU@tie{}Guix ist in Scheme geschrieben, einer für alle Anwendungszwecke geeigneten Programmiersprache, und viele Funktionalitäten von Guix können programmatisch angesteuert und verändert werden. Sie können Scheme benutzen, um Paketdefinitionen zu erzeugen, abzuändern, ganze Betriebssysteme einzuspielen etc."

msgid "Knowing the basics of how to program in Scheme will unlock many of the advanced features Guix provides --- and you don't even need to be an experienced programmer to use them!"
msgstr "Wenn man die Grundzüge kennt, wie man in Scheme programmiert, bekommt man Zugang zu vielen der fortgeschrittenen Funktionen von Guix@tie{}– und Sie müssen dazu nicht einmal ein erfahrener Programmierer sein!"

msgid "Let's get started!"
msgstr "Legen wir los!"

msgid "Scheme, crash course"
msgstr "Scheme, Schnellkurs"

msgid "Guix uses the Guile implementation of Scheme.  To start playing with the language, install it with @code{guix install guile} and start a @dfn{REPL}---short for @uref{https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop, @dfn{read-eval-print loop}}---by running @code{guile} from the command line."
msgstr "Die von Guix benutzte Scheme-Implementierung nennt sich Guile. Um mit der Sprache herumspielen zu können, installieren Sie Guile mit @code{guix install guile} und starten eine interaktive Programmierumgebung (englisch @uref{https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop, Read-Eval-Print-Loop}, kurz REPL), indem Sie @code{guile} auf der Befehlszeile ausführen."

msgid "Alternatively you can also run @code{guix shell guile -- guile} if you'd rather not have Guile installed in your user profile."
msgstr "Alternativ können Sie auch den Befehl @code{guix shell -- guile} ausführen, wenn Sie Guile lieber @emph{nicht} in Ihr Nutzerprofil installieren wollen."

msgid "In the following examples, lines show what you would type at the REPL; lines starting with ``@result{}'' show evaluation results, while lines starting with ``@print{}'' show things that get printed.  @xref{Using Guile Interactively,,, guile, GNU Guile Reference Manual}, for more details on the REPL."
msgstr "In den folgenden Beispielen stehen die Zeilen dafür, was Sie auf der REPL eintippen; wenn eine Zeile mit „@result{}“ beginnt, zeigt sie das Ergebnis einer Auswertung, während Zeilen, die mit „@print{}“ beginnen, für eine angezeigte Ausgabe stehen. Siehe @ref{Using Guile Interactively,,, guile, das Referenzhandbuch zu GNU Guile} für mehr Details zur REPL."

msgid "Scheme syntax boils down to a tree of expressions (or @emph{s-expression} in Lisp lingo).  An expression can be a literal such as numbers and strings, or a compound which is a parenthesized list of compounds and literals.  @code{#true} and @code{#false} (abbreviated @code{#t} and @code{#f}) stand for the Booleans ``true'' and ``false'', respectively."
msgstr "Die Scheme-Syntax ist an sich ein Baum von Ausdrücken (Lisp-Programmierer nennen sie @emph{symbolische Ausdrücke}, kurz @emph{S-Ausdrücke} bzw.@: englisch @emph{s-expression}). Ein solcher Ausdruck kann ein Literal sein, wie z.B.@: Zahlen oder Zeichenketten, oder er kann ein zusammengesetzter Ausdruck sein, d.h.@: eine geklammerte Liste von zusammengesetzten und literalen Ausdrücken. Dabei stehen @code{#true} und @code{#false} (abgekürzt auch @code{#t} und @code{#f}) jeweils für die Booleschen Werte „wahr“ und „falsch“."

msgid "Examples of valid expressions:"
msgstr "Beispiele für gültige Ausdrücke"

msgid ""
"\"Hello World!\"\n"
"@result{} \"Hello World!\"\n"
"\n"
msgstr ""
"\"Hallo Welt!\"\n"
"@result{} \"Hallo Welt!\"\n"
"\n"

msgid ""
"17\n"
"@result{} 17\n"
"\n"
msgstr ""
"17\n"
"@result{} 17\n"
"\n"

msgid ""
"(display (string-append \"Hello \" \"Guix\" \"\\n\"))\n"
"@print{} Hello Guix!\n"
"@result{} #<unspecified>\n"
msgstr ""
"(display (string-append \"Hallo \" \"Guix\" \"\\n\"))\n"
"@print{} Hallo Guix!\n"
"@result{} #<unspecified>\n"

msgid "This last example is a function call nested in another function call.  When a parenthesized expression is evaluated, the first term is the function and the rest are the arguments passed to the function.  Every function returns the last evaluated expression as its return value."
msgstr "Das letzte Beispiel eben ist der Aufruf einer Funktion innerhalb eines anderen Funktionsaufrufs. Wenn ein geklammerter Ausdruck ausgewertet wird, ist der erste Term die Funktion und der Rest sind die Argumente, die an die Funktion übergeben werden. Jede Funktion liefert ihren zuletzt ausgewerteten Ausdruck als ihren Rückgabewert."

msgid "Anonymous functions---@dfn{procedures} in Scheme parlance---are declared with the @code{lambda} term:"
msgstr "Anonyme Funktionen@tie{}– bzw.@: Prozeduren, wie man in Scheme sagt@tie{}– werden mit dem @code{lambda}-Term deklariert:"

msgid ""
"(lambda (x) (* x x))\n"
"@result{} #<procedure 120e348 at <unknown port>:24:0 (x)>\n"
msgstr ""
"(lambda (x) (* x x))\n"
"@result{} #<procedure 120e348 at <unknown port>:24:0 (x)>\n"

msgid "The above procedure returns the square of its argument.  Since everything is an expression, the @code{lambda} expression returns an anonymous procedure, which can in turn be applied to an argument:"
msgstr "Die obige Prozedur liefert das Quadrat ihres Arguments. Weil alles ein Ausdruck ist, liefert der Ausdruck @code{lambda} eine anonyme Prozedur, die wiederum auf ein Argument angewandt werden kann:"

msgid ""
"((lambda (x) (* x x)) 3)\n"
"@result{} 9\n"
msgstr ""
"((lambda (x) (* x x)) 3)\n"
"@result{} 9\n"

msgid "Procedures are regular values just like numbers, strings, Booleans, and so on."
msgstr "Prozeduren sind normale Werte wie Zahlen, Zeichenketten, Boolesche Ausdrücke und dererlei auch."

msgid "Anything can be assigned a global name with @code{define}:"
msgstr "Allem kann mit @code{define} ein globaler Name zugewiesen werden:"

msgid ""
"(define a 3)\n"
"(define square (lambda (x) (* x x)))\n"
"(square a)\n"
"@result{} 9\n"
msgstr ""
"(define a 3)\n"
"(define quadrat (lambda (x) (* x x)))\n"
"(quadrat a)\n"
"@result{} 9\n"

msgid "Procedures can be defined more concisely with the following syntax:"
msgstr "Prozeduren können auch kürzer mit der folgenden Syntax definiert werden:"

msgid "(define (square x) (* x x))\n"
msgstr "(define (quadrat x) (* x x))\n"

msgid "A list structure can be created with the @code{list} procedure:"
msgstr "Eine Listenstruktur kann mit der @code{list}-Prozedur erzeugt werden:"

msgid ""
"(list 2 a 5 7)\n"
"@result{} (2 3 5 7)\n"
msgstr ""
"(list 2 a 5 7)\n"
"@result{} (2 3 5 7)\n"

msgid "Standard procedures are provided by the @code{(srfi srfi-1)} module to create and process lists (@pxref{SRFI-1, list processing,, guile, GNU Guile Reference Manual}).  Here are some of the most useful ones in action:"
msgstr "Für die Erzeugung und Verarbeitung von Listen stehen im Modul @code{(srfi srfi-1)} Standardprozeduren zur Verfügung (siehe @ref{SRFI-1, Listenverarbeitung,, guile, Referenzhandbuch zu GNU Guile}). Hier ein kurzer Überblick:"

msgid ""
"(use-modules (srfi srfi-1))  ;import list processing procedures\n"
"\n"
msgstr ""
"(use-modules (srfi srfi-1))  ;Prozeduren zur Listenverarbeitung importieren\n"
"\n"

msgid ""
"(append (list 1 2) (list 3 4))\n"
"@result{} (1 2 3 4)\n"
"\n"
msgstr ""
"(append (list 1 2) (list 3 4))\n"
"@result{} (1 2 3 4)\n"
"\n"

msgid ""
"(map (lambda (x) (* x x)) (list 1 2 3 4))\n"
"@result{} (1 4 9 16)\n"
"\n"
msgstr ""
"(map (lambda (x) (* x x)) (list 1 2 3 4))\n"
"@result{} (1 4 9 16)\n"
"\n"

msgid ""
"(delete 3 (list 1 2 3 4))        @result{} (1 2 4)\n"
"(filter odd? (list 1 2 3 4))     @result{} (1 3)\n"
"(remove even? (list 1 2 3 4))    @result{} (1 3)\n"
"(find number? (list \"a\" 42 \"b\")) @result{} 42\n"
msgstr ""
"(delete 3 (list 1 2 3 4))        @result{} (1 2 4)\n"
"(filter odd? (list 1 2 3 4))     @result{} (1 3)\n"
"(remove even? (list 1 2 3 4))    @result{} (1 3)\n"
"(find number? (list \"a\" 42 \"b\")) @result{} 42\n"

msgid "Notice how the first argument to @code{map}, @code{filter}, @code{remove}, and @code{find} is a procedure!"
msgstr "Beachten Sie, dass das erste Argument an @code{map}, @code{filter}, @code{remove} und @code{find} eine Prozedur ist!"

msgid "S-expression"
msgstr "symbolischer Ausdruck (S-expression)"

msgid "The @dfn{quote} disables evaluation of a parenthesized expression, also called an S-expression or ``s-exp'': the first term is not called over the other terms (@pxref{Expression Syntax, quote,, guile, GNU Guile Reference Manual}).  Thus it effectively returns a list of terms."
msgstr "Mit dem @dfn{quote}-Zeichen wird das Auswerten eines geklammerten Ausdrucks abgeschaltet (man spricht dann von einem symbolischen Ausdruck, engl.@: „S-Expression“ bzw. „S-exp“): Der erste Term wird @emph{nicht} auf den anderen Termen aufgerufen (siehe @ref{Expression Syntax, quote,, guile, Referenzhandbuch zu GNU Guile}). Folglich liefert es quasi eine Liste von Termen."

msgid ""
"'(display (string-append \"Hello \" \"Guix\" \"\\n\"))\n"
"@result{} (display (string-append \"Hello \" \"Guix\" \"\\n\"))\n"
"\n"
msgstr ""
"'(display (string-append \"Hallo \" \"Guix\" \"\\n\"))\n"
"@result{} (display (string-append \"Hallo \" \"Guix\" \"\\n\"))\n"
"\n"

msgid ""
"'(2 a 5 7)\n"
"@result{} (2 a 5 7)\n"
msgstr ""
"'(2 a 5 7)\n"
"@result{} (2 a 5 7)\n"

msgid "The @code{quasiquote} (@code{`}, a backquote) disables evaluation of a parenthesized expression until @code{unquote} (@code{,}, a comma)  re-enables it.  Thus it provides us with fine-grained control over what is evaluated and what is not."
msgstr "Mit einem @code{quasiquote}-Zeichen (@code{`}) wird die Auswertung eines geklammerten Ausdrucks so lange abgeschaltet, bis ein @code{unquote} (ein Komma) sie wieder aktiviert. Wir können damit genau steuern, was ausgewertet wird und was nicht."

msgid ""
"`(2 a 5 7 (2 ,a 5 ,(+ a 4)))\n"
"@result{} (2 a 5 7 (2 3 5 7))\n"
msgstr ""
"`(2 a 5 7 (2 ,a 5 ,(+ a 4)))\n"
"@result{} (2 a 5 7 (2 3 5 7))\n"

msgid "Note that the above result is a list of mixed elements: numbers, symbols (here @code{a}) and the last element is a list itself."
msgstr "Beachten Sie, dass obiges Ergebnis eine Liste verschiedenartiger Elemente ist: Zahlen, Symbole (in diesem Fall @code{a}) und als letztes Element selbst wieder eine Liste."

msgid "G-expressions, syntax"
msgstr "G-Ausdrücke, Syntax"

msgid "gexps, syntax"
msgstr "Gexps, Syntax"

msgid "#~"
msgstr "#~"

msgid "#$"
msgstr "#$"

msgid "gexp"
msgstr "gexp"

msgid "ungexp"
msgstr "ungexp"

msgid "Guix defines a variant of S-expressions on steroids called @dfn{G-expressions} or ``gexps'', which come with a variant of @code{quasiquote} and @code{unquote}: @code{#~} (or @code{gexp}) and @code{#$} (or @code{ungexp}).  They let you @emph{stage code for later execution}."
msgstr "In Guix gibt es außerdem eine aufgeputschte Form von S-Ausdrücken: die @dfn{G-Ausdrücke} oder „Gexps“, die ihre eigene Art von @code{quasiquote} und @code{unquote} haben: @code{#~} (oder @code{gexp}) und @code{#$} (oder @code{ungexp}). Mit Ihnen kennzeichnen Sie, welcher Code @emph{erst später ausgeführt} werden soll („Code-Staging“)."

msgid "For example, you'll encounter gexps in some package definitions where they provide code to be executed during the package build process.  They look like this:"
msgstr "G-Ausdrücke begegnen Ihnen etwa in manchen Paketdefinitionen, wo sie eingesetzt werden, damit Code erst bei der Erstellung des Pakets abläuft. Das sieht so aus:"

msgid ""
"(use-modules (guix gexp)           ;so we can write gexps\n"
"             (gnu packages base))  ;for 'coreutils'\n"
"\n"
msgstr ""
"(use-modules (guix gexp)           ;für’s Schreiben von G-Ausdrücken\n"
"             (gnu packages base))  ;für 'coreutils'\n"
"\n"

msgid ""
";; Below is a G-expression representing staged code.\n"
"#~(begin\n"
"    ;; Invoke 'ls' from the package defined by the 'coreutils'\n"
"    ;; variable.\n"
"    (system* #$(file-append coreutils \"/bin/ls\") \"-l\")\n"
"\n"
msgstr ""
";; Folgender G-Ausdruck enthält später ausgeführten Code.\n"
"#~(begin\n"
"    ;; 'ls' aufrufen aus dem Paket, das in der Variablen 'coreutils'\n"
"    ;; definiert ist.\n"
"    (system* #$(file-append coreutils \"/bin/ls\") \"-l\")\n"
"\n"

msgid ""
"    ;; Create this package's output directory.\n"
"    (mkdir #$output))\n"
msgstr ""
"    ;; Das Ausgabeverzeichnis des aktuell definierten Pakets anlegen.\n"
"    (mkdir #$output))\n"

msgid "@xref{G-Expressions,,, guix, GNU Guix Reference Manual}, for more on gexps."
msgstr "Siehe @ref{G-Ausdrücke,,, guix.de, Referenzhandbuch zu GNU Guix} für Details zu G-Ausdrücken."

msgid "Multiple variables can be named locally with @code{let} (@pxref{Local Bindings,,, guile, GNU Guile Reference Manual}):"
msgstr "Mehrere Variable können in einer lokalen Umgebung mit Bezeichnern versehen werden, indem Sie @code{let} benutzen (siehe @ref{Local Bindings,,, guile, Referenzhandbuch zu GNU Guile}):"

msgid ""
"(define x 10)\n"
"(let ((x 2)\n"
"      (y 3))\n"
"  (list x y))\n"
"@result{} (2 3)\n"
"\n"
msgstr ""
"(define x 10)\n"
"(let ((x 2)\n"
"      (y 3))\n"
"  (list x y))\n"
"@result{} (2 3)\n"
"\n"

msgid ""
"x\n"
"@result{} 10\n"
"\n"
msgstr ""
"x\n"
"@result{} 10\n"
"\n"

msgid ""
"y\n"
"@error{} In procedure module-lookup: Unbound variable: y\n"
msgstr ""
"y\n"
"@error{} In procedure module-lookup: Unbound variable: y\n"

msgid "Use @code{let*} to allow later variable declarations to refer to earlier definitions."
msgstr "Benutzen Sie @code{let*}, damit spätere Variablendeklarationen auf frühere verweisen können."

msgid ""
"(let* ((x 2)\n"
"       (y (* x 3)))\n"
"  (list x y))\n"
"@result{} (2 6)\n"
msgstr ""
"(let* ((x 2)\n"
"       (y (* x 3)))\n"
"  (list x y))\n"
"@result{} (2 6)\n"

msgid "@dfn{Keywords} are typically used to identify the named parameters of a procedure.  They are prefixed by @code{#:} (hash, colon) followed by alphanumeric characters: @code{#:like-this}.  @xref{Keywords,,, guile, GNU Guile Reference Manual}."
msgstr "Mit @dfn{Schlüsselwörtern} bestimmen wir normalerweise diejenigen Parameter einer Prozedur, die einen Namen haben sollen. Ihnen wird @code{#:} (Doppelkreuz und Doppelpunkt) vorangestellt, gefolgt von alphanumerischen Zeichen: @code{#:etwa-so}. Siehe @ref{Keywords,,, guile, Referenzhandbuch zu GNU Guile}."

msgid "The percentage @code{%} is typically used for read-only global variables in the build stage.  Note that it is merely a convention, like @code{_} in C.  Scheme treats @code{%} exactly the same as any other letter."
msgstr "Das Prozentzeichen @code{%} wird in der Regel für globale Variable auf Erstellungsebene benutzt, auf die nur lesend zugegriffen werden soll. Beachten Sie, dass es sich dabei nur um eine Konvention handelt, ähnlich wie @code{_} in C@. Scheme behandelt @code{%} genau wie jedes andere Zeichen."

msgid "Modules are created with @code{define-module} (@pxref{Creating Guile Modules,,, guile, GNU Guile Reference Manual}).  For instance"
msgstr "Module werden mit Hilfe von @code{define-module} erzeugt (siehe @ref{Creating Guile Modules,,, guile, Referenzhandbuch zu GNU Guile}). Zum Beispiel definiert man mit"

msgid ""
"(define-module (guix build-system ruby)\n"
"  #:use-module (guix store)\n"
"  #:export (ruby-build\n"
"            ruby-build-system))\n"
msgstr ""
"(define-module (guix build-system ruby)\n"
"  #:use-module (guix store)\n"
"  #:export (ruby-build\n"
"            ruby-build-system))\n"

msgid "defines the module @code{guix build-system ruby} which must be located in @file{guix/build-system/ruby.scm} somewhere in the Guile load path.  It depends on the @code{(guix store)} module and it exports two variables, @code{ruby-build} and @code{ruby-build-system}."
msgstr "das Modul @code{guix build-system ruby}, das sich unter dem Pfad @file{guix/build-system/ruby.scm} innerhalb irgendeines Verzeichnisses im Guile-Ladepfad befinden muss. Es hat eine Abhängigkeit auf das Modul @code{(guix store)} und exportiert zwei seiner Variablen, @code{ruby-build} und @code{ruby-build-system}."

msgid "@xref{Package Modules,,, guix, GNU Guix Reference Manual}, for info on modules that define packages."
msgstr "Siehe @ref{Paketmodule,,, guix.de, Referenzhandbuch zu GNU Guix} für Informationen zu Modulen, in denen Pakete definiert werden."

msgid "Going further"
msgstr "Vertiefung"

msgid "Scheme is a language that has been widely used to teach programming and you'll find plenty of material using it as a vehicle.  Here's a selection of documents to learn more about Scheme:"
msgstr "Die Sprache Scheme wurde oft eingesetzt, um Programmieren beizubringen, daher gibt es ein breites Angebot an Lehrmaterialien, die sie als Transportmittel einsetzen. Hier sehen Sie eine Auswahl solcher Dokumente, mit denen Sie mehr über Scheme erfahren können:"

msgid "@uref{https://spritely.institute/static/papers/scheme-primer.html, @i{A Scheme Primer}}, by Christine Lemmer-Webber and the Spritely Institute."
msgstr "@uref{https://spritely.institute/news/ein-scheme-primer.html, @i{Ein Scheme-Primer}}, von Christine Lemmer-Webber und dem Spritely Institute, auf Deutsch übersetzt von Florian Pelz."

msgid "@uref{http://www.troubleshooters.com/codecorn/scheme_guile/hello.htm, @i{Scheme at a Glance}}, by Steve Litt."
msgstr "@uref{http://www.troubleshooters.com/codecorn/scheme_guile/hello.htm, @i{Scheme at a Glance}} von Steve Litt."

msgid "@uref{https://sarabander.github.io/sicp/, @i{Structure and Interpretation of Computer Programs}}, by Harold Abelson and Gerald Jay Sussman, with Julie Sussman.  Colloquially known as ``SICP'', this book is a reference."
msgstr "Eines der Referenzbücher zu Scheme ist das einflussreiche „Structure and Interpretation of Computer Programs“, von Harold Abelson und Gerald Jay Sussman, mit Julie Sussman. Eine deutsche Übersetzung „Struktur und Interpretation von Computerprogrammen“ hat Susanne Daniels-Herold verfasst. Vom englischen Original finden Sie eine @uref{https://sarabander.github.io/sicp/, kostenlose Ausgabe online}. Viele kennen es unter dem Akronym SICP."

msgid "You can also install it and read it from your computer:"
msgstr "Das Buch können Sie auch installieren und von Ihrem Rechner aus lesen:"

msgid "You'll find more books, tutorials and other resources at @url{https://schemers.org/}."
msgstr "Sie finden noch mehr Bücher, Anleitungen und andere Ressourcen auf @url{https://schemers.org/}."

msgid "packaging"
msgstr "Pakete schreiben"

msgid "This chapter is dedicated to teaching you how to add packages to the collection of packages that come with GNU Guix.  This involves writing package definitions in Guile Scheme, organizing them in package modules, and building them."
msgstr "In diesem Kapitel bringen wir Ihnen bei, wie Sie Pakete zur mit GNU Guix ausgelieferten Paketsammlung beitragen. Dazu gehört, Paketdefinitionen in Guile Scheme zu schreiben, sie in Paketmodulen zu organisieren und sie zu erstellen."

msgid "GNU Guix stands out as the @emph{hackable} package manager, mostly because it uses @uref{https://www.gnu.org/software/guile/, GNU Guile}, a powerful high-level programming language, one of the @uref{https://en.wikipedia.org/wiki/Scheme_%28programming_language%29, Scheme} dialects from the @uref{https://en.wikipedia.org/wiki/Lisp_%28programming_language%29, Lisp family}."
msgstr "GNU Guix zeichnet sich in erster Linie deswegen als das @emph{hackbare} Paketverwaltungswerkzeug aus, weil es mit @uref{https://www.gnu.org/software/guile/, GNU Guile} arbeitet, einer mächtigen, hochsprachlichen Programmiersprache, die einen der Dialekte von @uref{https://de.wikipedia.org/wiki/Scheme, Scheme} darstellt. Scheme wiederum gehört zur @uref{https://de.wikipedia.org/wiki/Lisp, Lisp-Familie von Programmiersprachen}."

msgid "Package definitions are also written in Scheme, which empowers Guix in some very unique ways, unlike most other package managers that use shell scripts or simple languages."
msgstr "Paketdefinitionen werden ebenso in Scheme geschrieben, wodurch Guix auf sehr einzigartige Weise mächtiger wird als die meisten anderen Paketverwaltungssysteme, die Shell-Skripte oder einfache Sprachen benutzen."

msgid "Use functions, structures, macros and all of Scheme expressiveness for your package definitions."
msgstr "Sie können sich Funktionen, Strukturen, Makros und all die Ausdrucksstärke von Scheme für Ihre Paketdefinitionen zu Nutze machen."

msgid "Inheritance makes it easy to customize a package by inheriting from it and modifying only what is needed."
msgstr "Durch Vererbung können Sie ohne viel Aufwand ein Paket anpassen, indem Sie von ihm erben lassen und nur das Nötige abändern."

msgid "Batch processing: the whole package collection can be parsed, filtered and processed.  Building a headless server with all graphical interfaces stripped out? It's possible.  Want to rebuild everything from source using specific compiler optimization flags? Pass the @code{#:make-flags \"...\"} argument to the list of packages.  It wouldn't be a stretch to think @uref{https://wiki.gentoo.org/wiki/USE_flag, Gentoo USE flags} here, but this goes even further: the changes don't have to be thought out beforehand by the packager, they can be @emph{programmed} by the user!"
msgstr "Stapelverarbeitung („batch mode“) wird möglich; die ganze Paketsammlung kann analysiert, gefiltert und verarbeitet werden. Versuchen Sie, ein Serversystem ohne Bildschirm („headless“) auch tatsächlich von allen Grafikschnittstellen zu befreien? Das ist möglich. Möchten Sie alles von Neuem aus seinem Quellcode erstellen, aber mit eingeschalteten besonderen Compileroptimierungen? Übergeben Sie einfach das passende @code{#:make-flags \"...\"}-Argument an die Paketliste. Es wäre nicht übertrieben, hier an die @uref{https://wiki.gentoo.org/wiki/USE_flag, USE-Optionen von Gentoo} zu denken, aber das hier übertrifft sie: Der Paketautor muss vorher gar nicht darüber nachgedacht haben, der Nutzer kann sie selbst @emph{programmieren}!"

msgid "The following tutorial covers all the basics around package creation with Guix.  It does not assume much knowledge of the Guix system nor of the Lisp language.  The reader is only expected to be familiar with the command line and to have some basic programming knowledge."
msgstr "Die folgende Anleitung erklärt alles Grundlegende über das Schreiben von Paketen mit Guix. Dabei setzen wir kein großes Wissen über das Guix-System oder die Lisp-Sprache voraus. Vom Leser wird nur erwartet, dass er mit der Befehlszeile vertraut ist und über grundlegende Programmierkenntnisse verfügt."

msgid "The ``Defining Packages'' section of the manual introduces the basics of Guix packaging (@pxref{Defining Packages,,, guix, GNU Guix Reference Manual}).  In the following section, we will partly go over those basics again."
msgstr "Der Abschnitt „Pakete definieren“ im Handbuch führt in die Grundlagen des Paketschreibens für Guix ein (siehe @ref{Pakete definieren,,, guix.de, Referenzhandbuch zu GNU Guix}). Im folgenden Abschnitt werden wir diese Grundlagen teilweise rekapitulieren."

msgid "GNU@tie{}Hello is a dummy project that serves as an idiomatic example for packaging.  It uses the GNU build system (@code{./configure && make && make install}).  Guix already provides a package definition which is a perfect example to start with.  You can look up its declaration with @code{guix edit hello} from the command line.  Let's see how it looks:"
msgstr "GNU@tie{}Hello ist ein Projekt, das uns als Stellvertreter für „richtige“ Projekte und allgemeines Beispiel für das Schreiben von Paketen dient. Es verwendet das GNU-Erstellungssystem (@code{./configure && make && make install}). Guix stellt uns schon eine Paketdefinition zur Verfügung, die uns einen perfekten Ausgangspunkt bietet. Sie können sich ihre Deklaration anschauen, indem Sie @code{guix edit hello} von der Befehlszeile ausführen. Schauen wir sie uns an:"

msgid ""
"(define-public hello\n"
"  (package\n"
"    (name \"hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Hello, GNU world: An example GNU package\")\n"
"    (description\n"
"     \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"
msgstr ""
"(define-public hello\n"
"  (package\n"
"    (name \"hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Hello, GNU world: An example GNU package\")\n"
"    (description\n"
"     \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"

msgid "As you can see, most of it is rather straightforward.  But let's review the fields together:"
msgstr "Wie Sie sehen können, ist das meiste klar strukturiert. Aber sehen wir uns die Felder zusammen an:"

msgid "name"
msgstr "name"

msgid "The project name.  Using Scheme conventions, we prefer to keep it lower case, without underscore and using dash-separated words."
msgstr "Der Name des Projekts. Wir halten uns an die Konventionen von Scheme und bevorzugen deshalb Kleinschreibung ohne Unterstriche, sondern mit Bindestrichen zwischen den Wörtern."

msgid "source"
msgstr "source"

msgid "This field contains a description of the source code origin.  The @code{origin} record contains these fields:"
msgstr "Dieses Feld enthält eine Beschreibung, was der Ursprung des Quellcodes ist. Das @code{origin}-Verbundsobjekt enthält diese Felder:"

msgid "The method, here @code{url-fetch} to download via HTTP/FTP, but other methods"
msgstr "Die Methode. Wir verwenden hier @code{url-fetch}, um über HTTP/FTP herunterzuladen,"

msgid "exist, such as @code{git-fetch} for Git repositories."
msgstr "aber es gibt auch andere Methoden wie @code{git-fetch} für Git-Repositorys."

msgid "The URI, which is typically some @code{https://} location for @code{url-fetch}.  Here"
msgstr "Die URI, welche bei @code{url-fetch} normalerweise eine Ortsangabe mit @code{https://} ist."

msgid "the special `mirror://gnu` refers to a set of well known locations, all of which can be used by Guix to fetch the source, should some of them fail."
msgstr "In diesem Fall verweist die besondere URI ‚mirror://gnu‘ auf eine von mehreren wohlbekannten Ortsangaben, von denen Guix jede durchprobieren kann, um den Quellcode herunterzuladen, wenn es bei manchen davon nicht klappt."

msgid "The @code{sha256} checksum of the requested file.  This is essential to ensure"
msgstr "Die @code{sha256}-Prüfsumme der angefragten Datei."

msgid "the source is not corrupted.  Note that Guix works with base32 strings, hence the call to the @code{base32} function."
msgstr "Sie ist notwendig, damit sichergestellt werden kann, dass der Quellcode nicht beschädigt ist. Beachten Sie, dass Guix mit Zeichenketten in Base32-Kodierung arbeitet, weshalb wir die @code{base32}-Funktion aufrufen."

msgid "build-system"
msgstr "build-system"

msgid "This is where the power of abstraction provided by the Scheme language really shines: in this case, the @code{gnu-build-system} abstracts away the famous @code{./configure && make && make install} shell invocations.  Other build systems include the @code{trivial-build-system} which does not do anything and requires from the packager to program all the build steps, the @code{python-build-system}, the @code{emacs-build-system}, and many more (@pxref{Build Systems,,, guix, GNU Guix Reference Manual})."
msgstr "Hier glänzt Schemes Fähigkeit zur Abstraktion: In diesem Fall abstrahiert @code{gnu-build-system} die berühmten Schritte @code{./configure && make && make install}, die sonst in der Shell aufgerufen würden. Zu den anderen Erstellungssystemen gehören das @code{trivial-build-system}, das nichts tut und dem Paketautoren das Schreiben sämtlicher Erstellungsschritte abverlangt, das @code{python-build-system}, das @code{emacs-build-system}, und viele mehr (siehe @ref{Erstellungssysteme,,, guix.de, Referenzhandbuch zu GNU Guix})."

msgid "synopsis"
msgstr "synopsis"

msgid "It should be a concise summary of what the package does.  For many packages a tagline from the project's home page can be used as the synopsis."
msgstr "Die Zusammenfassung. Sie sollte eine knappe Beschreibung sein, was das Paket tut. Für viele Pakete findet sich auf der Homepage ein Einzeiler, der als Zusammenfassung benutzt werden kann."

msgid "description"
msgstr "description"

msgid "Same as for the synopsis, it's fine to re-use the project description from the homepage.  Note that Guix uses Texinfo syntax."
msgstr "Genau wie bei der Zusammenfassung ist es in Ordnung, die Beschreibung des Projekts für das Paket wiederzuverwenden. Beachten Sie, dass Guix dafür Texinfo-Syntax verlangt."

msgid "home-page"
msgstr "home-page"

msgid "Use HTTPS if available."
msgstr "Hier soll möglichst HTTPS benutzt werden."

msgid "license"
msgstr "license"

msgid "See @code{guix/licenses.scm} in the project source for a full list of available licenses."
msgstr "Siehe die vollständige Liste verfügbarer Lizenzen in @code{guix/licenses.scm} im Guix-Quellcode."

msgid "Time to build our first package! Nothing fancy here for now: we will stick to a dummy @code{my-hello}, a copy of the above declaration."
msgstr "Es wird Zeit, unser erstes Paket zu schreiben! Aber noch nichts tolles, wir bleiben bei einem Paket @code{my-hello} stelltvertretend für „richtige“ Software; es ist eine Kopie obiger Deklaration."

msgid "As with the ritualistic ``Hello World'' taught with most programming languages, this will possibly be the most ``manual'' approach.  We will work out an ideal setup later; for now we will go the simplest route."
msgstr "Genau wie beim Ritual, Neulinge in Programmiersprachen „Hallo Welt“ schreiben zu lassen, fangen wir mit der vielleicht „arbeitsintensivsten“ Herangehensweise ans Paketeschreiben an. Wir kümmern uns später darum, wie man am besten an Paketen arbeitet; erst einmal nehmen wir den einfachsten Weg."

msgid "Save the following to a file @file{my-hello.scm}."
msgstr "Speichern Sie den folgenden Code in eine Datei @file{my-hello.scm}."

msgid ""
"(use-modules (guix packages)\n"
"             (guix download)\n"
"             (guix build-system gnu)\n"
"             (guix licenses))\n"
"\n"
msgstr ""
"(use-modules (guix packages)\n"
"             (guix download)\n"
"             (guix build-system gnu)\n"
"             (guix licenses))\n"
"\n"

msgid ""
"(package\n"
"  (name \"my-hello\")\n"
"  (version \"2.10\")\n"
"  (source (origin\n"
"            (method url-fetch)\n"
"            (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                \".tar.gz\"))\n"
"            (sha256\n"
"             (base32\n"
"              \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"  (build-system gnu-build-system)\n"
"  (synopsis \"Hello, Guix world: An example custom Guix package\")\n"
"  (description\n"
"   \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"  (home-page \"https://www.gnu.org/software/hello/\")\n"
"  (license gpl3+))\n"
msgstr ""
"(package\n"
"  (name \"my-hello\")\n"
"  (version \"2.10\")\n"
"  (source (origin\n"
"            (method url-fetch)\n"
"            (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                \".tar.gz\"))\n"
"            (sha256\n"
"             (base32\n"
"              \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"  (build-system gnu-build-system)\n"
"  (synopsis \"Hello, Guix world: An example custom Guix package\")\n"
"  (description\n"
"   \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"  (home-page \"https://www.gnu.org/software/hello/\")\n"
"  (license gpl3+))\n"

msgid "We will explain the extra code in a moment."
msgstr "Wir erklären den zusätzlichen Code in Kürze."

msgid "Feel free to play with the different values of the various fields.  If you change the source, you'll need to update the checksum.  Indeed, Guix refuses to build anything if the given checksum does not match the computed checksum of the source code.  To obtain the correct checksum of the package declaration, we need to download the source, compute the sha256 checksum and convert it to base32."
msgstr "Spielen Sie ruhig mit unterschiedlichen Werten für die verschiedenen Felder herum. Wenn Sie den Quellort (die „source“) ändern, müssen Sie die Prüfsumme aktualisieren. Tatsächlich weigert sich Guix, etwas zu erstellen, wenn die angegebene Prüfsumme nicht zu der berechneten Prüfsumme des Quellcodes passt. Um die richtige Prüfsumme für die Paketdeklaration zu finden, müssen wir den Quellcode herunterladen, die SHA256-Summe davon berechnen und sie in Base32 umwandeln."

msgid "Thankfully, Guix can automate this task for us; all we need is to provide the URI:"
msgstr "Glücklicherweise kann Guix diese Aufgabe automatisieren; wir müssen lediglich die URI übergeben."

msgid ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz\n"
"\n"
msgstr ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz\n"
"\n"

msgid ""
"Starting download of /tmp/guix-file.JLYgL7\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz...\n"
"following redirection to `https://mirror.ibcp.fr/pub/gnu/hello/hello-2.10.tar.gz'...\n"
" …10.tar.gz  709KiB                                 2.5MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\n"
msgstr ""
"Starting download of /tmp/guix-file.JLYgL7\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz...\n"
"following redirection to `https://mirror.ibcp.fr/pub/gnu/hello/hello-2.10.tar.gz'...\n"
" …10.tar.gz  709KiB                                 2.5MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\n"

msgid "In this specific case the output tells us which mirror was chosen.  If the result of the above command is not the same as in the above snippet, update your @code{my-hello} declaration accordingly."
msgstr "In diesem speziellen Fall sagt uns die Ausgabe, welcher Spiegelserver ausgewählt wurde. Wenn das Ergebnis des obigen Befehls nicht dasselbe ist wie im Codeschnipsel, dann aktualisieren Sie Ihre @code{my-hello}-Deklaration entsprechend."

msgid "Note that GNU package tarballs come with an OpenPGP signature, so you should definitely check the signature of this tarball with `gpg` to authenticate it before going further:"
msgstr "Beachten Sie, dass Tarball-Archive von GNU-Paketen mit einer OpenPGP-Signatur ausgeliefert werden, deshalb sollten Sie mit Sicherheit die Signatur dieses Tarballs mit „gpg“ überprüfen, um ihn zu authentifizieren, bevor Sie weitermachen."

msgid ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz.sig\n"
"\n"
msgstr ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz.sig\n"
"\n"

msgid ""
"Starting download of /tmp/guix-file.03tFfb\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz.sig...\n"
"following redirection to `https://ftp.igh.cnrs.fr/pub/gnu/hello/hello-2.10.tar.gz.sig'...\n"
" ….tar.gz.sig  819B                                                                                                                       1.2MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig\n"
"0q0v86n3y38z17rl146gdakw9xc4mcscpk8dscs412j22glrv9jf\n"
"$ gpg --verify /gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig /gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"gpg: Signature made Sun 16 Nov 2014 01:08:37 PM CET\n"
"gpg:                using RSA key A9553245FDE9B739\n"
"gpg: Good signature from \"Sami Kerola <kerolasa@@iki.fi>\" [unknown]\n"
"gpg:                 aka \"Sami Kerola (http://www.iki.fi/kerolasa/) <kerolasa@@iki.fi>\" [unknown]\n"
"gpg: WARNING: This key is not certified with a trusted signature!\n"
"gpg:          There is no indication that the signature belongs to the owner.\n"
"Primary key fingerprint: 8ED3 96E3 7E38 D471 A005  30D3 A955 3245 FDE9 B739\n"
msgstr ""
"Starting download of /tmp/guix-file.03tFfb\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz.sig...\n"
"following redirection to `https://ftp.igh.cnrs.fr/pub/gnu/hello/hello-2.10.tar.gz.sig'...\n"
" ….tar.gz.sig  819B                                                                                                                       1.2MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig\n"
"0q0v86n3y38z17rl146gdakw9xc4mcscpk8dscs412j22glrv9jf\n"
"$ gpg --verify /gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig /gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"gpg: Signatur vom So 16 Nov 2014 13:08:37 CET\n"
"gpg:                mittels RSA-Schlüssel A9553245FDE9B739\n"
"gpg: Korrekte Signatur von \"Sami Kerola (https://www.iki.fi/kerolasa/) <kerolasa@@iki.fi>\" [unbekannt]\n"
"gpg: WARNUNG: Dieser Schlüssel trägt keine vertrauenswürdige Signatur!\n"
"gpg:          Es gibt keinen Hinweis, daß die Signatur wirklich dem vorgeblichen Besitzer gehört.\n"
"Haupt-Fingerabdruck  = 8ED3 96E3 7E38 D471 A005  30D3 A955 3245 FDE9 B739\n"

msgid "You can then happily run"
msgstr "Sie können dann unbesorgt das hier ausführen:"

msgid "$ guix package --install-from-file=my-hello.scm\n"
msgstr "$ guix package --install-from-file=my-hello.scm\n"

msgid "You should now have @code{my-hello} in your profile!"
msgstr "Nun sollte @code{my-hello} in Ihrem Profil enthalten sein!"

msgid ""
"$ guix package --list-installed=my-hello\n"
"my-hello\t2.10\tout\n"
"/gnu/store/f1db2mfm8syb8qvc357c53slbvf1g9m9-my-hello-2.10\n"
msgstr ""
"$ guix package --list-installed=my-hello\n"
"my-hello\t2.10\tout\n"
"/gnu/store/f1db2mfm8syb8qvc357c53slbvf1g9m9-my-hello-2.10\n"

msgid "We've gone as far as we could without any knowledge of Scheme.  Before moving on to more complex packages, now is the right time to brush up on your Scheme knowledge.  @xref{A Scheme Crash Course} to get up to speed."
msgstr "Wir sind so weit gekommen, wie es ohne Scheme-Kenntnisse möglich ist. Bevor wir mit komplexeren Paketen weitermachen, ist jetzt der Zeitpunkt gekommen, Ihr Wissen über Scheme zu entstauben. Siehe @ref{Ein Schnellkurs in Scheme} für eine Auffrischung."

msgid "In the rest of this chapter we will rely on some basic Scheme programming knowledge.  Now let's detail the different possible setups for working on Guix packages."
msgstr "Im Rest dieses Kapitels setzen wir ein paar grundlegende Scheme-Programmierkenntnisse voraus. Wir wollen uns nun verschiedene mögliche Herangehensweisen anschauen, wie man an Guix-Paketen arbeiten kann."

msgid "There are several ways to set up a Guix packaging environment."
msgstr "Es gibt mehrere Arten, eine Umgebung zum Paketeschreiben aufzusetzen."

msgid "We recommend you work directly on the Guix source checkout since it makes it easier for everyone to contribute to the project."
msgstr "Unsere Empfehlung ist, dass Sie direkt am Checkout des Guix-Quellcodes arbeiten, weil es dann für alle einfacher ist, zu Guix beizutragen."

msgid "But first, let's look at other possibilities."
msgstr "Werfen wir aber zunächst einen Blick auf andere Möglichkeiten."

msgid "This is what we previously did with @samp{my-hello}.  With the Scheme basics we've covered, we are now able to explain the leading chunks.  As stated in @code{guix package --help}:"
msgstr "Diese Methode haben wir zuletzt für @samp{my-hello} benutzt. Jetzt nachdem wir uns mit den Scheme-Grundlagen befasst haben, können wir uns den Code am Anfang erklären. @code{guix package --help} sagt uns:"

msgid ""
"  -f, --install-from-file=FILE\n"
"                         install the package that the code within FILE\n"
"                         evaluates to\n"
msgstr ""
"  -f, --install-from-file=DATEI\n"
"                         das Paket installieren, zu dem der Code in der DATEI\n"
"                           ausgewertet wird\n"

msgid "Thus the last expression @emph{must} return a package, which is the case in our earlier example."
msgstr "Daher @emph{muss} der letzte Ausdruck ein Paket liefern, was im vorherigen Beispiel der Fall ist."

msgid "The @code{use-modules} expression tells which of the modules we need in the file.  Modules are a collection of values and procedures.  They are commonly called ``libraries'' or ``packages'' in other programming languages."
msgstr "Der Ausdruck @code{use-modules} sagt aus, welche Module in der Datei gebraucht werden. Module sind eine Sammlung aus Werten und Prozeduren. In anderen Programmiersprachen werden sie oft „Bibliotheken“ oder „Pakete“ genannt."

msgid "channel"
msgstr "Kanal"

msgid "Guix and its package collection can be extended through @dfn{channels}.  A channel is a Git repository, public or not, containing @file{.scm} files that provide packages (@pxref{Defining Packages,,, guix, GNU Guix Reference Manual}) or services (@pxref{Defining Services,,, guix, GNU Guix Reference Manual})."
msgstr "Guix und seine Paketsammlung können durch @dfn{Kanäle} (englisch: Channels) erweitert werden. Ein Kanal ist ein Git-Repository, öffentlich oder nicht, das @file{.scm}-Dateien enthält, die Pakete (siehe @ref{Pakete definieren,,, guix.de, Referenzhandbuch zu GNU Guix}) oder Dienste (siehe @ref{Dienste definieren,,, guix.de, Referenzhandbuch zu GNU Guix}) bereitstellen."

msgid "How would you go about creating a channel? First, create a directory that will contain your @file{.scm} files, say @file{~/my-channel}:"
msgstr "Wie würden Sie einen Kanal erstellen? Erstellen Sie zunächst ein Verzeichnis, das Ihre @file{.scm}-Dateien enthalten wird, beispielsweise @file{~/my-channel}:"

msgid "mkdir ~/my-channel\n"
msgstr "mkdir ~/my-channel\n"

msgid "Suppose you want to add the @samp{my-hello} package we saw previously; it first needs some adjustments:"
msgstr "Angenommen, Sie möchten das Paket @samp{my-hello}, das wir zuvor gesehen haben, hinzufügen; es bedarf zunächst einiger Anpassungen:"

msgid ""
"(define-module (my-hello)\n"
"  #:use-module (guix licenses)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix build-system gnu)\n"
"  #:use-module (guix download))\n"
"\n"
msgstr ""
"(define-module (my-hello)\n"
"  #:use-module (guix licenses)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix build-system gnu)\n"
"  #:use-module (guix download))\n"
"\n"

msgid ""
"(define-public my-hello\n"
"  (package\n"
"    (name \"my-hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Hello, Guix world: An example custom Guix package\")\n"
"    (description\n"
"     \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"
msgstr ""
"(define-public my-hello\n"
"  (package\n"
"    (name \"my-hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Hello, Guix world: An example custom Guix package\")\n"
"    (description\n"
"     \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"

msgid "Note that we have assigned the package value to an exported variable name with @code{define-public}.  This is effectively assigning the package to the @code{my-hello} variable so that it can be referenced, among other as dependency of other packages."
msgstr "Beachten Sie, dass wir den Paketwert einer exportierten Variablen mit @code{define-public} zugewiesen haben. Das bedeutet, das Paket wird einer Variablen @code{my-hello} zugewiesen, damit darauf verwiesen werden kann. Unter anderem kann es dadurch als Abhängigkeit anderer Pakete verwendet werden."

msgid "If you use @code{guix package --install-from-file=my-hello.scm} on the above file, it will fail because the last expression, @code{define-public}, does not return a package.  If you want to use @code{define-public} in this use-case nonetheless, make sure the file ends with an evaluation of @code{my-hello}:"
msgstr "Wenn Sie @code{guix package --install-from-file=my-hello.scm} auf der obigen Datei aufrufen, geht es schief, weil der letzte Ausdruck, @code{define-public}, kein Paket zurückliefert. Wenn Sie trotzdem @code{define-public} für jene Herangehensweise verwenden möchten, stellen Sie sicher, dass am Ende der Datei eine Auswertung von @code{my-hello} steht:"

msgid ""
";; ...\n"
"(define-public my-hello\n"
"  ;; ...\n"
"  )\n"
"\n"
msgstr ""
";; …\n"
"(define-public my-hello\n"
"  ;; …\n"
"  )\n"
"\n"

msgid "my-hello\n"
msgstr "my-hello\n"

msgid "This last example is not very typical."
msgstr "Meistens tut man das aber nicht."

msgid "Now how do you make that package visible to @command{guix} commands so you can test your packages? You need to add the directory to the search path using the @option{-L} command-line option, as in these examples:"
msgstr "Wie machen Sie nun dieses Paket für @command{guix}-Befehle sichtbar, damit Sie Ihre Pakete testen können? Sie müssen das Verzeichnis mit der Befehlszeilenoption @option{-L} zum Suchpfad hinzufügen, wie in diesen Beispielen:"

msgid ""
"guix show -L ~/my-channel my-hello\n"
"guix build -L ~/my-channel my-hello\n"
msgstr ""
"guix show -L ~/my-channel my-hello\n"
"guix build -L ~/my-channel my-hello\n"

msgid "The final step is to turn @file{~/my-channel} into an actual channel, making your package collection seamlessly available @i{via} any @command{guix} command.  To do that, you first need to make it a Git repository:"
msgstr "Der letzte Schritt besteht darin, @file{~/my-channel} in einen echten Kanal zu verwandeln, so dass Ihre Paketsammlung nahtlos mit jedem @command{guix}-Befehl zur Verfügung steht. Dazu müssen Sie es zunächst zu einem Git-Repository machen:"

msgid ""
"cd ~/my-channel\n"
"git init\n"
"git add my-hello.scm\n"
"git commit -m \"First commit of my channel.\"\n"
msgstr ""
"cd ~/my-channel\n"
"git init\n"
"git add my-hello.scm\n"
"git commit -m \"Erster Commit meines Kanals.\"\n"

msgid "And that's it, you have a channel! From there on, you can add this channel to your channel configuration in @file{~/.config/guix/channels.scm} (@pxref{Specifying Additional Channels,,, guix, GNU Guix Reference Manual}); assuming you keep your channel local for now, the @file{channels.scm} would look something like this:"
msgstr "Und das war’s, Sie haben einen Kanal! Von nun an können Sie diesen Kanal zu Ihrer Kanalkonfiguration in @file{~/.config/guix/channels.scm} hinzufügen (siehe @ref{Weitere Kanäle angeben,,, guix.de, Referenzhandbuch zu GNU Guix}). Unter der Annahme, dass Sie Ihren Kanal vorerst lokal halten, würde die @file{channels.scm} etwa so aussehen:"

msgid ""
"(append (list (channel\n"
"                (name 'my-channel)\n"
"                (url (string-append \"file://\" (getenv \"HOME\")\n"
"                                    \"/my-channel\"))))\n"
"        %default-channels)\n"
msgstr ""
"(append (list (channel\n"
"                (name 'my-channel)\n"
"                (url (string-append \"file://\" (getenv \"HOME\")\n"
"                                    \"/my-channel\"))))\n"
"        %default-channels)\n"

msgid "Next time you run @command{guix pull}, your channel will be picked up and the packages it defines will be readily available to all the @command{guix} commands, even if you do not pass @option{-L}.  The @command{guix describe} command will show that Guix is, indeed, using both the @code{my-channel} and the @code{guix} channels."
msgstr "Wenn Sie das nächste Mal @command{guix pull} ausführen, wird Ihr Kanal aufgenommen und die darin definierten Pakete stehen allen @command{guix}-Befehlen zur Verfügung, auch wenn Sie @option{-L} nicht übergeben. Der Befehl @command{guix describe} wird zeigen, dass Guix tatsächlich sowohl den Kanal @code{my-channel} als auch den @code{guix}-Kanal benutzt."

msgid "@xref{Creating a Channel,,, guix, GNU Guix Reference Manual}, for details."
msgstr "Siehe @ref{Einen Kanal erstellen,,, guix.de, Referenzhandbuch zu GNU Guix} für Details."

msgid "Working directly on the Guix project is recommended: it reduces the friction when the time comes to submit your changes upstream to let the community benefit from your hard work!"
msgstr "Es wird empfohlen, direkt am Code des Guix-Projekts zu arbeiten, weil Ihre Änderungen dann später mit weniger Schwierigkeiten bei uns eingereicht werden können, damit Ihre harte Arbeit der Gemeinschaft nützt!"

msgid "Unlike most software distributions, the Guix repository holds in one place both the tooling (including the package manager) and the package definitions.  This choice was made so that it would give developers the flexibility to modify the API without breakage by updating all packages at the same time.  This reduces development inertia."
msgstr "Anders als die meisten Software-Distributionen werden bei Guix sowohl Werkzeuge (einschließlich des Paketverwaltungsprogramms) als auch die Paketdefinitionen in einem Repository gespeichert. Der Grund für diese Entscheidung war, dass Entwickler die Freiheit haben sollten, die Programmierschnittstelle (API) zu ändern, ohne Inkompatibilitäten einzuführen, indem alle Pakete gleichzeitig mit der API aktualisiert werden. Dadurch wird die Entwicklung weniger träge."

msgid "Check out the official @uref{https://git-scm.com/, Git} repository:"
msgstr "Legen Sie ein Checkout des offiziellen @uref{https://git-scm.com/, Git-Repositorys} an:"

msgid "$ git clone https://git.guix.gnu.org/guix.git\n"
msgstr "$ git clone https://git.guix.gnu.org/guix.git\n"

msgid "In the rest of this article, we use @samp{$GUIX_CHECKOUT} to refer to the location of the checkout."
msgstr "Im Rest dieses Artikels schreiben wir @samp{$GUIX_CHECKOUT}, wenn wir den Ort meinen, an dem das Checkout gespeichert ist."

msgid "Follow the instructions in the manual (@pxref{Contributing,,, guix, GNU Guix Reference Manual}) to set up the repository environment."
msgstr "Folgen Sie den Anweisungen im Handbuch (siehe (@ref{Mitwirken,,, guix.de, Referenzhandbuch zu GNU Guix}), um die nötige Umgebung für die Nutzung des Repositorys herzustellen."

msgid "Once ready, you should be able to use the package definitions from the repository environment."
msgstr "Sobald sie hergestellt wurde, sollten Sie die Paketdefinitionen aus der Repository-Umgebung benutzen können."

msgid "Feel free to edit package definitions found in @samp{$GUIX_CHECKOUT/gnu/packages}."
msgstr "Versuchen Sie sich ruhig daran, die Paketdefinitionen zu editieren, die Sie in @samp{$GUIX_CHECKOUT/gnu/packages} finden."

msgid "The @samp{$GUIX_CHECKOUT/pre-inst-env} script lets you use @samp{guix} over the package collection of the repository (@pxref{Running Guix Before It Is Installed,,, guix, GNU Guix Reference Manual})."
msgstr "Das Skript @samp{$GUIX_CHECKOUT/pre-inst-env} ermöglicht es Ihnen, @samp{guix} auf der Paketsammlung des Repositorys aufzurufen (siehe @ref{Guix vor der Installation ausführen,,, guix.de, Referenzhandbuch zu GNU Guix})."

msgid "Search packages, such as Ruby:"
msgstr "So suchen Sie Pakete, z.B.@: Ruby:"

msgid ""
"  $ cd $GUIX_CHECKOUT\n"
"  $ ./pre-inst-env guix package --list-available=ruby\n"
"      ruby    1.8.7-p374      out     gnu/packages/ruby.scm:119:2\n"
"      ruby    2.1.6   out     gnu/packages/ruby.scm:91:2\n"
"      ruby    2.2.2   out     gnu/packages/ruby.scm:39:2\n"
msgstr ""
"  $ cd $GUIX_CHECKOUT\n"
"  $ ./pre-inst-env guix package --list-available=ruby\n"
"      ruby    1.8.7-p374      out     gnu/packages/ruby.scm:119:2\n"
"      ruby    2.1.6   out     gnu/packages/ruby.scm:91:2\n"
"      ruby    2.2.2   out     gnu/packages/ruby.scm:39:2\n"

msgid "Build a package, here Ruby version 2.1:"
msgstr "Erstellen Sie ein Paket, z.B.@: Ruby in Version 2.1:"

msgid ""
"  $ ./pre-inst-env guix build --keep-failed ruby@@2.1\n"
"  /gnu/store/c13v73jxmj2nir2xjqaz5259zywsa9zi-ruby-2.1.6\n"
msgstr ""
"  $ ./pre-inst-env guix build --keep-failed ruby@@2.1\n"
"  /gnu/store/c13v73jxmj2nir2xjqaz5259zywsa9zi-ruby-2.1.6\n"

msgid "Install it to your user profile:"
msgstr "Installieren Sie es in Ihr Profil:"

msgid "  $ ./pre-inst-env guix package --install ruby@@2.1\n"
msgstr "  $ ./pre-inst-env guix package --install ruby@@2.1\n"

msgid "Check for common mistakes:"
msgstr "Prüfen Sie auf häufige Fehler:"

msgid "  $ ./pre-inst-env guix lint ruby@@2.1\n"
msgstr "  $ ./pre-inst-env guix lint ruby@@2.1\n"

msgid "Guix strives at maintaining a high packaging standard; when contributing to the Guix project, remember to"
msgstr "Guix ist bestrebt, einen hohen Standard an seine Pakete anzusetzen. Wenn Sie Beiträge zum Guix-Projekt leisten,"

msgid "follow the coding style (@pxref{Coding Style,,, guix, GNU Guix Reference Manual}),"
msgstr "schreiben Sie Ihren Code im Stil von Guix (siehe @ref{Programmierstil,,, guix.de, Referenzhandbuch zu GNU Guix})"

msgid "and review the check list from the manual (@pxref{Submitting Patches,,, guix, GNU Guix Reference Manual})."
msgstr "und schauen Sie sich die Kontrollliste aus dem Handbuch (siehe @ref{Einreichen von Patches,,, guix.de, Referenzhandbuch zu GNU Guix}) noch einmal an."

msgid "Once you are happy with the result, you are welcome to send your contribution to make it part of Guix.  This process is also detailed in the manual.  (@pxref{Contributing,,, guix, GNU Guix Reference Manual})"
msgstr "Sobald Sie mit dem Ergebnis zufrieden sind, freuen wir uns, wenn Sie Ihren Beitrag an uns schicken, damit wir ihn in Guix aufnehmen. Dieser Prozess wird auch im Handbuch beschrieben (siehe @ref{Mitwirken,,, guix.de, Referenzhandbuch zu GNU Guix})<."

msgid "It's a community effort so the more join in, the better Guix becomes!"
msgstr "Es handelt sich um eine gemeinschaftliche Arbeit, je mehr also mitmachen, desto besser wird Guix!"

msgid "The above ``Hello World'' example is as simple as it goes.  Packages can be more complex than that and Guix can handle more advanced scenarios.  Let's look at another, more sophisticated package (slightly modified from the source):"
msgstr "Einfacher als obiges Hallo-Welt-Beispiel wird es nicht. Pakete können auch komplexer als das sein und Guix eignet sich für fortgeschrittenere Szenarien. Schauen wir uns ein anderes, umfangreicheres Paket an (leicht modifiziert gegenüber Guix’ Quellcode):"

msgid ""
"(define-public my-libgit2\n"
"  (let ((commit \"e98d0a37c93574d2c6107bf7f31140b548c6a7bf\")\n"
"        (revision \"1\"))\n"
"    (package\n"
"      (name \"my-libgit2\")\n"
"      (version (git-version \"0.26.6\" revision commit))\n"
"      (source (origin\n"
"                (method git-fetch)\n"
"                (uri (git-reference\n"
"                      (url \"https://github.com/libgit2/libgit2/\")\n"
"                      (commit commit)))\n"
"                (file-name (git-file-name name version))\n"
"                (sha256\n"
"                 (base32\n"
"                  \"17pjvprmdrx4h6bb1hhc98w9qi6ki7yl57f090n9kbhswxqfs7s3\"))\n"
"                (patches (search-patches \"libgit2-mtime-0.patch\"))\n"
"                (modules '((guix build utils)))\n"
"                ;; Remove bundled software.\n"
"                (snippet '(delete-file-recursively \"deps\"))))\n"
"      (build-system cmake-build-system)\n"
"      (outputs '(\"out\" \"debug\"))\n"
"      (arguments\n"
"       `(#:tests? #true                         ; Run the test suite (this is the default)\n"
"         #:configure-flags '(\"-DUSE_SHA1DC=ON\") ; SHA-1 collision detection\n"
"         #:phases\n"
"         (modify-phases %standard-phases\n"
"           (add-after 'unpack 'fix-hardcoded-paths\n"
"             (lambda _\n"
"               (substitute* \"tests/repo/init.c\"\n"
"                 ((\"#!/bin/sh\") (string-append \"#!\" (which \"sh\"))))\n"
"               (substitute* \"tests/clar/fs.h\"\n"
"                 ((\"/bin/cp\") (which \"cp\"))\n"
"                 ((\"/bin/rm\") (which \"rm\")))))\n"
"           ;; Run checks more verbosely.\n"
"           (replace 'check\n"
"             (lambda* (#:key tests? #:allow-other-keys)\n"
"               (when tests?\n"
"                 (invoke \"./libgit2_clar\" \"-v\" \"-Q\"))))\n"
"           (add-after 'unpack 'make-files-writable-for-tests\n"
"             (lambda _ (for-each make-file-writable (find-files \".\")))))))\n"
"      (inputs\n"
"       (list libssh2 http-parser python-wrapper))\n"
"      (native-inputs\n"
"       (list pkg-config))\n"
"      (propagated-inputs\n"
"       ;; These two libraries are in 'Requires.private' in libgit2.pc.\n"
"       (list openssl zlib))\n"
"      (home-page \"https://libgit2.github.com/\")\n"
"      (synopsis \"Library providing Git core methods\")\n"
"      (description\n"
"       \"Libgit2 is a portable, pure C implementation of the Git core methods\n"
"provided as a re-entrant linkable library with a solid API, allowing you to\n"
"write native speed custom Git applications in any language with bindings.\")\n"
"      ;; GPLv2 with linking exception\n"
"      (license license:gpl2))))\n"
msgstr ""
"(define-public my-libgit2\n"
"  (let ((commit \"e98d0a37c93574d2c6107bf7f31140b548c6a7bf\")\n"
"        (revision \"1\"))\n"
"    (package\n"
"      (name \"my-libgit2\")\n"
"      (version (git-version \"0.26.6\" revision commit))\n"
"      (source (origin\n"
"                (method git-fetch)\n"
"                (uri (git-reference\n"
"                      (url \"https://github.com/libgit2/libgit2/\")\n"
"                      (commit commit)))\n"
"                (file-name (git-file-name name version))\n"
"                (sha256\n"
"                 (base32\n"
"                  \"17pjvprmdrx4h6bb1hhc98w9qi6ki7yl57f090n9kbhswxqfs7s3\"))\n"
"                (patches (search-patches \"libgit2-mtime-0.patch\"))\n"
"                (modules '((guix build utils)))\n"
"                ;; Gebündelte Software entfernen wir.\n"
"                (snippet '(delete-file-recursively \"deps\"))))\n"
"      (build-system cmake-build-system)\n"
"      (outputs '(\"out\" \"debug\"))\n"
"      (arguments\n"
"       `(#:tests? #true                         ;Testkatalog ausführen (wie ohnehin vorgegeben)\n"
"         #:configure-flags '(\"-DUSE_SHA1DC=ON\") ;Kollisionserkennung für SHA-1 aktivieren\n"
"         #:phases\n"
"         (modify-phases %standard-phases\n"
"           (add-after 'unpack 'fix-hardcoded-paths\n"
"             (lambda _\n"
"               (substitute* \"tests/repo/init.c\"\n"
"                 ((\"#!/bin/sh\") (string-append \"#!\" (which \"sh\"))))\n"
"               (substitute* \"tests/clar/fs.h\"\n"
"                 ((\"/bin/cp\") (which \"cp\"))\n"
"                 ((\"/bin/rm\") (which \"rm\")))))\n"
"           ;; Ausführliche Testausgaben einschalten.\n"
"           (replace 'check\n"
"             (lambda* (#:key tests? #:allow-other-keys)\n"
"               (when tests?\n"
"                 (invoke \"./libgit2_clar\" \"-v\" \"-Q\"))))\n"
"           (add-after 'unpack 'make-files-writable-for-tests\n"
"             (lambda _ (for-each make-file-writable (find-files \".\")))))))\n"
"      (inputs\n"
"       (list libssh2 http-parser python-wrapper))\n"
"      (native-inputs\n"
"       (list pkg-config))\n"
"      (propagated-inputs\n"
"       ;; Weil diese zwei Bibliotheken unter 'Requires.private' in libgit2.pc stehen.\n"
"       (list openssl zlib))\n"
"      (home-page \"https://libgit2.github.com/\")\n"
"      (synopsis \"Library providing Git core methods\")\n"
"      (description\n"
"       \"Libgit2 is a portable, pure C implementation of the Git core methods\n"
"provided as a re-entrant linkable library with a solid API, allowing you to\n"
"write native speed custom Git applications in any language with bindings.\")\n"
"      ;; Wir schreiben als Kommentar, dass es eigentlich die GPL2 mit Ausnahmen ist:\n"
"      ;; GPLv2 with linking exception\n"
"      (license license:gpl2))))\n"

msgid "(In those cases were you only want to tweak a few fields from a package definition, you should rely on inheritance instead of copy-pasting everything.  See below.)"
msgstr "(In solchen Fällen, wo Sie nur ein paar wenige Felder einer Paketdefinition abändern wollen, wäre es wirklich besser, wenn Sie Vererbung einsetzen würden, statt alles abzuschreiben. Siehe unten.)"

msgid "Let's discuss those fields in depth."
msgstr "Reden wir über diese Felder im Detail."

msgid "@code{git-fetch} method"
msgstr "@code{git-fetch}-Methode"

msgid "Unlike the @code{url-fetch} method, @code{git-fetch} expects a @code{git-reference} which takes a Git repository and a commit.  The commit can be any Git reference such as tags, so if the @code{version} is tagged, then it can be used directly.  Sometimes the tag is prefixed with a @code{v}, in which case you'd use @code{(commit (string-append \"v\" version))}."
msgstr "Anders als die @code{url-fetch}-Methode erwartet @code{git-fetch} eine @code{git-reference}, welche ein Git-Repository und einen Commit entgegennimmt. Der Commit kann eine beliebige Art von Git-Referenz sein, z.B.@: ein Tag. Wenn die @code{version} also mit einem Tag versehen ist, kann sie einfach benutzt werden. Manchmal ist dem Tag ein Präfix @code{v} vorangestellt. In diesem Fall würden Sie @code{(commit (string-append \"v\" version))} schreiben."

msgid "To ensure that the source code from the Git repository is stored in a directory with a descriptive name, we use @code{(file-name (git-file-name name version))}."
msgstr "Um sicherzustellen, dass der Quellcode aus dem Git-Repository in einem Verzeichnis mit nachvollziehbarem Namen landet, schreiben wir @code{(file-name (git-file-name name version))}."

msgid "The @code{git-version} procedure can be used to derive the version when packaging programs for a specific commit, following the Guix contributor guidelines (@pxref{Version Numbers,,, guix, GNU Guix Reference Manual})."
msgstr "Mit der Prozedur @code{git-version} kann die Version beim Paketieren eines bestimmten Commits eines Programms entsprechend den Richtlinien für Beiträge zu Guix (@pxref{Versionsnummern,,, guix.de, Referenzhandbuch zu GNU Guix}) abgeleitet werden."

msgid "How does one obtain the @code{sha256} hash that's in there, you ask? By invoking @command{guix hash} on a checkout of the desired commit, along these lines:"
msgstr "Sie fragen, woher man den darin angegebenen @code{sha256}-Hash bekommt? Indem Sie @command{guix hash} auf einem Checkout des gewünschten Commits aufrufen, ungefähr so:"

msgid ""
"git clone https://github.com/libgit2/libgit2/\n"
"cd libgit2\n"
"git checkout v0.26.6\n"
"guix hash -rx .\n"
msgstr ""
"git clone https://github.com/libgit2/libgit2/\n"
"cd libgit2\n"
"git checkout v0.26.6\n"
"guix hash -rx .\n"

msgid "@command{guix hash -rx} computes a SHA256 hash over the whole directory, excluding the @file{.git} sub-directory (@pxref{Invoking guix hash,,, guix, GNU Guix Reference Manual})."
msgstr "@command{guix hash -rx} berechnet einen SHA256-Hash des gesamten Verzeichnisses, abgesehen vom @file{.git}-Unterverzeichnis (siehe @ref{Aufruf von guix hash,,, guix.de, Referenzhandbuch zu GNU Guix})."

msgid "In the future, @command{guix download} will hopefully be able to do these steps for you, just like it does for regular downloads."
msgstr "In Zukunft wird @command{guix download} diese Schritte hoffentlich für Sie erledigen können, genau wie es das für normales Herunterladen macht."

msgid "Snippets"
msgstr "Schnipsel"

msgid "Snippets are quoted (i.e. non-evaluated) Scheme code that are a means of patching the source.  They are a Guix-y alternative to the traditional @file{.patch} files.  Because of the quote, the code in only evaluated when passed to the Guix daemon for building.  There can be as many snippets as needed."
msgstr "„Snippets“, deutsch Schnipsel, sind mit z.B.@: @code{quote}-Zeichen maskierte, also nicht ausgewertete, Stücke Scheme-Code, mit denen der Quellcode gepatcht wird. Sie sind eine guixige Alternative zu traditionellen @file{.patch}-Dateien. Wegen der Maskierung werden sie erst dann ausgewertet, wenn sie an den Guix-Daemon zum Erstellen übergeben werden. Es kann so viele Schnipsel geben wie nötig."

msgid "Snippets might need additional Guile modules which can be imported from the @code{modules} field."
msgstr "In Schnipseln könnten zusätzliche Guile-Module benötigt werden. Diese können importiert werden, indem man sie im Feld @code{modules} angibt."

msgid "Inputs"
msgstr "Eingaben"

msgid "There are 3 different input types.  In short:"
msgstr "Es gibt 3 verschiedene Arten von Eingaben. Kurz gefasst:"

msgid "native-inputs"
msgstr "native-inputs"

msgid "Required for building but not runtime -- installing a package through a substitute won't install these inputs."
msgstr "Sie werden zum Erstellen gebraucht, aber @emph{nicht} zur Laufzeit@tie{}– wenn Sie ein Paket als Substitut installieren, werden diese Eingaben nirgendwo installiert."

msgid "inputs"
msgstr "inputs"

msgid "Installed in the store but not in the profile, as well as being present at build time."
msgstr "Sie werden in den Store installiert, aber nicht in das Profil, und sie stehen beim Erstellen zur Verfügung."

msgid "propagated-inputs"
msgstr "propagated-inputs"

msgid "Installed in the store and in the profile, as well as being present at build time."
msgstr "Sie werden sowohl in den Store als auch ins Profil installiert und sind auch beim Erstellen verfügbar."

msgid "@xref{package Reference,,, guix, GNU Guix Reference Manual} for more details."
msgstr "Siehe @ref{„package“-Referenz,,, guix.de, Referenzhandbuch zu GNU Guix} für mehr Details."

msgid "The distinction between the various inputs is important: if a dependency can be handled as an @emph{input} instead of a @emph{propagated input}, it should be done so, or else it ``pollutes'' the user profile for no good reason."
msgstr "Der Unterschied zwischen den verschiedenen Eingaben ist wichtig: Wenn eine Abhängigkeit als @code{input} statt als @code{propagated-input} ausreicht, dann sollte sie auch so eingeordnet werden, sonst „verschmutzt“ sie das Profil des Benutzers ohne guten Grund."

msgid "For instance, a user installing a graphical program that depends on a command line tool might only be interested in the graphical part, so there is no need to force the command line tool into the user profile.  The dependency is a concern to the package, not to the user.  @emph{Inputs} make it possible to handle dependencies without bugging the user by adding undesired executable files (or libraries) to their profile."
msgstr "Wenn eine Nutzerin beispielsweise ein grafisches Programm installiert, das von einem Befehlszeilenwerkzeug abhängt, sie sich aber nur für den grafischen Teil interessiert, dann sollten wir sie nicht zur Installation des Befehlszeilenwerkzeugs in ihr Benutzerprofil zwingen. Um die Abhängigkeit sollte sich das Paket kümmern, nicht seine Benutzerin. Mit @emph{Inputs} können wir Abhängigkeiten verwenden, wo sie gebraucht werden, ohne Nutzer zu belästigen, indem wir ausführbare Dateien (oder Bibliotheken) in deren Profil installieren."

msgid "Same goes for @emph{native-inputs}: once the program is installed, build-time dependencies can be safely garbage-collected.  It also matters when a substitute is available, in which case only the @emph{inputs} and @emph{propagated inputs} will be fetched: the @emph{native inputs} are not required to install a package from a substitute."
msgstr "Das Gleiche gilt für @emph{native-inputs}: Wenn das Programm einmal installiert ist, können Abhängigkeiten zur Erstellungszeit gefahrlos dem Müllsammler anvertraut werden. Sie sind auch besser, wenn ein Substitut verfügbar ist, so dass nur die @code{inputs} und @code{propagated-inputs} heruntergeladen werden; @code{native-inputs} braucht niemand, der das Paket aus einem Substitut heraus installiert."

msgid "Note"
msgstr "Anmerkung"

msgid "You may see here and there snippets where package inputs are written quite differently, like so:"
msgstr "Vielleicht bemerken Sie hier und da Schnipsel, deren Paketeingaben recht anders geschrieben wurden, etwa so:"

msgid ""
";; The \"old style\" for inputs.\n"
"(inputs\n"
" `((\"libssh2\" ,libssh2)\n"
"   (\"http-parser\" ,http-parser)\n"
"   (\"python\" ,python-wrapper)))\n"
msgstr ""
";; Der „alte Stil“ von Eingaben.\n"
"(inputs\n"
" `((\"libssh2\" ,libssh2)\n"
"   (\"http-parser\" ,http-parser)\n"
"   (\"python\" ,python-wrapper)))\n"

msgid "This is the ``old style'', where each input in the list is explicitly given a label (a string).  It is still supported but we recommend using the style above instead.  @xref{package Reference,,, guix, GNU Guix Reference Manual}, for more info."
msgstr "Früher hatte man Eingaben in diesem „alten Stil“ geschrieben, wo jede Eingabe ausdrücklich mit einer Bezeichnung (als Zeichenkette) assoziiert wurde. Er wird immer noch unterstützt, aber wir empfehlen, dass Sie stattdessen im weiter oben gezeigten Stil schreiben. Siehe @ref{„package“-Referenz,,, guix.de, Referenzhandbuch zu GNU Guix} für mehr Informationen."

msgid "Outputs"
msgstr "Ausgaben"

msgid "Just like how a package can have multiple inputs, it can also produce multiple outputs."
msgstr "Genau wie ein Paket mehrere Eingaben haben kann, kann es auch mehrere Ausgaben haben."

msgid "Each output corresponds to a separate directory in the store."
msgstr "Jede Ausgabe entspricht einem anderen Verzeichnis im Store."

msgid "The user can choose which output to install; this is useful to save space or to avoid polluting the user profile with unwanted executables or libraries."
msgstr "Die Benutzerin kann sich entscheiden, welche Ausgabe sie installieren will; so spart sie Platz auf dem Datenträger und verschmutzt ihr Benutzerprofil nicht mit unerwünschten ausführbaren Dateien oder Bibliotheken."

msgid "Output separation is optional.  When the @code{outputs} field is left out, the default and only output (the complete package) is referred to as @code{\"out\"}."
msgstr "Nach Ausgaben zu trennen ist optional. Wenn Sie kein @code{outputs}-Feld schreiben, heißt die standardmäßige und einzige Ausgabe (also das ganze Paket) schlicht @code{\"out\"}."

msgid "Typical separate output names include @code{debug} and @code{doc}."
msgstr "Typische Namen für getrennte Ausgaben sind @code{debug} und @code{doc}."

msgid "It's advised to separate outputs only when you've shown it's worth it: if the output size is significant (compare with @code{guix size}) or in case the package is modular."
msgstr "Es wird empfohlen, getrennte Ausgaben nur dann anzubieten, wenn Sie gezeigt haben, dass es sich lohnt, d.h.@: wenn die Ausgabengröße signifikant ist (vergleichen Sie sie mittels @code{guix size}) oder das Paket modular aufgebaut ist."

msgid "Build system arguments"
msgstr "Argumente ans Erstellungssystem"

msgid "The @code{arguments} is a keyword-value list used to configure the build process."
msgstr "@code{arguments} ist eine Liste aus Schlüsselwort-Wert-Paaren (eine „keyword-value list“), mit denen der Erstellungsprozess konfiguriert wird."

msgid "The simplest argument @code{#:tests?} can be used to disable the test suite when building the package.  This is mostly useful when the package does not feature any test suite.  It's strongly recommended to keep the test suite on if there is one."
msgstr "Das einfachste Argument @code{#:tests?} kann man benutzen, um den Testkatalog bei der Erstellung des Pakets nicht zu prüfen. Das braucht man meistens dann, wenn das Paket überhaupt keinen Testkatalog hat. Wir empfehlen sehr, den Testkatalog zu benutzen, wenn es einen gibt."

msgid "Another common argument is @code{:make-flags}, which specifies a list of flags to append when running make, as you would from the command line.  For instance, the following flags"
msgstr "Ein anderes häufiges Argument ist @code{:make-flags}, was eine Liste an den @code{make}-Aufruf anzuhängender Befehlszeilenargumente festlegt, so wie Sie sie auf der Befehlszeile angeben würden. Zum Beispiel werden die folgenden @code{:make-flags}"

msgid ""
"#:make-flags (list (string-append \"prefix=\" (assoc-ref %outputs \"out\"))\n"
"                   \"CC=gcc\")\n"
msgstr ""
"#:make-flags (list (string-append \"prefix=\" (assoc-ref %outputs \"out\"))\n"
"                   \"CC=gcc\")\n"

msgid "translate into"
msgstr "übersetzt zu"

msgid "$ make CC=gcc prefix=/gnu/store/...-<out>\n"
msgstr "$ make CC=gcc prefix=/gnu/store/...-<out>\n"

msgid "This sets the C compiler to @code{gcc} and the @code{prefix} variable (the installation directory in Make parlance) to @code{(assoc-ref %outputs \"out\")}, which is a build-stage global variable pointing to the destination directory in the store (something like @file{/gnu/store/...-my-libgit2-20180408})."
msgstr "Dadurch wird als C-Compiler @code{gcc} verwendet und als @code{prefix}-Variable (das Installationsverzeichnis in der Sprechweise von Make) wird @code{(assoc-ref %outputs \"out\")} verwendet, also eine globale Variable der Erstellungsschicht, die auf das Zielverzeichnis im Store verweist (so etwas wie @file{/gnu/store/…-my-libgit2-20180408})."

msgid "Similarly, it's possible to set the configure flags:"
msgstr "Auf gleiche Art kann man auch die Befehlszeilenoptionen für configure festlegen:"

msgid "#:configure-flags '(\"-DUSE_SHA1DC=ON\")\n"
msgstr "#:configure-flags '(\"-DUSE_SHA1DC=ON\")\n"

msgid "The @code{%build-inputs} variable is also generated in scope.  It's an association table that maps the input names to their store directories."
msgstr "Die Variable @code{%build-inputs} wird auch in diesem Sichtbarkeitsbereich erzeugt. Es handelt sich um eine assoziative Liste, die von den Namen der Eingaben auf ihre Verzeichnisse im Store abbildet."

msgid "The @code{phases} keyword lists the sequential steps of the build system.  Typically phases include @code{unpack}, @code{configure}, @code{build}, @code{install} and @code{check}.  To know more about those phases, you need to work out the appropriate build system definition in @samp{$GUIX_CHECKOUT/guix/build/gnu-build-system.scm}:"
msgstr "Das @code{phases}-Schlüsselwort listet der Reihe nach die vom Erstellungssystem durchgeführten Schritte auf. Zu den üblichen Phasen gehören @code{unpack}, @code{configure}, @code{build}, @code{install} und @code{check}. Um mehr über diese Phasen zu lernen, müssen Sie sich die Definition des zugehörigen Erstellungssystems in @samp{$GUIX_CHECKOUT/guix/build/gnu-build-system.scm} anschauen:"

msgid ""
"(define %standard-phases\n"
"  ;; Standard build phases, as a list of symbol/procedure pairs.\n"
"  (let-syntax ((phases (syntax-rules ()\n"
"                         ((_ p ...) `((p . ,p) ...)))))\n"
"    (phases set-SOURCE-DATE-EPOCH set-paths install-locale unpack\n"
"            bootstrap\n"
"            patch-usr-bin-file\n"
"            patch-source-shebangs configure patch-generated-file-shebangs\n"
"            build check install\n"
"            patch-shebangs strip\n"
"            validate-runpath\n"
"            validate-documentation-location\n"
"            delete-info-dir-file\n"
"            patch-dot-desktop-files\n"
"            make-dynamic-linker-cache\n"
"            install-license-files\n"
"            reset-gzip-timestamps\n"
"            compress-documentation)))\n"
msgstr ""
"(define %standard-phases\n"
"  ;; Standard build phases, as a list of symbol/procedure pairs.\n"
"  (let-syntax ((phases (syntax-rules ()\n"
"                         ((_ p ...) `((p . ,p) ...)))))\n"
"    (phases set-SOURCE-DATE-EPOCH set-paths install-locale unpack\n"
"            bootstrap\n"
"            patch-usr-bin-file\n"
"            patch-source-shebangs configure patch-generated-file-shebangs\n"
"            build check install\n"
"            patch-shebangs strip\n"
"            validate-runpath\n"
"            validate-documentation-location\n"
"            delete-info-dir-file\n"
"            patch-dot-desktop-files\n"
"            make-dynamic-linker-cache\n"
"            install-license-files\n"
"            reset-gzip-timestamps\n"
"            compress-documentation)))\n"

msgid "Or from the REPL:"
msgstr "Alternativ auf einer REPL:"

msgid ""
"(add-to-load-path \"/path/to/guix/checkout\")\n"
",use (guix build gnu-build-system)\n"
"(map car %standard-phases)\n"
"@result{} (set-SOURCE-DATE-EPOCH set-paths install-locale unpack bootstrap patch-usr-bin-file patch-source-shebangs configure patch-generated-file-shebangs build check install patch-shebangs strip validate-runpath validate-documentation-location delete-info-dir-file patch-dot-desktop-files make-dynamic-linker-cache install-license-files reset-gzip-timestamps compress-documentation)\n"
msgstr ""
"(add-to-load-path \"/pfad/zum/guix/checkout\")\n"
",use (guix build gnu-build-system)\n"
"(map car %standard-phases)\n"
"@result{} (set-SOURCE-DATE-EPOCH set-paths install-locale unpack bootstrap patch-usr-bin-file patch-source-shebangs configure patch-generated-file-shebangs build check install patch-shebangs strip validate-runpath validate-documentation-location delete-info-dir-file patch-dot-desktop-files make-dynamic-linker-cache install-license-files reset-gzip-timestamps compress-documentation)\n"

msgid "If you want to know more about what happens during those phases, consult the associated procedures."
msgstr "Wenn Sie mehr darüber wissen wollen, was in diesen Phasen passiert, schauen Sie in den jeweiligen Prozeduren."

msgid "For instance, as of this writing the definition of @code{unpack} for the GNU build system is:"
msgstr "Beispielsweise sieht momentan, als dies hier geschrieben wurde, die Definition von @code{unpack} für das GNU-Erstellungssystem so aus:"

msgid ""
"(define* (unpack #:key source #:allow-other-keys)\n"
"  \"Unpack SOURCE in the working directory, and change directory within the\n"
"source.  When SOURCE is a directory, copy it in a sub-directory of the current\n"
"working directory.\"\n"
"  (if (file-is-directory? source)\n"
"      (begin\n"
"        (mkdir \"source\")\n"
"        (chdir \"source\")\n"
"\n"
msgstr ""
"(define* (unpack #:key source #:allow-other-keys)\n"
"  \"Unpack SOURCE in the working directory, and change directory within the\n"
"source.  When SOURCE is a directory, copy it in a sub-directory of the current\n"
"working directory.\"\n"
"  (if (file-is-directory? source)\n"
"      (begin\n"
"        (mkdir \"source\")\n"
"        (chdir \"source\")\n"
"\n"

msgid ""
"        ;; Preserve timestamps (set to the Epoch) on the copied tree so that\n"
"        ;; things work deterministically.\n"
"        (copy-recursively source \".\"\n"
"                          #:keep-mtime? #t)\n"
"        ;; Make the source checkout files writable, for convenience.\n"
"        (for-each (lambda (f)\n"
"                    (false-if-exception (make-file-writable f)))\n"
"                  (find-files \".\")))\n"
"      (begin\n"
"        (cond\n"
"         ((string-suffix? \".zip\" source)\n"
"          (invoke \"unzip\" source))\n"
"         ((tarball? source)\n"
"          (invoke \"tar\" \"xvf\" source))\n"
"         (else\n"
"          (let ((name (strip-store-file-name source))\n"
"                (command (compressor source)))\n"
"            (copy-file source name)\n"
"            (when command\n"
"              (invoke command \"--decompress\" name)))))\n"
"        ;; Attempt to change into child directory.\n"
"        (and=> (first-subdirectory \".\") chdir))))\n"
msgstr ""
"        ;; Preserve timestamps (set to the Epoch) on the copied tree so that\n"
"        ;; things work deterministically.\n"
"        (copy-recursively source \".\"\n"
"                          #:keep-mtime? #t)\n"
"        ;; Make the source checkout files writable, for convenience.\n"
"        (for-each (lambda (f)\n"
"                    (false-if-exception (make-file-writable f)))\n"
"                  (find-files \".\")))\n"
"      (begin\n"
"        (cond\n"
"         ((string-suffix? \".zip\" source)\n"
"          (invoke \"unzip\" source))\n"
"         ((tarball? source)\n"
"          (invoke \"tar\" \"xvf\" source))\n"
"         (else\n"
"          (let ((name (strip-store-file-name source))\n"
"                (command (compressor source)))\n"
"            (copy-file source name)\n"
"            (when command\n"
"              (invoke command \"--decompress\" name)))))\n"
"        ;; Attempt to change into child directory.\n"
"        (and=> (first-subdirectory \".\") chdir))))\n"

msgid "Note the @code{chdir} call: it changes the working directory to where the source was unpacked.  Thus every phase following the @code{unpack} will use the source as a working directory, which is why we can directly work on the source files.  That is to say, unless a later phase changes the working directory to something else."
msgstr "Beachten Sie den Aufruf von @code{chdir}: Damit wird das Arbeitsverzeichnis zu demjenigen gewechselt, wohin die Quelldateien entpackt wurden. In jeder Phase nach @code{unpack} dient also das Verzeichnis mit den Quelldateien als Arbeitsverzeichnis. Deswegen können wir direkt mit den Quelldateien arbeiten, zumindest solange keine spätere Phase das Arbeitsverzeichnis woandershin wechselt."

msgid "We modify the list of @code{%standard-phases} of the build system with the @code{modify-phases} macro as per the list of specified modifications, which may have the following forms:"
msgstr "Die Liste der @code{%standard-phases} des Erstellungssystems ändern wir mit Hilfe des @code{modify-phases}-Makros über eine Liste von Änderungen. Sie kann folgende Formen haben:"

msgid "@code{(add-before @var{phase} @var{new-phase} @var{procedure})}: Run @var{procedure} named @var{new-phase} before @var{phase}."
msgstr "@code{(add-before @var{Phase} @var{neue-Phase} @var{Prozedur})}: @var{Prozedur} unter dem Namen @var{neue-Phase} vor @var{Phase} ausführen."

msgid "@code{(add-after @var{phase} @var{new-phase} @var{procedure})}: Same, but afterwards."
msgstr "@code{(add-after @var{Phase} @var{neue-Phase} @var{Prozedur})}: Genauso, aber danach."

msgid "@code{(replace @var{phase} @var{procedure})}."
msgstr "@code{(replace @var{Phase} @var{Prozedur})}."

msgid "@code{(delete @var{phase})}."
msgstr "@code{(delete @var{Phase})}."

msgid "The @var{procedure} supports the keyword arguments @code{inputs} and @code{outputs}.  Each input (whether @emph{native}, @emph{propagated} or not) and output directory is referenced by their name in those variables.  Thus @code{(assoc-ref outputs \"out\")} is the store directory of the main output of the package.  A phase procedure may look like this:"
msgstr "Die @var{Prozedur} unterstützt die Schlüsselwortargumente @code{inputs} und @code{outputs}. Jede Eingabe (ob sie @emph{native}, @emph{propagated} oder nichts davon ist) und jedes Ausgabeverzeichnis ist in diesen Variablen mit dem jeweiligen Namen assoziiert. @code{(assoc-ref outputs \"out\")} ist also das Store-Verzeichnis der Hauptausgabe des Pakets. Eine Phasenprozedur kann so aussehen:"

msgid ""
"(lambda* (#:key inputs outputs #:allow-other-keys)\n"
"  (let ((bash-directory (assoc-ref inputs \"bash\"))\n"
"        (output-directory (assoc-ref outputs \"out\"))\n"
"        (doc-directory (assoc-ref outputs \"doc\")))\n"
"    ;; ... ))\n"
msgstr ""
"(lambda* (#:key inputs outputs #:allow-other-keys)\n"
"  (let ((bash-directory (assoc-ref inputs \"bash\"))\n"
"        (output-directory (assoc-ref outputs \"out\"))\n"
"        (doc-directory (assoc-ref outputs \"doc\")))\n"
"    ;; ... ))\n"

msgid "Its return value is ignored."
msgstr "Ihr Rückgabewert wird ignoriert."

msgid "Code staging"
msgstr "Code-Staging"

msgid "The astute reader may have noticed the quasi-quote and comma syntax in the argument field.  Indeed, the build code in the package declaration should not be evaluated on the client side, but only when passed to the Guix daemon.  This mechanism of passing code around two running processes is called @uref{https://arxiv.org/abs/1709.00833, code staging}."
msgstr "Aufmerksame Leser könnten die Syntax mit @code{quasiquote} und Komma im Argumentefeld bemerkt haben. Tatsächlich sollte der Erstellungscode in der Paketdeklaration @emph{nicht} auf Client-Seite ausgeführt werden, sondern erst, wenn er an den Guix-Daemon übergeben worden ist. Der Mechanismus, über den Code zwischen zwei laufenden Prozessen weitergegeben wird, nennen wir @uref{https://arxiv.org/abs/1709.00833, Code-Staging}."

msgid "Utility functions"
msgstr "Hilfsfunktionen"

msgid "When customizing @code{phases}, we often need to write code that mimics the equivalent system invocations (@code{make}, @code{mkdir}, @code{cp}, etc.)@: commonly used during regular ``Unix-style'' installations."
msgstr "Beim Anpassen der @code{phases} müssen wir oft Code schreiben, der analog zu den äquivalenten Systemaufrufen funktioniert (@code{make}, @code{mkdir}, @code{cp}, etc.), welche in regulären „Unix-artigen“ Installationen oft benutzt werden."

msgid "Some like @code{chmod} are native to Guile.  @xref{,,, guile, Guile reference manual} for a complete list."
msgstr "Manche, wie @code{chmod}, sind Teil von Guile. Siehe das @ref{,,, guile, Referenzhandbuch zu Guile} für eine vollständige Liste."

msgid "Guix provides additional helper functions which prove especially handy in the context of package management."
msgstr "Guix stellt zusätzliche Hilfsfunktionen zur Verfügung, die bei der Paketverwaltung besonders praktisch sind."

msgid "Some of those functions can be found in @samp{$GUIX_CHECKOUT/guix/guix/build/utils.scm}.  Most of them mirror the behaviour of the traditional Unix system commands:"
msgstr "Manche dieser Funktionalitäten finden Sie in @samp{$GUIX_CHECKOUT/guix/guix/build/utils.scm}. Die meisten spiegeln das Verhalten traditioneller Unix-Systembefehle wider:"

msgid "which"
msgstr "which"

msgid "Like the @samp{which} system command."
msgstr "Das Gleiche wie der @samp{which}-Systembefehl."

msgid "find-files"
msgstr "find-files"

msgid "Akin to the @samp{find} system command."
msgstr "Wie der @samp{find} Systembefehl."

msgid "mkdir-p"
msgstr "mkdir-p"

msgid "Like @samp{mkdir -p}, which creates all parents as needed."
msgstr "Wie @samp{mkdir -p}, das Elternverzeichnisse erzeugt, wenn nötig."

msgid "install-file"
msgstr "install-file"

msgid "Similar to @samp{install} when installing a file to a (possibly non-existing) directory.  Guile has @code{copy-file} which works like @samp{cp}."
msgstr "Ähnlich wie @samp{install} beim Installieren einer Datei in ein (nicht unbedingt existierendes) Verzeichnis. Guile kennt @code{copy-file}, das wie @samp{cp} funktioniert."

msgid "copy-recursively"
msgstr "copy-recursively"

msgid "Like @samp{cp -r}."
msgstr "Wie @samp{cp -r}."

msgid "delete-file-recursively"
msgstr "delete-file-recursively"

msgid "Like @samp{rm -rf}."
msgstr "Wie @samp{rm -rf}."

msgid "invoke"
msgstr "invoke"

msgid "Run an executable.  This should be used instead of @code{system*}."
msgstr "Eine ausführbare Datei ausführen. Man sollte es benutzen und nicht @code{system*}."

msgid "with-directory-excursion"
msgstr "with-directory-excursion"

msgid "Run the body in a different working directory, then restore the previous working directory."
msgstr "Den Rumpf in einem anderen Arbeitsverzeichnis ausführen und danach wieder in das vorherige Arbeitsverzeichnis wechseln."

msgid "substitute*"
msgstr "substitute*"

msgid "A ``@command{sed}-like'' function."
msgstr "Eine „@command{sed}-artige“ Funktion."

msgid "@xref{Build Utilities,,, guix, GNU Guix Reference Manual}, for more information on these utilities."
msgstr "Siehe @ref{Werkzeuge zur Erstellung,,, guix.de, Referenzhandbuch zu GNU Guix} für mehr Informationen zu diesen Werkzeugen."

msgid "Module prefix"
msgstr "Modulpräfix"

msgid "The license in our last example needs a prefix: this is because of how the @code{license} module was imported in the package, as @code{#:use-module ((guix licenses)  #:prefix license:)}.  The Guile module import mechanism (@pxref{Using Guile Modules,,, guile, Guile reference manual})  gives the user full control over namespacing: this is needed to avoid clashes between, say, the @samp{zlib} variable from @samp{licenses.scm} (a @emph{license} value) and the @samp{zlib} variable from @samp{compression.scm} (a @emph{package} value)."
msgstr "Die Lizenz in unserem letzten Beispiel braucht ein Präfix. Der Grund liegt darin, wie das @code{license}-Modul importiert worden ist, nämlich @code{#:use-module ((guix licenses)  #:prefix license:)}. Der Importmechanismus von Guile-Modulen (siehe @ref{Using Guile Modules,,, guile, Referenzhandbuch zu Guile}) gibt Benutzern die volle Kontrolle über Namensräume. Man braucht sie, um Konflikte zu lösen, z.B.@ zwischen der @samp{zlib}-Variablen aus @samp{licenses.scm} (dieser Wert repräsentiert eine @emph{Softwarelizenz}) und der @samp{zlib}-Variablen aus @samp{compression.scm} (ein Wert, der für ein @emph{Paket} steht)."

msgid "What we've seen so far covers the majority of packages using a build system other than the @code{trivial-build-system}.  The latter does not automate anything and leaves you to build everything manually.  This can be more demanding and we won't cover it here for now, but thankfully it is rarely necessary to fall back on this system."
msgstr "Was wir bisher gesehen haben reicht für die meisten Pakete aus, die als Erstellungssystem etwas anderes als @code{trivial-build-system} verwenden. Letzteres automatisiert gar nichts und überlässt es Ihnen, alles zur Erstellung manuell festzulegen. Das kann einen noch mehr beanspruchen und wir beschreiben es hier zurzeit nicht, aber glücklicherweise braucht man dieses System auch nur in seltenen Fällen."

msgid "For the other build systems, such as ASDF, Emacs, Perl, Ruby and many more, the process is very similar to the GNU build system except for a few specialized arguments."
msgstr "Bei anderen Erstellungssystemen wie ASDF, Emacs, Perl, Ruby und vielen anderen ist der Prozess sehr ähnlich zum GNU-Erstellungssystem abgesehen von ein paar speziellen Argumenten."

msgid "@xref{Build Systems,,, guix, GNU Guix Reference Manual}, for more information on build systems, or check the source code in the @samp{$GUIX_CHECKOUT/guix/build} and @samp{$GUIX_CHECKOUT/guix/build-system} directories."
msgstr "Siehe @ref{Erstellungssysteme,,, guix.de, Referenzhandbuch zu GNU Guix}, für mehr Informationen über Erstellungssysteme, oder den Quellcode in den Verzeichnissen @samp{$GUIX_CHECKOUT/guix/build} und @samp{$GUIX_CHECKOUT/guix/build-system}."

msgid "We can't repeat it enough: having a full-fledged programming language at hand empowers us in ways that reach far beyond traditional package management."
msgstr "Wir können es nicht oft genug wiederholen: Eine Allzweck-Programmiersprache zur Hand zu haben macht Dinge möglich, die traditionelle Paketverwaltung weit übersteigen."

msgid "Let's illustrate this with some awesome features of Guix!"
msgstr "Wir können uns das anhand Guix’ großartiger Funktionalitäten klarmachen!"

msgid "You might find some build systems good enough that there is little to do at all to write a package, to the point that it becomes repetitive and tedious after a while.  A @emph{raison d'être} of computers is to replace human beings at those boring tasks.  So let's tell Guix to do this for us and create the package definition of an R package from CRAN (the output is trimmed for conciseness):"
msgstr "Sie könnten feststellen, dass manche Erstellungssysteme gut genug sind und nichts weiter zu tun bleibt, um ein Paket zu verfassen. Das Paketeschreiben kann so monoton werden und man wird dessen bald überdrüssig. Eine Daseinsberechtigung von Rechnern ist, Menschen bei solch langweiligen Aufgaben zu ersetzen. Lasst uns also Guix die Sache erledigen: Wir lassen uns die Paketdefinition eines R-Pakets mit den Informationen aus CRAN holen (was zu anderen ausgegeben wird, haben wir im Folgenden weggelassen):"

msgid ""
"$ guix import cran --recursive walrus\n"
"\n"
msgstr ""
"$ guix import cran --recursive walrus\n"
"\n"

msgid ""
"(define-public r-mc2d\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"
msgstr ""
"(define-public r-mc2d\n"
"    ; …\n"
"    (license gpl2+)))\n"
"\n"

msgid ""
"(define-public r-jmvcore\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"
msgstr ""
"(define-public r-jmvcore\n"
"    ; …\n"
"    (license gpl2+)))\n"
"\n"

msgid ""
"(define-public r-wrs2\n"
"    ; ...\n"
"    (license gpl3)))\n"
"\n"
msgstr ""
"(define-public r-wrs2\n"
"    ; …\n"
"    (license gpl3)))\n"
"\n"

msgid ""
"(define-public r-walrus\n"
"  (package\n"
"    (name \"r-walrus\")\n"
"    (version \"1.0.3\")\n"
"    (source\n"
"      (origin\n"
"        (method url-fetch)\n"
"        (uri (cran-uri \"walrus\" version))\n"
"        (sha256\n"
"          (base32\n"
"            \"1nk2glcvy4hyksl5ipq2mz8jy4fss90hx6cq98m3w96kzjni6jjj\"))))\n"
"    (build-system r-build-system)\n"
"    (propagated-inputs\n"
"      (list r-ggplot2 r-jmvcore r-r6 r-wrs2))\n"
"    (home-page \"https://github.com/jamovi/walrus\")\n"
"    (synopsis \"Robust Statistical Methods\")\n"
"    (description\n"
"      \"This package provides a toolbox of common robust statistical\n"
"tests, including robust descriptives, robust t-tests, and robust ANOVA.\n"
"It is also available as a module for 'jamovi' (see\n"
"<https://www.jamovi.org> for more information).  Walrus is based on the\n"
"WRS2 package by Patrick Mair, which is in turn based on the scripts and\n"
"work of Rand Wilcox.  These analyses are described in depth in the book\n"
"'Introduction to Robust Estimation & Hypothesis Testing'.\")\n"
"    (license gpl3)))\n"
msgstr ""
"(define-public r-walrus\n"
"  (package\n"
"    (name \"r-walrus\")\n"
"    (version \"1.0.3\")\n"
"    (source\n"
"      (origin\n"
"        (method url-fetch)\n"
"        (uri (cran-uri \"walrus\" version))\n"
"        (sha256\n"
"          (base32\n"
"            \"1nk2glcvy4hyksl5ipq2mz8jy4fss90hx6cq98m3w96kzjni6jjj\"))))\n"
"    (build-system r-build-system)\n"
"    (propagated-inputs\n"
"      (list r-ggplot2 r-jmvcore r-r6 r-wrs2))\n"
"    (home-page \"https://github.com/jamovi/walrus\")\n"
"    (synopsis \"Robust Statistical Methods\")\n"
"    (description\n"
"      \"This package provides a toolbox of common robust statistical\n"
"tests, including robust descriptives, robust t-tests, and robust ANOVA.\n"
"It is also available as a module for 'jamovi' (see\n"
"<https://www.jamovi.org> for more information).  Walrus is based on the\n"
"WRS2 package by Patrick Mair, which is in turn based on the scripts and\n"
"work of Rand Wilcox.  These analyses are described in depth in the book\n"
"'Introduction to Robust Estimation & Hypothesis Testing'.\")\n"
"    (license gpl3)))\n"

msgid "The recursive importer won't import packages for which Guix already has package definitions, except for the very first."
msgstr "Der rekursive Importer wird keine Pakete importieren, für die es in Guix bereits eine Paketdefinition gibt, außer dem Paket, mit dem er anfängt."

msgid "Not all applications can be packaged this way, only those relying on a select number of supported systems.  Read about the full list of importers in the guix import section of the manual (@pxref{Invoking guix import,,, guix, GNU Guix Reference Manual})."
msgstr "Nicht für alle Anwendungen können auf diesem Weg Pakete erzeugt werden, nur für jene, die auf ausgewählten Systemen aufbauen. Im Handbuch können Sie Informationen über die vollständige Liste aller Importer bekommen (siehe @ref{Aufruf von guix import,,, guix.de, Referenzhandbuch zu GNU Guix})."

msgid "Guix can be smart enough to check for updates on systems it knows.  It can report outdated package definitions with"
msgstr "Guix ist klug genug, um verfügbare Aktualisierungen auf bekannten Systemen zu erkennen. Es kann über veraltete Paketdefinitionen Bericht erstatten, wenn man dies eingibt:"

msgid "$ guix refresh hello\n"
msgstr "$ guix refresh hello\n"

msgid "In most cases, updating a package to a newer version requires little more than changing the version number and the checksum.  Guix can do that automatically as well:"
msgstr "In den meisten Fällen muss man zur Aktualisierung auf eine neuere Version wenig mehr tun, als die Versionsnummer und die Prüfsumme ändern. Auch das kann mit Guix automatisiert werden:"

msgid "$ guix refresh hello --update\n"
msgstr "$ guix refresh hello --update\n"

msgid "If you've started browsing the existing package definitions, you might have noticed that a significant number of them have a @code{inherit} field:"
msgstr "Wenn Sie anfangen, bestehende Paketdefinitionen anzuschauen, könnte es Ihnen auffallen, dass viele von ihnen über ein @code{inherit}-Feld verfügen."

msgid ""
"(define-public adwaita-icon-theme\n"
"  (package (inherit gnome-icon-theme)\n"
"    (name \"adwaita-icon-theme\")\n"
"    (version \"3.26.1\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnome/sources/\" name \"/\"\n"
"                                  (version-major+minor version) \"/\"\n"
"                                  name \"-\" version \".tar.xz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"17fpahgh5dyckgz7rwqvzgnhx53cx9kr2xw0szprc6bnqy977fi8\"))))\n"
"    (native-inputs (list `(,gtk+ \"bin\")))))\n"
msgstr ""
"(define-public adwaita-icon-theme\n"
"  (package (inherit gnome-icon-theme)\n"
"    (name \"adwaita-icon-theme\")\n"
"    (version \"3.26.1\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnome/sources/\" name \"/\"\n"
"                                  (version-major+minor version) \"/\"\n"
"                                  name \"-\" version \".tar.xz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"17fpahgh5dyckgz7rwqvzgnhx53cx9kr2xw0szprc6bnqy977fi8\"))))\n"
"    (native-inputs (list `(,gtk+ \\\"bin\\\")))))\n"

msgid "All unspecified fields are inherited from the parent package.  This is very convenient to create alternative packages, for instance with different source, version or compilation options."
msgstr "Alle @emph{nicht} aufgeführten Felder werden vom Elternpaket geerbt. Das ist ziemlich praktisch, um alternative Pakete zu erzeugen, zum Beispiel solche mit geänderten Quellorten, Versionen oder Kompilierungsoptionen."

msgid "Sadly, some applications can be tough to package.  Sometimes they need a patch to work with the non-standard file system hierarchy enforced by the store.  Sometimes the tests won't run properly.  (They can be skipped but this is not recommended.)  Other times the resulting package won't be reproducible."
msgstr "Leider ist es für manche Anwendungen schwierig, Pakete zu schreiben. Manchmal brauchen sie einen Patch, um mit vom Standard abweichenden Dateisystemhierarchien klarzukommen, wie sie der Store erforderlich macht. Manchmal funktionieren die Tests nicht richtig. (Man kann sie überspringen, aber man sollte nicht.) Ein andermal ist das sich ergebende Paket nicht reproduzierbar."

msgid "Should you be stuck, unable to figure out how to fix any sort of packaging issue, don't hesitate to ask the community for help."
msgstr "Wenn Sie nicht weiterkommen, weil Sie nicht wissen, wie Sie ein Problem beim Paketschreiben lösen können, dann zögern Sie nicht, die Gemeinde um Hilfe zu bitten."

msgid "See the @uref{https://guix.gnu.org/contact/, Guix homepage} for information on the mailing lists, IRC, etc."
msgstr "Siehe die @uref{https://guix.gnu.org/contact/, Homepage von Guix} für Informationen, welche Mailing-Listen, IRC-Kanäle etc.@: bereitstehen."

msgid "This tutorial was a showcase of the sophisticated package management that Guix boasts.  At this point we have mostly restricted this introduction to the @code{gnu-build-system} which is a core abstraction layer on which more advanced abstractions are based."
msgstr "Diese Anleitung hat einen Überblick über die fortgeschrittene Paketverwaltung gegeben, die Guix vorweist. Zu diesem Zeitpunkt haben wir diese Einführung größtenteils auf das @code{gnu-build-system} eingeschränkt, was eine zentrale Abstraktionsschicht darstellt, auf der weitere Abstraktionen aufbauen."

msgid "Where do we go from here? Next we ought to dissect the innards of the build system by removing all abstractions, using the @code{trivial-build-system}: this should give us a thorough understanding of the process before investigating some more advanced packaging techniques and edge cases."
msgstr "Wie geht es nun weiter? Als Nächstes müssten wir das Erstellungssystem in seine Bestandteile zerlegen, um einen Einblick ganz ohne Abstraktionen zu bekommen. Das bedeutet, wir müssten das @code{trivial-build-system} analysieren. Dadurch sollte ein gründliches Verständnis des Prozesses vermittelt werden, bevor wir höher entwickelte Paketierungstechniken und Randfälle untersuchen."

msgid "Other features worth exploring are the interactive editing and debugging capabilities of Guix provided by the Guile REPL@."
msgstr "Andere Funktionalitäten, die es wert sind, erkundet zu werden, sind Guix’ Funktionalitäten zum interaktiven Editieren und zur Fehlersuche, die die REPL von Guile darbietet."

msgid "Those fancy features are completely optional and can wait; now is a good time to take a well-deserved break.  With what we've introduced here you should be well armed to package lots of programs.  You can get started right away and hopefully we will see your contributions soon!"
msgstr "Diese eindrucksvollen Funktionalitäten sind völlig optional und können warten; jetzt ist die Zeit für eine wohlverdiente Pause. Mit dem Wissen, in das wir hier eingeführt haben, sollten Sie für das Paketieren vieler Programme gut gerüstet sein. Sie können gleich anfangen und hoffentlich bekommen wir bald Ihre Beiträge zu sehen!"

msgid "The @uref{https://guix.gnu.org/manual/en/html_node/Defining-Packages.html, package reference in the manual}"
msgstr "Die @uref{https://guix.gnu.org/manual/de/html_node/Pakete-definieren.html, Paketreferenz im Handbuch}"

msgid "@uref{https://gitlab.com/pjotrp/guix-notes/blob/master/HACKING.org, Pjotr’s hacking guide to GNU Guix}"
msgstr "@uref{https://gitlab.com/pjotrp/guix-notes/blob/master/HACKING.org, Pjotr’s Hacking-Leitfaden für GNU Guix}"

msgid "@uref{https://guix.gnu.org/guix-ghm-andreas-20130823.pdf, ``GNU Guix: Package without a scheme!''}, by Andreas Enge"
msgstr "@uref{https://guix.gnu.org/guix-ghm-andreas-20130823.pdf,, „GNU Guix: Package without a scheme!“} von Andreas Enge"

msgid "Guix offers a flexible language for declaratively configuring your Guix System.  This flexibility can at times be overwhelming.  The purpose of this chapter is to demonstrate some advanced configuration concepts."
msgstr "Guix stellt eine flexible Sprache bereit, um Ihr „Guix System“ auf deklarative Weise zu konfigurieren. Diese Flexibilität kann einen manchmal überwältigen. Dieses Kapitel hat den Zweck, einige fortgeschrittene Konfigurationskonzepte vorzuzeigen."

msgid "@pxref{System Configuration,,, guix, GNU Guix Reference Manual} for a complete reference."
msgstr "Siehe @ref{Systemkonfiguration,,, guix.de, Referenzhandbuch zu GNU Guix} für eine vollständige Referenz."

msgid "While the Guix manual explains auto-login one user to @emph{all} TTYs (@pxref{auto-login to TTY,,, guix, GNU Guix Reference Manual}), some might prefer a situation, in which one user is logged into one TTY with the other TTYs either configured to login different users or no one at all.  Note that one can auto-login one user to any TTY, but it is usually advisable to avoid @code{tty1}, which, by default, is used to log warnings and errors."
msgstr "Im Guix-Handbuch wird erklärt, wie man ein Benutzerkonto automatisch auf @emph{allen} TTYs anmelden lassen kann (@pxref{auto-login to TTY,,, guix.de, Referenzhandbuch zu GNU Guix}), aber vielleicht wäre es Ihnen lieber, ein Benutzerkonto an genau einem TTY anzumelden und die anderen TTYs so zu konfigurieren, dass entweder andere Benutzer oder gar niemand angemeldet wird. Beachten Sie, dass man auf jedem TTY automatisch jemanden anmelden kann, aber meistens will man @code{tty1} in Ruhe lassen, weil dorthin nach Voreinstellung Warnungs- und Fehlerprotokolle ausgegeben werden."

msgid "Here is how one might set up auto login for one user to one tty:"
msgstr "Um eine Benutzerin auf einem einzelnen TTY automatisch anzumelden, schreibt man:"

msgid ""
"(define (auto-login-to-tty config tty user)\n"
"  (if (string=? tty (mingetty-configuration-tty config))\n"
"        (mingetty-configuration\n"
"         (inherit config)\n"
"         (auto-login user))\n"
"        config))\n"
"\n"
msgstr ""
"(define (auto-login-to-tty config tty user)\n"
"  (if (string=? tty (mingetty-configuration-tty config))\n"
"        (mingetty-configuration\n"
"         (inherit config)\n"
"         (auto-login user))\n"
"        config))\n"
"\n"

msgid ""
"(define %my-services\n"
"  (modify-services %base-services\n"
"    ;; @dots{}\n"
"    (mingetty-service-type config =>\n"
"                           (auto-login-to-tty\n"
"                            config \"tty3\" \"alice\"))))\n"
"\n"
msgstr ""
"(define %my-services\n"
"  (modify-services %base-services\n"
"    ;; …\n"
"    (mingetty-service-type config =>\n"
"                           (auto-login-to-tty\n"
"                            config \"tty3\" \"alice\"))))\n"
"\n"

msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services %my-services))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (services %my-services))\n"

msgid "One could also @code{compose} (@pxref{Higher-Order Functions,,, guile, The Guile Reference Manual}) @code{auto-login-to-tty} to login multiple users to multiple ttys."
msgstr "Mit Hilfe von @code{compose} (siehe @ref{Higher-Order Functions,,, guile, das Referenzhandbuch zu GNU Guile}) kann man etwas wie @code{auto-login-to-tty} mehrfach angeben, um mehrere Nutzerkonten auf verschiedenen TTYs anzumelden."

msgid "Finally, here is a note of caution.  Setting up auto login to a TTY, means that anyone can turn on your computer and run commands as your regular user.  However, if you have an encrypted root partition, and thus already need to enter a passphrase when the system boots, auto-login might be a convenient option."
msgstr "Zum Schluss aber noch eine Warnung. Wenn Sie jemanden auf einem TTY automatisch anmelden lassen, kann jeder einfach Ihren Rechner anschalten und dann Befehle in deren Namen ausführen. Haben Sie Ihr Wurzeldateisystem auf einer verschlüsselten Partition, müsste man dafür erst einmal das Passwort eingeben, wenn das System startet. Dann wäre automatisches Anmelden vielleicht bequem."

msgid "Guix is, at its core, a source based distribution with substitutes (@pxref{Substitutes,,, guix, GNU Guix Reference Manual}), and as such building packages from their source code is an expected part of regular package installations and upgrades.  Given this starting point, it makes sense that efforts are made to reduce the amount of time spent compiling packages, and recent changes and upgrades to the building and distribution of substitutes continues to be a topic of discussion within Guix."
msgstr "Im Kern ist Guix eine quellcodebasierte Distribution mit Substituten (siehe @ref{Substitute,,, guix.de, Referenzhandbuch zu GNU Guix}), daher ist das Erstellen von Paketen aus ihrem Quellcode heraus genauso vorgesehen wie die normale Installation und Aktualisierung von Paketen. Von diesem Standpunkt ist es sinnvoll, zu versuchen, den Zeitaufwand für das Kompilieren von Paketen zu senken, und kürzliche Neuerungen sowie Verbesserungen beim Erstellen und Verteilen von Substituten bleiben ein Diskussionsthema innerhalb von Guix."

msgid "The kernel, while not requiring an overabundance of RAM to build, does take a rather long time on an average machine.  The official kernel configuration, as is the case with many GNU/Linux distributions, errs on the side of inclusiveness, and this is really what causes the build to take such a long time when the kernel is built from source."
msgstr "Der Kernel braucht zwar keine übermäßigen Mengen an Arbeitsspeicher beim Erstellen, jedoch jede Menge Zeit auf einer durchschnittlichen Maschine. Die offizielle Konfiguration des Kernels umfasst, wie bei anderen GNU/Linux-Distributionen auch, besser zu viel als zu wenig. Das ist der eigentliche Grund, warum seine Erstellung so lange dauert, wenn man den Kernel aus dem Quellcode heraus erstellt."

msgid "The Linux kernel, however, can also just be described as a regular old package, and as such can be customized just like any other package.  The procedure is a little bit different, although this is primarily due to the nature of how the package definition is written."
msgstr "Man kann den Linux-Kernel jedoch auch als ganz normales Paket beschreiben, das genau wie jedes andere Paket angepasst werden kann. Der Vorgang ist ein klein wenig anders, aber das liegt hauptsächlich an der Art, wie die Paketdefinition geschrieben ist."

msgid "The @code{linux-libre} kernel package definition is actually a procedure which creates a package."
msgstr "Die @code{linux-libre}-Kernelpaketdefinition ist tatsächlich eine Prozedur, die ein Paket liefert."

msgid ""
"(define* (make-linux-libre* version gnu-revision source supported-systems\n"
"                            #:key\n"
"                            (extra-version #f)\n"
"                            ;; A function that takes an arch and a variant.\n"
"                            ;; See kernel-config for an example.\n"
"                            (configuration-file #f)\n"
"                            (defconfig \"defconfig\")\n"
"                            (extra-options (default-extra-linux-options version)))\n"
"  ...)\n"
msgstr ""
"(define* (make-linux-libre* version gnu-revision source supported-systems\n"
"                            #:key\n"
"                            (extra-version #f)\n"
"                            ;; Eine Funktion, die eine Architektur und eine\n"
"                            ;; Variante nimmt. Siehe kernel-config als Beispiel.\n"
"                            (configuration-file #f)\n"
"                            (defconfig \"defconfig\")\n"
"                            (extra-options (default-extra-linux-options version)))\n"
"  …)\n"

msgid "The current @code{linux-libre} package is for the 5.15.x series, and is declared like this:"
msgstr "Das momentane @code{linux-libre}-Paket zielt ab auf die 5.15.x-Serie und ist wie folgt deklariert:"

msgid ""
"(define-public linux-libre-5.15\n"
"  (make-linux-libre* linux-libre-5.15-version\n"
"                     linux-libre-5.15-gnu-revision\n"
"                     linux-libre-5.15-source\n"
"                     '(\"x86_64-linux\" \"i686-linux\" \"armhf-linux\"\n"
"                       \"aarch64-linux\" \"riscv64-linux\")\n"
"                     #:configuration-file kernel-config))\n"
msgstr ""
"(define-public linux-libre-5.15\n"
"  (make-linux-libre* linux-libre-5.15-version\n"
"                     linux-libre-5.15-gnu-revision\n"
"                     linux-libre-5.15-source\n"
"                     '(\"x86_64-linux\" \"i686-linux\" \"armhf-linux\"\n"
"                       \"aarch64-linux\" \"riscv64-linux\")\n"
"                     #:configuration-file kernel-config))\n"

msgid "Any keys which are not assigned values inherit their default value from the @code{make-linux-libre} definition.  When comparing the two snippets above, notice the code comment that refers to @code{#:configuration-file}.  Because of this, it is not actually easy to include a custom kernel configuration from the definition, but don't worry, there are other ways to work with what we do have."
msgstr "Alle Schlüssel, denen kein Wert zugewiesen wird, erben ihren Vorgabewert von der Definition von @code{make-linux-libre}. Wenn Sie die beiden Schnipsel oben vergleichen, ist anzumerken, dass sich der Code-Kommentar in ersterem auf @code{#:configuration-file} bezieht. Deswegen ist es nicht so leicht, aus der Definition heraus eine eigene Kernel-Konfiguration anhand der Definition zu schreiben, aber keine Sorge, es gibt andere Möglichkeiten, um mit dem zu arbeiten, was uns gegeben wurde."

msgid "The second way to create a custom kernel is to pass a new value to the @code{extra-options} keyword of the @code{make-linux-libre} procedure.  The @code{extra-options} keyword works with another function defined right below it:"
msgstr "Die zweite Möglichkeit, einen eigenen Kernel zu erzeugen, ist, einen neuen Wert an das @code{extra-options}-Schlüsselwort der @code{make-linux-libre}-Prozedur zu übergeben. Das @code{extra-options}-Schlüsselwort wird zusammen mit einer anderen, direkt darunter definierten Funktion benutzt:"

msgid ""
"(define (default-extra-linux-options version)\n"
"  `(;; https://lists.gnu.org/archive/html/guix-devel/2014-04/msg00039.html\n"
"   (\"CONFIG_DEVPTS_MULTIPLE_INSTANCES\" . #true)\n"
"   ;; Modules required for initrd:\n"
"   (\"CONFIG_NET_9P\" . m)\n"
"   (\"CONFIG_NET_9P_VIRTIO\" . m)\n"
"   (\"CONFIG_VIRTIO_BLK\" . m)\n"
"   (\"CONFIG_VIRTIO_NET\" . m)\n"
"   (\"CONFIG_VIRTIO_PCI\" . m)\n"
"   (\"CONFIG_VIRTIO_BALLOON\" . m)\n"
"   (\"CONFIG_VIRTIO_MMIO\" . m)\n"
"   (\"CONFIG_FUSE_FS\" . m)\n"
"   (\"CONFIG_CIFS\" . m)\n"
"   (\"CONFIG_9P_FS\" . m)))\n"
"\n"
msgstr ""
"(define (default-extra-linux-options version)\n"
"  `(;; https://lists.gnu.org/archive/html/guix-devel/2014-04/msg00039.html\n"
"   (\"CONFIG_DEVPTS_MULTIPLE_INSTANCES\" . #true)\n"
"   ;; In der initrd benötigte Module:\n"
"   (\"CONFIG_NET_9P\" . m)\n"
"   (\"CONFIG_NET_9P_VIRTIO\" . m)\n"
"   (\"CONFIG_VIRTIO_BLK\" . m)\n"
"   (\"CONFIG_VIRTIO_NET\" . m)\n"
"   (\"CONFIG_VIRTIO_PCI\" . m)\n"
"   (\"CONFIG_VIRTIO_BALLOON\" . m)\n"
"   (\"CONFIG_VIRTIO_MMIO\" . m)\n"
"   (\"CONFIG_FUSE_FS\" . m)\n"
"   (\"CONFIG_CIFS\" . m)\n"
"   (\"CONFIG_9P_FS\" . m)))\n"
"\n"

msgid ""
"(define (config->string options)\n"
"  (string-join (map (match-lambda\n"
"                      ((option . 'm)\n"
"                       (string-append option \"=m\"))\n"
"                      ((option . #true)\n"
"                       (string-append option \"=y\"))\n"
"                      ((option . #false)\n"
"                       (string-append option \"=n\")))\n"
"                    options)\n"
"               \"\\n\"))\n"
msgstr ""
"(define (config->string options)\n"
"  (string-join (map (match-lambda\n"
"                      ((option . 'm)\n"
"                       (string-append option \"=m\"))\n"
"                      ((option . #true)\n"
"                       (string-append option \"=y\"))\n"
"                      ((option . #false)\n"
"                       (string-append option \"=n\")))\n"
"                    options)\n"
"               \"\\n\"))\n"

msgid "And in the custom configure script from the `make-linux-libre` package:"
msgstr "Und im eigenen configure-Skript des „make-linux-libre“-Pakets:"

msgid ""
";; Appending works even when the option wasn't in the\n"
";; file.  The last one prevails if duplicated.\n"
"(let ((port (open-file \".config\" \"a\"))\n"
"      (extra-configuration ,(config->string extra-options)))\n"
"  (display extra-configuration port)\n"
"  (close-port port))\n"
"\n"
msgstr ""
";; Anhängen an die Datei ist wirksam, egal ob die Option in der Datei\n"
";; stand. Es zählt das letzte Vorkommen.\n"
"(let ((port (open-file \".config\" \"a\"))\n"
"      (extra-configuration ,(config->string extra-options)))\n"
"  (display extra-configuration port)\n"
"  (close-port port))\n"
"\n"

msgid "(invoke \"make\" \"oldconfig\")\n"
msgstr "(invoke \"make\" \"oldconfig\")\n"

msgid "So by not providing a configuration-file the @file{.config} starts blank, and then we write into it the collection of flags that we want.  Here's another custom kernel:"
msgstr "Indem wir also kein „configuration-file“ mitgeben, ist @file{.config} anfangs leer und danach schreiben wir dort die Sammlung der gewünschten Optionen („Flags“) hinein. Hier ist noch ein eigener Kernel:"

msgid ""
"(define %macbook41-full-config\n"
"  (append %macbook41-config-options\n"
"          %file-systems\n"
"          %efi-support\n"
"          %emulation\n"
"          ((@@@@ (gnu packages linux) default-extra-linux-options) version)))\n"
"\n"
msgstr ""
"(define %macbook41-full-config\n"
"  (append %macbook41-config-options\n"
"          %file-systems\n"
"          %efi-support\n"
"          %emulation\n"
"          ((@@@@ (gnu packages linux) default-extra-linux-options) version)))\n"
"\n"

msgid ""
"(define-public linux-libre-macbook41\n"
"  ;; XXX: Access the internal 'make-linux-libre*' procedure, which is\n"
"  ;; private and unexported, and is liable to change in the future.\n"
"  ((@@@@ (gnu packages linux) make-linux-libre*)\n"
"   (@@@@ (gnu packages linux) linux-libre-version)\n"
"   (@@@@ (gnu packages linux) linux-libre-gnu-revision)\n"
"   (@@@@ (gnu packages linux) linux-libre-source)\n"
"   '(\"x86_64-linux\")\n"
"   #:extra-version \"macbook41\"\n"
"   #:extra-options %macbook41-config-options))\n"
msgstr ""
"(define-public linux-libre-macbook41\n"
"  ;; XXX: Auf die interne 'make-linux-libre*'-Prozedur zugreifen, welche privat\n"
"  ;; ist und nicht exportiert, des Weiteren kann sie sich in Zukunft ändern.\n"
"  ((@@@@ (gnu packages linux) make-linux-libre*)\n"
"   (@@@@ (gnu packages linux) linux-libre-version)\n"
"   (@@@@ (gnu packages linux) linux-libre-gnu-revision)\n"
"   (@@@@ (gnu packages linux) linux-libre-source)\n"
"   '(\"x86_64-linux\")\n"
"   #:extra-version \"macbook41\"\n"
"   #:extra-options %macbook41-config-options))\n"

msgid "In the above example @code{%file-systems} is a collection of flags enabling different file system support, @code{%efi-support} enables EFI support and @code{%emulation} enables a x86_64-linux machine to act in 32-bit mode also.  The @code{default-extra-linux-options} procedure is the one defined above, which had to be used to avoid losing the default configuration options of the @code{extra-options} keyword."
msgstr "Im obigen Beispiel ist @code{%file-systems} eine Sammlung solcher „Flags“, mit denen Unterstützung für verschiedene Dateisysteme aktiviert wird, @code{%efi-support} aktiviert Unterstützung für EFI und @code{%emulation} ermöglicht es einer x86_64-linux-Maschine, auch im 32-Bit-Modus zu arbeiten. Die Prozedur @code{default-extra-linux-options} ist die oben definierte, die hinzugefügt werden musste, um die vorgegebenen Konfigurationsoptionen für das @code{extra-options}-Schlüsselwort zu behalten."

msgid "This all sounds like it should be doable, but how does one even know which modules are required for a particular system? Two places that can be helpful in trying to answer this question is the @uref{https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Kernel, Gentoo Handbook} and the @uref{https://www.kernel.org/doc/html/latest/admin-guide/README.html?highlight=localmodconfig, documentation from the kernel itself}.  From the kernel documentation, it seems that @code{make localmodconfig} is the command we want."
msgstr "All das klingt machbar, aber woher weiß man überhaupt, welche Module für ein bestimmtes System nötig sind? Es gibt zwei hilfreiche Anlaufstellen, zum einen das @uref{https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Kernel, Gentoo-Handbuch}, zum anderen die @uref{https://www.kernel.org/doc/html/latest/admin-guide/README.html?highlight=localmodconfig, Dokumentation des Kernels selbst}. Aus der Kernel-Dokumentation erfahren wir, dass @code{make localmodconfig} der Befehl sein könnte, den wir wollen."

msgid "In order to actually run @code{make localmodconfig} we first need to get and unpack the kernel source code:"
msgstr "Um @code{make localmodconfig} auch tatsächlich ausführen zu können, müssen wir zunächst den Quellcode des Kernels holen und entpacken:"

msgid "tar xf $(guix build linux-libre --source)\n"
msgstr "tar xf $(guix build linux-libre --source)\n"

msgid "Once inside the directory containing the source code run @code{touch .config} to create an initial, empty @file{.config} to start with.  @code{make localmodconfig} works by seeing what you already have in @file{.config} and letting you know what you're missing.  If the file is blank then you're missing everything.  The next step is to run:"
msgstr "Sobald wir im Verzeichnis mit dem Quellcode sind, führen Sie @code{touch .config} aus, um mit einer ersten, leeren @file{.config} anzufangen. @code{make localmodconfig} funktioniert so, dass angeschaut wird, was bereits in Ihrer @file{.config} steht, und Ihnen mitgeteilt wird, was Ihnen noch fehlt. Wenn die Datei leer bleibt, fehlt eben alles. Der nächste Schritt ist, das hier auszuführen:"

msgid "guix shell -D linux-libre -- make localmodconfig\n"
msgstr "guix shell -D linux-libre -- make localmodconfig\n"

msgid "and note the output.  Do note that the @file{.config} file is still empty.  The output generally contains two types of warnings.  The first start with \"WARNING\" and can actually be ignored in our case.  The second read:"
msgstr "und uns die Ausgabe davon anzuschauen. Beachten Sie, dass die @file{.config}-Datei noch immer leer ist. Die Ausgabe enthält im Allgemeinen zwei Arten von Warnungen. Am Anfang der ersten steht „WARNING“ und in unserem Fall können wir sie tatsächlich ignorieren. Bei der zweiten heißt es:"

msgid "module pcspkr did not have configs CONFIG_INPUT_PCSPKR\n"
msgstr "module pcspkr did not have configs CONFIG_INPUT_PCSPKR\n"

msgid "For each of these lines, copy the @code{CONFIG_XXXX_XXXX} portion into the @file{.config} in the directory, and append @code{=m}, so in the end it looks like this:"
msgstr "Für jede solche Zeile kopieren Sie den @code{CONFIG_XXXX_XXXX}-Teil in die @file{.config} im selben Verzeichnis und hängen @code{=m} an, damit es am Ende so aussieht:"

msgid ""
"CONFIG_INPUT_PCSPKR=m\n"
"CONFIG_VIRTIO=m\n"
msgstr ""
"CONFIG_INPUT_PCSPKR=m\n"
"CONFIG_VIRTIO=m\n"

msgid "After copying all the configuration options, run @code{make localmodconfig} again to make sure that you don't have any output starting with ``module''.  After all of these machine specific modules there are a couple more left that are also needed.  @code{CONFIG_MODULES} is necessary so that you can build and load modules separately and not have everything built into the kernel.  @code{CONFIG_BLK_DEV_SD} is required for reading from hard drives.  It is possible that there are other modules which you will need."
msgstr "Nachdem Sie alle Konfigurationsoptionen kopiert haben, führen Sie noch einmal @code{make localmodconfig} aus, um sicherzugehen, dass es keine Ausgaben mehr gibt, deren erstes Wort „module“ ist. Zusätzlich zu diesen maschinenspezifischen Modulen gibt es noch ein paar mehr, die Sie auch brauchen. @code{CONFIG_MODULES} brauchen Sie, damit Sie Module getrennt erstellen und laden können und nicht alles im Kernel eingebaut sein muss. Sie brauchen auch @code{CONFIG_BLK_DEV_SD}, um von Festplatten lesen zu können. Möglicherweise gibt es auch sonst noch Module, die Sie brauchen werden."

msgid "This post does not aim to be a guide to configuring your own kernel however, so if you do decide to build a custom kernel you'll have to seek out other guides to create a kernel which is just right for your needs."
msgstr "Die Absicht hinter dem hier Niedergeschriebenen ist @emph{nicht}, eine Anleitung zum Konfigurieren eines eigenen Kernels zu sein. Wenn Sie also vorhaben, den Kernel an Ihre ganz eigenen Bedürfnisse anzupassen, werden Sie in anderen Anleitungen fündig."

msgid "The second way to setup the kernel configuration makes more use of Guix's features and allows you to share configuration segments between different kernels.  For example, all machines using EFI to boot have a number of EFI configuration flags that they need.  It is likely that all the kernels will share a list of file systems to support.  By using variables it is easier to see at a glance what features are enabled and to make sure you don't have features in one kernel but missing in another."
msgstr "Die zweite Möglichkeit, die Kernel-Konfiguration einzurichten, benutzt mehr von Guix’ Funktionalitäten und sie ermöglicht es Ihnen, Gemeinsamkeiten von Konfigurationen zwischen verschiedenen Kernels zu teilen. Zum Beispiel wird eine Reihe von EFI-Konfigurationsoptionen von allen Maschinen, die EFI benutzen, benötigt. Wahrscheinlich haben all diese Kernels eine Schnittmenge zu unterstützender Dateisysteme. Indem Sie Variable benutzen, können Sie leicht auf einen Schlag sehen, welche Funktionalitäten aktiviert sind, und gleichzeitig sicherstellen, dass Ihnen nicht Funktionalitäten des einen Kernels im anderen fehlen."

msgid "Left undiscussed however, is Guix's initrd and its customization.  It is likely that you'll need to modify the initrd on a machine using a custom kernel, since certain modules which are expected to be built may not be available for inclusion into the initrd."
msgstr "Was wir hierbei nicht erläutert haben, ist, wie Guix’ initrd und dessen Anpassung funktioniert. Wahrscheinlich werden Sie auf einer Maschine mit eigenem Kernel die initrd verändern müssen, weil sonst versucht wird, bestimmte Module in die initrd einzubinden, die Sie gar nicht erstellen haben lassen."

msgid "Historically, Guix System is centered around an @code{operating-system} structure.  This structure contains various fields ranging from the bootloader and kernel declaration to the services to install."
msgstr "In der Vergangenheit drehte sich in Guix System alles um eine @code{operating-system}-Struktur. So eine Struktur enthält vielerlei Felder vom Bootloader und der Deklaration des Kernels bis hin zu den Diensten, die installiert werden sollen."

msgid "Depending on the target machine, that can go from a standard @code{x86_64} machine to a small ARM single board computer such as the Pine64, the image constraints can vary a lot.  The hardware manufacturers will impose different image formats with various partition sizes and offsets."
msgstr "Aber je nach Zielmaschine@tie{}– diese kann alles von einer normalen @code{x86_64}-Maschine sein bis zu einem kleinen ARM-Einplatinenrechner wie dem Pine64@tie{}–, können die für ein Abbild geltenden Einschränkungen sehr unterschiedlich sein. Die Hardwarehersteller ordnen verschiedene Abbildformate an mit unterschiedlich versetzten unterschiedlich großen Partitionen."

msgid "To create images suitable for all those machines, a new abstraction is necessary: that's the goal of the @code{image} record.  This record contains all the required information to be transformed into a standalone image, that can be directly booted on any target machine."
msgstr "Um für jede dieser Arten von Maschinen geeignete Abbilder zu erzeugen, brauchen wir eine neue Abstraktion. Dieses Ziel verfolgen wir mit dem @code{image}-Verbund. Ein Verbundsobjekt enthält alle nötigen Informationen, um daraus ein eigenständiges Abbild auf die Zielmaschine zu bringen. Es ist direkt startfähig von jeder solchen Zielmaschine."

msgid ""
"(define-record-type* <image>\n"
"  image make-image\n"
"  image?\n"
"  (name               image-name ;symbol\n"
"                      (default #f))\n"
"  (format             image-format) ;symbol\n"
"  (target             image-target\n"
"                      (default #f))\n"
"  (size               image-size  ;size in bytes as integer\n"
"                      (default 'guess))\n"
"  (operating-system   image-operating-system  ;<operating-system>\n"
"                      (default #f))\n"
"  (partitions         image-partitions ;list of <partition>\n"
"                      (default '()))\n"
"  (compression?       image-compression? ;boolean\n"
"                      (default #t))\n"
"  (volatile-root?     image-volatile-root? ;boolean\n"
"                      (default #t))\n"
"  (substitutable?     image-substitutable? ;boolean\n"
"                      (default #t)))\n"
msgstr ""
"(define-record-type* <image>\n"
"  image make-image\n"
"  image?\n"
"  (name               image-name ;Symbol\n"
"                      (default #f))\n"
"  (format             image-format) ;Symbol\n"
"  (target             image-target\n"
"                      (default #f))\n"
"  (size               image-size  ;Größe in Bytes als ganze Zahl\n"
"                      (default 'guess)) ;Vorgabe: automatisch bestimmen\n"
"  (operating-system   image-operating-system  ;<operating-system>\n"
"                      (default #f))\n"
"  (partitions         image-partitions ;Liste von <partition>\n"
"                      (default '()))\n"
"  (compression?       image-compression? ;Boolescher Ausdruck\n"
"                      (default #t))\n"
"  (volatile-root?     image-volatile-root? ;Boolescher Ausdruck\n"
"                      (default #t))\n"
"  (substitutable?     image-substitutable? ;Boolescher Ausdruck\n"
"                      (default #t)))\n"

msgid "This record contains the operating-system to instantiate. The @code{format} field defines the image type and can be @code{efi-raw}, @code{qcow2} or @code{iso9660} for instance. In the future, it could be extended to @code{docker} or other image types."
msgstr "In einem Verbundsobjekt davon steht auch das zu instanziierende Betriebssystem (in @code{operating-system}). Im Feld @code{format} steht, was der Abbildtyp („image type“) ist, zum Beispiel @code{efi-raw}, @code{qcow2} oder @code{iso9660}. In Zukunft könnten die Möglichkeiten auf @code{docker} oder andere Abbildtypen erweitert werden."

msgid "A new directory in the Guix sources is dedicated to images definition. For now there are four files:"
msgstr "Ein neues Verzeichnis im Guix-Quellbaum wurde Abbilddefinitionen gewidmet. Zurzeit gibt es vier Dateien darin:"

msgid "gnu/system/images/hurd.scm"
msgstr "gnu/system/images/hurd.scm"

msgid "gnu/system/images/pine64.scm"
msgstr "gnu/system/images/pine64.scm"

msgid "gnu/system/images/novena.scm"
msgstr "gnu/system/images/novena.scm"

msgid "gnu/system/images/pinebook-pro.scm"
msgstr "gnu/system/images/pinebook-pro.scm"

msgid "Let's have a look to @file{pine64.scm}. It contains the @code{pine64-barebones-os} variable which is a minimal definition of an operating-system dedicated to the @b{Pine A64 LTS} board."
msgstr "Schauen wir uns @file{pine64.scm} an. Es enthält die Variable @code{pine64-barebones-os}, bei der es sich um eine minimale Definition eines Betriebssystems handelt, die auf Platinen der Art @b{Pine A64 LTS} ausgerichtet ist."

msgid ""
"(define pine64-barebones-os\n"
"  (operating-system\n"
"   (host-name \"vignemale\")\n"
"   (timezone \"Europe/Paris\")\n"
"   (locale \"en_US.utf8\")\n"
"   (bootloader (bootloader-configuration\n"
"                (bootloader u-boot-pine64-lts-bootloader)\n"
"                (targets '(\"/dev/vda\"))))\n"
"   (initrd-modules '())\n"
"   (kernel linux-libre-arm64-generic)\n"
"   (file-systems (cons (file-system\n"
"                        (device (file-system-label \"my-root\"))\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                       %base-file-systems))\n"
"   (services (cons (service agetty-service-type\n"
"                            (agetty-configuration\n"
"                             (extra-options '(\"-L\")) ; no carrier detect\n"
"                             (baud-rate \"115200\")\n"
"                             (term \"vt100\")\n"
"                             (tty \"ttyS0\")))\n"
"                   %base-services))))\n"
msgstr ""
"(define pine64-barebones-os\n"
"  (operating-system\n"
"   (host-name \"vignemale\")\n"
"   (timezone \"Europe/Paris\")\n"
"   (locale \"en_US.utf8\")\n"
"   (bootloader (bootloader-configuration\n"
"                (bootloader u-boot-pine64-lts-bootloader)\n"
"                (targets '(\"/dev/vda\"))))\n"
"   (initrd-modules '())\n"
"   (kernel linux-libre-arm64-generic)\n"
"   (file-systems (cons (file-system\n"
"                        (device (file-system-label \"my-root\"))\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                       %base-file-systems))\n"
"   (services (cons (service agetty-service-type\n"
"                            (agetty-configuration\n"
"                             (extra-options '(\"-L\")) ;kein Carrier Detect\n"
"                             (baud-rate \"115200\")\n"
"                             (term \"vt100\")\n"
"                             (tty \"ttyS0\")))\n"
"                   %base-services))))\n"

msgid "The @code{kernel} and @code{bootloader} fields are pointing to packages dedicated to this board."
msgstr "Die Felder @code{kernel} und @code{bootloader} verweisen auf platinenspezifische Pakete."

msgid "Right below, the @code{pine64-image-type} variable is also defined."
msgstr "Direkt darunter wird auch die Variable @code{pine64-image-type} definiert."

msgid ""
"(define pine64-image-type\n"
"  (image-type\n"
"   (name 'pine64-raw)\n"
"   (constructor (cut image-with-os arm64-disk-image <>))))\n"
msgstr ""
"(define pine64-image-type\n"
"  (image-type\n"
"   (name 'pine64-raw)\n"
"   (constructor (cut image-with-os arm64-disk-image <>))))\n"

msgid "It's using a record we haven't talked about yet, the @code{image-type} record, defined this way:"
msgstr "Sie benutzt einen Verbundstyp, über den wir noch nicht gesprochen haben, den @code{image-type}-Verbund. Er ist wie folgt definiert:"

msgid ""
"(define-record-type* <image-type>\n"
"  image-type make-image-type\n"
"  image-type?\n"
"  (name           image-type-name) ;symbol\n"
"  (constructor    image-type-constructor)) ;<operating-system> -> <image>\n"
msgstr ""
"(define-record-type* <image-type>\n"
"  image-type make-image-type\n"
"  image-type?\n"
"  (name           image-type-name) ;Symbol\n"
"  (constructor    image-type-constructor)) ;<operating-system> -> <image>\n"

msgid "The main purpose of this record is to associate a name to a procedure transforming an @code{operating-system} to an image.  To understand why it is necessary, let's have a look to the command producing an image from an @code{operating-system} configuration file:"
msgstr "Der Hauptzweck dieses Verbunds ist, einer Prozedur, die ein @code{operating-system} in ein @code{image}-Abbild umwandelt, einen Namen zu geben. Um den Bedarf dafür nachzuvollziehen, schauen wir uns den Befehl an, mit dem ein Abbild aus einer @code{operating-system}-Konfigurationsdatei erzeugt wird:"

msgid "guix system image my-os.scm\n"
msgstr "guix system image my-os.scm\n"

msgid "This command expects an @code{operating-system} configuration but how should we indicate that we want an image targeting a Pine64 board? We need to provide an extra information, the @code{image-type}, by passing the @code{--image-type} or @code{-t} flag, this way:"
msgstr "Dieser Befehl erwartet eine @code{operating-system}-Konfiguration, doch wie geben wir an, dass wir ein Abbild für einen Pine64-Rechner möchten? Wir müssen zusätzliche Informationen mitgeben, nämlich den Abbildtyp, @code{image-type}, indem wir die Befehlszeilenoption @code{--image-type} oder @code{-t} übergeben, und zwar so:"

msgid "guix system image --image-type=pine64-raw my-os.scm\n"
msgstr "guix system image --image-type=pine64-raw my-os.scm\n"

msgid "This @code{image-type} parameter points to the @code{pine64-image-type} defined above. Hence, the @code{operating-system} declared in @code{my-os.scm} will be applied the @code{(cut image-with-os arm64-disk-image <>)} procedure to turn it into an image."
msgstr "Der Parameter @code{image-type} verweist auf den oben definierten @code{pine64-image-type}. Dadurch wird die Prozedur @code{(cut image-with-os arm64-disk-image <>)} auf das in @code{my-os.scm} deklarierte @code{operating-system} angewandt und macht es zu einem @code{image}-Abbild."

msgid "The resulting image looks like:"
msgstr "Es ergibt sich ein Abbild wie dieses:"

msgid ""
"(image\n"
" (format 'disk-image)\n"
" (target \"aarch64-linux-gnu\")\n"
" (operating-system my-os)\n"
" (partitions\n"
"  (list (partition\n"
"         (inherit root-partition)\n"
"         (offset root-offset)))))\n"
msgstr ""
"(image\n"
" (format 'disk-image)\n"
" (target \"aarch64-linux-gnu\")\n"
" (operating-system my-os)\n"
" (partitions\n"
"  (list (partition\n"
"         (inherit root-partition)\n"
"         (offset root-offset)))))\n"

msgid "which is the aggregation of the @code{operating-system} defined in @code{my-os.scm} to the @code{arm64-disk-image} record."
msgstr "Das ist das Aggregat aus dem in @code{my-os.scm} definierten @code{operating-system} und dem @code{arm64-disk-image}-Verbundsobjekt."

msgid "But enough Scheme madness. What does this image API bring to the Guix user?"
msgstr "Aber genug vom Scheme-Wahnsinn. Was nützt die Image-Schnittstelle dem Nutzer von Guix?"

msgid "One can run:"
msgstr "Sie können das ausführen:"

msgid ""
"mathieu@@cervin:~$ guix system --list-image-types\n"
"The available image types are:\n"
"\n"
msgstr ""
"mathieu@@cervin:~$ guix system --list-image-types\n"
"Die verfügbaren Abbildtypen sind:\n"
"\n"

msgid ""
"   - unmatched-raw\n"
"   - rock64-raw\n"
"   - pinebook-pro-raw\n"
"   - pine64-raw\n"
"   - novena-raw\n"
"   - hurd-raw\n"
"   - hurd-qcow2\n"
"   - qcow2\n"
"   - iso9660\n"
"   - uncompressed-iso9660\n"
"   - tarball\n"
"   - efi-raw\n"
"   - mbr-raw\n"
"   - docker\n"
"   - wsl2\n"
"   - raw-with-offset\n"
"   - efi32-raw\n"
msgstr ""
"   - unmatched-raw\n"
"   - rock64-raw\n"
"   - pinebook-pro-raw\n"
"   - pine64-raw\n"
"   - novena-raw\n"
"   - hurd-raw\n"
"   - hurd-qcow2\n"
"   - qcow2\n"
"   - iso9660\n"
"   - uncompressed-iso9660\n"
"   - tarball\n"
"   - efi-raw\n"
"   - mbr-raw\n"
"   - docker\n"
"   - wsl2\n"
"   - raw-with-offset\n"
"   - efi32-raw\n"

msgid "and by writing an @code{operating-system} file based on @code{pine64-barebones-os}, you can customize your image to your preferences in a file (@file{my-pine-os.scm}) like this:"
msgstr "und indem Sie eine Betriebssystemkonfigurationsdatei mit einem auf @code{pine64-barebones-os} aufbauenden @code{operating-system} schreiben, können Sie Ihr Abbild nach Ihren Wünschen anpassen in einer Datei, sagen wir @file{my-pine-os.scm}:"

msgid ""
"(use-modules (gnu services linux)\n"
"             (gnu system images pine64))\n"
"\n"
msgstr ""
"(use-modules (gnu services linux)\n"
"             (gnu system images pine64))\n"
"\n"

msgid ""
"(let ((base-os pine64-barebones-os))\n"
"  (operating-system\n"
"    (inherit base-os)\n"
"    (timezone \"America/Indiana/Indianapolis\")\n"
"    (services\n"
"     (cons\n"
"      (service earlyoom-service-type\n"
"               (earlyoom-configuration\n"
"                (prefer-regexp \"icecat|chromium\")))\n"
"      (operating-system-user-services base-os)))))\n"
msgstr ""
"(let ((base-os pine64-barebones-os))\n"
"  (operating-system\n"
"    (inherit base-os)\n"
"    (timezone \"America/Indiana/Indianapolis\")\n"
"    (services\n"
"     (cons\n"
"      (service earlyoom-service-type\n"
"               (earlyoom-configuration\n"
"                (prefer-regexp \"icecat|chromium\")))\n"
"      (operating-system-user-services base-os)))))\n"

msgid "run:"
msgstr "Führen Sie aus:"

msgid "guix system image --image-type=pine64-raw my-pine-os.scm\n"
msgstr "guix system image --image-type=pine64-raw my-pine-os.scm\n"

msgid "or,"
msgstr "oder"

msgid "guix system image --image-type=hurd-raw my-hurd-os.scm\n"
msgstr "guix system image --image-type=hurd-raw my-hurd-os.scm\n"

msgid "to get an image that can be written directly to a hard drive and booted from."
msgstr "und Sie bekommen ein Abbild, das Sie direkt auf eine Festplatte kopieren und starten können."

msgid "Without changing anything to @code{my-hurd-os.scm}, calling:"
msgstr "Ohne irgendetwas an @code{my-hurd-os.scm} zu ändern, bewirkt ein Aufruf"

msgid "guix system image --image-type=hurd-qcow2 my-hurd-os.scm\n"
msgstr "guix system image --image-type=hurd-qcow2 my-hurd-os.scm\n"

msgid "will instead produce a Hurd QEMU image."
msgstr "dass stattdessen ein Hurd-Abbild für QEMU erzeugt wird."

msgid "2FA, two-factor authentication"
msgstr "2FA, Zwei-Faktor-Authentisierung"

msgid "U2F, Universal 2nd Factor"
msgstr "U2F, Universal 2nd Factor"

msgid "security key, configuration"
msgstr "Sicherheitsschlüssel, einrichten"

msgid "The use of security keys can improve your security by providing a second authentication source that cannot be easily stolen or copied, at least for a remote adversary (something that you have), to the main secret (a passphrase -- something that you know), reducing the risk of impersonation."
msgstr "Indem Sie Sicherheitsschlüssel einsetzen, können Sie sich besser absichern. Diese stellen eine zweite Bestätigung Ihrer Identität dar, die nicht leicht gestohlen oder kopiert werden kann, zumindest wenn der Angreifer nur Fernzugriff ergattert hat. Sicherheitsschlüssel sind etwas, was Sie haben, dagegen ist ein Geheimnis (eine Passphrase) etwas, was Sie wissen. So sinkt das Risiko, dass sich jemand Fremdes als Sie ausgibt."

msgid "The example configuration detailed below showcases what minimal configuration needs to be made on your Guix System to allow the use of a Yubico security key.  It is hoped the configuration can be useful for other security keys as well, with minor adjustments."
msgstr "Mit der nachfolgenden Beispielkonfiguration wird vorgeführt, wie Sie mit kleinstem Konfigurationsaufwand auf Ihrem Guix System einen Yubico-Sicherheitsschlüssel einsetzen können. Wir hoffen, die Konfiguration klappt auch bei anderen Sicherheitsschlüsseln, mit geringen Anpassungen."

msgid "Configuration for use as a two-factor authenticator (2FA)"
msgstr "Einrichten einer Zwei-Faktor-Authentisierung (2FA)"

msgid "To be usable, the udev rules of the system should be extended with key-specific rules.  The following shows how to extend your udev rules with the @file{lib/udev/rules.d/70-u2f.rules} udev rule file provided by the @code{libfido2} package from the @code{(gnu packages security-token)} module and add your user to the @samp{\"plugdev\"} group it uses:"
msgstr "Dazu müssen Sie die udev-Regeln des Systems um auf Ihren Sicherheitsschlüssel abgestimmte Regeln erweitern. Im Folgenden wird gezeigt, wie Sie Ihre udev-Regeln um die Regeldatei @file{lib/udev/rules.d/70-u2f.rules} aus dem @code{libfido2}-Paket im Modul @code{(gnu packages security-token)} erweitern und Ihren Benutzer zur zugehörigen Gruppe @samp{\"plugdev\"} hinzufügen:"

msgid ""
"(use-package-modules ... security-token ...)\n"
"...\n"
"(operating-system\n"
" ...\n"
" (users (cons* (user-account\n"
"               (name \"your-user\")\n"
"               (group \"users\")\n"
"               (supplementary-groups\n"
"\t\t'(\"wheel\" \"netdev\" \"audio\" \"video\"\n"
"                  \"plugdev\"))           ;<- added system group\n"
"               (home-directory \"/home/your-user\"))\n"
"              %base-user-accounts))\n"
" ...\n"
" (services\n"
"  (cons*\n"
"   ...\n"
"   (udev-rules-service 'fido2 libfido2 #:groups '(\"plugdev\")))))\n"
msgstr ""
"(use-package-modules … security-token …)\n"
"…\n"
"(operating-system\n"
" …\n"
" (users (cons* (user-account\n"
"               (name \"ihr-benutzer\")\n"
"               (group \"users\")\n"
"               (supplementary-groups\n"
"\t\t'(\"wheel\" \"netdev\" \"audio\" \"video\"\n"
"                  \"plugdev\"))           ;<- Systemgruppe hinzufügen\n"
"               (home-directory \"/home/ihr-benutzer\"))\n"
"              %base-user-accounts))\n"
" …\n"
" (services\n"
"  (cons*\n"
"   …\n"
"   (udev-rules-service 'fido2 libfido2 #:groups '(\"plugdev\")))))\n"

msgid "After re-configuring your system and re-logging in your graphical session so that the new group is in effect for your user, you can verify that your key is usable by launching:"
msgstr "Rekonfigurieren Sie Ihr System. Danach melden Sie sich neu an zu einer grafischen Sitzung, damit sich die neue Gruppe Ihres Benutzers auswirken kann. Sie können jetzt prüfen, ob Ihr Sicherheitsschlüssel einsatzbereit ist, indem Sie dies starten:"

msgid "guix shell ungoogled-chromium -- chromium chrome://settings/securityKeys\n"
msgstr "guix shell ungoogled-chromium -- chromium chrome://settings/securityKeys\n"

msgid "and validating that the security key can be reset via the ``Reset your security key'' menu.  If it works, congratulations, your security key is ready to be used with applications supporting two-factor authentication (2FA)."
msgstr "und nachsehen, ob Sie den Sicherheitsschlüssel mit dem Menüeintrag „Sicherheitsschlüssel zurücksetzen“ neu machen können. Wenn es klappt, gratulieren wir zu Ihrem nutzungsbereiten Sicherheitsschlüssel, mit dem Sie nun ihn unterstützende Anwendungen für Zwei-Faktor-Authentisierung (2FA) einrichten können."

msgid "Disabling OTP code generation for a Yubikey"
msgstr "Abschalten der OTP-Code-Erzeugung beim Yubikey"

msgid "disabling yubikey OTP"
msgstr "Yubikey-OTP deaktivieren"

msgid "If you use a Yubikey security key and are irritated by the spurious OTP codes it generates when inadvertently touching the key (e.g. causing you to become a spammer in the @samp{#guix} channel when discussing from your favorite IRC client!), you can disable it via the following @command{ykman} command:"
msgstr "Wenn Sie einen Yubikey-Sicherheitsschlüssel verwenden und es Sie stört, dass er unsinnige OTP-Codes erzeugt, wenn Sie ihn unabsichtlich anrühren (und Sie damit am Ende den @samp{#guix}-Kanal zumüllen, während Sie mit Ihrem Lieblings-IRC-Client an der Diskussion teilnehmen!), dann deaktivieren Sie es einfach mit dem folgenden @command{ykman}-Befehl:"

msgid "guix shell python-yubikey-manager -- ykman config usb --force --disable OTP\n"
msgstr "guix shell python-yubikey-manager -- ykman config usb --force --disable OTP\n"

msgid "Alternatively, you could use the @command{ykman-gui} command provided by the @code{yubikey-manager-qt} package and either wholly disable the @samp{OTP} application for the USB interface or, from the @samp{Applications -> OTP} view, delete the slot 1 configuration, which comes pre-configured with the Yubico OTP application."
msgstr "Alternativ können Sie auch die Oberfläche mit dem @command{ykman-gui}-Befehl aus dem Paket @code{yubikey-manager-qt} starten und entweder gleich die ganze OTP-Anwendung für die USB-Schnittstelle abschalten oder, unter @samp{Applications -> OTP}, die Konfiguration für Slot 1 löschen, die bei der Yubico-OTP-Anwendung voreingestellt ist."

msgid "Requiring a Yubikey to open a KeePassXC database"
msgstr "Yubikey verlangen, um eine KeePassXC-Datenbank zu entsperren"

msgid "yubikey, keepassxc integration"
msgstr "Yubikey, KeePassXC-Integration"

msgid "The KeePassXC password manager application has support for Yubikeys, but it requires installing a udev rules for your Guix System and some configuration of the Yubico OTP application on the key."
msgstr "Die Anwendung KeePassXC zur Verwaltung von Passwörtern kann mit Yubikeys zusammenarbeiten, aber erst, wenn die udev-Regeln dafür auf Ihrem Guix System vorliegen und nachdem Sie passende Einstellungen in der Yubico-OTP-Anwendung zum Schlüssel vorgenommen haben."

msgid "The necessary udev rules file comes from the @code{yubikey-personalization} package, and can be installed like:"
msgstr "Die erforderliche udev-Regeldatei liegt im Paket @code{yubikey-personalization} und kann hiermit installiert werden:"

msgid ""
"(use-package-modules ... security-token ...)\n"
"...\n"
"(operating-system\n"
" ...\n"
" (services\n"
"  (cons*\n"
"   ...\n"
"   (udev-rules-service 'yubikey yubikey-personalization))))\n"
msgstr ""
"(use-package-modules … security-token …)\n"
"…\n"
"(operating-system\n"
" …\n"
" (services\n"
"  (cons*\n"
"   …\n"
"   (udev-rules-service 'yubikey yubikey-personalization))))\n"

msgid "After reconfiguring your system (and reconnecting your Yubikey), you'll then want to configure the OTP challenge/response application of your Yubikey on its slot 2, which is what KeePassXC uses.  It's easy to do so via the Yubikey Manager graphical configuration tool, which can be invoked with:"
msgstr "Sobald Sie Ihr System rekonfiguriert haben (und Ihren Yubikey neu verbunden haben), sollten Sie anschließend die OTP-Challenge-Response-Anwendung für Ihren Yubikey auf dessen Slot 2 einrichten, die von KeePassXC benutzt wird. Das ist problemlos möglich mit dem grafischen Konfigurationsprogramm Yubikey Manager, das Sie so aufrufen können:"

msgid "guix shell yubikey-manager-qt -- ykman-gui\n"
msgstr "guix shell yubikey-manager-qt -- ykman-gui\n"

msgid "First, ensure @samp{OTP} is enabled under the @samp{Interfaces} tab, then navigate to @samp{Applications -> OTP}, and click the @samp{Configure} button under the @samp{Long Touch (Slot 2)} section.  Select @samp{Challenge-response}, input or generate a secret key, and click the @samp{Finish} button.  If you have a second Yubikey you'd like to use as a backup, you should configure it the same way, using the @emph{same} secret key."
msgstr "Stellen Sie zunächst sicher, dass @samp{OTP} im Karteireiter @samp{Interfaces} aktiviert ist. Begeben Sie sich dann zu @samp{Applications -> OTP} und klicken Sie auf den Knopf @samp{Configure} im Abschnitt @samp{Long Touch (Slot 2)}.  Wählen Sie @samp{Challenge-response} und geben Sie einen geheimen Schlüssel entweder ein oder lassen Sie ihn erzeugen. Anschließend klicken Sie auf den Knopf @samp{Finish}. Wenn Sie noch einen zweiten Yubikey haben, den Sie als Ersatz einsetzen können möchten, konfigurieren Sie ihn auf die gleiche Weise mit @emph{demselben} geheimen Schlüssel."

msgid "Your Yubikey should now be detected by KeePassXC.  It can be added to a database by navigating to KeePassXC's @samp{Database -> Database Security...} menu, then clicking the @samp{Add additional protection...} button, then @samp{Add Challenge-Response}, selecting the security key from the drop-down menu and clicking the @samp{OK} button to complete the setup."
msgstr "Jetzt sollte Ihr Yubikey von KeePassXC erkannt werden. Er kann für eine Datenbank hinzugefügt werden, indem Sie in KeePassXC im Menü @samp{Datenbank -> Datenbank-Sicherheit...} öffnen und dort auf den Knopf @samp{Zusätzlichen Schutz hinzufügen@tie{}...} klicken, dann auf @samp{Challenge-Response hinzufügen} klicken und den Sicherheitsschlüssel aus der Auswahlliste wählen und den @samp{OK}-Knopf anklicken, um die Einrichtung abzuschließen."

msgid "dynamic DNS, DDNS"
msgstr "dynamisches DNS, DDNS"

msgid "If your @acronym{ISP, Internet Service Provider} only provides dynamic IP addresses, it can be useful to setup a dynamic @acronym{DNS, Domain Name System} (also known as @acronym{DDNS, Dynamic DNS}) service to associate a static host name to a public but dynamic (often changing) IP address.  There are multiple existing services that can be used for this; in the following mcron job, @url{https://duckdns.org, DuckDNS} is used.  It should also work with other dynamic DNS services that offer a similar interface to update the IP address, such as @url{https://freedns.afraid.org/}, with minor adjustments."
msgstr "Wenn Sie von Ihrem Internetdienstanbieter nur dynamische IP-Adressen bekommen, aber einen statischen Rechnernamen möchten, können Sie einen Dienst für dynamisches @acronym{DNS, Domain Name System} einrichten (auch bekannt unter der Bezeichnung @acronym{DDNS, Dynamic DNS}). Dieser ordnet einem festen, „statischen“ Rechnernamen eine öffentliche, aber dynamische (oft wechselnde) IP-Adresse zu. Es gibt davon mehrere Anbieter; im folgenden mcron-Auftrag verwenden wir @url{https://duckdns.org, DuckDNS}. Er sollte auch mit anderen Anbietern von dynamischem DNS funktionieren, die eine ähnliche Schnittstelle zum Wechsel der IP-Adresse haben, etwa @url{https://freedns.afraid.org/}, wenn Sie Kleinigkeiten anpassen."

msgid "The mcron job is provided below, where @var{DOMAIN} should be substituted for your own domain prefix, and the DuckDNS provided token associated to @var{DOMAIN} added to the @file{/etc/duckdns/@var{DOMAIN}.token} file."
msgstr "So sieht der mcron-Auftrag dafür aus. Statt @var{DOMAIN} schreiben Sie Ihre eigene Domain und den von DuckDNS der @var{DOMAIN} zugeordneten Token in die Datei @file{/etc/duckdns/@var{DOMAIN}.token}."

msgid ""
"(define duckdns-job\n"
"  ;; Update personal domain IP every 5 minutes.\n"
"  #~(job '(next-minute (range 0 60 5))\n"
"\t #$(program-file\n"
"            \"duckdns-update\"\n"
"            (with-extensions (list guile-gnutls) ;required by (web client)\n"
"              #~(begin\n"
"                  (use-modules (ice-9 textual-ports)\n"
"                               (web client))\n"
"                  (let ((token (string-trim-both\n"
"                                (call-with-input-file \"/etc/duckdns/@var{DOMAIN}.token\"\n"
"                                  get-string-all)))\n"
"                        (query-template (string-append \"https://www.duckdns.org/\"\n"
"                                                       \"update?domains=@var{DOMAIN}\"\n"
"                                                       \"&token=~a&ip=\")))\n"
"                    (http-get (format #f query-template token))))))\n"
"         \"duckdns-update\"\n"
"         #:user \"nobody\"))\n"
msgstr ""
"(define duckdns-job\n"
"  ;; IP der eigenen Domain alle 5 Minuten aktualisieren.\n"
"  #~(job '(next-minute (range 0 60 5))\n"
"\t #$(program-file\n"
"            \"duckdns-update\"\n"
"            (with-extensions (list guile-gnutls) ;nötig für (web client)\n"
"              #~(begin\n"
"                  (use-modules (ice-9 textual-ports)\n"
"                               (web client))\n"
"                  (let ((token (string-trim-both\n"
"                                (call-with-input-file \"/etc/duckdns/@var{DOMAIN}.token\"\n"
"                                  get-string-all)))\n"
"                        (query-template (string-append \"https://www.duckdns.org/\"\n"
"                                                       \"update?domains=@var{DOMAIN}\"\n"
"                                                       \"&token=~a&ip=\")))\n"
"                    (http-get (format #f query-template token))))))\n"
"         \"duckdns-update\"\n"
"         #:user \"nobody\"))\n"

msgid "The job then needs to be added to the list of mcron jobs for your system, using something like:"
msgstr "Der Auftrag muss in die Liste der mcron-Aufträge für Ihr System eingetragen werden, etwa so:"

msgid ""
"(operating-system\n"
" (services\n"
"  (cons* (service mcron-service-type\n"
"           (mcron-configuration\n"
"             (jobs (list duckdns-job ...))))\n"
"         ...\n"
"         %base-services)))\n"
msgstr ""
"(operating-system\n"
" (services\n"
"  (cons* (service mcron-service-type\n"
"           (mcron-configuration\n"
"             (jobs (list duckdns-job …))))\n"
"         …\n"
"         %base-services)))\n"

msgid "To connect to a Wireguard VPN server you need the kernel module to be loaded in memory and a package providing networking tools that support it (e.g.  @code{wireguard-tools} or @code{network-manager})."
msgstr "Damit Sie sich mit einem Wireguard-VPN-Server verbinden können, müssen Sie dafür sorgen, dass die dafür nötigen Kernel-Module in den Speicher eingeladen werden und ein Paket bereitsteht, dass die unterstützenden Netzwerkwerkzeuge dazu enthält (z.B.@: @code{wireguard-tools} oder @code{network-manager})."

msgid "Here is a configuration example for Linux-Libre < 5.6, where the module is out of tree and need to be loaded manually---following revisions of the kernel have it built-in and so don't need such configuration:"
msgstr "Hier ist ein Beispiel für eine Konfiguration für Linux-Libre < 5.6, wo sich das Modul noch nicht im Kernel-Quellbaum befindet („out of tree“) und daher von Hand geladen werden muss@tie{}– in nachfolgenden Kernelversionen ist das Modul bereits eingebaut und @emph{keine} derartige Konfiguration ist nötig."

msgid ""
"(use-modules (gnu))\n"
"(use-service-modules desktop)\n"
"(use-package-modules vpn)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-service-modules desktop)\n"
"(use-package-modules vpn)\n"
"\n"

msgid ""
"(operating-system\n"
"  ;; …\n"
"  (services (cons (simple-service 'wireguard-module\n"
"                                  kernel-module-loader-service-type\n"
"                                  '(\"wireguard\"))\n"
"                  %desktop-services))\n"
"  (packages (cons wireguard-tools %base-packages))\n"
"  (kernel-loadable-modules (list wireguard-linux-compat)))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (services (cons (simple-service 'wireguard-module\n"
"                                  kernel-module-loader-service-type\n"
"                                  '(\"wireguard\"))\n"
"                  %desktop-services))\n"
"  (packages (cons wireguard-tools %base-packages))\n"
"  (kernel-loadable-modules (list wireguard-linux-compat)))\n"

msgid "After reconfiguring and restarting your system you can either use Wireguard tools or NetworkManager to connect to a VPN server."
msgstr "Nachdem Sie Ihr System rekonfiguriert haben, können Sie dann entweder die Wireguard-Werkzeuge („Wireguard Tools“) oder NetworkManager benutzen, um sich mit einem VPN-Server zu verbinden."

msgid "Using Wireguard tools"
msgstr "Die Wireguard Tools benutzen"

msgid "To test your Wireguard setup it is convenient to use @command{wg-quick}.  Just give it a configuration file @command{wg-quick up ./wg0.conf}; or put that file in @file{/etc/wireguard} and run @command{wg-quick up wg0} instead."
msgstr "Um Ihre Wireguard-Konfiguration zu testen, bietet es sich an, @command{wg-quick} zu benutzen. Übergeben Sie einfach eine Konfigurationsdatei @command{wg-quick up ./wg0.conf}. Sie können auch die Konfigurationsdatei in @file{/etc/wireguard} platzieren und dann stattdessen @command{wg-quick up wg0} ausführen."

msgid "Be warned that the author described this command as a: “[…] very quick and dirty bash script […]”."
msgstr "Seien Sie gewarnt, dass sein Autor diesen Befehl als ein schnell und unsauber geschriebenes Bash-Skript bezeichnet hat."

msgid "Using NetworkManager"
msgstr "NetworkManager benutzen"

msgid "Thanks to NetworkManager support for Wireguard we can connect to our VPN using @command{nmcli} command.  Up to this point this guide assumes that you're using Network Manager service provided by @code{%desktop-services}.  Ortherwise you need to adjust your services list to load @code{network-manager-service-type} and reconfigure your Guix system."
msgstr "Dank der Unterstützung für Wireguard durch den NetworkManager können wir über den Befehl @command{nmcli} eine Verbindung mit unserem VPN herstellen. Bislang treffen wir in dieser Anleitung die Annahme, dass Sie den Network-Manager-Dienst aus den @code{%desktop-services} benutzen. Wenn Sie eine abweichende Konfiguration verwenden, müssen Sie unter Umständen Ihre @code{services}-Liste abändern, damit ein @code{network-manager-service-type} geladen wird, und Ihr Guix-System rekonfigurieren."

msgid "To import your VPN configuration execute nmcli import command:"
msgstr "Benutzen Sie den nmcli-Import-Befehl, um Ihre VPN-Konfiguration zu importieren."

msgid ""
"# nmcli connection import type wireguard file wg0.conf\n"
"Connection 'wg0' (edbee261-aa5a-42db-b032-6c7757c60fde) successfully added\n"
msgstr ""
"# nmcli connection import type wireguard file wg0.conf\n"
"Verbindung »wg0« (edbee261-aa5a-42db-b032-6c7757c60fde) erfolgreich hinzugefügt.\n"

msgid "This will create a configuration file in @file{/etc/NetworkManager/wg0.nmconnection}.  Next connect to the Wireguard server:"
msgstr "Dadurch wird eine Konfigurationsdatei in @file{/etc/NetworkManager/wg0.nmconnection} angelegt. Anschließend können Sie sich mit dem Wireguard-Server verbinden:"

msgid ""
"$ nmcli connection up wg0\n"
"Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/6)\n"
msgstr ""
"$ nmcli connection up wg0\n"
"Verbindung wurde erfolgreich aktiviert (aktiver D-Bus-Pfad: /org/freedesktop/NetworkManager/ActiveConnection/6)\n"

msgid "By default NetworkManager will connect automatically on system boot.  To change that behaviour you need to edit your config:"
msgstr "Nach Voreinstellung wird sich NetworkManager automatisch beim Systemstart verbinden. Um dieses Verhalten zu ändern, müssen Sie Ihre Konfiguration bearbeiten:"

msgid "# nmcli connection modify wg0 connection.autoconnect no\n"
msgstr "# nmcli connection modify wg0 connection.autoconnect no\n"

msgid "For more specific information about NetworkManager and wireguard @uref{https://blogs.gnome.org/thaller/2019/03/15/wireguard-in-networkmanager/,see this post by thaller}."
msgstr "Für Informationen speziell zu NetworkManager und Wireguard @uref{https://blogs.gnome.org/thaller/2019/03/15/wireguard-in-networkmanager/,siehe diesen Blogeintrag von thaller}."

msgid "wm"
msgstr "Fensterverwaltung (Window Manager, WM)"

msgid "stumpwm"
msgstr "stumpwm"

msgid "You could install StumpWM with a Guix system by adding @code{stumpwm} and optionally @code{`(,stumpwm \"lib\")} packages to a system configuration file, e.g.@: @file{/etc/config.scm}."
msgstr "Sie können StumpWM mit einem Guix-System installieren, indem Sie die Pakete @code{stumpwm} und optional auch @code{`(,stumpwm \"lib\")} in eine Systemkonfigurationsdatei, z.B.@: @file{/etc/config.scm}, eintragen."

msgid "An example configuration can look like this:"
msgstr "Eine Beispielkonfiguration kann so aussehen:"

msgid ""
"(use-modules (gnu))\n"
"(use-package-modules wm)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-package-modules wm)\n"
"\n"

msgid ""
"(operating-system\n"
"  ;; …\n"
"  (packages (append (list sbcl stumpwm `(,stumpwm \"lib\"))\n"
"                    %base-packages)))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (packages (append (list sbcl stumpwm `(,stumpwm \"lib\"))\n"
"                    %base-packages)))\n"

msgid "stumpwm fonts"
msgstr "StumpWM-Schriftarten"

msgid "By default StumpWM uses X11 fonts, which could be small or pixelated on your system.  You could fix this by installing StumpWM contrib Lisp module @code{sbcl-ttf-fonts}, adding it to Guix system packages:"
msgstr "Nach Voreinstellung benutzt StumpWM die Schriftarten von X11, die auf Ihrem System klein oder verpixelt erscheinen mögen. Sie können das Problem beheben, indem Sie das Lisp-Modul @code{sbcl-ttf-fonts} aus den Beiträgen zu StumpWM („StumpWM Contrib“) als Systempaket installieren:"

msgid ""
"(use-modules (gnu))\n"
"(use-package-modules fonts wm)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-package-modules fonts wm)\n"
"\n"

msgid ""
"(operating-system\n"
"  ;; …\n"
"  (packages (append (list sbcl stumpwm `(,stumpwm \"lib\"))\n"
"                    sbcl-ttf-fonts font-dejavu %base-packages)))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (packages (append (list sbcl stumpwm `(,stumpwm \"lib\"))\n"
"                    sbcl-ttf-fonts font-dejavu %base-packages)))\n"

msgid "Then you need to add the following code to a StumpWM configuration file @file{~/.stumpwm.d/init.lisp}:"
msgstr "Den folgenden Code fügen Sie in die Konfigurationsdatei von StumpWM @file{~/.stumpwm.d/init.lisp} ein:"

msgid ""
"(require :ttf-fonts)\n"
"(setf xft:*font-dirs* '(\"/run/current-system/profile/share/fonts/\"))\n"
"(setf clx-truetype:+font-cache-filename+ (concat (getenv \"HOME\")\n"
"                                                 \"/.fonts/font-cache.sexp\"))\n"
"(xft:cache-fonts)\n"
"(set-font (make-instance 'xft:font :family \"DejaVu Sans Mono\"\n"
"                                   :subfamily \"Book\" :size 11))\n"
msgstr ""
"(require :ttf-fonts)\n"
"(setf xft:*font-dirs* '(\"/run/current-system/profile/share/fonts/\"))\n"
"(setf clx-truetype:+font-cache-filename+ (concat (getenv \"HOME\")\n"
"                                                 \"/.fonts/font-cache.sexp\"))\n"
"(xft:cache-fonts)\n"
"(set-font (make-instance 'xft:font :family \"DejaVu Sans Mono\"\n"
"                                   :subfamily \"Book\" :size 11))\n"

msgid "sessionlock"
msgstr "Sitzungssperre"

msgid "Depending on your environment, locking the screen of your session might come built in or it might be something you have to set up yourself. If you use a desktop environment like GNOME or KDE, it's usually built in. If you use a plain window manager like StumpWM or EXWM, you might have to set it up yourself."
msgstr "Abhängig von Ihrer Arbeitsumgebung ist das Sperren Ihres Bildschirms vielleicht bereits eingebaut. Wenn nicht, müssen Sie es selbst einrichten. Wenn Sie eine Arbeitsumgebung wie GNOME oder KDE benutzen, ist Sperren normalerweise bereits möglich. Wenn Sie einen einfachen Fensterverwalter („Window Manager“) wie StumpWM oder EXWM benutzen, müssen Sie es vielleicht selbst einrichten."

msgid "If you use Xorg, you can use the utility @uref{https://www.mankier.com/1/xss-lock, xss-lock} to lock the screen of your session.  xss-lock is triggered by DPMS which since Xorg 1.8 is auto-detected and enabled if ACPI is also enabled at kernel runtime."
msgstr "Sofern Sie Xorg benutzen, können Sie mit dem Programm @uref{https://www.mankier.com/1/xss-lock, xss-lock} den Bildschirm für Ihre Sitzung sperren. xss-lock wird durch DPMS ausgelöst, was seit Xorg 1.8 automatisch aktiv ist, wenn zur Laufzeit des Kernels ACPI verfügbar ist."

msgid "To use xss-lock, you can simple execute it and put it into the background before you start your window manager from e.g. your @file{~/.xsession}:"
msgstr "Um xss-lock zu benutzen, können Sie es einfach ausführen und in den Hintergrund versetzen, bevor Sie Ihren Fensterverwalter z.B.@: aus Ihrer @file{~/.xsession} heraus starten:"

msgid ""
"xss-lock -- slock &\n"
"exec stumpwm\n"
msgstr ""
"xss-lock -- slock &\n"
"exec stumpwm\n"

msgid "In this example, xss-lock uses @code{slock} to do the actual locking of the screen when it determines it's appropriate, like when you suspend your device."
msgstr "In diesem Beispiel benutzt xss-lock das Programm @code{slock}, um die eigentliche Sperrung des Bildschirms durchzuführen, wenn es den Zeitpunkt dafür gekommen sieht, weil Sie z.B.@: Ihr Gerät in den Energiesparmodus versetzen."

msgid "For slock to be allowed to be a screen locker for the graphical session, it needs to be made setuid-root so it can authenticate users, and it needs a PAM service. This can be achieved by adding the following service to your @file{config.scm}:"
msgstr "Damit slock aber überhaupt die Berechtigung dafür erteilt bekommt, Bildschirme grafischer Sitzungen zu sperren, muss es als setuid-root eingestellt sein, wodurch es Benutzer authentifizieren kann, außerdem braucht es Einstellungen im PAM-Dienst. Um das bereitzustellen, tragen Sie den folgenden Dienst in Ihre @file{config.scm} ein:"

msgid ""
"(service screen-locker-service-type\n"
"         (screen-locker-configuration\n"
"          (name \"slock\")\n"
"          (program (file-append slock \"/bin/slock\"))))\n"
msgstr ""
"(service screen-locker-service-type\n"
"         (screen-locker-configuration\n"
"          (name \"slock\")\n"
"          (program (file-append slock \"/bin/slock\"))))\n"

msgid "If you manually lock your screen, e.g. by directly calling slock when you want to lock your screen but not suspend it, it's a good idea to notify xss-lock about this so no confusion occurs. This can be done by executing @code{xset s activate} immediately before you execute slock."
msgstr "Wenn Sie Ihren Bildschirm manuell sperren, z.B.@: indem Sie slock direkt aufrufen, wenn Sie Ihren Bildschirm sperren wollen, ohne in den Energiesparmodus zu wechseln, dann ist es eine gute Idee, das auch xss-lock mitzuteilen, indem Sie @code{xset s activate} direkt vor slock ausführen."

msgid "linode, Linode"
msgstr "linode, Linode"

msgid "To run Guix on a server hosted by @uref{https://www.linode.com, Linode}, start with a recommended Debian server.  We recommend using the default distro as a way to bootstrap Guix. Create your SSH keys."
msgstr "Um Guix auf einem durch @uref{https://www.linode.com, Linode} bereitgestellten, „gehosteten“ Server zu benutzen, richten Sie zunächst einen dort empfohlenen Debian-Server ein. Unsere Empfehlung ist, zum Wechsel auf Guix mit der voreingestellten Distribution anzufangen. Erzeugen Sie Ihre SSH-Schlüssel."

msgid "ssh-keygen\n"
msgstr "ssh-keygen\n"

msgid "Be sure to add your SSH key for easy login to the remote server.  This is trivially done via Linode's graphical interface for adding SSH keys.  Go to your profile and click add SSH Key.  Copy into it the output of:"
msgstr "Stellen Sie sicher, dass Ihr SSH-Schlüssel zur leichten Anmeldung auf dem entfernten Server eingerichtet ist. Das können Sie leicht mit Linodes grafischer Oberfläche zum Hinzufügen von SSH-Schlüsseln bewerkstelligen. Gehen Sie dazu in Ihr Profil und klicken Sie auf die Funktion zum Hinzufügen eines SSH-Schlüssels. Kopieren Sie dort hinein die Ausgabe von:"

msgid "cat ~/.ssh/<username>_rsa.pub\n"
msgstr "cat ~/.ssh/<benutzername>_rsa.pub\n"

msgid "Power the Linode down."
msgstr "Fahren Sie den Linode-Knoten herunter."

msgid "In the Linode's Storage tab, resize the Debian disk to be smaller.  30 GB free space is recommended.  Then click \"Add a disk\", and fill out the form with the following:"
msgstr "Im Karteireiter für „Storage“ bei Linode verkleinern Sie das Laufwerk für Debian. Empfohlen werden 30@tie{}GB freier Speicher. Klicken Sie anschließend auf „Add a disk“ und tragen Sie Folgendes in das Formular ein:"

msgid "Label: \"Guix\""
msgstr "Label: \"Guix\""

msgid "Filesystem: ext4"
msgstr "Filesystem: ext4"

msgid "Set it to the remaining size"
msgstr "Wählen Sie als Größe den übrigen Speicherplatz."

msgid "In the Configurations tab, press \"Edit\" on the default Debian profile.  Under \"Block Device Assignment\" click \"Add a Device\". It should be @file{/dev/sdc} and you can select the \"Guix\" disk. Save Changes."
msgstr "Drücken Sie im Karteireiter „Configurations“ auf „Edit“. Unter „Block Device Assignment“ klicken Sie auf „Add a Device“. Dort müsste @file{/dev/sdc} stehen; wählen Sie das Laufwerk „Guix“. Speichern Sie die Änderungen."

msgid "Now \"Add a Configuration\", with the following:"
msgstr "Fügen Sie eine Konfiguration hinzu („Add a Configuration“) mit folgenden Eigenschaften:"

msgid "Label: Guix"
msgstr "Label: Guix"

msgid "Kernel:GRUB 2 (it's at the bottom! This step is @b{IMPORTANT!})"
msgstr "Kernel: GRUB 2 (Das steht ganz unten! Dieser Schritt ist @b{WICHTIG!})"

msgid "Block device assignment:"
msgstr "Block device assignment:"

msgid "@file{/dev/sda}: Guix"
msgstr "@file{/dev/sda}: Guix"

msgid "@file{/dev/sdb}: swap"
msgstr "@file{/dev/sdb}: swap"

msgid "Root device: @file{/dev/sda}"
msgstr "Root device: @file{/dev/sda}"

msgid "Turn off all the filesystem/boot helpers"
msgstr "Schalten Sie alle Dateisystem-/Boot-Helfer ab."

msgid "Now power it back up, booting with the Debian configuration.  Once it's running, ssh to your server via @code{ssh root@@@var{<your-server-IP-here>}}. (You can find your server IP address in your Linode Summary section.) Now you can run the \"install guix from @pxref{Binary Installation,,, guix, GNU Guix}\" steps:"
msgstr "Starten Sie den Knoten jetzt wieder mit der Debian-Konfiguration. Sobald er wieder läuft, verbinden Sie sich mittels SSH zu Ihrem Server über @code{ssh root@@@var{<IP-Adresse-Ihres-Servers>}}. (Die IP-Adresse Ihres Servers finden Sie in Linodes Übersichtsseite bei „Summary“.) Nun können Sie mit den Schritten aus dem @ref{Aus Binärdatei installieren,,, guix.de, Referenzhandbuch zu GNU Guix} weitermachen:"

msgid ""
"sudo apt-get install gpg\n"
"wget https://sv.gnu.org/people/viewgpg.php?user_id=15145 -qO - | gpg --import -\n"
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"
msgstr ""
"sudo apt-get install gpg\n"
"wget https://sv.gnu.org/people/viewgpg.php?user_id=15145 -qO - | gpg --import -\n"
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"

msgid "Now it's time to write out a config for the server.  The key information is below. Save the resulting file as @file{guix-config.scm}."
msgstr "Nun wird es Zeit, eine Konfiguration für den Server anzulegen. Die wichtigsten Informationen finden Sie hierunter. Speichern Sie die Konfiguration als @file{guix-config.scm}."

msgid ""
"(use-modules (gnu)\n"
"             (guix modules))\n"
"(use-service-modules networking\n"
"                     ssh)\n"
"(use-package-modules admin\n"
"                     package-management\n"
"                     ssh\n"
"                     tls)\n"
"\n"
msgstr ""
"(use-modules (gnu)\n"
"             (guix modules))\n"
"(use-service-modules networking\n"
"                     ssh)\n"
"(use-package-modules admin\n"
"                     package-management\n"
"                     ssh\n"
"                     tls)\n"
"\n"

msgid ""
"(operating-system\n"
"  (host-name \"my-server\")\n"
"  (timezone \"America/New_York\")\n"
"  (locale \"en_US.UTF-8\")\n"
"  ;; This goofy code will generate the grub.cfg\n"
"  ;; without installing the grub bootloader on disk.\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader\n"
"                (bootloader\n"
"                 (inherit grub-bootloader)\n"
"                 (installer #~(const #true))))))\n"
"  (file-systems (cons (file-system\n"
"                        (device \"/dev/sda\")\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                      %base-file-systems))\n"
"\n"
msgstr ""
"(operating-system\n"
"  (host-name \"my-server\")\n"
"  (timezone \"America/New_York\")\n"
"  (locale \"en_US.UTF-8\")\n"
"  ;; Dieser komisch aussehende Code wird eine grub.cfg\n"
"  ;; anlegen ohne den GRUB-Bootloader auf die\n"
"  ;; Platte zu installieren.\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader\n"
"                (bootloader\n"
"                 (inherit grub-bootloader)\n"
"                 (installer #~(const #true))))))\n"
"  (file-systems (cons (file-system\n"
"                        (device \"/dev/sda\")\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                      %base-file-systems))\n"
"\n"

msgid ""
"  (swap-devices (list \"/dev/sdb\"))\n"
"\n"
msgstr ""
"  (swap-devices (list \"/dev/sdb\"))\n"
"\n"

msgid ""
"  (initrd-modules (cons \"virtio_scsi\"    ; Needed to find the disk\n"
"                        %base-initrd-modules))\n"
"\n"
msgstr ""
"  (initrd-modules (cons \"virtio_scsi\"    ; Um die Platte zu finden\n"
"                        %base-initrd-modules))\n"
"\n"

msgid ""
"  (users (cons (user-account\n"
"                (name \"janedoe\")\n"
"                (group \"users\")\n"
"                ;; Adding the account to the \"wheel\" group\n"
"                ;; makes it a sudoer.\n"
"                (supplementary-groups '(\"wheel\"))\n"
"                (home-directory \"/home/janedoe\"))\n"
"               %base-user-accounts))\n"
"\n"
msgstr ""
"  (users (cons (user-account\n"
"                (name \"janedoe\")\n"
"                (group \"users\")\n"
"                ;; Durch Hinzufügen zur \"wheel\"-Gruppe\n"
"                ;; wird das Konto zum Sudoer.\n"
"                (supplementary-groups '(\"wheel\"))\n"
"                (home-directory \"/home/janedoe\"))\n"
"               %base-user-accounts))\n"
"\n"

msgid ""
"  (packages (cons* openssh-sans-x\n"
"                   %base-packages))\n"
"\n"
msgstr ""
"  (packages (cons* openssh-sans-x\n"
"                   %base-packages))\n"
"\n"

msgid ""
"  (services (cons*\n"
"             (service dhcp-client-service-type)\n"
"             (service openssh-service-type\n"
"                      (openssh-configuration\n"
"                       (openssh openssh-sans-x)\n"
"                       (password-authentication? #false)\n"
"                       (authorized-keys\n"
"                        `((\"janedoe\" ,(local-file \"janedoe_rsa.pub\"))\n"
"                          (\"root\" ,(local-file \"janedoe_rsa.pub\"))))))\n"
"             %base-services)))\n"
msgstr ""
"  (services (cons*\n"
"             (service dhcp-client-service-type)\n"
"             (service openssh-service-type\n"
"                      (openssh-configuration\n"
"                       (openssh openssh-sans-x)\n"
"                       (password-authentication? #false)\n"
"                       (authorized-keys\n"
"                        `((\"janedoe\" ,(local-file \"janedoe_rsa.pub\"))\n"
"                          (\"root\" ,(local-file \"janedoe_rsa.pub\"))))))\n"
"             %base-services)))\n"

msgid "Replace the following fields in the above configuration:"
msgstr "Ersetzen Sie in der obigen Konfiguration aber folgende Felder:"

msgid ""
"(host-name \"my-server\")       ; replace with your server name\n"
"; if you chose a linode server outside the U.S., then\n"
"; use tzselect to find a correct timezone string\n"
"(timezone \"America/New_York\") ; if needed replace timezone\n"
"(name \"janedoe\")              ; replace with your username\n"
"(\"janedoe\" ,(local-file \"janedoe_rsa.pub\")) ; replace with your ssh key\n"
"(\"root\" ,(local-file \"janedoe_rsa.pub\")) ; replace with your ssh key\n"
msgstr ""
"(host-name \"my-server\")       ; hier sollte Ihr Servername stehen\n"
"; Wenn Sie sich einen Linode-Server außerhalb der USA ausgesucht\n"
"; haben, finden Sie mit tzselect die richtige Zeitzonenangabe.\n"
"(timezone \"America/New_York\") ; Zeitzone ersetzen wenn nötig\n"
"(name \"janedoe\")              ; Ersetzen durch Ihren Benutzernamen\n"
"(\"janedoe\" ,(local-file \"janedoe_rsa.pub\")) ; Ersetzen durch Ihren SSH-Schlüssel\n"
"(\"root\" ,(local-file \"janedoe_rsa.pub\")) ; Ersetzen durch Ihren SSH-Schlüssel\n"

msgid "The last line in the above example lets you log into the server as root and set the initial root password (see the note at the end of this recipe about root login).  After you have done this, you may delete that line from your configuration and reconfigure to prevent root login."
msgstr "Durch die letzte Zeile im obigen Beispiel können Sie sich als Administratornutzer root auf dem Server anmelden und das anfängliche Passwort für root festlegen (lesen Sie den Hinweis zur Anmeldung als root am Ende dieses Rezepts). Nachdem das erledigt ist, können Sie die Zeile aus Ihrer Konfiguration löschen und Ihr System rekonfigurieren, damit eine Anmeldung als root nicht mehr möglich ist."

msgid "Copy your ssh public key (eg: @file{~/.ssh/id_rsa.pub}) as @file{@var{<your-username-here>}_rsa.pub} and put @file{guix-config.scm} in the same directory.  In a new terminal run these commands."
msgstr "Kopieren Sie Ihren öffentlichen SSH-Schlüssel (z.B.@: @file{~/.ssh/id_rsa.pub}) in die Datei @file{@var{<Ihr-Benutzername>}_rsa.pub} und Ihre @file{guix-config.scm} ins selbe Verzeichnis. Führen Sie dann diese Befehle in einem neuen Terminal aus:"

msgid ""
"sftp root@@<remote server ip address>\n"
"put /path/to/files/<username>_rsa.pub .\n"
"put /path/to/files/guix-config.scm .\n"
msgstr ""
"sftp root@@<IP-Adresse-des-entfernten-Servers>\n"
"put /pfad/mit/dateien/<Benutzername>_rsa.pub .\n"
"put /pfad/mit/dateien/guix-config.scm .\n"

msgid "In your first terminal, mount the guix drive:"
msgstr "Binden Sie mit Ihrem ersten Terminal das Guix-Laufwerk ein:"

msgid ""
"mkdir /mnt/guix\n"
"mount /dev/sdc /mnt/guix\n"
msgstr ""
"mkdir /mnt/guix\n"
"mount /dev/sdc /mnt/guix\n"

msgid "Due to the way we set up the bootloader section of the guix-config.scm, only the grub configuration file will be installed.  So, we need to copy over some of the other GRUB stuff already installed on the Debian system:"
msgstr "Aufgrund der Art und Weise, wie wir den Bootloader-Abschnitt von @file{guix-config.scm} oben festgelegt haben, installieren wir GRUB nicht vollständig. Stattdessen installieren wir nur unsere GRUB-Konfigurationsdatei. Daher müssen wir ein bisschen von den anderen GRUB-Einstellungen vom Debian-System kopieren:"

msgid ""
"mkdir -p /mnt/guix/boot/grub\n"
"cp -r /boot/grub/* /mnt/guix/boot/grub/\n"
msgstr ""
"mkdir -p /mnt/guix/boot/grub\n"
"cp -r /boot/grub/* /mnt/guix/boot/grub/\n"

msgid "Now initialize the Guix installation:"
msgstr "Initialisieren Sie nun die Guix-Installation:"

msgid "guix system init guix-config.scm /mnt/guix\n"
msgstr "guix system init guix-config.scm /mnt/guix\n"

msgid "Ok, power it down! Now from the Linode console, select boot and select \"Guix\"."
msgstr "OK, fahren Sie Ihn jetzt herunter! Von der Linode-Konsole wählen Sie Booten aus und wählen „Guix“."

msgid "Once it boots, you should be able to log in via SSH! (The server config will have changed though.)  You may encounter an error like:"
msgstr "Sobald es gestartet ist, sollten Sie sich über SSH anmelden können! (Allerdings wird sich die Serverkonfiguration geändert haben.) Ihnen könnte eine Fehlermeldung wie diese hier gezeigt werden:"

msgid ""
"$ ssh root@@<server ip address>\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
"Someone could be eavesdropping on you right now (man-in-the-middle attack)!\n"
"It is also possible that a host key has just been changed.\n"
"The fingerprint for the ECDSA key sent by the remote host is\n"
"SHA256:0B+wp33w57AnKQuHCvQP0+ZdKaqYrI/kyU7CfVbS7R4.\n"
"Please contact your system administrator.\n"
"Add correct host key in /home/joshua/.ssh/known_hosts to get rid of this message.\n"
"Offending ECDSA key in /home/joshua/.ssh/known_hosts:3\n"
"ECDSA host key for 198.58.98.76 has changed and you have requested strict checking.\n"
"Host key verification failed.\n"
msgstr ""
"$ ssh root@@<server ip address>\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
"Someone could be eavesdropping on you right now (man-in-the-middle attack)!\n"
"It is also possible that a host key has just been changed.\n"
"The fingerprint for the ECDSA key sent by the remote host is\n"
"SHA256:0B+wp33w57AnKQuHCvQP0+ZdKaqYrI/kyU7CfVbS7R4.\n"
"Please contact your system administrator.\n"
"Add correct host key in /home/joshua/.ssh/known_hosts to get rid of this message.\n"
"Offending ECDSA key in /home/joshua/.ssh/known_hosts:3\n"
"ECDSA host key for 198.58.98.76 has changed and you have requested strict checking.\n"
"Host key verification failed.\n"

msgid "Either delete @file{~/.ssh/known_hosts} file, or delete the offending line starting with your server IP address."
msgstr "Löschen Sie entweder die ganze Datei @file{~/.ssh/known_hosts} oder nur die ungültig gewordene Zeile, die mit der IP-Adresse Ihres Servers beginnt."

msgid "Be sure to set your password and root's password."
msgstr "Denken Sie daran, Ihr Passwort und das Passwort des Administratornutzers root festzulegen."

msgid ""
"ssh root@@<remote ip address>\n"
"passwd  ; for the root password\n"
"passwd <username> ; for the user password\n"
msgstr ""
"ssh root@@<IP-Adresse-des-entfernten-Servers>\n"
"passwd  ; für das root-Passswort\n"
"passwd <benutzername> ; für das Passwort des normalen Benutzers\n"

msgid "You may not be able to run the above commands at this point.  If you have issues remotely logging into your linode box via SSH, then you may still need to set your root and user password initially by clicking on the ``Launch Console'' option in your linode.  Choose the ``Glish'' instead of ``Weblish''.  Now you should be able to ssh into the machine."
msgstr "Es kann sein, dass die obigen Befehle noch nicht funktionieren. Wenn Sie Probleme haben, sich aus der Ferne über SSH bei Ihrer Linode-Kiste anzumelden, dann müssen Sie vielleicht Ihr anfängliches Passwort für root und das normale Benutzerkonto festlegen, indem Sie auf die „Launch Console“-Option in Ihrer Linode klicken. Wählen Sie „Glish“ statt „Weblish“. Jetzt sollten Sie über SSH in Ihre Maschine ’reinkommen."

msgid "Hooray! At this point you can shut down the server, delete the Debian disk, and resize the Guix to the rest of the size.  Congratulations!"
msgstr "Hurra! Nun können Sie den Server herunterfahren, die Debian-Platte löschen und Guix auf den gesamten verfügbaren Speicher erweitern. Herzlichen Glückwunsch!"

msgid "By the way, if you save it as a disk image right at this point, you'll have an easy time spinning up new Guix images! You may need to down-size the Guix image to 6144MB, to save it as an image.  Then you can resize it again to the max size."
msgstr "Übrigens, wenn Sie das Ergebnis jetzt als „Disk Image“ speichern, können Sie neue Guix-Abbilder von da an leicht einrichten! Vielleicht müssen Sie die Größe des Guix-Abbilds auf 6144MB verkleinern, um es als Abbild speichern zu können. Danach können Sie es wieder auf die Maximalgröße vergrößern."

msgid "kimsufi, Kimsufi, OVH"
msgstr "kimsufi, Kimsufi, OVH"

msgid "To run Guix on a server hosted by @uref{https://www.kimsufi.com/, Kimsufi}, click on the netboot tab then select rescue64-pro and restart."
msgstr "Um Guix auf einem von @uref{https://www.kimsufi.com/, Kimsufi} gemieteten Server einzusetzen, klicken Sie auf den Karteireiter zu Netboot und wählen Sie dann rescue64-pro aus und starten Sie neu."

msgid "OVH will email you the credentials required to ssh into a Debian system."
msgstr "OVH wird Ihnen eine E-Mail mit den Anmeldedaten schicken, damit Sie sich über SSH auf ein Debian-System verbinden können."

msgid "Now you can run the \"install guix from @pxref{Binary Installation,,, guix, GNU Guix}\" steps:"
msgstr "Folgen Sie nun den Anweisungen zur Installation von Guix aus einer Binärdatei (siehe @ref{Aus Binärdatei installieren,,, guix.de, Referenzhandbuch zu GNU Guix}):"

msgid ""
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"
msgstr ""
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"

msgid "Partition the drives and format them, first stop the raid array:"
msgstr "Partitionieren Sie nun die Laufwerke und formatieren Sie sie, aber erst nachdem Sie das RAID-Array angehalten haben:"

msgid ""
"mdadm --stop /dev/md127\n"
"mdadm --zero-superblock /dev/sda2 /dev/sdb2\n"
msgstr ""
"mdadm --stop /dev/md127\n"
"mdadm --zero-superblock /dev/sda2 /dev/sdb2\n"

msgid "Then wipe the disks and set up the partitions, we will create a RAID 1 array."
msgstr "Löschen Sie die Laufwerksinhalte und richten Sie die Partitionen ein; wir erzeugen ein RAID-1-Array."

msgid ""
"wipefs -a /dev/sda\n"
"wipefs -a /dev/sdb\n"
"\n"
msgstr ""
"wipefs -a /dev/sda\n"
"wipefs -a /dev/sdb\n"
"\n"

msgid ""
"parted /dev/sda --align=opt -s -m -- mklabel gpt\n"
"parted /dev/sda --align=opt -s -m -- \\\n"
" mkpart bios_grub 1049kb 512MiB \\\n"
" set 1 bios_grub on\n"
"parted /dev/sda --align=opt -s -m -- \\\n"
" mkpart primary 512MiB -512MiB\n"
" set 2 raid on\n"
"parted /dev/sda --align=opt -s -m -- mkpart primary linux-swap 512MiB 100%\n"
"\n"
msgstr ""
"parted /dev/sda --align=opt -s -m -- mklabel gpt\n"
"parted /dev/sda --align=opt -s -m -- \\\n"
" mkpart bios_grub 1049kb 512MiB \\\n"
" set 1 bios_grub on\n"
"parted /dev/sda --align=opt -s -m -- \\\n"
" mkpart primary 512MiB -512MiB\n"
" set 2 raid on\n"
"parted /dev/sda --align=opt -s -m -- mkpart primary linux-swap 512MiB 100%\n"
"\n"

msgid ""
"parted /dev/sdb --align=opt -s -m -- mklabel gpt\n"
"parted /dev/sdb --align=opt -s -m -- \\\n"
"     mkpart bios_grub 1049kb 512MiB \\\n"
"     set 1 bios_grub on\n"
"parted /dev/sdb --align=opt -s -m -- \\\n"
"     mkpart primary 512MiB -512MiB \\\n"
"     set 2 raid on\n"
"parted /dev/sdb --align=opt -s -m -- mkpart primary linux-swap 512MiB 100%\n"
msgstr ""
"parted /dev/sdb --align=opt -s -m -- mklabel gpt\n"
"parted /dev/sdb --align=opt -s -m -- \\\n"
"     mkpart bios_grub 1049kb 512MiB \\\n"
"     set 1 bios_grub on\n"
"parted /dev/sdb --align=opt -s -m -- \\\n"
"     mkpart primary 512MiB -512MiB \\\n"
"     set 2 raid on\n"
"parted /dev/sdb --align=opt -s -m -- mkpart primary linux-swap 512MiB 100%\n"

msgid "Create the array:"
msgstr "Legen Sie das Array an:"

msgid ""
"mdadm --create /dev/md127 --level=1 --raid-disks=2 \\\n"
"  --metadata=0.90 /dev/sda2 /dev/sdb2\n"
msgstr ""
"mdadm --create /dev/md127 --level=1 --raid-disks=2 \\\n"
"  --metadata=0.90 /dev/sda2 /dev/sdb2\n"

msgid "Now create file systems on the relevant partitions, first the boot partitions:"
msgstr "Legen Sie nun Dateisysteme auf diesen Partitionen an, angefangen mit der Boot-Partition:"

msgid ""
"mkfs.ext4  /dev/sda1\n"
"mkfs.ext4  /dev/sdb1\n"
msgstr ""
"mkfs.ext4  /dev/sda1\n"
"mkfs.ext4  /dev/sdb1\n"

msgid "Then the root partition:"
msgstr "Dann die Wurzelpartition:"

msgid "mkfs.ext4 /dev/md127\n"
msgstr "mkfs.ext4 /dev/md127\n"

msgid "Initialize the swap partitions:"
msgstr "Initialisieren Sie die Swap-Partitionen:"

msgid ""
"mkswap /dev/sda3\n"
"swapon /dev/sda3\n"
"mkswap /dev/sdb3\n"
"swapon /dev/sdb3\n"
msgstr ""
"mkswap /dev/sda3\n"
"swapon /dev/sda3\n"
"mkswap /dev/sdb3\n"
"swapon /dev/sdb3\n"

msgid "Mount the guix drive:"
msgstr "Binden Sie das Guix-Laufwerk ein:"

msgid ""
"mkdir /mnt/guix\n"
"mount /dev/md127 /mnt/guix\n"
msgstr ""
"mkdir /mnt/guix\n"
"mount /dev/md127 /mnt/guix\n"

msgid "Now is time to write an operating system declaration @file{os.scm} file; here is a sample:"
msgstr "Der nächste Schritt ist, in eine Datei @file{os.scm} eine Betriebssystemdeklaration zu schreiben, zum Beispiel:"

msgid ""
"(use-modules (gnu) (guix))\n"
"(use-service-modules networking ssh vpn virtualization sysctl admin mcron)\n"
"(use-package-modules ssh tls tmux vpn virtualization)\n"
"\n"
msgstr ""
"(use-modules (gnu) (guix))\n"
"(use-service-modules networking ssh vpn virtualization sysctl admin mcron)\n"
"(use-package-modules ssh tls tmux vpn virtualization)\n"
"\n"

msgid ""
"(operating-system\n"
"  (host-name \"kimsufi\")\n"
"\n"
msgstr ""
"(operating-system\n"
"  (host-name \"kimsufi\")\n"
"\n"

msgid ""
"  (bootloader (bootloader-configuration\n"
"\t       (bootloader grub-bootloader)\n"
"\t       (targets (list \"/dev/sda\" \"/dev/sdb\"))\n"
"\t       (terminal-outputs '(console))))\n"
"\n"
msgstr ""
"  (bootloader (bootloader-configuration\n"
"\t       (bootloader grub-bootloader)\n"
"\t       (targets (list \"/dev/sda\" \"/dev/sdb\"))\n"
"\t       (terminal-outputs '(console))))\n"
"\n"

msgid ""
"  ;; Add a kernel module for RAID-1 (aka. \"mirror\").\n"
"  (initrd-modules (cons* \"raid1\"  %base-initrd-modules))\n"
"\n"
msgstr ""
"  ;; Wir brauchen ein Kernel-Modul für RAID-1 (d.h. \"spiegeln\").\n"
"  (initrd-modules (cons* \"raid1\"  %base-initrd-modules))\n"
"\n"

msgid ""
"  (mapped-devices\n"
"   (list (mapped-device\n"
"          (source (list \"/dev/sda2\" \"/dev/sdb2\"))\n"
"          (target \"/dev/md127\")\n"
"          (type raid-device-mapping))))\n"
"\n"
msgstr ""
"  (mapped-devices\n"
"   (list (mapped-device\n"
"          (source (list \"/dev/sda2\" \"/dev/sdb2\"))\n"
"          (target \"/dev/md127\")\n"
"          (type raid-device-mapping))))\n"
"\n"

msgid ""
"  (swap-devices\n"
"   (list (swap-space\n"
"          (target \"/dev/sda3\"))\n"
"         (swap-space\n"
"          (target \"/dev/sdb3\"))))\n"
"\n"
msgstr ""
"  (swap-devices\n"
"   (list (swap-space\n"
"          (target \"/dev/sda3\"))\n"
"         (swap-space\n"
"          (target \"/dev/sdb3\"))))\n"
"\n"

msgid ""
"  (issue\n"
"   ;; Default contents for /etc/issue.\n"
"   \"\\\n"
"This is the GNU system at Kimsufi.  Welcome.\\n\")\n"
"\n"
msgstr ""
"  (issue\n"
"   ;; Voreingestellte Botschaft für /etc/issue.\n"
"   \"\\\n"
"Hier ist das GNU-System bei Kimsufi.  Willkommen.\\n\")\n"
"\n"

msgid ""
"  (file-systems (cons* (file-system\n"
"\t\t         (mount-point \"/\")\n"
"\t\t         (device \"/dev/md127\")\n"
"\t\t         (type \"ext4\")\n"
"\t\t         (dependencies mapped-devices))\n"
"\t\t       %base-file-systems))\n"
"\n"
msgstr ""
"  (file-systems (cons* (file-system\n"
"\t\t         (mount-point \"/\")\n"
"\t\t         (device \"/dev/md127\")\n"
"\t\t         (type \"ext4\")\n"
"\t\t         (dependencies mapped-devices))\n"
"\t\t       %base-file-systems))\n"
"\n"

msgid ""
"  (users (cons (user-account\n"
"\t        (name \"guix\")\n"
"\t        (comment \"guix\")\n"
"\t        (group \"users\")\n"
"\t        (supplementary-groups '(\"wheel\"))\n"
"\t        (home-directory \"/home/guix\"))\n"
"\t       %base-user-accounts))\n"
"\n"
msgstr ""
"  (users (cons (user-account\n"
"\t        (name \"guix\")\n"
"\t        (comment \"guix\")\n"
"\t        (group \"users\")\n"
"\t        (supplementary-groups '(\"wheel\"))\n"
"\t        (home-directory \"/home/guix\"))\n"
"\t       %base-user-accounts))\n"
"\n"

msgid ""
"  (sudoers-file\n"
"   (plain-file \"sudoers\" \"\\\n"
"root ALL=(ALL) ALL\n"
"%wheel ALL=(ALL) ALL\n"
"guix ALL=(ALL) NOPASSWD:ALL\\n\"))\n"
"\n"
msgstr ""
"  (sudoers-file\n"
"   (plain-file \"sudoers\" \"\\\n"
"root ALL=(ALL) ALL\n"
"%wheel ALL=(ALL) ALL\n"
"guix ALL=(ALL) NOPASSWD:ALL\\n\"))\n"
"\n"

msgid ""
"  ;; Globally-installed packages.\n"
"  (packages (cons* tmux gnutls wireguard-tools %base-packages))\n"
"  (services\n"
"   (cons*\n"
"    (service static-networking-service-type\n"
"\t     (list (static-networking\n"
"\t\t    (addresses (list (network-address\n"
"\t\t\t\t      (device \"enp3s0\")\n"
"\t\t\t\t      (value \"@var{server-ip-address}/24\"))))\n"
"\t\t    (routes (list (network-route\n"
"\t\t\t\t   (destination \"default\")\n"
"\t\t\t\t   (gateway \"@var{server-gateway}\"))))\n"
"\t\t    (name-servers '(\"213.186.33.99\")))))\n"
"\n"
msgstr ""
"  ;; Global installierte Pakete.\n"
"  (packages (cons* tmux gnutls wireguard-tools %base-packages))\n"
"  (services\n"
"   (cons*\n"
"    (service static-networking-service-type\n"
"\t     (list (static-networking\n"
"\t\t    (addresses (list (network-address\n"
"\t\t\t\t      (device \"enp3s0\")\n"
"\t\t\t\t      (value \"@var{Server-IP-Adresse}/24\"))))\n"
"\t\t    (routes (list (network-route\n"
"\t\t\t\t   (destination \"default\")\n"
"\t\t\t\t   (gateway \"@var{Server-Netzwerkzugang}\"))))\n"
"\t\t    (name-servers '(\"213.186.33.99\")))))\n"
"\n"

msgid ""
"    (service unattended-upgrade-service-type)\n"
"\n"
msgstr ""
"    (service unattended-upgrade-service-type)\n"
"\n"

msgid ""
"    (service openssh-service-type\n"
"\t     (openssh-configuration\n"
"\t      (openssh openssh-sans-x)\n"
"\t      (permit-root-login #f)\n"
"\t      (authorized-keys\n"
"\t       `((\"guix\" ,(plain-file \"@var{ssh-key-name.pub}\"\n"
"                                      \"@var{ssh-public-key-content}\"))))))\n"
"    (modify-services %base-services\n"
"      (sysctl-service-type\n"
"       config =>\n"
"       (sysctl-configuration\n"
"\t(settings (append '((\"net.ipv6.conf.all.autoconf\" . \"0\")\n"
"\t\t\t    (\"net.ipv6.conf.all.accept_ra\" . \"0\"))\n"
"\t\t\t  %default-sysctl-settings))))))))\n"
msgstr ""
"    (service openssh-service-type\n"
"\t     (openssh-configuration\n"
"\t      (openssh openssh-sans-x)\n"
"\t      (permit-root-login #f)\n"
"\t      (authorized-keys\n"
"\t       `((\"guix\" ,(plain-file \"@var{SSH-Name-des-Schlüssels.pub}\"\n"
"                                      \"@var{SSH-Inhalt-öffentl-Schlüssel}\"))))))\n"
"    (modify-services %base-services\n"
"      (sysctl-service-type\n"
"       config =>\n"
"       (sysctl-configuration\n"
"\t(settings (append '((\"net.ipv6.conf.all.autoconf\" . \"0\")\n"
"\t\t\t    (\"net.ipv6.conf.all.accept_ra\" . \"0\"))\n"
"\t\t\t  %default-sysctl-settings))))))))\n"

msgid "Don't forget to substitute the @var{server-ip-address}, @var{server-gateway}, @var{ssh-key-name} and @var{ssh-public-key-content} variables with your own values."
msgstr "Vergessen Sie nicht, anstelle der Variablen @var{Server-IP-Adresse}, @var{Server-Netzwerkzugang}, @var{SSH-Name-des-Schlüssels} und @var{SSH-Inhalt-öffentl-Schlüssel} die für Sie zutreffenden Werte zu schreiben."

msgid "The gateway is the last usable IP in your block so if you have a server with an IP of @samp{37.187.79.10} then its gateway will be @samp{37.187.79.254}."
msgstr "Der Netzwerkzugang (Gateway) ist die letzte nutzbare IP in Ihrem Block. Wenn Sie z.B.@: einen Server mit IP @samp{37.187.79.10} haben, dann ist sein Gateway @samp{37.187.79.254}."

msgid "Transfer your operating system declaration @file{os.scm} file on the server via the @command{scp} or @command{sftp} commands."
msgstr "Übertragen Sie Ihre Datei mit Betriebssystemdeklaration @file{os.scm} auf den Server mittels des Befehls @command{scp} oder @command{sftp}."

msgid "Now all that is left is to install Guix with a @code{guix system init} and restart."
msgstr "Bleibt nur noch, Guix mit @code{guix system init} zu installieren und neu zu starten."

msgid "However we first need to set up a chroot, because the root partition of the rescue system is mounted on an aufs partition and if you try to install Guix it will fail at the GRUB install step complaining about the canonical path of \"aufs\"."
msgstr "Aber das klappt nur, wenn wir vorher ein Chroot aufsetzen, weil die Wurzelpartition des laufenden Rettungssystems („rescue“) auf einer aufs-Partition eingebunden ist und, wenn Sie es versuchen, die Installation von Guix beim GRUB-Schritt fehlschlägt mit der Meldung, der kanonische Pfad von „aufs“ sei nicht ermittelbar."

msgid "Install packages that will be used in the chroot:"
msgstr "Installieren Sie die Pakete, die im Chroot benutzt werden:"

msgid "guix install bash-static parted util-linux-with-udev coreutils guix\n"
msgstr "guix install bash-static parted util-linux-with-udev coreutils guix\n"

msgid "Then run the following to create directories needed for the chroot:"
msgstr "Dann legt folgender Befehl die Verzeichnisse für das Chroot an:"

msgid ""
"cd /mnt && \\\n"
"mkdir -p bin etc gnu/store root/.guix-profile/ root/.config/guix/current \\\n"
"  var/guix proc sys dev\n"
msgstr ""
"cd /mnt && \\\n"
"mkdir -p bin etc gnu/store root/.guix-profile/ root/.config/guix/current \\\n"
"  var/guix proc sys dev\n"

msgid "Copy the host resolv.conf in the chroot:"
msgstr "Kopieren Sie die resolv.conf des Wirtssystems in die Chroot:"

msgid "cp /etc/resolv.conf etc/\n"
msgstr "cp /etc/resolv.conf etc/\n"

msgid "Mount block devices, the store and its database and the current guix config:"
msgstr "Binden Sie die blockorientierten Speichermedien, den Store, seine Datenbank sowie die aktuelle Guix-Konfiguration ein:"

msgid ""
"mount --rbind /proc /mnt/proc\n"
"mount --rbind /sys /mnt/sys\n"
"mount --rbind /dev /mnt/dev\n"
"mount --rbind /var/guix/ var/guix/\n"
"mount --rbind /gnu/store gnu/store/\n"
"mount --rbind /root/.config/ root/.config/\n"
"mount --rbind /root/.guix-profile/bin/ bin\n"
"mount --rbind /root/.guix-profile root/.guix-profile/\n"
msgstr ""
"mount --rbind /proc /mnt/proc\n"
"mount --rbind /sys /mnt/sys\n"
"mount --rbind /dev /mnt/dev\n"
"mount --rbind /var/guix/ var/guix/\n"
"mount --rbind /gnu/store gnu/store/\n"
"mount --rbind /root/.config/ root/.config/\n"
"mount --rbind /root/.guix-profile/bin/ bin\n"
"mount --rbind /root/.guix-profile root/.guix-profile/\n"

msgid "Chroot in /mnt and install the system:"
msgstr "Betreten Sie ein Chroot in /mnt und installieren Sie das System:"

msgid ""
"chroot /mnt/ /bin/bash\n"
"\n"
msgstr ""
"chroot /mnt/ /bin/bash\n"
"\n"

msgid "guix system init /root/os.scm /guix\n"
msgstr "guix system init /root/os.scm /guix\n"

msgid "Finally, from the web user interface (UI), change @samp{netboot} to @samp{boot to disk} and restart (also from the web UI)."
msgstr "Schlussendlich können Sie in der Web-Oberfläche von @samp{netboot} auf @samp{boot to disk} wechseln und neu starten (auch das tun Sie über die Web-Oberfläche)."

msgid "Wait a few minutes and try to ssh with @code{ssh guix@@@var{server-ip-address>} -i @var{path-to-your-ssh-key}}"
msgstr "Nach ein paar Minuten Wartezeit können Sie versuchen, Ihren Server mit SSH zu betreten: @code{ssh guix@@@var{Server-IP-Adresse} -i @var{Pfad-zu-Ihrem-SSH-Schlüssel}}"

msgid "You should have a Guix system up and running on Kimsufi; congratulations!"
msgstr "Sie sollten nun ein nutzbares Guix-System auf Kimsufi am Laufen haben; wir gratulieren!"

msgid "To bind mount a file system, one must first set up some definitions before the @code{operating-system} section of the system definition.  In this example we will bind mount a folder from a spinning disk drive to @file{/tmp}, to save wear and tear on the primary SSD, without dedicating an entire partition to be mounted as @file{/tmp}."
msgstr "Um ein Dateisystem per „bind mount“ einzubinden, braucht man zunächst ein paar Definitionen. Fügen Sie diese noch vor dem @code{operating-system}-Abschnitt Ihrer Systemdefinition ein. In diesem Beispiel binden wir ein Verzeichnis auf einem Magnetfestplattenlaufwerk an @file{/tmp}, um die primäre SSD weniger abzunutzen, ohne dass wir extra eine ganze Partition für @file{/tmp} erzeugen müssen."

msgid "First, the source drive that hosts the folder we wish to bind mount should be defined, so that the bind mount can depend on it."
msgstr "Als Erstes sollten wir das Quelllaufwerk definieren, wo wir das Verzeichnis für den Bind-Mount unterbringen. Dann kann der Bind-Mount es als Abhängigkeit benutzen."

msgid ""
"(define source-drive ;; \"source-drive\" can be named anything you want.\n"
"   (file-system\n"
"    (device (uuid \"UUID goes here\"))\n"
"    (mount-point \"/path-to-spinning-disk-goes-here\")\n"
"    (type \"ext4\"))) ;Make sure to set this to the appropriate type for your drive.\n"
msgstr ""
"(define quelllaufwerk ;; \"quelllaufwerk\" kann man nennen, wie man will\n"
"   (file-system\n"
"    (device (uuid \"hier kommt die UUID hin\"))\n"
"    (mount-point \"/hier-der-pfad-zur-magnetfestplatte\")\n"
"    (type \"ext4\"))) ;; Legen Sie den dazu passenden Typ fest.\n"

msgid "The source folder must also be defined, so that guix will know it's not a regular block device, but a folder."
msgstr "Auch das Quellverzeichnis muss so definiert werden, dass Guix es nicht für ein reguläres blockorientiertes Gerät hält, sondern es als Verzeichnis erkennt."

msgid ""
";; \"source-directory\" can be named any valid variable name.\n"
"(define (%source-directory) \"/path-to-spinning-disk-goes-here/tmp\")\n"
msgstr ""
";; Dem \"quellverzeichnis\" kann man einen beliebigen gültigen Variablennamen geben.\n"
"(define (%quellverzeichnis) \"/hier-der-pfad-zur-magnetfestplatte/tmp\")\n"

msgid "Finally, inside the @code{file-systems} definition, we must add the mount itself."
msgstr "In der Definition des @code{file-systems}-Felds müssen wir die Einbindung einfügen."

msgid ""
"(file-systems (cons*\n"
"\n"
msgstr ""
"(file-systems (cons*\n"
"\n"

msgid ""
"                ...<other drives omitted for clarity>...\n"
"\n"
msgstr ""
"                …<hier würden andere Laufwerke stehen>…\n"
"\n"

msgid ""
"                ;; Must match the name you gave the source drive in the earlier definition.\n"
"                source-drive\n"
"\n"
msgstr ""
"                ;; Muss dem Namen entsprechen, den Sie vorher ans Quelllaufwerk\n"
"                ;; vergeben haben.\n"
"                quelllaufwerk\n"
"\n"

msgid ""
"                (file-system\n"
"                 ;; Make sure \"source-directory\" matches your earlier definition.\n"
"                 (device (%source-directory))\n"
"                 (mount-point \"/tmp\")\n"
"                 ;; We are mounting a folder, not a partition, so this type needs to be \"none\"\n"
"                 (type \"none\")\n"
"                 (flags '(bind-mount))\n"
"                 ;; Ensure \"source-drive\" matches what you've named the variable for the drive.\n"
"                 (dependencies (list source-drive))\n"
"                 )\n"
"\n"
msgstr ""
"                (file-system\n"
"                 ;; Geben Sie Acht, dass das \"quellverzeichnis\" so heißt wie in\n"
"                 ;; der Definition vorher.\n"
"                 (device (%quellverzeichnis))\n"
"                 (mount-point \"/tmp\")\n"
"                 ;; Wir binden ein Verzeichnis und keine Partition ein, daher\n"
"                 ;; muss dieser Typ \"none\" sein.\n"
"                 (type \"none\")\n"
"                 (flags '(bind-mount))\n"
"                 ;; Geben Sie Acht, dass \"quelllaufwerk\" dem Namen entspricht,\n"
"                 ;; den Sie der Variablen für das Laufwerk gegeben haben.\n"
"                 (dependencies (list quelllaufwerk))\n"
"                 )\n"
"\n"

msgid ""
"                 ...<other drives omitted for clarity>...\n"
"\n"
msgstr ""
"                 …<hier würden andere Laufwerke stehen>…\n"
"\n"

msgid "                ))\n"
msgstr "                ))\n"

msgid "Guix daemon can use a HTTP proxy to get substitutes, here we are configuring it to get them via Tor."
msgstr "Der Guix-Daemon kann einen HTTP-Proxy benutzen, wenn er Substitute herunterlädt. Wir wollen ihn hier so konfigurieren, dass Substitute über Tor bezogen werden."

msgid "Warning"
msgstr "Warnung"

msgid "@emph{Not all} Guix daemon's traffic will go through Tor! Only HTTP/HTTPS will get proxied; FTP, Git protocol, SSH, etc connections will still go through the clearnet.  Again, this configuration isn't foolproof some of your traffic won't get routed by Tor at all.  Use it at your own risk."
msgstr "@emph{Nicht aller} Datenverkehr des Guix-Daemons wird dadurch über Tor laufen! Nur HTTP und HTTPS durchläuft den Proxy, @emph{nicht} so ist es bei FTP, dem Git-Protokokl, SSH etc.@:, diese laufen weiterhin durch’s „Clearnet“. Die Konfiguration ist also @emph{nicht} narrensicher; ein Teil Ihres Datenverkehrs wird gar nicht über Tor geleitet. Verwenden Sie sie nur auf Ihr eigenes Risiko!"

msgid "Also note that the procedure described here applies only to package substitution. When you update your guix distribution with @command{guix pull}, you still need to use @command{torsocks} if you want to route the connection to guix's git repository servers through Tor."
msgstr "Beachten Sie außerdem, dass sich die hier beschriebene Prozedur nur auf Paketsubstitute bezieht. Wenn Sie Ihre Guix-Distribution mit @command{guix pull} aktualisieren, müssen Sie noch immer @command{torsocks} benutzen, wenn Sie die Verbindung zu Guix’ Git-Repository über Tor leiten wollen."

msgid "Guix's substitute server is available as a Onion service, if you want to use it to get your substitutes through Tor configure your system as follow:"
msgstr "Der Substitutserver von Guix ist als Onion-Dienst verfügbar, wenn Sie ihn benutzen möchten, um Ihre Substitute über Tor zu laden, dann konfigurieren Sie Ihr System wie folgt:"

msgid ""
"(use-modules (gnu))\n"
"(use-service-module base networking)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-service-module base networking)\n"
"\n"

msgid ""
"(operating-system\n"
"  …\n"
"  (services\n"
"    (cons\n"
"      (service tor-service-type\n"
"              (tor-configuration\n"
"                (config-file (plain-file \"tor-config\"\n"
"                                         \"HTTPTunnelPort 127.0.0.1:9250\"))))\n"
"      (modify-services %base-services\n"
"        (guix-service-type\n"
"          config => (guix-configuration\n"
"                      (inherit config)\n"
"                      ;; ci.guix.gnu.org's Onion service\n"
"                      (substitute-urls \"\\\n"
"@value{SUBSTITUTE-TOR-URL}\")\n"
"                      (http-proxy \"http://localhost:9250\")))))))\n"
msgstr ""
"(operating-system\n"
"  …\n"
"  (services\n"
"    (cons\n"
"      (service tor-service-type\n"
"              (tor-configuration\n"
"                (config-file (plain-file \"tor-config\"\n"
"                                         \"HTTPTunnelPort 127.0.0.1:9250\"))))\n"
"      (modify-services %base-services\n"
"        (guix-service-type\n"
"          config => (guix-configuration\n"
"                      (inherit config)\n"
"                      ;; Onion-Dienst von ci.guix.gnu.org\n"
"                      (substitute-urls \"\\\n"
"@value{SUBSTITUTE-TOR-URL}\")\n"
"                      (http-proxy \"http://localhost:9250\")))))))\n"

msgid "This will keep a tor process running that provides a HTTP CONNECT tunnel which will be used by @command{guix-daemon}.  The daemon can use other protocols than HTTP(S) to get remote resources, request using those protocols won't go through Tor since we are only setting a HTTP tunnel here.  Note that @code{substitutes-urls} is using HTTPS and not HTTP or it won't work, that's a limitation of Tor's tunnel; you may want to use @command{privoxy} instead to avoid such limitations."
msgstr "Dadurch wird ständig ein Tor-Prozess laufen, der einen HTTP-CONNECT-Tunnel für die Nutzung durch den @command{guix-daemon} bereitstellt. Der Daemon kann andere Protokolle als HTTP(S) benutzen, um entfernte Ressourcen abzurufen, und Anfragen über solche Protokolle werden Tor @emph{nicht} durchlaufen, weil wir hier nur einen HTTP-Tunnel festlegen. Beachten Sie, dass wir für @code{substitutes-urls} HTTPS statt HTTP benutzen, sonst würde es nicht funktionieren. Dabei handelt es sich um eine Einschränkung von Tors Tunnel; vielleicht möchten Sie stattdessen @command{privoxy} benutzen, um dieser Einschränkung nicht zu unterliegen."

msgid "If you don't want to always get substitutes through Tor but using it just some of the times, then skip the @code{guix-configuration}.  When you want to get a substitute from the Tor tunnel run:"
msgstr "Wenn Sie Substitute nicht immer, sondern nur manchmal über Tor beziehen wollen, dann überspringen Sie das mit der @code{guix-configuration}. Führen Sie einfach das hier aus, wenn Sie ein Substitut über den Tor-Tunnel laden möchten:"

msgid ""
"sudo herd set-http-proxy guix-daemon http://localhost:9250\n"
"guix build \\\n"
"  --substitute-urls=@value{SUBSTITUTE-TOR-URL} @dots{}\n"
msgstr ""
"sudo herd set-http-proxy guix-daemon http://localhost:9250\n"
"guix build \\\n"
"  --substitute-urls=@value{SUBSTITUTE-TOR-URL} @dots{}\n"

msgid "nginx, lua, openresty, resty"
msgstr "nginx, lua, openresty, resty"

msgid "NGINX could be extended with Lua scripts."
msgstr "NGINX lässt sich mit Lua-Skripts erweitern."

msgid "Guix provides NGINX service with ability to load Lua module and specific Lua packages, and reply to requests by evaluating Lua scripts."
msgstr "Guix stellt einen NGINX-Dienst bereit, mit dem das Lua-Modul und bestimmte Lua-Pakete geladen werden können, so dass Anfragen beantwortet werden, indem Lua-Skripte ausgewertet werden."

msgid "The following example demonstrates system definition with configuration to evaluate @file{index.lua} Lua script on HTTP request to @uref{http://localhost/hello} endpoint:"
msgstr "Folgendes Beispiel zeigt eine Systemdefinition mit Einstellungen, um das Lua-Skript @file{index.lua} bei HTTP-Anfragen an den Endpunkt @uref{http://localhost/hello} auszuwerten:"

msgid ""
"local shell = require \"resty.shell\"\n"
"\n"
msgstr ""
"local shell = require \"resty.shell\"\n"
"\n"

msgid ""
"local stdin = \"\"\n"
"local timeout = 1000  -- ms\n"
"local max_size = 4096  -- byte\n"
"\n"
msgstr ""
"local stdin = \"\"\n"
"local timeout = 1000  -- ms\n"
"local max_size = 4096  -- byte\n"
"\n"

msgid ""
"local ok, stdout, stderr, reason, status =\n"
"   shell.run([[/run/current-system/profile/bin/ls /tmp]], stdin, timeout, max_size)\n"
"\n"
msgstr ""
"local ok, stdout, stderr, reason, status =\n"
"   shell.run([[/run/current-system/profile/bin/ls /tmp]], stdin, timeout, max_size)\n"
"\n"

msgid "ngx.say(stdout)\n"
msgstr "ngx.say(stdout)\n"

msgid ""
"(use-modules (gnu))\n"
"(use-service-modules #;… web)\n"
"(use-package-modules #;… lua)\n"
"(operating-system\n"
"  ;; …\n"
"  (services\n"
"   ;; …\n"
"   (service nginx-service-type\n"
"            (nginx-configuration\n"
"             (modules\n"
"              (list\n"
"               (file-append nginx-lua-module \"/etc/nginx/modules/ngx_http_lua_module.so\")))\n"
"             (lua-package-path (list lua-resty-core\n"
"                                     lua-resty-lrucache\n"
"                                     lua-resty-signal\n"
"                                     lua-tablepool\n"
"                                     lua-resty-shell))\n"
"             (lua-package-cpath (list lua-resty-signal))\n"
"             (server-blocks\n"
"              (list (nginx-server-configuration\n"
"                     (server-name '(\"localhost\"))\n"
"                     (listen '(\"80\"))\n"
"                     (root \"/etc\")\n"
"                     (locations (list\n"
"                                 (nginx-location-configuration\n"
"                                  (uri \"/hello\")\n"
"                                  (body (list #~(format #f \"content_by_lua_file ~s;\"\n"
"                                                        #$(local-file \"index.lua\"))))))))))))))\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-service-modules #;… web)\n"
"(use-package-modules #;… lua)\n"
"(operating-system\n"
"  ;; …\n"
"  (services\n"
"   ;; …\n"
"   (service nginx-service-type\n"
"            (nginx-configuration\n"
"             (modules\n"
"              (list\n"
"               (file-append nginx-lua-module \"/etc/nginx/modules/ngx_http_lua_module.so\")))\n"
"             (lua-package-path (list lua-resty-core\n"
"                                     lua-resty-lrucache\n"
"                                     lua-resty-signal\n"
"                                     lua-tablepool\n"
"                                     lua-resty-shell))\n"
"             (lua-package-cpath (list lua-resty-signal))\n"
"             (server-blocks\n"
"              (list (nginx-server-configuration\n"
"                     (server-name '(\"localhost\"))\n"
"                     (listen '(\"80\"))\n"
"                     (root \"/etc\")\n"
"                     (locations (list\n"
"                                 (nginx-location-configuration\n"
"                                  (uri \"/hello\")\n"
"                                  (body (list #~(format #f \"content_by_lua_file ~s;\"\n"
"                                                        #$(local-file \"index.lua\"))))))))))))))\n"

msgid "mpd"
msgstr "mpd"

msgid "music server, headless"
msgstr "Musik-Server, ohne Oberfläche"

msgid "bluetooth, ALSA configuration"
msgstr "Bluetooth, ALSA-Konfiguration"

msgid "MPD, the Music Player Daemon, is a flexible server-side application for playing music.  Client programs on different machines on the network --- a mobile phone, a laptop, a desktop workstation --- can connect to it to control the playback of audio files from your local music collection.  MPD decodes the audio files and plays them back on one or many outputs."
msgstr "Bei MPD, dem Music Player Daemon, handelt es sich um eine vielseitige Server-Anwendung, mit der Sie Musik spielen lassen. Client-Programme an verschiedenen Maschinen im Netzwerk@tie{}– einem Mobiltelefon, Laptop oder einer Desktop-Workstation@tie{}– können sich damit verbinden und die Wiedergabe der Tondateien steuern, die Ihre eigene Musiksammung enthalten. MPD dekodiert die Tondateien und spielt sie auf einer oder mehreren Ausgaben ab."

msgid "By default MPD will play to the default audio device.  In the example below we make things a little more interesting by setting up a headless music server.  There will be no graphical user interface, no Pulseaudio daemon, and no local audio output.  Instead we will configure MPD with two outputs: a bluetooth speaker and a web server to serve audio streams to any streaming media player."
msgstr "MPD ist so voreingestellt, dass auf dem Standardtonausgabegerät abgespielt wird. Im folgenden Beispiel legen wir eine interessantere Architektur fest: einen Musik-Server, der ohne Bildschirm betrieben werden kann. Eine grafische Oberfläche fehlt, ein Pulseaudio-Daemon ist auch nicht da und es gibt keine lokale Tonausgabe. Stattdessen richten wir MPD für zwei Ausgaben ein: zum einen ein Bluetooth-Lautsprecher, zum anderen ein Web-Server, der Audio an Mediaplayer streamen kann."

msgid "Bluetooth is often rather frustrating to set up.  You will have to pair your Bluetooth device and make sure that the device is automatically connected as soon as it powers on.  The Bluetooth system service returned by the @code{bluetooth-service} procedure provides the infrastructure needed to set this up."
msgstr "Bluetooth einzurichten, ist oft eher frustrierend. Sie müssen Ihr Bluetooth-Gerät koppeln und dabei beachten, dass zum Gerät automatisch eine Verbindung aufgebaut sein soll, sobald es an ist. Das können Sie mit dem Bluetooth-Systemdienst umsetzen, der von der Prozedur @code{bluetooth-service} geliefert wird."

msgid "Reconfigure your system with at least the following services and packages:"
msgstr "Rekonfigurieren Sie Ihr System mit mindestens den folgenden Diensten und Paketen:"

msgid ""
"(operating-system\n"
"  ;; …\n"
"  (packages (cons* bluez bluez-alsa\n"
"                   %base-packages))\n"
"  (services\n"
"   ;; …\n"
"   (dbus-service #:services (list bluez-alsa))\n"
"   (bluetooth-service #:auto-enable? #t)))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (packages (cons* bluez bluez-alsa\n"
"                   %base-packages))\n"
"  (services\n"
"   ;; …\n"
"   (dbus-service #:services (list bluez-alsa))\n"
"   (bluetooth-service #:auto-enable? #t)))\n"

msgid "Start the @code{bluetooth} service and then use @command{bluetoothctl} to scan for Bluetooth devices.  Try to identify your Bluetooth speaker and pick out its device ID from the resulting list of devices that is indubitably dominated by a baffling smorgasbord of your neighbors' home automation gizmos.  This only needs to be done once:"
msgstr "Starten Sie den @code{bluetooth}-Dienst und benutzen Sie dann @command{bluetoothctl}, um einen Scan nach Bluetooth-Geräten durchzuführen. Versuchen Sie, Ihren Bluetooth-Lautsprecher unter dem schwedischen Büfett aus anderen Smart-Home-Gerätschaften Ihrer Nachbarn auszumachen, und merken Sie sich dessen Device-ID in der angezeigten Liste. Das einmal zu machen, genügt:"

msgid ""
"$ bluetoothctl \n"
"[NEW] Controller 00:11:22:33:95:7F BlueZ 5.40 [default]\n"
"\n"
msgstr ""
"$ bluetoothctl \n"
"[NEW] Controller 00:11:22:33:95:7F BlueZ 5.40 [default]\n"
"\n"

msgid ""
"[bluetooth]# power on\n"
"[bluetooth]# Changing power on succeeded\n"
"\n"
msgstr ""
"[bluetooth]# power on\n"
"[bluetooth]# Changing power on succeeded\n"
"\n"

msgid ""
"[bluetooth]# agent on\n"
"[bluetooth]# Agent registered\n"
"\n"
msgstr ""
"[bluetooth]# agent on\n"
"[bluetooth]# Agent registered\n"
"\n"

msgid ""
"[bluetooth]# default-agent\n"
"[bluetooth]# Default agent request successful\n"
"\n"
msgstr ""
"[bluetooth]# default-agent\n"
"[bluetooth]# Default agent request successful\n"
"\n"

msgid ""
"[bluetooth]# scan on\n"
"[bluetooth]# Discovery started\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: yes\n"
"[NEW] Device AA:BB:CC:A4:AA:CD My Bluetooth Speaker\n"
"[NEW] Device 44:44:FF:2A:20:DC My Neighbor's TV\n"
"@dots{}\n"
"\n"
msgstr ""
"[bluetooth]# scan on\n"
"[bluetooth]# Discovery started\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: yes\n"
"[NEW] Device AA:BB:CC:A4:AA:CD My Bluetooth Speaker\n"
"[NEW] Device 44:44:FF:2A:20:DC My Neighbor's TV\n"
"…\n"
"\n"

msgid ""
"[bluetooth]# pair AA:BB:CC:A4:AA:CD\n"
"Attempting to pair with AA:BB:CC:A4:AA:CD\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"\n"
msgstr ""
"[bluetooth]# pair AA:BB:CC:A4:AA:CD\n"
"Attempting to pair with AA:BB:CC:A4:AA:CD\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"\n"

msgid ""
"[My Bluetooth Speaker]# [CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110b-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110c-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110e-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Paired: yes\n"
"Pairing successful\n"
"\n"
msgstr ""
"[Mein Bluetooth-Lautsprecher]# [CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110b-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110c-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110e-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Paired: yes\n"
"Pairing successful\n"
"\n"

msgid ""
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: no\n"
"\n"
msgstr ""
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: no\n"
"\n"

msgid ""
"[bluetooth]# \n"
"[bluetooth]# trust AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD Trusted: yes\n"
"Changing AA:BB:CC:A4:AA:CD trust succeeded\n"
"\n"
msgstr ""
"[bluetooth]# \n"
"[bluetooth]# trust AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD Trusted: yes\n"
"Changing AA:BB:CC:A4:AA:CD trust succeeded\n"
"\n"

msgid ""
"[bluetooth]# \n"
"[bluetooth]# connect AA:BB:CC:A4:AA:CD\n"
"Attempting to connect to AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD RSSI: -63\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"Connection successful\n"
"\n"
msgstr ""
"[bluetooth]# \n"
"[bluetooth]# connect AA:BB:CC:A4:AA:CD\n"
"Attempting to connect to AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD RSSI: -63\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"Connection successful\n"
"\n"

msgid ""
"[My Bluetooth Speaker]# scan off\n"
"[CHG] Device AA:BB:CC:A4:AA:CD RSSI is nil\n"
"Discovery stopped\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: no\n"
msgstr ""
"[My Bluetooth Speaker]# scan off\n"
"[CHG] Device AA:BB:CC:A4:AA:CD RSSI is nil\n"
"Discovery stopped\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: no\n"

msgid "Congratulations, you can now automatically connect to your Bluetooth speaker!"
msgstr "Wir gratulieren: Sie bekommen jetzt eine automatische Verbindung zu Ihrem Bluetooth-Speaker!"

msgid "It is now time to configure ALSA to use the @emph{bluealsa} Bluetooth module, so that you can define an ALSA pcm device corresponding to your Bluetooth speaker.  For a headless server using @emph{bluealsa} with a fixed Bluetooth device is likely simpler than configuring Pulseaudio and its stream switching behavior.  We configure ALSA by crafting a custom @code{alsa-configuration} for the @code{alsa-service-type}.  The configuration will declare a @code{pcm} type @code{bluealsa} from the @code{bluealsa} module provided by the @code{bluez-alsa} package, and then define a @code{pcm} device of that type for your Bluetooth speaker."
msgstr "Es wird Zeit, ALSA einzurichten. Dabei müssen Sie es anweisen, das Bluetooth-Modul @emph{bluealsa} zu verwenden, so dass Sie ein ALSA-pcm-Gerät definieren können, das Ihrem Bluetooth-Lautsprecher entspricht. Wenn Ihr Server keine Bedienelemente haben soll, ist es einfacher, wenn Sie @emph{bluealsa} mit einem festen Bluetooth-Gerät verbinden lassen, statt mit Pulseaudio ein Umschalten der Streams einzurichten. ALSA einzurichten, geht so: Wir schreiben eine passende @code{alsa-configuration} für den @code{alsa-service-type}. In der Konfiguration deklarieren Sie den @code{pcm}-Typ @code{bluealsa} aus dem Modul @code{bluealsa} des Pakets @code{bluez-alsa}. Für diesen Typ definieren Sie dann ein @code{pcm}-Gerät für Ihren Bluetooth-Lautsprecher."

msgid "All that is left then is to make MPD send audio data to this ALSA device.  We also add a secondary MPD output that makes the currently played audio files available as a stream through a web server on port 8080.  When enabled a device on the network could listen to the audio stream by connecting any capable media player to the HTTP server on port 8080, independent of the status of the Bluetooth speaker."
msgstr "Was bleibt, ist, MPD die Audiodaten an dieses ALSA-Gerät schicken zu lassen. Zusätzlich fügen wir eine zweite MPD-Ausgabe hinzu, womit die aktuell abgespielten Tondateien auch als Stream über einen Web-Server auf Port 8080 dargeboten werden. Es ermöglicht, dass man mit anderen Geräten im Netzwerk einen tauglichen Mediaplayer die Daten vom HTTP-Server, auf Port 8080, abspielen lässt, egal ob der Bluetooth-Lautsprecher läuft."

msgid "What follows is the outline of an @code{operating-system} declaration that should accomplish the above-mentioned tasks:"
msgstr "Es folgt ein Umriss, wie eine Betriebssystemdeklaration aussehen kann, die die oben genannten Aufgaben erfüllen dürfte:"

msgid ""
"(use-modules (gnu))\n"
"(use-service-modules audio dbus sound #;… etc)\n"
"(use-package-modules audio linux #;… etc)\n"
"(operating-system\n"
"  ;; …\n"
"  (packages (cons* bluez bluez-alsa\n"
"                   %base-packages))\n"
"  (services\n"
"   ;; …\n"
"   (service mpd-service-type\n"
"            (mpd-configuration\n"
"             (user \"your-username\")\n"
"             (music-dir \"/path/to/your/music\")\n"
"             (address \"192.168.178.20\")\n"
"             (outputs (list (mpd-output\n"
"                             (type \"alsa\")\n"
"                             (name \"MPD\")\n"
"                             (extra-options\n"
"                              ;; Use the same name as in the ALSA\n"
"                              ;; configuration below.\n"
"                              '((device . \"pcm.btspeaker\"))))\n"
"                            (mpd-output\n"
"                             (type \"httpd\")\n"
"                             (name \"streaming\")\n"
"                             (enabled? #false)\n"
"                             (always-on? #true)\n"
"                             (tags? #true)\n"
"                             (mixer-type 'null)\n"
"                             (extra-options\n"
"                              '((encoder . \"vorbis\")\n"
"                                (port    . \"8080\")\n"
"                                (bind-to-address . \"192.168.178.20\")\n"
"                                (max-clients . \"0\") ;no limit\n"
"                                (quality . \"5.0\")\n"
"                                (format  . \"44100:16:1\"))))))))\n"
"   (dbus-service #:services (list bluez-alsa))\n"
"   (bluetooth-service #:auto-enable? #t)\n"
"   (service alsa-service-type\n"
"            (alsa-configuration\n"
"             (pulseaudio? #false) ;we don't need it\n"
"             (extra-options\n"
"              #~(string-append \"\\\n"
"# Declare Bluetooth audio device type \\\"bluealsa\\\" from bluealsa module\n"
"pcm_type.bluealsa @{\n"
"    lib \\\"\"\n"
"#$(file-append bluez-alsa \"/lib/alsa-lib/libasound_module_pcm_bluealsa.so\") \"\\\"\n"
"@}\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-service-modules audio dbus sound #;… etc)\n"
"(use-package-modules audio linux #;… etc)\n"
"(operating-system\n"
"  ;; …\n"
"  (packages (cons* bluez bluez-alsa\n"
"                   %base-packages))\n"
"  (services\n"
"   ;; …\n"
"   (service mpd-service-type\n"
"            (mpd-configuration\n"
"             (user \"ihr-benutzername\")\n"
"             (music-dir \"/pfad/zu/ihrer/musik\")\n"
"             (address \"192.168.178.20\")\n"
"             (outputs (list (mpd-output\n"
"                             (type \"alsa\")\n"
"                             (name \"MPD\")\n"
"                             (extra-options\n"
"                              ;; Der Name muss derselbe sein wie in der\n"
"                              ;; ALSA-Konfiguration unten.\n"
"                              '((device . \"pcm.btspeaker\"))))\n"
"                            (mpd-output\n"
"                             (type \"httpd\")\n"
"                             (name \"streaming\")\n"
"                             (enabled? #false)\n"
"                             (always-on? #true)\n"
"                             (tags? #true)\n"
"                             (mixer-type 'null)\n"
"                             (extra-options\n"
"                              '((encoder . \"vorbis\")\n"
"                                (port    . \"8080\")\n"
"                                (bind-to-address . \"192.168.178.20\")\n"
"                                (max-clients . \"0\") ;keine Begrenzung\n"
"                                (quality . \"5.0\")\n"
"                                (format  . \"44100:16:1\"))))))))\n"
"   (dbus-service #:services (list bluez-alsa))\n"
"   (bluetooth-service #:auto-enable? #t)\n"
"   (service alsa-service-type\n"
"            (alsa-configuration\n"
"             (pulseaudio? #false) ;brauchen wir nicht\n"
"             (extra-options\n"
"              #~(string-append \"\\\n"
"# Bluetooth-Audiogerätetyp \\\"bluealsa\\\" aus dem bluealsa-Modul deklarieren\n"
"pcm_type.bluealsa @{\n"
"    lib \\\"\"\n"
"#$(file-append bluez-alsa \"/lib/alsa-lib/libasound_module_pcm_bluealsa.so\") \"\\\"\n"
"@}\n"
"\n"

msgid ""
"# Declare control device type \\\"bluealsa\\\" from the same module\n"
"ctl_type.bluealsa @{\n"
"    lib \\\"\"\n"
"#$(file-append bluez-alsa \"/lib/alsa-lib/libasound_module_ctl_bluealsa.so\") \"\\\"\n"
"@}\n"
"\n"
msgstr ""
"# Control device type \\\"bluealsa\\\" aus demselben Modul deklarieren\n"
"ctl_type.bluealsa @{\n"
"    lib \\\"\"\n"
"#$(file-append bluez-alsa \"/lib/alsa-lib/libasound_module_ctl_bluealsa.so\") \"\\\"\n"
"@}\n"
"\n"

msgid ""
"# Define the actual Bluetooth audio device.\n"
"pcm.btspeaker @{\n"
"    type bluealsa\n"
"    device \\\"AA:BB:CC:A4:AA:CD\\\" # unique device identifier\n"
"    profile \\\"a2dp\\\"\n"
"@}\n"
"\n"
msgstr ""
"# Das eigentliche Bluetooth-Audiogerät definieren.\n"
"pcm.btspeaker @{\n"
"    type bluealsa\n"
"    device \\\"AA:BB:CC:A4:AA:CD\\\" # Unique Device Identifier\n"
"    profile \\\"a2dp\\\"\n"
"@}\n"
"\n"

msgid ""
"# Define an associated controller.\n"
"ctl.btspeaker @{\n"
"    type bluealsa\n"
"@}\n"
"\"))))))\n"
msgstr ""
"# Einen zugehörigen Controller definieren.\n"
"ctl.btspeaker @{\n"
"    type bluealsa\n"
"@}\n"
"\"))))))\n"

msgid "Enjoy the music with the MPD client of your choice or a media player capable of streaming via HTTP!"
msgstr "Genießen Sie nun, wie die Musik aus dem MPD-Client Ihrer Wahl erschallt, oder einem Mediaplayer, der über HTTP streamen kann!"

msgid "The kernel Linux provides a number of shared facilities that are available to processes in the system.  These facilities include a shared view on the file system, other processes, network devices, user and group identities, and a few others.  Since Linux 3.19 a user can choose to @emph{unshare} some of these shared facilities for selected processes, providing them (and their child processes) with a different view on the system."
msgstr "Durch den Linux-Kernel werden den Systemprozessen zahlreiche gemeinsame Ressourcen zur Verfügung gestellt, etwa eine gemeinsame Sicht auf das Dateisystem, auf andere Prozesse, Netzwerkgeräte, Benutzer- und Gruppenidentitäten und noch mehr. Seit Linux 3.19 ist es möglich, dass Benutzer einige dieser Ressourcen trennen und ausgewählten Prozessen (und deren Kindprozessen) eine andere Sicht auf das System geben."

msgid "A process with an unshared @code{mount} namespace, for example, has its own view on the file system --- it will only be able to see directories that have been explicitly bound in its mount namespace.  A process with its own @code{proc} namespace will consider itself to be the only process running on the system, running as PID 1."
msgstr "Wenn ein Prozess zum Beispiel einen getrennten @code{mount}-Namensraum bekommt, hat er eine eigene Sicht auf das Dateisystem@tie{}– in seiner Welt kann er nur Verzeichnisse sehen, die in seinen @code{mount}-Namensraum eingebunden worden sind. Wenn ein Prozess über seinen eigenen @code{proc}-Namensraum verfügt, scheint es, als sei er der einzige Prozess, der auf dem System läuft, und seine Prozesskennung ist die PID 1."

msgid "Guix uses these kernel features to provide fully isolated environments and even complete Guix System containers, lightweight virtual machines that share the host system's kernel.  This feature comes in especially handy when using Guix on a foreign distribution to prevent interference from foreign libraries or configuration files that are available system-wide."
msgstr "Guix bringt diese Kernelfunktionen für völlig isolierte Umgebungen und sogar Guix System in Containern zum Einsatz@tie{}– Container sind wie leichtgewichtige virtuelle Maschinen, die denselben Kernel wie das Wirtssystem benutzen. Daraus können Sie besonders dann Ihren Nutzen ziehen, wenn Sie Guix auf einer Fremddistribution verwenden, denn so können Sie ausschließen, dass die systemweit zugänglichen fremden Bibliotheken und Konfigurationsdateien störenden Einfluss hätten."

msgid "The easiest way to get started is to use @command{guix shell} with the @option{--container} option.  @xref{Invoking guix shell,,, guix, GNU Guix Reference Manual} for a reference of valid options."
msgstr "Der einfachste Einstieg ist, @command{guix shell} mit der Befehlszeilenoption @option{--container} aufzurufen. Siehe @ref{Aufruf von guix shell,,, guix.de, Referenzhandbuch zu GNU Guix} für eine Referenz der möglichen Optionen."

msgid "The following snippet spawns a minimal shell process with most namespaces unshared from the system.  The current working directory is visible to the process, but anything else on the file system is unavailable.  This extreme isolation can be very useful when you want to rule out any sort of interference from environment variables, globally installed libraries, or configuration files."
msgstr "Folgende Befehle legen einen minimalen Shell-Prozess an, bei dem die meisten Namensräume vom übrigen System getrennt sind. Das aktuelle Arbeitsverzeichnis bleibt für den Prozess sichtbar, aber das restliche Dateisystem ist unzugänglich. Diese äußerste Isolation kann sehr hilfreich sein, wenn Sie jeglichen Einfluss durch Umgebungsvariable, global installierte Bibliotheken oder Konfigurationsdateien ausschließen möchten."

msgid "guix shell --container\n"
msgstr "guix shell --container\n"

msgid "It is a bleak environment, barren, desolate.  You will find that not even the GNU coreutils are available here, so to explore this deserted wasteland you need to use built-in shell commands.  Even the usually gigantic @file{/gnu/store} directory is reduced to a faint shadow of itself."
msgstr "Diese Umgebung ist kahl und leer. Sie haben in der brachen Umgebung nicht einmal die GNU coreutils und müssen zu ihrer Erkundung mit den in die Shell eingebauten Werkzeugen vorliebnehmen. Selbst das Verzeichnis @file{/gnu/store} hat seine für gewöhnlich gigantischen Ausmaße verloren und ist nur mehr ein Schatten seiner selbst."

msgid ""
"$ echo /gnu/store/*\n"
"/gnu/store/@dots{}-gcc-10.3.0-lib\n"
"/gnu/store/@dots{}-glibc-2.33\n"
"/gnu/store/@dots{}-bash-static-5.1.8\n"
"/gnu/store/@dots{}-ncurses-6.2.20210619\n"
"/gnu/store/@dots{}-bash-5.1.8\n"
"/gnu/store/@dots{}-profile\n"
"/gnu/store/@dots{}-readline-8.1.1\n"
msgstr ""
"$ echo /gnu/store/*\n"
"/gnu/store/…-gcc-10.3.0-lib\n"
"/gnu/store/…-glibc-2.33\n"
"/gnu/store/…-bash-static-5.1.8\n"
"/gnu/store/…-ncurses-6.2.20210619\n"
"/gnu/store/…-bash-5.1.8\n"
"/gnu/store/…-profile\n"
"/gnu/store/…-readline-8.1.1\n"

msgid "exiting a container"
msgstr "Container verlassen"

msgid "There isn't much you can do in an environment like this other than exiting it.  You can use @key{^D} or @command{exit} to terminate this limited shell environment."
msgstr "In einer solchen Umgebung gibt es nichts für Sie zu tun außer die Umgebung wieder zu verlassen. Das geht, indem Sie @key{^D} drücken oder @command{exit} aufrufen, womit die eingeschränkte Shell-Umgebung ihr Ende findet."

msgid "exposing directories, container"
msgstr "Verzeichnisse zugänglich machen, Container"

msgid "sharing directories, container"
msgstr "geteilte Verzeichnisse, Container"

msgid "mapping locations, container"
msgstr "Freigaben, Container"

msgid "You can make other directories available inside of the container environment; use @option{--expose=DIRECTORY} to bind-mount the given directory as a read-only location inside the container, or use @option{--share=DIRECTORY} to make the location writable.  With an additional mapping argument after the directory name you can control the name of the directory inside the container.  In the following example we map @file{/etc} on the host system to @file{/the/host/etc} inside a container in which the GNU coreutils are installed."
msgstr "Sie können zusätzliche Verzeichnisse in der Container-Umgebung zugänglich machen. Verwenden Sie dazu @option{--expose=VERZEICHNIS} für eine Verzeichniseinbindung nur mit Lesezugriff innerhalb des Containers oder verwenden Sie @option{--share=VERZEICHNIS} für Schreibzugriff. Mit einem zusätzlichen Argument nach dem Verzeichnisnamen können Sie den Namen festlegen, der dem Verzeichnis innerhalb des Containers zugeordnet wird. Folgendes Beispiel zeigt, wie Sie das Verzeichnis @file{/etc} aus dem Wirtssystem auf @file{/das/wirtssystem/etc} innerhalb eines Containers abbilden, in dem die GNU coreutils installiert sind."

msgid ""
"$ guix shell --container --share=/etc=/the/host/etc coreutils\n"
"$ ls /the/host/etc\n"
msgstr ""
"$ guix shell --container --share=/etc=/das/wirtssystem/etc coreutils\n"
"$ ls /das/wirtssystem/etc\n"

msgid "Similarly, you can prevent the current working directory from being mapped into the container with the @option{--no-cwd} option.  Another good idea is to create a dedicated directory that will serve as the container's home directory, and spawn the container shell from that directory."
msgstr "Gleichermaßen können Sie verhindern, dass das aktuelle Arbeitsverzeichnis eine Zuordnung in den Container bekommt, indem Sie die Befehlszeilenoption @option{--no-cwd} angeben. Es ist eine gute Idee, ein Verzeichnis anzulegen, das innerhalb des Containers das Persönliche Verzeichnis (auch „Home-Verzeichnis“) ist. Aus diesem heraus lassen Sie die Shell für den Container starten."

msgid "hide system libraries, container"
msgstr "Systembibliotheken verbergen, Container"

msgid "avoid ABI mismatch, container"
msgstr "inkompatible ABI beheben, Container"

msgid "On a foreign system a container environment can be used to compile software that cannot possibly be linked with system libraries or with the system's compiler toolchain.  A common use-case in a research context is to install packages from within an R session.  Outside of a container environment there is a good chance that the foreign compiler toolchain and incompatible system libraries are found first, resulting in incompatible binaries that cannot be used by R.  In a container shell this problem disappears, as system libraries and executables simply aren't available due to the unshared @code{mount} namespace."
msgstr "Auf einem fremden System ist es möglich, in einer Container-Umgebung Software zu kompilieren, die mit den Bibliotheken des Systems oder mit dessen Compiler-Toolchain inkompatibel ist. In der Forschung kommt es häufiger vor, dass man in einer R-Sitzung Pakete installieren möchte. Ohne Container ist es gut möglich, dass die Compiler-Toolchain des Fremdsystems und dessen inkompatible Bibliotheken Vorrang haben und die Binärdateien @emph{nicht} zusammenpassen und in R @emph{nicht} benutzt werden können. In einer Container-Shell gibt es das Problem @emph{nicht}, denn die Bibliotheken und Programme des äußeren Systems sind schlicht gar nicht da, weil der @code{mount}-Namensraum getrennt ist."

msgid "Let's take a comprehensive manifest providing a comfortable development environment for use with R:"
msgstr "Schauen wir uns ein umfassendes Manifest für eine komfortable R-Entwicklungsumgebung an:"

msgid ""
"(specifications->manifest\n"
"  (list \"r-minimal\"\n"
"\n"
msgstr ""
"(specifications->manifest\n"
"  (list \"r-minimal\"\n"
"\n"

msgid ""
"        ;; base packages\n"
"        \"bash-minimal\"\n"
"        \"glibc-locales\"\n"
"        \"nss-certs\"\n"
"\n"
msgstr ""
"        ;; grundlegende Pakete\n"
"        \"bash-minimal\"\n"
"        \"glibc-locales\"\n"
"        \"nss-certs\"\n"
"\n"

msgid ""
"        ;; Common command line tools lest the container is too empty.\n"
"        \"coreutils\"\n"
"        \"grep\"\n"
"        \"which\"\n"
"        \"wget\"\n"
"        \"sed\"\n"
"\n"
msgstr ""
"        ;; Befehlszeilenwerkzeuge, die man oft braucht, sonst\n"
"        ;; wäre der Container so gut wie leer.\n"
"        \"coreutils\"\n"
"        \"grep\"\n"
"        \"which\"\n"
"        \"wget\"\n"
"        \"sed\"\n"
"\n"

msgid ""
"        ;; R markdown tools\n"
"        \"pandoc\"\n"
"\n"
msgstr ""
"        ;; R-Programme für Markdown\n"
"        \"pandoc\"\n"
"\n"

msgid ""
"        ;; Toolchain and common libraries for \"install.packages\"\n"
"        \"gcc-toolchain@@10\"\n"
"        \"gfortran-toolchain\"\n"
"        \"gawk\"\n"
"        \"tar\"\n"
"        \"gzip\"\n"
"        \"unzip\"\n"
"        \"make\"\n"
"        \"cmake\"\n"
"        \"pkg-config\"\n"
"        \"cairo\"\n"
"        \"libxt\"\n"
"        \"openssl\"\n"
"        \"curl\"\n"
"        \"zlib\"))\n"
msgstr ""
"        ;; Toolchain und häufige Bibliotheken für \"install.packages\"\n"
"        \"gcc-toolchain@@10\"\n"
"        \"gfortran-toolchain\"\n"
"        \"gawk\"\n"
"        \"tar\"\n"
"        \"gzip\"\n"
"        \"unzip\"\n"
"        \"make\"\n"
"        \"cmake\"\n"
"        \"pkg-config\"\n"
"        \"cairo\"\n"
"        \"libxt\"\n"
"        \"openssl\"\n"
"        \"curl\"\n"
"        \"zlib\"))\n"

msgid "Let's use this to run R inside a container environment.  For convenience we share the @code{net} namespace to use the host system's network interfaces.  Now we can build R packages from source the traditional way without having to worry about ABI mismatch or incompatibilities."
msgstr "Nehmen wir dieses Manifest und richten uns eine Container-Umgebung ein, in der wir R ausführen. Der Einfachheit halber wollen wir den @code{net}-Namensraum teilen und bekommen Zugriff auf die Netzwerkschnittstellen des Wirtssystems. Damit können wir R-Pakete auf traditionelle Weise aus ihrem Quellcode erstellen, ohne uns um inkompatible ABIs oder sonstige Inkompatibilitäten sorgen zu müssen."

msgid ""
"$ guix shell --container --network --manifest=manifest.scm -- R\n"
"\n"
msgstr ""
"$ guix shell --container --network --manifest=manifest.scm -- R\n"
"\n"

msgid ""
"R version 4.2.1 (2022-06-23) -- \"Funny-Looking Kid\"\n"
"Copyright (C) 2022 The R Foundation for Statistical Computing\n"
"@dots{}\n"
"> e <- Sys.getenv(\"GUIX_ENVIRONMENT\")\n"
"> Sys.setenv(GIT_SSL_CAINFO=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_FILE=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_DIR=paste0(e, \"/etc/ssl/certs\"))\n"
"> install.packages(\"Cairo\", lib=paste0(getwd()))\n"
"@dots{}\n"
"* installing *source* package 'Cairo' ...\n"
"@dots{}\n"
"* DONE (Cairo)\n"
"\n"
msgstr ""
"R version 4.2.1 (2022-06-23) -- \"Funny-Looking Kid\"\n"
"Copyright (C) 2022 The R Foundation for Statistical Computing\n"
"…\n"
"> e <- Sys.getenv(\"GUIX_ENVIRONMENT\")\n"
"> Sys.setenv(GIT_SSL_CAINFO=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_FILE=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_DIR=paste0(e, \"/etc/ssl/certs\"))\n"
"> install.packages(\"Cairo\", lib=paste0(getwd()))\n"
"…\n"
"* installing *source* package 'Cairo' ...\n"
"…\n"
"* DONE (Cairo)\n"
"\n"

msgid ""
"The downloaded source packages are in\n"
"\t'/tmp/RtmpCuwdwM/downloaded_packages'\n"
"> library(\"Cairo\", lib=getwd())\n"
"> # success!\n"
msgstr ""
"The downloaded source packages are in\n"
"\t'/tmp/RtmpCuwdwM/downloaded_packages'\n"
"> library(\"Cairo\", lib=getwd())\n"
"> # success!\n"

msgid "Using container shells is fun, but they can become a little cumbersome when you want to go beyond just a single interactive process.  Some tasks become a lot easier when they sit on the rock solid foundation of a proper Guix System and its rich set of system services.  The next section shows you how to launch a complete Guix System inside of a container."
msgstr "Containerisierte Shells einzusetzen ist lustig, aber wenn man mehr will als einen einzelnen interaktiven Prozess, werden sie ein bisschen umständlich. Manche Aufgaben sind einfach leichter zu lösen, wenn Sie sie auf einem ordentlichen Guix-System als festem Fundament aufbauen. Dann bekämen Sie Zugriff auf das reichhaltige Angebot von Systemdiensten. Im nächsten Abschnitt wird Ihnen gezeigt, wie Sie eine vollständige Instanz von Guix System in einem Container starten können."

msgid "The Guix System provides a wide array of interconnected system services that are configured declaratively to form a dependable stateless GNU System foundation for whatever tasks you throw at it.  Even when using Guix on a foreign distribution you can benefit from the design of Guix System by running a system instance as a container.  Using the same kernel features of unshared namespaces mentioned in the previous section, the resulting Guix System instance is isolated from the host system and only shares file system locations that you explicitly declare."
msgstr "Guix System stellt eine breite Palette von ineinandergreifenden Systemdiensten zur Verfügung, welche Sie deklarativ konfigurieren, um ein verlässliches und zustandsloses GNU-System als Fundament für Ihre weiteren Aufgaben zu haben. Selbst wenn Sie Guix auf einer Fremddistribution verwenden, können Sie von diesem Aufbau profitieren, indem Sie so ein System in einem Container starten. Dabei greifen wir auf die Kernel-Funktionalität getrennter Namensräume zurück, die im vorigen Abschnitt genannt wurde. Durch sie wird die erstellte Guix-System-Instanz vom Wirtssystem isoliert und nur die Orte im Dateisystem freigegeben, die Sie ausdrücklich deklariert haben."

msgid "A Guix System container differs from the shell process created by @command{guix shell --container} in a number of important ways.  While in a container shell the containerized process is a Bash shell process, a Guix System container runs the Shepherd as PID 1.  In a system container all system services (@pxref{Services,,, guix, GNU Guix Reference Manual}) are set up just as they would be on a Guix System in a virtual machine or on bare metal---this includes daemons managed by the GNU@tie{}Shepherd (@pxref{Shepherd Services,,, guix, GNU Guix Reference Manual}) as well as other kinds of extensions to the operating system (@pxref{Service Composition,,, guix, GNU Guix Reference Manual})."
msgstr "Der Unterschied zwischen einem Guix-System-Container und einem Shell-Prozess, wie ihn @command{guix shell --container} anlegt, besteht in mehreren wichtigen Einzelheiten. Während in einem Shell-Container der containerisierte Prozess ein Bash-Shell-Prozess ist, wird in einem Guix-System-Container Shepherd als PID 1 ausgeführt. In einem Systemcontainer werden all die Systemdienste (siehe @ref{Dienste,,, guix.de, Referenzhandbuch zu GNU Guix}) auf dieselbe Weise eingerichtet wie wenn Sie Guix System in einer virtuellen Maschine oder auf echter Hardware booten@tie{}– auch die Daemons, die durch GNU@tie{}Shepherd gestartet werden (siehe @ref{Shepherd-Dienste,,, guix.de, Referenzhandbuch zu GNU Guix}) und andere Arten, das System zu erweitern (siehe @ref{Dienstkompositionen,,, guix.de, Referenzhandbuch zu GNU Guix}), sind die gleichen."

msgid "The perceived increase in complexity of running a Guix System container is easily justified when dealing with more complex applications that have higher or just more rigid requirements on their execution contexts---configuration files, dedicated user accounts, directories for caches or log files, etc.  In Guix System the demands of this kind of software are satisfied through the deployment of system services."
msgstr "Dass ein Guix-System-Container eine Zunahme an Komplexität bedeute, lässt sich leicht rechtfertigen, wenn Sie mit komplexeren Anwendungen zu tun haben und deren höheren oder engeren Anforderungen an ihren Ausführungskontext@tie{}– an Konfigurationsdateien, eigene Benutzerkonten, Verzeichnisse für Zwischenspeicher oder Protokolldateien, etc. In Guix System werden solche Anforderungen einer Software durch das Aufspielen von Systemdiensten erfüllt."

msgid "A good example might be a PostgreSQL database server.  Much of the complexity of setting up such a database server is encapsulated in this deceptively short service declaration:"
msgstr "Ein geeignetes Beispiel wäre ein PostgreSQL-Datenbankserver. Die Komplexität, ihn aufzusetzen, können Sie großenteils in einer verführerisch kurzen Dienstdeklaration einfangen:"

msgid ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (postgresql postgresql-14)))\n"
msgstr ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (postgresql postgresql-14)))\n"

msgid "A complete operating system declaration for use with a Guix System container would look something like this:"
msgstr "Eine vollumfängliche Betriebssystemdeklaration, die Sie für einen Guix-System-Container verwenden könnten, sähe in etwa so aus:"

msgid ""
"(use-modules (gnu))\n"
"(use-package-modules databases)\n"
"(use-service-modules databases)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-package-modules databases)\n"
"(use-service-modules databases)\n"
"\n"

msgid ""
"(operating-system\n"
"  (host-name \"container\")\n"
"  (timezone \"Europe/Berlin\")\n"
"  (file-systems (cons (file-system\n"
"                        (device (file-system-label \"does-not-matter\"))\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                      %base-file-systems))\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader grub-bootloader)\n"
"               (targets '(\"/dev/sdX\"))))\n"
"  (services\n"
"   (cons* (service postgresql-service-type\n"
"                   (postgresql-configuration\n"
"                    (postgresql postgresql-14)\n"
"                    (config-file\n"
"                     (postgresql-config-file\n"
"                      (log-destination \"stderr\")\n"
"                      (hba-file\n"
"                       (plain-file \"pg_hba.conf\"\n"
"                                   \"\\\n"
"local\tall\tall\t\t\ttrust\n"
"host\tall\tall\t10.0.0.1/32 \ttrust\"))\n"
"                      (extra-config\n"
"                       '((\"listen_addresses\" \"*\")\n"
"                         (\"log_directory\"    \"/var/log/postgresql\")))))))\n"
"          (service postgresql-role-service-type\n"
"                   (postgresql-role-configuration\n"
"                    (roles\n"
"                     (list (postgresql-role\n"
"                            (name \"test\")\n"
"                            (create-database? #t))))))\n"
"          %base-services)))\n"
msgstr ""
"(operating-system\n"
"  (host-name \"container\")\n"
"  (timezone \"Europe/Berlin\")\n"
"  (file-systems (cons (file-system\n"
"                        (device (file-system-label \"ist-egal\"))\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                      %base-file-systems))\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader grub-bootloader)\n"
"               (targets '(\"/dev/sdX\"))))\n"
"  (services\n"
"   (cons* (service postgresql-service-type\n"
"                   (postgresql-configuration\n"
"                    (postgresql postgresql-14)\n"
"                    (config-file\n"
"                     (postgresql-config-file\n"
"                      (log-destination \"stderr\")\n"
"                      (hba-file\n"
"                       (plain-file \"pg_hba.conf\"\n"
"                                   \"\\\n"
"local\tall\tall\t\t\ttrust\n"
"host\tall\tall\t10.0.0.1/32 \ttrust\"))\n"
"                      (extra-config\n"
"                       '((\"listen_addresses\" \"*\")\n"
"                         (\"log_directory\"    \"/var/log/postgresql\")))))))\n"
"          (service postgresql-role-service-type\n"
"                   (postgresql-role-configuration\n"
"                    (roles\n"
"                     (list (postgresql-role\n"
"                            (name \"test\")\n"
"                            (create-database? #t))))))\n"
"          %base-services)))\n"

msgid "With @code{postgresql-role-service-type} we define a role ``test'' and create a matching database, so that we can test right away without any further manual setup.  The @code{postgresql-config-file} settings allow a client from IP address 10.0.0.1 to connect without requiring authentication---a bad idea in production systems, but convenient for this example."
msgstr "Mit @code{postgresql-role-service-type} definieren wir eine Rolle namens „test“ und lassen eine zugehörige Datenbank erzeugen, so dass wir gleich mit dem Testen anfangen können ohne weitere manuelle Schritte. Mit den Einstellungen in @code{postgresql-config-file} wird einem Client mit der IP-Adresse 10.0.0.1 die Berechtigung verliehen, eine Verbindung zur Datenbank aufzubauen, ohne sich authentisieren zu müssen@tie{}– eigentlich keine gute Idee bei Produktivsystemen, aber für dieses Beispiel geeignet."

msgid "Let's build a script that will launch an instance of this Guix System as a container.  Write the @code{operating-system} declaration above to a file @file{os.scm} and then use @command{guix system container} to build the launcher.  (@pxref{Invoking guix system,,, guix, GNU Guix Reference Manual})."
msgstr "Erstellen wir uns ein Skript, das eine Instanz dieses Guix-Systems als Container anlegt. Nachdem Sie obige Betriebssystemdeklaration mit dem @code{operating-system} in eine Datei @file{os.scm} speichern, entsteht das Startprogramm für den Container durch einen Aufruf von @command{guix system container} (siehe @ref{Aufruf von guix system,,, guix.de, Referenzhandbuch zu GNU Guix})."

msgid ""
"$ guix system container os.scm\n"
"The following derivations will be built:\n"
"  /gnu/store/@dots{}-run-container.drv\n"
"  @dots{}\n"
"building /gnu/store/@dots{}-run-container.drv...\n"
"/gnu/store/@dots{}-run-container\n"
msgstr ""
"$ guix system container os.scm\n"
"Folgende Ableitungen werden erstellt:\n"
"  /gnu/store/…-run-container.drv\n"
"  …\n"
"/gnu/store/…-run-container.drv wird erstellt …\n"
"/gnu/store/…-run-container\n"

msgid "Now that we have a launcher script we can run it to spawn the new system with a running PostgreSQL service.  Note that due to some as yet unresolved limitations we need to run the launcher as the root user, for example with @command{sudo}."
msgstr "Jetzt, wo unser Startprogramm fertig ist, können wir es ausführen und ein neues System mit einem laufenden PostgreSQL-Dienst entschlüpft. Anmerkung: Aufgrund derzeit noch ungelöster Einschränkungen kann das Startprogramm nur mit Administratorrechten ausgeführt werden, zum Beispiel mit @command{sudo}."

msgid ""
"$ sudo /gnu/store/@dots{}-run-container\n"
"system container is running as PID 5983\n"
"@dots{}\n"
msgstr ""
"$ sudo /gnu/store/…-run-container\n"
"System-Container läuft mit PID 5983\n"
"…\n"

msgid "Background the process with @key{Ctrl-z} followed by @command{bg}.  Note the process ID in the output; we will need it to connect to the container later.  You know what? Let's try attaching to the container right now.  We will use @command{nsenter}, a tool provided by the @code{util-linux} package:"
msgstr "Versetzen Sie den Prozess in den Hintergrund, indem Sie @key{Strg-z} drücken und danach @command{bg} eingeben. Achten Sie auf die ausgegebene Prozesskennung (PID); wir brauchen sie später noch, um uns mit dem Container zu verbinden. Wissen Sie was? Schauen wir uns doch gleich an, wie Sie eine Verbindung zum Container herstellen. Dazu benutzen wir @command{nsenter}, ein Werkzeug, das im Paket @code{util-linux} zu finden ist:"

msgid ""
"$ guix shell util-linux\n"
"$ sudo nsenter -a -t 5983\n"
"root@@container /# pgrep -a postgres\n"
"49 /gnu/store/@dots{}-postgresql-14.4/bin/postgres -D /var/lib/postgresql/data --config-file=/gnu/store/@dots{}-postgresql.conf -p 5432\n"
"51 postgres: checkpointer\n"
"52 postgres: background writer\n"
"53 postgres: walwriter\n"
"54 postgres: autovacuum launcher\n"
"55 postgres: stats collector\n"
"56 postgres: logical replication launcher\n"
"root@@container /# exit\n"
msgstr ""
"$ guix shell util-linux\n"
"$ sudo nsenter -a -t 5983\n"
"root@@container /# pgrep -a postgres\n"
"49 /gnu/store/…-postgresql-14.4/bin/postgres -D /var/lib/postgresql/data --config-file=/gnu/store/…-postgresql.conf -p 5432\n"
"51 postgres: checkpointer\n"
"52 postgres: background writer\n"
"53 postgres: walwriter\n"
"54 postgres: autovacuum launcher\n"
"55 postgres: stats collector\n"
"56 postgres: logical replication launcher\n"
"root@@container /# exit\n"

msgid "The PostgreSQL service is running in the container!"
msgstr "Wie Sie sehen, läuft der PostgreSQL-Dienst im Container!"

msgid "container networking"
msgstr "Container-Netzwerkverbindung"

msgid "What good is a Guix System running a PostgreSQL database service as a container when we can only talk to it with processes originating in the container? It would be much better if we could talk to the database over the network."
msgstr "Was nützt ein Guix System mit laufendem PostgreSQL-Datenbankdienst in einem Container, wenn es nur mit Prozessen reden kann, die ihren Ursprung in dem Container haben? Viel besser wäre es doch, könnten wir die Datenbank über das Netzwerk ansprechen."

msgid "The easiest way to do this is to create a pair of connected virtual Ethernet devices (known as @code{veth}).  We move one of the devices (@code{ceth-test}) into the @code{net} namespace of the container and leave the other end (@code{veth-test}) of the connection on the host system."
msgstr "Am einfachsten geht das mit einem Paar verbundener virtueller Ethernet-Geräte (bekannt als @code{veth}). Wir schieben das eine Gerät (@code{ceth-test}) in den @code{net}-Namensraum des Containers und lassen das andere Ende (@code{veth-test}) der Verbindung auf dem Wirtssystem."

msgid ""
"pid=5983\n"
"ns=\"guix-test\"\n"
"host=\"veth-test\"\n"
"client=\"ceth-test\"\n"
"\n"
msgstr ""
"pid=5983\n"
"ns=\"guix-test\"\n"
"host=\"veth-test\"\n"
"client=\"ceth-test\"\n"
"\n"

msgid ""
"# Attach the new net namespace \"guix-test\" to the container PID.\n"
"sudo ip netns attach $ns $pid\n"
"\n"
msgstr ""
"# Anbringen des neuen net-Namensraums \"guix-test\" an der PID des Containers.\n"
"sudo ip netns attach $ns $pid\n"
"\n"

msgid ""
"# Create the pair of devices\n"
"sudo ip link add $host type veth peer name $client\n"
"\n"
msgstr ""
"# Das Geräte-Paar erzeugen.\n"
"sudo ip link add $host type veth peer name $client\n"
"\n"

msgid ""
"# Move the client device into the container's net namespace\n"
"sudo ip link set $client netns $ns\n"
msgstr ""
"# Das Client-Gerät in den net-Namensraum des Containers verschieben.\n"
"sudo ip link set $client netns $ns\n"

msgid "Then we configure the host side:"
msgstr "Anschließend konfigurieren wir die Wirtsseite:"

msgid ""
"sudo ip link set $host up\n"
"sudo ip addr add 10.0.0.1/24 dev $host\n"
msgstr ""
"sudo ip link set $host up\n"
"sudo ip addr add 10.0.0.1/24 dev $host\n"

msgid "@dots{}and then we configure the client side:"
msgstr "… und dann konfigurieren wir die Clientseite:"

msgid ""
"sudo ip netns exec $ns  ip link set lo up\n"
"sudo ip netns exec $ns  ip link set $client up\n"
"sudo ip netns exec $ns  ip addr add 10.0.0.2/24 dev $client\n"
msgstr ""
"sudo ip netns exec $ns  ip link set lo up\n"
"sudo ip netns exec $ns  ip link set $client up\n"
"sudo ip netns exec $ns  ip addr add 10.0.0.2/24 dev $client\n"

msgid "At this point the host can reach the container at IP address 10.0.0.2, and the container can reach the host at IP 10.0.0.1.  This is all we need to talk to the database server inside the container from the host system on the outside."
msgstr "Zu diesem Zeitpunkt kann der Wirt den Container unter der IP-Adresse 10.0.0.2 erreichen und der Container kann seinerseits den Wirt auf IP-Adresse 10.0.0.1 erreichen. Das war alles, um mit dem Datenbankdienst, der im Container steckt, vom außen liegenden Wirtssystem aus reden zu können."

msgid ""
"$ psql -h 10.0.0.2 -U test\n"
"psql (14.4)\n"
"Type \"help\" for help.\n"
"\n"
msgstr ""
"$ psql -h 10.0.0.2 -U test\n"
"psql (14.4)\n"
"Type \"help\" for help.\n"
"\n"

msgid ""
"test=> CREATE TABLE hello (who TEXT NOT NULL);\n"
"CREATE TABLE\n"
"test=> INSERT INTO hello (who) VALUES ('world');\n"
"INSERT 0 1\n"
"test=> SELECT * FROM hello;\n"
"  who\n"
"-------\n"
" world\n"
"(1 row)\n"
msgstr ""
"test=> CREATE TABLE hallo (wen TEXT NOT NULL);\n"
"CREATE TABLE\n"
"test=> INSERT INTO hallo (wen) VALUES ('Welt');\n"
"INSERT 0 1\n"
"test=> SELECT * FROM hallo;\n"
"  wen\n"
"-------\n"
"  Welt\n"
"(1 row)\n"

msgid "Now that we're done with this little demonstration let's clean up:"
msgstr "Jetzt, wo wir mit der kurzen Demonstration fertig sind, geht es an’s Aufräumen:"

msgid ""
"sudo kill $pid\n"
"sudo ip netns del $ns\n"
"sudo ip link del $host\n"
msgstr ""
"sudo kill $pid\n"
"sudo ip netns del $ns\n"
"sudo ip link del $host\n"

msgid "Guix can produce disk images (@pxref{Invoking guix system,,, guix, GNU Guix Reference Manual}) that can be used with virtual machines solutions such as virt-manager, GNOME Boxes or the more bare QEMU, among others."
msgstr "Mit Guix können Sie Disk-Images erzeugen (siehe @ref{Aufruf von guix system,,, guix.de, Referenzhandbuch zu GNU Guix}), um sie in Software für virtuelle Maschinen wie virt-manager, GNOME Boxes oder auch dem schlichten QEMU einzusetzen, nur als Beispiel."

msgid "This chapter aims to provide hands-on, practical examples that relates to the usage and configuration of virtual machines on a Guix System."
msgstr "In diesem Kapitel wollen wir direkt nutzbare, praktische Beispiele anschauen, wie man virtuelle Maschinen auf Guix System konfigurieren und nutzen will."

msgid "Network bridge interface"
msgstr "Netzwerkbrücke als Schnittstelle"

msgid "networking, bridge"
msgstr "Netzwerk, Bridge"

msgid "qemu, network bridge"
msgstr "QEMU, Netzwerk-Bridge"

msgid "By default, QEMU uses a so-called ``user mode'' host network back-end, which is convenient as it does not require any configuration.  Unfortunately, it is also quite limited.  In this mode, the guest @abbr{VM, virtual machine} can access the network the same way the host would, but it cannot be reached from the host.  Additionally, since the QEMU user networking mode relies on ICMP, ICMP-based networking tools such as @command{ping} do @emph{not} work in this mode.  Thus, it is often desirable to configure a network bridge, which enables the guest to fully participate in the network.  This is necessary, for example, when the guest is to be used as a server."
msgstr "In der Voreinstellung wird der QEMU-Netzwerkstapel auf dem Wirtssystem als normaler Nutzer ausgeführt („User-Mode Host Network Back-end“), was den Vorteil hat, dass man nichts weiter konfigurieren muss. Unglücklicherweise kann man damit @emph{nicht} alles machen. In diesem Modus bekommt die Gast-@abbr{VM, virtuelle Maschine} Zugriff auf das Netzwerk auf dieselbe Weise wie das Wirtssystem, aber vom Wirt aus kann man keine Verbindung zum Gast zustande bringen. Außerdem können, weil in QEMU das User-Mode-Netzwerk über ICMP läuft, @emph{keine} ICMP-basierten Netzwerkprogramme wie @command{ping} funktionieren. Daher ist es oft ratsam, eine Netzwerkbrücke zu konfigurieren, über die das Gastsystem vollständig am Netzwerk teilhat. So kann man auf dem Gast auch einen Server betreiben."

msgid "Creating a network bridge interface"
msgstr "Eine Netzwerkbrücken-Schnittstelle aufbauen"

msgid "There are many ways to create a network bridge.  The following command shows how to use NetworkManager and its @command{nmcli} command line interface (CLI) tool, which should already be available if your operating system declaration is based on one of the desktop templates:"
msgstr "Es gibt viele Möglichkeiten, wie man eine Netzwerkbrücke herstellen kann. Wenn die Betriebssystemdeklaration Ihres Systems auf einer der Vorlagen für Desktop-Rechner basiert, läuft darauf NetworkManager. Mit folgendem Befehl kann man NetworkManager über dessen befehlszeilenbasiertes Programm @command{nmcli} („Command Line Interface“, CLI) anweisen, eine Netzwerkbrücke aufzubauen:"

msgid "# nmcli con add type bridge con-name br0 ifname br0\n"
msgstr "# nmcli con add type bridge con-name br0 ifname br0\n"

msgid "To have this bridge be part of your network, you must associate your network bridge with the Ethernet interface used to connect with the network.  Assuming your interface is named @samp{enp2s0}, the following command can be used to do so:"
msgstr "Um diese Brücke zu Ihrem Netzwerk hinzuzufügen, müssen Sie Ihre Netzwerkbrücke der Ethernet-Schnittstelle zuordnen, über die Sie sich mit dem Netzwerk verbinden. Wenn Ihre Schnittstelle z.B.@: die Bezeichnung @samp{enp2s0} hat, dann wird die Zuordnung mit folgendem Befehl hergestellt:"

msgid "# nmcli con add type bridge-slave ifname enp2s0 master br0\n"
msgstr "# nmcli con add type bridge-slave ifname enp2s0 master br0\n"

msgid "Important"
msgstr "Wichtig"

msgid "Only Ethernet interfaces can be added to a bridge.  For wireless interfaces, consider the routed network approach detailed in @xref{Routed network for libvirt}."
msgstr "Zu einer Brücke können nur Ethernet-Schnittstellen hinzugefügt werden. Wenn Sie ein Drahtlosnetzwerk benutzen, richten Sie wohl besser Routing für Ihr Netzwerk ein, beschrieben in @ref{Routed network for libvirt}."

msgid "By default, the network bridge will allow your guests to obtain their IP address via DHCP, if available on your local network.  For simplicity, this is what we will use here.  To easily find the guests, they can be configured to advertise their host names via mDNS."
msgstr "In der Voreinstellung ermöglicht es die Netzwerkbrücke den Gastsystemen, ihre IP-Adressen mittels DHCP zu beziehen, wenn DHCP auf Ihrem lokalen Netzwerk zur Verfügung gestellt wird. Weil das einfach ist, werden wir es hier benutzen. Um Gastmaschinen im Netzwerk zu finden, können Sie die Gäste so konfigurieren, dass diese ihre Rechnernamen über mDNS mitteilen."

msgid "Configuring the QEMU bridge helper script"
msgstr "Das QEMU-Bridge-Helper-Skript konfigurieren"

msgid "QEMU comes with a helper program to conveniently make use of a network bridge interface as an unprivileged user @pxref{Network options,,, QEMU, QEMU Documentation}.  The binary must be made setuid root for proper operation; this can be achieved by adding it to the @code{privileged-programs} field of your (host) @code{operating-system} definition, as shown below:"
msgstr "Zu QEMU gehört ein Hilfsprogramm, mit dem eine Netzwerkbrücken-Schnittstelle zur Verwendung durch „unprivilegierte“ Nutzer ohne besondere Berechtigungen einfach eingerichtet wird (siehe @ref{Network options,,, QEMU, QEMU-Dokumentation}. Das Programm muss setuid-root gesetzt sein, damit es funktioniert. Dazu fügen Sie es zum @code{privileged-programs}-Feld Ihrer Betriebssystemkonfiguration (auf dem Wirtssystem) hinzu, so wie hier:"

msgid ""
"(privileged-programs\n"
" (cons (privileged-program\n"
"         (program (file-append qemu \"/libexec/qemu-bridge-helper\"))\n"
"         (setuid? #t))\n"
"       %default-privileged-programs))\n"
msgstr ""
"(privileged-programs\n"
" (cons (privileged-program\n"
"         (program (file-append qemu \"/libexec/qemu-bridge-helper\"))\n"
"         (setuid? #t))\n"
"       %default-privileged-programs))\n"

msgid "The file @file{/etc/qemu/bridge.conf} must also be made to allow the bridge interface, as the default is to deny all.  Add the following to your list of services to do so:"
msgstr "Zudem muss in der Datei @file{/etc/qemu/bridge.conf} eine Erlaubnis für die Netzwerkbrücken-Schnittstelle eingetragen werden, denn nach Voreinstellung wird alles blockiert. Fügen Sie dazu folgenden Dienst zu Ihrer @code{services}-Liste hinzu:"

msgid "Invoking QEMU with the right command line options"
msgstr "QEMU mit den richtigen Befehlszeilenoptionen aufrufen"

msgid "When invoking QEMU, the following options should be provided so that the network bridge is used, after having selected a unique MAC address for the guest."
msgstr "Wenn Sie QEMU aufrufen, müssen Sie die folgenden Optionen angeben, damit die Netzwerkbrücke benutzt wird, nachdem Sie eine einzigartige MAC-Adresse für den Gast vorgeben."

msgid "By default, a single MAC address is used for all guests, unless provided.  Failing to provide different MAC addresses to each virtual machine making use of the bridge would cause networking issues."
msgstr "Nach Voreinstellung wird dieselbe MAC-Adresse für alle Gastsysteme benutzt, wenn Sie keine angeben. Wenn sich die MAC-Adressen mehrerer virtueller Maschinen aber nicht unterscheiden, kommt es zu Netzwerkfehlern, wenn Sie die Netzwerkbrücke benutzen."

msgid ""
"$ qemu-system-x86_64 [...] \\\n"
"    -device virtio-net-pci,netdev=user0,mac=XX:XX:XX:XX:XX:XX \\\n"
"    -netdev bridge,id=user0,br=br0 \\\n"
"    [...]\n"
msgstr ""
"$ qemu-system-x86_64 […] \\\n"
"    -device virtio-net-pci,netdev=user0,mac=XX:XX:XX:XX:XX:XX \\\n"
"    -netdev bridge,id=user0,br=br0 \\\n"
"    […]\n"

msgid "To generate MAC addresses that have the QEMU registered prefix, the following snippet can be employed:"
msgstr "Um MAC-Adressen mit dem für QEMU registrierten Präfix zu erzeugen, können Sie folgendes Code-Schnipsel eintippen:"

msgid ""
"mac_address=\"52:54:00:$(dd if=/dev/urandom bs=512 count=1 2>/dev/null \\\n"
"                           | md5sum \\\n"
"                           | sed -E 's/^(..)(..)(..).*$/\\1:\\2:\\3/')\"\n"
"echo $mac_address\n"
msgstr ""
"mac_address=\"52:54:00:$(dd if=/dev/urandom bs=512 count=1 2>/dev/null \\\n"
"                           | md5sum \\\n"
"                           | sed -E 's/^(..)(..)(..).*$/\\1:\\2:\\3/')\"\n"
"echo $mac_address\n"

msgid "Networking issues caused by Docker"
msgstr "Durch Docker verursachte Netzwerkprobleme"

msgid "If you use Docker on your machine, you may experience connectivity issues when attempting to use a network bridge, which are caused by Docker also relying on network bridges and configuring its own routing rules.  The solution is add the following @code{iptables} snippet to your @code{operating-system} declaration:"
msgstr "Wenn Sie auf Ihrer Maschine Docker einsetzen, kann es zu Verbindungsproblemen kommen, wenn Sie eine Netzwerkbrücke zu benutzen versuchen. Der Grund ist, dass auch Docker Netzwerkbrücken mitbringt und seine eigenen Netzwerkregeln einrichtet. Die Lösung liegt im Hinzufügen des folgenden @code{iptables}-Schnipsels in Ihre Betriebssystemdeklaration:"

msgid ""
"(service iptables-service-type\n"
"             (iptables-configuration\n"
"              (ipv4-rules (plain-file \"iptables.rules\" \"\\\n"
"*filter\n"
":INPUT ACCEPT [0:0]\n"
":FORWARD DROP [0:0]\n"
":OUTPUT ACCEPT [0:0]\n"
"-A FORWARD -i br0 -o br0 -j ACCEPT\n"
"COMMIT\n"
"\"))\n"
msgstr ""
"(service iptables-service-type\n"
"             (iptables-configuration\n"
"              (ipv4-rules (plain-file \"iptables.rules\" \"\\\n"
"*filter\n"
":INPUT ACCEPT [0:0]\n"
":FORWARD DROP [0:0]\n"
":OUTPUT ACCEPT [0:0]\n"
"-A FORWARD -i br0 -o br0 -j ACCEPT\n"
"COMMIT\n"
"\"))\n"

msgid "Virtual network bridge interface"
msgstr "Virtuelle-Netzwerkbrücken-Schnittstelle"

msgid "networking, virtual bridge"
msgstr "Netzwerk, virtuelle Netzwerkbrücke"

msgid "libvirt, virtual network switch"
msgstr "libvirt, virtueller Netzwerkswitch"

msgid "If the machine hosting your virtual machines is connected wirelessly to the network, you won't be able to use a true network bridge as explained in the preceding section (@pxref{Network bridge for QEMU}).  In this case, the next best option is to use a @emph{virtual network switch} with static routing and to configure a libvirt-powered virtual machine to use it (via the @command{virt-manager} GUI for example).  This is similar to the default mode of operation of QEMU/libvirt, except that instead of using @abbr{NAT, Network Address Translation}, it relies on static routes to join the @abbr{VM, virtual machine} IP address to the @abbr{LAN, local area network}.  This provides two-way connectivity to and from the virtual machine, which is needed for exposing services hosted on the virtual machine."
msgstr "Wenn die Maschine, auf der Ihre virtuellen Maschinen laufen sollen, nur eine drahtlose Verbindung ins Netzwerk hat, haben Sie keine Möglichkeit, eine echte Netzwerkbrücke zu deren Anbindung einzurichten, wie wir sie im vorigen Abschnitt beschrieben haben (siehe @ref{Network bridge for QEMU}). Ihnen bleibt die zweitbeste Option, ein @emph{virtueller Netzwerkswitch} mit statischem Routing zu benutzen und eine mit libvirt betriebene virtuelle Maschine so einzurichten, dass sie benutzt wird (zum Beispiel mit Hilfe der grafischen Benutzeroberfläche @command{virt-manager}). Das ist ähnlich zu dem voreingestellten Betriebsmodus von QEMU/libvirt, außer dass wir, statt @abbr{NAT, Network Address Translation} zum Einsatz zu bringen, mit statischen Routen die IP-Adresse der @abbr{VM, virtuellen Maschine} ins @abbr{LAN, Local Area Network} aufnehmen. Damit wird eine beidseitige Verbindung zu und von der virtuellen Maschine möglich, damit alle in Ihrem Netzwerk Zugriff auf die auf der virtuellen Maschine angebotenen Dienste bekommen."

msgid "Creating a virtual network switch"
msgstr "Einen virtuellen Netzwerkswitch anlegen"

msgid "A virtual network switch consists of a virtual network device called a `virtual bridge', DHCP server (dnsmasq) and firewall rules (iptables). See the @url{https://wiki.libvirt.org/VirtualNetworking.html, libvirt Wiki article on Virtual Networking} for more details on the modes of operation, management and implementation of virtual network switches."
msgstr "Ein virtueller Netzwerk-Switch besteht aus einem virtuellen Netzwerkgerät, das „virtuelle Brücke“ genannt wird, einem DHCP-Server (dnsmasq) und Firewall-Regeln (iptables). Siehe den @url{https://wiki.libvirt.org/VirtualNetworking.html, Artikel im libvirt-Wiki zu virtuellen Netzwerken} für mehr Details zu den Betriebsmodi, der Verwaltung und Implementierung virtueller Netzwerk-Switches."

msgid "The @command{virsh} command, provided by the @code{libvirt} package, makes it very easy to create a virtual switch.  You first need to choose a network subnet for your virtual switch; if your home LAN is in the @samp{192.168.1.0/24} network, you could opt to use e.g.@: @samp{192.168.2.0/24}.  Define an XML file, e.g.@: @file{/tmp/virbr0.xml}, containing the following:"
msgstr "Mit dem Befehl @command{virsh} aus dem Paket @code{libvirt} lässt sich der virtuelle Switch sehr einfach anlegen. Zuerst müssen Sie wissen, welches Netzwerk-Subnetz Ihr virtueller Switch haben soll. Wenn Ihrem LAN zu Hause das @samp{192.168.1.0/24}-Netzwerk gehört, könnten Sie z.B.@: @samp{192.168.2.0/24} vergeben. Legen Sie eine XML-Datei an z.B.@: als @file{/tmp/virbr0.xml} mit folgendem Inhalt:"

msgid ""
"<network>\n"
"  <name>virbr0</name>\n"
"  <bridge name=\"virbr0\" />\n"
"  <forward mode=\"route\"/>\n"
"  <ip address=\"192.168.2.0\" netmask=\"255.255.255.0\">\n"
"    <dhcp>\n"
"      <range start=\"192.168.2.1\" end=\"192.168.2.254\"/>\n"
"    </dhcp>\n"
"  </ip>\n"
"</network>\n"
msgstr ""
"<network>\n"
"  <name>virbr0</name>\n"
"  <bridge name=\"virbr0\" />\n"
"  <forward mode=\"route\"/>\n"
"  <ip address=\"192.168.2.0\" netmask=\"255.255.255.0\">\n"
"    <dhcp>\n"
"      <range start=\"192.168.2.1\" end=\"192.168.2.254\"/>\n"
"    </dhcp>\n"
"  </ip>\n"
"</network>\n"

msgid "Then create and configure the interface using the @command{virsh} command, as root:"
msgstr "Damit legen Sie die Schnittstelle mit Hilfe des @command{virsh}-Befehls an, welchen Sie als Administratorbenutzer @code{root} ausführen:"

msgid ""
"virsh net-define /tmp/virbr0.xml\n"
"virsh net-autostart virbr0\n"
"virsh net-start virbr0\n"
msgstr ""
"virsh net-define /tmp/virbr0.xml\n"
"virsh net-autostart virbr0\n"
"virsh net-start virbr0\n"

msgid "The @samp{virbr0} interface should now be visible e.g.@: via the @samp{ip address} command.  It will be automatically started every time your libvirt virtual machine is started."
msgstr "Die Schnittstelle @samp{virbr0} müsste jetzt zum Beispiel in der Ausgabe des Befehls @samp{ip address} zu sehen sein. Sie wird automatisch gestartet, sobald Ihre virtuelle Maschine mit libvirt gestartet wird."

msgid "Configuring the static routes for your virtual bridge"
msgstr "Statische Routen für Ihre virtuelle Netzwerkbrücke einrichten"

msgid "If you configured your virtual machine to use your newly created @samp{virbr0} virtual bridge interface, it should already receive an IP via DHCP such as @samp{192.168.2.15} and be reachable from the server hosting it, e.g.@: via @samp{ping 192.168.2.15}.  There's one last configuration needed so that the VM can reach the external network: adding static routes to the network's router."
msgstr "Wenn Sie Ihre virtuelle Maschine so eingerichtet haben, dass sie auf der neu geschaffenen Schnittstelle @samp{virbr0} für die virtuelle Bridge läuft, sollte sie von sich aus bereits eine IP wie @samp{192.168.2.15} über DHCP beziehen und darüber von dem Wirts-Serverrechner aus erreichbar sein mit @samp{ping 192.168.2.15} oder entsprechend. Zum Schluss fehlt noch eine letzte Konfiguration, damit die VM auch das externe Netzwerk erreichen kann: Sie müssen im für das Netzwerk zuständigen Router statische Routen hinzufügen."

msgid "In this example, the LAN network is @samp{192.168.1.0/24} and the router configuration web page may be accessible via e.g.@: the @url{http://192.168.1.1} page.  On a router running the @url{https://librecmc.org/, libreCMC} firmware, you would navigate to the @clicksequence{Network @click{} Static Routes} page (@url{https://192.168.1.1/cgi-bin/luci/admin/network/routes}), and you would add a new entry to the @samp{Static IPv4 Routes} with the following information:"
msgstr "In diesem Beispiel gehen wir davon aus, dass das LAN-Netzwerk bei Ihnen den Block @samp{192.168.1.0/24} bekommt und die Router-Einstellungswebseite könnte z.B.@: unter @url{http://192.168.1.1} verfügbar sein. Wenn auf Ihrem Router die Firmware von @url{https://librecmc.org/, libreCMC} läuft, würden Sie nach @clicksequence{Netzwerk @click{} Statische Routen} navigieren (auf die Seite @url{https://192.168.1.1/cgi-bin/luci/admin/network/routes}) und dort einen neuen Eintrag für @samp{Statische IPv4-Routen} mit den folgenden Informationen anlegen:"

msgid "Interface"
msgstr "Schnittstelle"

msgid "lan"
msgstr "lan"

msgid "Target"
msgstr "Ziel"

msgid "192.168.2.0"
msgstr "192.168.2.0"

msgid "IPv4-Netmask"
msgstr "IPv4-Netzmaske"

msgid "255.255.255.0"
msgstr "255.255.255.0"

msgid "IPv4-Gateway"
msgstr "IPv4-Gateway"

msgid "server-ip"
msgstr "Server-IP"

msgid "Route type"
msgstr "Routen-Typ"

msgid "unicast"
msgstr "unicast"

msgid "where @var{server-ip} is the IP address of the machine hosting the VMs, which should be static."
msgstr "Dabei schreiben Sie statt @var{Server-IP} die IP-Adresse der Wirtsmaschine, auf der die VM laufen. Diese sollte als statische Adresse eingerichtet sein."

msgid "After saving/applying this new static route, external connectivity should work from within your VM; you can e.g.@: run @samp{ping gnu.org} to verify that it functions correctly."
msgstr "Sobald Sie diese neue statische Route speichern und anwenden, sollten Sie sich von und nach außen mit Ihrer VM verbinden können. Um zu überprüfen, ob es funktioniert, führen Sie z.B.@: den Befehl @samp{ping gnu.org} aus."

msgid "VM References"
msgstr "Literaturangaben zu VM"

msgid "Guix is a functional package manager that offers many features beyond what more traditional package managers can do.  To the uninitiated, those features might not have obvious use cases at first.  The purpose of this chapter is to demonstrate some advanced package management concepts."
msgstr "Guix ist ein funktionales Paketverwaltungsprogramm, das weit mehr Funktionalitäten als traditionelle Paketverwalter anbietet. Für nicht Eingeweihte sind deren Anwendungsfälle nicht sofort ersichtlich. Dieses Kapitel ist dazu da, manche fortgeschrittenen Paketverwaltungskonzepte zu demonstrieren."

msgid "@pxref{Package Management,,, guix, GNU Guix Reference Manual} for a complete reference."
msgstr "Siehe @ref{Paketverwaltung,,, guix.de, Referenzhandbuch zu GNU Guix} für eine vollständige Referenz."

msgid "Guix provides a very useful feature that may be quite foreign to newcomers: @dfn{profiles}.  They are a way to group package installations together and all users on the same system are free to use as many profiles as they want."
msgstr "Guix gibt uns eine sehr nützliche Funktionalität, die Neuankömmlingen sehr fremd sein dürfte: @dfn{Profile}. Mit ihnen kann man Paketinstallationen zusammenfassen und jeder Benutzer desselben Systems kann so viele davon anlegen, wie sie oder er möchte."

msgid "Whether you're a developer or not, you may find that multiple profiles bring you great power and flexibility.  While they shift the paradigm somewhat compared to @emph{traditional package managers}, they are very convenient to use once you've understood how to set them up."
msgstr "Ob Sie ein Entwickler sind oder nicht, Sie dürften feststellen, dass mehrere Profile ein mächtiges Werkzeug sind, das Sie flexibler macht. Zwar ist es ein gewisser Paradigmenwechsel verglichen mit @emph{traditioneller Paketverwaltung}, doch sind sie sehr praktisch, sobald man im Umgang mit ihnen den Dreh ’raushat."

msgid "This section is an opinionated guide on the use of multiple profiles.  It predates @command{guix shell} and its fast profile cache (@pxref{Invoking guix shell,,, guix, GNU Guix Reference Manual})."
msgstr "Die Anleitung in diesem Abschnitt setzt sich meinungsstark für die Nutzung mehrerer Profile ein. Als sie geschrieben wurde, gab es @command{guix shell} und dessen schnelles Zwischenspeichern der damit angelegten Profile noch nicht (siehe @ref{Aufruf von guix shell,,, guix.de, Referenzhandbuch zu GNU Guix})."

msgid "In many cases, you may find that using @command{guix shell} to set up the environment you need, when you need it, is less work that maintaining a dedicated profile.  Your call!"
msgstr "Oftmals dürfte es für Sie einfacher sein, mit @command{guix shell} die von Ihnen benötigten Umgebungen dann aufzusetzen, wenn Sie sie brauchen, statt dass Sie sich der Pflege eines dedizierten Profils annehmen müssen. Es ist Ihre Entscheidung!"

msgid "If you are familiar with Python's @samp{virtualenv}, you can think of a profile as a kind of universal @samp{virtualenv} that can hold any kind of software whatsoever, not just Python software.  Furthermore, profiles are self-sufficient: they capture all the runtime dependencies which guarantees that all programs within a profile will always work at any point in time."
msgstr "Wenn Ihnen Pythons @samp{virtualenv} vertraut ist, können Sie sich ein Profil als eine Art universelles @samp{virtualenv} vorstellen, das jede Art von Software enthalten kann und nicht nur Python-Software. Des Weiteren sind Profile selbstversorgend: Sie schließen alle Laufzeitabhängigkeiten ein und garantieren somit, dass alle Programme innerhalb eines Profils stets zu jeder Zeit funktionieren werden."

msgid "Multiple profiles have many benefits:"
msgstr "Mehrere Profile bieten viele Vorteile:"

msgid "Clean semantic separation of the various packages a user needs for different contexts."
msgstr "Klare semantische Trennung der verschiedenen Pakete, die ein Nutzer für verschiedene Kontexte braucht."

msgid "Multiple profiles can be made available into the environment either on login or within a dedicated shell."
msgstr "Mehrere Profile können in der Umgebung verfügbar gemacht werden, entweder beim Anmelden oder in einer eigenen Shell."

msgid "Profiles can be loaded on demand.  For instance, the user can use multiple shells, each of them running different profiles."
msgstr "Profile können bei Bedarf geladen werden. Zum Beispiel kann der Nutzer mehrere Unter-Shells benutzen, von denen jede ein anderes Profil ausführt."

msgid "Isolation: Programs from one profile will not use programs from the other, and the user can even install different versions of the same programs to the two profiles without conflict."
msgstr "Isolierung: Programme aus dem einen Profil werden keine Programme aus dem anderen benutzen, und der Nutzer kann sogar verschiedene Versionen desselben Programms in die zwei Profile installieren, ohne dass es zu Konflikten kommt."

msgid "Deduplication: Profiles share dependencies that happens to be the exact same.  This makes multiple profiles storage-efficient."
msgstr "Deduplizierung: Profile teilen sich Abhängigkeiten, wenn sie genau gleich sind. Dadurch sind mehrere Profile speichereffizient."

msgid "Reproducible: when used with declarative manifests, a profile can be fully specified by the Guix commit that was active when it was set up.  This means that the exact same profile can be @uref{https://guix.gnu.org/blog/2018/multi-dimensional-transactions-and-rollbacks-oh-my/, set up anywhere and anytime}, with just the commit information.  See the section on @ref{Reproducible profiles}."
msgstr "Reproduzierbar: Wenn man dafür deklarative Manifeste benutzt, kann ein Profil allein durch den bei dessen Einrichtung aktiven Guix-Commit eindeutig spezifiziert werden. Das bedeutet, dass man genau dasselbe Profil @uref{https://guix.gnu.org/blog/2018/multi-dimensional-transactions-and-rollbacks-oh-my/, jederzeit und überall einrichten kann} und man dafür nur die Commit-Informationen braucht. Siehe den Abschnitt über @ref{Reproduzierbare Profile}."

msgid "Easier upgrades and maintenance: Multiple profiles make it easy to keep package listings at hand and make upgrades completely frictionless."
msgstr "Leichtere Aktualisierung und Wartung: Mit mehreren Profilen ist es ein Leichtes, eine Liste von Paketen zur Hand zu haben und Aktualisierungen völlig reibungslos ablaufen zu lassen."

msgid "Concretely, here follows some typical profiles:"
msgstr "Konkret wären diese hier typische Profile:"

msgid "The dependencies of a project you are working on."
msgstr "Die Abhängigkeiten des Projekts, an dem Sie arbeiten."

msgid "Your favourite programming language libraries."
msgstr "Die Bibliotheken Ihrer Lieblingsprogrammiersprache."

msgid "Laptop-specific programs (like @samp{powertop}) that you don't need on a desktop."
msgstr "Programme nur für Laptops (wie @samp{powertop}), für die Sie auf einem „Desktop“-Rechner keine Verwendung haben."

msgid "@TeX{}live (this one can be really useful when you need to install just one package for this one document you've just received over email)."
msgstr "@TeX{}live (das kann wirklich praktisch sein, wenn Sie nur ein einziges Paket für dieses eine Dokument installieren müssen, das Ihnen jemand in einer E-Mail geschickt hat)."

msgid "Games."
msgstr "Spiele."

msgid "Let's dive in the set up!"
msgstr "Tauchen wir ein in deren Einrichtung!"

msgid "A Guix profile can be set up @i{via} a @dfn{manifest}.  A manifest is a snippet of Scheme code that specifies the set of packages you want to have in your profile; it looks like this:"
msgstr "Ein Guix-Profil kann über ein @dfn{Manifest} eingerichtet werden. Ein Manifest ist ein in Scheme geschriebenes Codeschnipsel, mit dem die Pakete spezifiziert werden, die Sie in Ihrem Profil haben möchten. Das sieht etwa so aus:"

msgid ""
"(specifications->manifest\n"
"  '(\"package-1\"\n"
"    ;; Version 1.3 of package-2.\n"
"    \"package-2@@1.3\"\n"
"    ;; The \"lib\" output of package-3.\n"
"    \"package-3:lib\"\n"
"    ; ...\n"
"    \"package-N\"))\n"
msgstr ""
"(specifications->manifest\n"
"  '(\"paket-1\"\n"
"    ;; Version 1.3 von paket-2.\n"
"    \"paket-2@@1.3\"\n"
"    ;; Die \"lib\"-Ausgabe von paket-3.\n"
"    \"paket-3:lib\"\n"
"    ; …\n"
"    \"paket-N\"))\n"

msgid "@xref{Writing Manifests,,, guix, GNU Guix Reference Manual}, for more information about the syntax."
msgstr "Siehe @ref{Manifeste verfassen,,, guix.de, Referenzhandbuch zu GNU Guix} für mehr Informationen zur Syntax."

msgid "We can create a manifest specification per profile and install them this way:"
msgstr "Wir können eine Manifestspezifikation für jedes Profil schreiben und es auf diese Weise installieren:"

msgid ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"mkdir -p \"$GUIX_EXTRA_PROFILES\"/my-project # if it does not exist yet\n"
"guix package --manifest=/path/to/guix-my-project-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"
msgstr ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"mkdir -p \"$GUIX_EXTRA_PROFILES\"/my-project # wenn es noch nicht existiert\n"
"guix package --manifest=/pfad/zu/guix-my-project-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"

msgid "Here we set an arbitrary variable @samp{GUIX_EXTRA_PROFILES} to point to the directory where we will store our profiles in the rest of this article."
msgstr "Hierbei haben wir eine beliebig benannte Variable @samp{GUIX_EXTRA_PROFILES} eingerichtet, die auf das Verzeichnis verweist, wo wir unsere Profile für den Rest dieses Artikels speichern wollen."

msgid "Placing all your profiles in a single directory, with each profile getting its own sub-directory, is somewhat cleaner.  This way, each sub-directory will contain all the symlinks for precisely one profile.  Besides, ``looping over profiles'' becomes obvious from any programming language (e.g.@: a shell script) by simply looping over the sub-directories of @samp{$GUIX_EXTRA_PROFILES}."
msgstr "Wenn Sie all Ihre Profile in ein einzelnes Verzeichnis legen und jedes Profil ein Unterverzeichnis darin bekommt, ist die Organisation etwas verständlicher. Dadurch wird jedes Unterverzeichnis all die symbolischen Verknüpfungen für genau ein Profil enthalten. Außerdem wird es von jeder Programmiersprache aus einfach, eine „Schleife über die Profile“ zu schreiben (z.B.@: in einem Shell-Skript), indem Sie es einfach die Unterverzeichnisse von @samp{$GUIX_EXTRA_PROFILES} in einer Schleife durchlaufen lassen."

msgid "Note that it's also possible to loop over the output of"
msgstr "Beachten Sie, dass man auch eine Schleife über die Ausgabe von"

msgid "guix package --list-profiles\n"
msgstr "guix package --list-profiles\n"

msgid "although you'll probably have to filter out @file{~/.config/guix/current}."
msgstr "schreiben kann, obwohl Sie dabei wahrscheinlich @file{~/.config/guix/current} herausfiltern wollen würden."

msgid "To enable all profiles on login, add this to your @file{~/.bash_profile} (or similar):"
msgstr "Um bei der Anmeldung alle Profile zu aktivieren, fügen Sie dies in Ihre @file{~/.bash_profile} ein (oder etwas Entsprechendes):"

msgid ""
"for i in $GUIX_EXTRA_PROFILES/*; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"
msgstr ""
"for i in $GUIX_EXTRA_PROFILES/*; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"

msgid "Note to Guix System users: the above reflects how your default profile @file{~/.guix-profile} is activated from @file{/etc/profile}, that latter being loaded by @file{~/.bashrc} by default."
msgstr "Eine Anmerkung für Nutzer von „Guix System“: Obiger Code entspricht dem, wie Ihr voreingestelltes Profil @file{~/.guix-profile} durch @file{/etc/profile} aktiviert wird, was nach Vorgabe durch @file{~/.bashrc} geladen wird."

msgid "You can obviously choose to only enable a subset of them:"
msgstr "Selbstverständlich können Sie sich auch dafür entscheiden, nur eine Teilmenge zu aktivieren:"

msgid ""
"for i in \"$GUIX_EXTRA_PROFILES\"/my-project-1 \"$GUIX_EXTRA_PROFILES\"/my-project-2; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"
msgstr ""
"for i in \"$GUIX_EXTRA_PROFILES\"/my-project-1 \"$GUIX_EXTRA_PROFILES\"/my-project-2; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"

msgid "When a profile is off, it's straightforward to enable it for an individual shell without \"polluting\" the rest of the user session:"
msgstr "Wenn ein Profil abgeschaltet ist, lässt es sich mit Leichtigkeit für eine bestimmte Shell aktivieren, ohne die restliche Benutzersitzung zu „verschmutzen“:"

msgid "GUIX_PROFILE=\"path/to/my-project\" ; . \"$GUIX_PROFILE\"/etc/profile\n"
msgstr "GUIX_PROFILE=\"pfad/zu/my-project\" ; . \"$GUIX_PROFILE\"/etc/profile\n"

msgid "The key to enabling a profile is to @emph{source} its @samp{etc/profile} file.  This file contains shell code that exports the right environment variables necessary to activate the software contained in the profile.  It is built automatically by Guix and meant to be sourced.  It contains the same variables you would get if you ran:"
msgstr "Der Schlüssel dazu, wie man ein Profil aktiviert, ist dessen @samp{etc/profile}-Datei mit @command{source} zu laden. Diese Datei enthält einige Shell-Befehle, um die für das Aktivieren der Software im Profil nötigen Umgebungsvariablen zu exportieren. Die Datei wird durch Guix automatisch erzeugt, um mit @command{source} eingelesen zu werden. Sie enthält dieselben Variablen, die Sie nach Ausführung dieses Befehls bekämen:"

msgid "guix package --search-paths=prefix --profile=$my_profile\"\n"
msgstr "guix package --search-paths=prefix --profile=$my_profile\"\n"

msgid "Once again, see @ref{Invoking guix package,,, guix, GNU Guix Reference Manual} for the command line options."
msgstr "Siehe auch hier das @ref{Aufruf von guix package,,, guix.de, Referenzhandbuch zu GNU Guix} für die Befehlszeilenoptionen."

msgid "To upgrade a profile, simply install the manifest again:"
msgstr "Um ein Profil zu aktualisieren, installieren Sie das Manifest einfach nochmal:"

msgid ""
"guix package -m /path/to/guix-my-project-manifest.scm \\\n"
" -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"
msgstr ""
"guix package -m /pfad/zu/guix-my-project-manifest.scm \\\n"
" -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"

msgid "To upgrade all profiles, it's easy enough to loop over them.  For instance, assuming your manifest specifications are stored in @file{~/.guix-manifests/guix-$profile-manifest.scm}, with @samp{$profile} being the name of the profile (e.g.@: \"project1\"), you could do the following in Bourne shell:"
msgstr "Um alle Profile zu aktualisieren, genügt es, sie in einer Schleife durchlaufen zu lassen. Nehmen wir zum Beispiel an, Ihre Manifestspezifikationen befinden sich in @file{~/.guix-manifests/guix-$profile-manifest.scm}, wobei @samp{$profile} der Name des Profils ist (z.B.@: „projekt1“), dann könnten Sie in der Bourne-Shell Folgendes tun:"

msgid ""
"for profile in \"$GUIX_EXTRA_PROFILES\"/*; do\n"
"  guix package --profile=\"$profile\" \\\n"
"   --manifest=\"$HOME/.guix-manifests/guix-$profile-manifest.scm\"\n"
"done\n"
msgstr ""
"for profile in \"$GUIX_EXTRA_PROFILES\"/*; do\n"
"  guix package --profile=\"$profile\" \\\n"
"   --manifest=\"$HOME/.guix-manifests/guix-$profile-manifest.scm\"\n"
"done\n"

msgid "Each profile has its own generations:"
msgstr "Jedes Profil verfügt über seine eigenen Generationen:"

msgid "guix package -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project --list-generations\n"
msgstr "guix package -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project --list-generations\n"

msgid "You can roll-back to any generation of a given profile:"
msgstr "Sie können es auf jede Generation zurücksetzen:"

msgid "guix package -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project --switch-generations=17\n"
msgstr "guix package -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project --switch-generations=17\n"

msgid "Finally, if you want to switch to a profile without inheriting from the current environment, you can activate it from an empty shell:"
msgstr "Zu guter Letzt ist es möglich, zu einem Profil zu wechseln ohne die aktuelle Umgebung zu erben, indem Sie es aus einer leeren Shell heraus aktivieren:"

msgid ""
"env -i $(which bash) --login --noprofile --norc\n"
". my-project/etc/profile\n"
msgstr ""
"env -i $(which bash) --login --noprofile --norc\n"
". my-project/etc/profile\n"

msgid "Activating a profile essentially boils down to exporting a bunch of environmental variables.  This is the role of the @samp{etc/profile} within the profile."
msgstr "Das Aktivieren eines Profils bedeutet im Grunde, dass eine Menge Umgebungsvariabler exportiert wird. Diese Rolle fällt der @samp{etc/profile}-Datei innerhalb des Profils zu."

msgid "Note: Only the environmental variables of the packages that consume them will be set."
msgstr "Anmerkung: Nur diejenigen Umgebungsvariablen der sie gebrauchenden Pakete werden gesetzt."

msgid "For instance, @samp{MANPATH} won't be set if there is no consumer application for man pages within the profile.  So if you need to transparently access man pages once the profile is loaded, you've got two options:"
msgstr "Zum Beispiel wird kein @samp{MANPATH} gesetzt sein, wenn keine Anwendung im Profil diese „Man-Pages“ (Handbuchseiten) gebraucht. Wenn Sie also transparenten Zugriff auf Handbuchseiten brauchen, nachdem das Profil geladen wurde, dann gibt es zwei Möglichkeiten:"

msgid "Either export the variable manually, e.g."
msgstr "Entweder Sie exportieren die Variablen von Hand, z.B."

msgid "export MANPATH=/path/to/profile$@{MANPATH:+:@}$MANPATH\n"
msgstr "export MANPATH=/path/to/profile$@{MANPATH:+:@}$MANPATH\n"

msgid "Or include @samp{man-db} to the profile manifest."
msgstr "Oder Sie schreiben @samp{man-db} in das Profilmanifest hinein."

msgid "The same is true for @samp{INFOPATH} (you can install @samp{info-reader}), @samp{PKG_CONFIG_PATH} (install @samp{pkg-config}), etc."
msgstr "Das Gleiche gilt für @samp{INFOPATH} (Sie können @samp{info-reader} installieren), @samp{PKG_CONFIG_PATH} (installieren Sie @samp{pkg-config}), etc."

msgid "What about the default profile that Guix keeps in @file{~/.guix-profile}?"
msgstr "Was ist mit dem Standardprofil, das Guix in @file{~/.guix-profile} aufbewahrt?"

msgid "You can assign it the role you want.  Typically you would install the manifest of the packages you want to use all the time."
msgstr "Sie können ihm die Rolle zuweisen, die Sie wollen. Normalerweise würden Sie das Manifest derjenigen Pakete installieren, die Sie ständig benutzen möchten."

msgid "Alternatively, you could keep it ``manifest-less'' for throw-away packages that you would just use for a couple of days.  This way makes it convenient to run"
msgstr "Alternativ können Sie es ohne Manifest für Wegwerfpakete benutzen, die Sie nur ein paar Tage lang benutzen wollen. Das macht es leicht,"

msgid ""
"guix install package-foo\n"
"guix upgrade package-bar\n"
msgstr ""
"guix install paket-foo\n"
"guix upgrade paket-bar\n"

msgid "without having to specify the path to a profile."
msgstr "auszuführen ohne den Pfad zu einem Profil festzulegen."

msgid "Manifests let you @dfn{declare} the set of packages you'd like to have in a profile (@pxref{Writing Manifests,,, guix, GNU Guix Reference Manual}).  They are a convenient way to keep your package lists around and, say, to synchronize them across multiple machines using a version control system."
msgstr "Mit Manifesten können Sie @dfn{deklarativ} angeben, welche Pakete Sie in Ihrem Profil haben möchten (siehe @ref{Manifeste verfassen,,, guix.de, Referenzhandbuch zu GNU Guix}). Sie sind eine bequeme Art, Ihre Paketlisten zur Hand zu haben und diese z.B.@: über mehrere Maschinen hinweg in einem Versionskontrollsystem zu synchronisieren."

msgid "A common complaint about manifests is that they can be slow to install when they contain large number of packages.  This is especially cumbersome when you just want get an upgrade for one package within a big manifest."
msgstr "Eine oft gehörte Beschwerde über Manifeste ist, dass es lange dauert, sie zu installieren, wenn sie viele Pakete enthalten. Das ist besonders hinderlich, wenn Sie nur ein einziges Paket in ein großes Manifest installieren möchten."

msgid "This is one more reason to use multiple profiles, which happen to be just perfect to break down manifests into multiple sets of semantically connected packages.  Using multiple, small profiles provides more flexibility and usability."
msgstr "Das ist ein weiteres Argument dafür, mehrere Profile zu benutzen, denn es stellt sich heraus, dass dieses Vorgehen perfekt für das Aufbrechen von Manifesten in mehrere Mengen semantisch verbundener Pakete geeignet ist. Mit mehreren, kleinen Profilen haben Sie mehr Flexibilität und Benutzerfreundlichkeit."

msgid "Manifests come with multiple benefits.  In particular, they ease maintenance:"
msgstr "Manifeste haben mehrere Vorteile. Insbesondere erleichtern sie die Wartung."

msgid "When a profile is set up from a manifest, the manifest itself is self-sufficient to keep a ``package listing'' around and reinstall the profile later or on a different system.  For ad-hoc profiles, we would need to generate a manifest specification manually and maintain the package versions for the packages that don't use the default version."
msgstr "Wenn ein Profil aus einem Manifest heraus eingerichtet wird, ist das Manifest selbst genug, um eine Liste der Pakete zur Verfügung zu haben und das Profil später auf einem anderen System zu installieren. Bei @i{ad-hoc}-Profilen müssten wir hingegen eine Manifestspezifikation von Hand schreiben und uns um die Paketversionen derjenigen Pakete kümmern, die nicht die vorgegebene Version verwenden."

msgid "@code{guix package --upgrade} always tries to update the packages that have propagated inputs, even if there is nothing to do.  Guix manifests remove this problem."
msgstr "Bei @code{guix package --upgrade} wird immer versucht, die Pakete zu aktualisieren, die propagierte Eingaben haben, selbst wenn es nichts zu tun gibt. Mit Guix-Manifesten fällt dieses Problem weg."

msgid "When partially upgrading a profile, conflicts may arise (due to diverging dependencies between the updated and the non-updated packages) and they can be annoying to resolve manually.  Manifests remove this problem altogether since all packages are always upgraded at once."
msgstr "Wenn man nur Teile eines Profils aktualisiert, kann es zu Konflikten kommen (weil die Abhängigkeiten zwischen aktualisierten und nicht aktualisierten Paketen voneinander abweichen), und es kann mühsam sein, diese Konflikte von Hand aufzulösen. Manifeste haben kein solches Problem, weil alle Pakete immer gleichzeitig aktualisiert werden."

msgid "As mentioned above, manifests allow for reproducible profiles, while the imperative @code{guix install}, @code{guix upgrade}, etc. do not, since they produce different profiles every time even when they hold the same packages.  See @uref{https://issues.guix.gnu.org/issue/33285, the related discussion on the matter}."
msgstr "Wie zuvor erwähnt, gewähren einem Manifeste reproduzierbare Profile, während die imperativen @code{guix install}, @code{guix upgrade}, etc.@: das nicht tun, weil sie jedes Mal ein anderes Profil ergeben, obwohl sie dieselben Pakete enthalten. Siehe die @uref{https://issues.guix.gnu.org/issue/33285, dieses Thema betreffende Diskussion}."

msgid "Manifest specifications are usable by other @samp{guix} commands.  For example, you can run @code{guix weather -m manifest.scm} to see how many substitutes are available, which can help you decide whether you want to try upgrading today or wait a while.  Another example: you can run @code{guix pack -m manifest.scm} to create a pack containing all the packages in the manifest (and their transitive references)."
msgstr "Manifestspezifikationen können von anderen @samp{guix}-Befehlen benutzt werden. Zum Beispiel können Sie @code{guix weather -m manifest.scm} ausführen, um zu sehen, wie viele Substitute verfügbar sind, was Ihnen bei der Entscheidung helfen kann, ob Sie heute schon eine Aktualisierung durchführen oder lieber noch eine Weile warten möchten. Ein anderes Beispiel: Sie können mit @code{guix pack -m manifest.scm} ein Bündel erzeugen, das alle Pakete im Manifest enthält (mitsamt derer transitiven Referenzen)."

msgid "Finally, manifests have a Scheme representation, the @samp{<manifest>} record type.  They can be manipulated in Scheme and passed to the various Guix @uref{https://en.wikipedia.org/wiki/Api, APIs}."
msgstr "Zuletzt haben Manifeste auch eine Repräsentation in Scheme, nämlich den @samp{<manifest>}-Verbundstyp. Sie können in Scheme verarbeitet werden und an die verschiedenen @uref{https://de.wikipedia.org/wiki/Programmierschnittstelle, Guix-Programmierschnittstellen (APIs)} übergeben werden."

msgid "It's important to understand that while manifests can be used to declare profiles, they are not strictly equivalent: profiles have the side effect that they ``pin'' packages in the store, which prevents them from being garbage-collected (@pxref{Invoking guix gc,,, guix, GNU Guix Reference Manual})  and ensures that they will still be available at any point in the future.  The @command{guix shell} command also protects recently-used profiles from garbage collection; profiles that have not been used for a while may be garbage-collected though, along with the packages they refer to."
msgstr "Es ist wichtig, dass Sie verstehen, dass Manifeste zwar benutzt werden können, um Profile zu deklarieren, sie aber nicht ganz dasselbe wie Profile sind: Profile haben Nebenwirkungen. Sie setzen Pakete im Store fest, so dass sie nicht vom Müllsammler geholt werden (siehe @ref{Aufruf von guix gc,,, guix.de, Referenzhandbuch zu GNU Guix}) und stellen sicher, dass sie auch in Zukunft jederzeit verfügbar sein werden. Wenn Sie den Befehl @command{guix shell} verwenden, werden damit erzeugte kürzlich verwendete Profile allerdings auch vor dem Müllsammler beschützt; Profile, die länger nicht verwendet werden, können jedoch zusammen mit ihren referenzierten Paketen von ihm gelöscht werden."

msgid "To be 100% sure that a given profile will never be collected, install the manifest to a profile and use @code{GUIX_PROFILE=/the/profile; . \"$GUIX_PROFILE\"/etc/profile} as explained above: this guarantees that our hacking environment will be available at all times."
msgstr "Wenn wir uns 100% sicher sein wollen, dass der Müllsammler ein bestimmtes Profil nicht sammelt, müssen wir das Manifest in ein Profil installieren und @code{GUIX_PROFILE=/das/profil; . \"$GUIX_PROFILE\"/etc/profile} aufrufen, wie oben erklärt. Dadurch haben wir die Garantie, dass unsere Hacking-Umgebung jederzeit zur Verfügung steht."

msgid "@emph{Security warning:} While keeping old profiles around can be convenient, keep in mind that outdated packages may not have received the latest security fixes."
msgstr "@emph{Sicherheitswarnung:} Obwohl es angenehm sein kann, alte Profile zu behalten, sollten Sie daran denken, dass veraltete Pakete @emph{nicht} über die neuesten Sicherheitsbehebungen verfügen."

msgid "To reproduce a profile bit-for-bit, we need two pieces of information:"
msgstr "Um ein Profil Bit für Bit nachzubilden, brauchen wir zweierlei Informationen:"

msgid "a manifest (@pxref{Writing Manifests,,, guix, GNU Guix Reference Manual});"
msgstr "ein Manifest (siehe @ref{Manifeste verfassen,,, guix.de, Referenzhandbuch zu GNU Guix}) und"

msgid "a Guix channel specification (@pxref{Replicating Guix,,, guix, GNU Guix Reference Manual})."
msgstr "eine Kanalspezifikation für Guix (siehe @pxref{Guix nachbilden,,, guix.de, Referenzhandbuch zu GNU Guix})."

msgid "Indeed, manifests alone might not be enough: different Guix versions (or different channels) can produce different outputs for a given manifest."
msgstr "Tatsächlich kann es vorkommen, dass ein Manifest allein nicht genug ist: Verschiedene Versionen von Guix (oder andere Kanäle) können beim selben Manifest zu verschiedenen Ausgaben führen."

msgid "You can output the Guix channel specification with @samp{guix describe --format=channels} (@pxref{Invoking guix describe,,, guix, GNU Guix Reference Manual}).  Save this to a file, say @samp{channel-specs.scm}."
msgstr "Sie können sich die Guix-Kanalspezifikationen mit @samp{guix describe --format=channels} ausgeben lassen (siehe @ref{Aufruf von guix describe,,, guix.de, Referenzhandbuch zu GNU Guix}). Speichern Sie sie in eine Datei ab, sagen wir @samp{channel-specs.scm}."

msgid "On another computer, you can use the channel specification file and the manifest to reproduce the exact same profile:"
msgstr "Auf einem anderen Rechner können Sie die Kanalspezifikationsdatei und das Manifest benutzen, um genau dasselbe Profil zu reproduzieren:"

msgid ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"GUIX_EXTRA=$HOME/.guix-extra\n"
"\n"
msgstr ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"GUIX_EXTRA=$HOME/.guix-extra\n"
"\n"

msgid ""
"mkdir -p \"$GUIX_EXTRA\"/my-project\n"
"guix pull --channels=channel-specs.scm --profile=\"$GUIX_EXTRA/my-project/guix\"\n"
"\n"
msgstr ""
"mkdir -p \"$GUIX_EXTRA\"/my-project\n"
"guix pull --channels=channel-specs.scm --profile=\"$GUIX_EXTRA/my-project/guix\"\n"
"\n"

msgid ""
"mkdir -p \"$GUIX_EXTRA_PROFILES/my-project\"\n"
"\"$GUIX_EXTRA\"/my-project/guix/bin/guix package \\\n"
" --manifest=/path/to/guix-my-project-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"
msgstr ""
"mkdir -p \"$GUIX_EXTRA_PROFILES/my-project\"\n"
"\"$GUIX_EXTRA\"/my-project/guix/bin/guix package \\\n"
" --manifest=/pfad/zu/guix-my-project-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"

msgid "It's safe to delete the Guix channel profile you've just installed with the channel specification, the project profile does not depend on it."
msgstr "Es kann nichts Schlimmes passieren, wenn Sie das Guix-Kanalprofil, das Sie eben aus der Kanalspezifikation erstellt haben, löschen, denn das Projektprofil hängt davon nicht ab."

msgid "development, with Guix"
msgstr "Entwicklung, mit Guix"

msgid "software development, with Guix"
msgstr "Software-Entwicklung, mit Guix"

msgid "Guix is a handy tool for developers; @command{guix shell}, in particular, gives a standalone development environment for your package, no matter what language(s) it's written in (@pxref{Invoking guix shell,,, guix, GNU Guix Reference Manual}).  To benefit from it, you have to initially write a package definition and have it either in Guix proper, or in a channel, or directly in your project's source tree as a @file{guix.scm} file.  This last option is appealing: all developers have to do to get set up is clone the project's repository and run @command{guix shell}, with no arguments."
msgstr "Guix ist ein hilfreiches Werkzeug für Entwickler; besonders @command{guix shell} versorgt Sie mit einer eigenständigen Entwicklungsumgebung für Ihr Paket, unabhängig von der oder den Sprachen, in denen es programmiert ist (siehe @ref{Aufruf von guix shell,,, guix.de, Referenzhandbuch zu GNU Guix}). Um Ihren Nutzen daraus zu ziehen, fertigen Sie als Erstes eine Paketdefinition an, die entweder ins eigentliche Guix akzeptiert werden muss oder die Teil eines Kanals oder gleich im Quellbaum Ihres Projekts sein muss in einer Datei @file{guix.scm}. Letztere Option bietet sich an, weil Entwickler dann nur das Repository des Projekts zu klonen brauchen und @command{guix shell} ohne Argumente aufrufen können."

msgid "Development needs go beyond development environments though.  How can developers perform continuous integration of their code in Guix build environments? How can they deliver their code straight to adventurous users? This chapter describes a set of files developers can add to their repository to set up Guix-based development environments, continuous integration, and continuous delivery---all at once@footnote{This chapter is adapted from a @uref{https://guix.gnu.org/en/blog/2023/from-development-environments-to-continuous-integrationthe-ultimate-guide-to-software-development-with-guix/, blog post} published in June 2023 on the Guix web site.}."
msgstr "Zur Entwicklung gehört jedoch mehr. Wie richten Entwickler eine kontinuierliche Integration ihres Codes in Guix-Erstellungsumgebungen ein? Wie findet eine sofortige Auslieferung ihres Codes an abenteuerlustige Nutzer statt? Dieses Kapitel erklärt, wie Entwickler wenige zusätzliche Dateien ins Repository hinzufügen, um Guix-basierte Entwicklungsumgebungen, kontinuierliche Integration und kontinuierliche Auslieferung umzusetzen@tie{}– alles auf einmal@footnote{Dieses Kapitel ist eine aufgearbeitete Fassung @uref{https://guix.gnu.org/de/blog/2023/from-development-environments-to-continuous-integrationthe-ultimate-guide-to-software-development-with-guix/, eines Blog-Eintrags}, der im Juni 2023 auf Guix’ Webauftritt veröffentlicht wurde.}."

msgid "How do we go about ``Guixifying'' a repository? The first step, as we've seen, will be to add a @file{guix.scm} at the root of the repository in question. We'll take @uref{https://www.gnu.org/software/guile,Guile} as an example in this chapter: it's written in Scheme (mostly) and C, and has a number of dependencies---a C compilation tool chain, C libraries, Autoconf and its friends, LaTeX, and so on. The resulting @file{guix.scm} looks like the usual package definition (@pxref{Defining Packages,,, guix, GNU Guix Reference Manual}), just without the @code{define-public} bit:"
msgstr "Wie lässt sich also ein Repository „guixifizieren“? Unser erster Schritt ist, wie wir sehen konnten, eine Datei @file{guix.scm} im obersten Verzeichnis des fraglichen Repositorys unterzubringen. Nehmen wir @uref{https://www.gnu.org/software/guile,Guile} als Beispiel in diesem Kapitel; es ist in Scheme (zum größten Teil) und in C geschrieben und ist von anderer Software abhängig@tie{}– einer C-Compiler-Toolchain, C-Bibliotheken, Autoconf und seinen Freunden, LaTeX und so weiter. Daraus ergibt sich eine @file{guix.scm}, die ziemlich wie andere Paketdefinitionen auch aussieht (siehe @ref{Pakete definieren,,, guix.de, Referenzhandbuch zu GNU Guix}), nur fehlt das @code{define-public} am Anfang:"

msgid ""
";; The ‘guix.scm’ file for Guile, for use by ‘guix shell’.\n"
"\n"
msgstr ""
";; Die ‚guix.scm‘-Datei für Guile, gedacht für ‚guix shell‘.\n"
"\n"

msgid ""
"(use-modules (guix)\n"
"             (guix build-system gnu)\n"
"             ((guix licenses) #:prefix license:)\n"
"             (gnu packages autotools)\n"
"             (gnu packages base)\n"
"             (gnu packages bash)\n"
"             (gnu packages bdw-gc)\n"
"             (gnu packages compression)\n"
"             (gnu packages flex)\n"
"             (gnu packages gdb)\n"
"             (gnu packages gettext)\n"
"             (gnu packages gperf)\n"
"             (gnu packages libffi)\n"
"             (gnu packages libunistring)\n"
"             (gnu packages linux)\n"
"             (gnu packages pkg-config)\n"
"             (gnu packages readline)\n"
"             (gnu packages tex)\n"
"             (gnu packages texinfo)\n"
"             (gnu packages version-control))\n"
"\n"
msgstr ""
"(use-modules (guix)\n"
"             (guix build-system gnu)\n"
"             ((guix licenses) #:prefix license:)\n"
"             (gnu packages autotools)\n"
"             (gnu packages base)\n"
"             (gnu packages bash)\n"
"             (gnu packages bdw-gc)\n"
"             (gnu packages compression)\n"
"             (gnu packages flex)\n"
"             (gnu packages gdb)\n"
"             (gnu packages gettext)\n"
"             (gnu packages gperf)\n"
"             (gnu packages libffi)\n"
"             (gnu packages libunistring)\n"
"             (gnu packages linux)\n"
"             (gnu packages pkg-config)\n"
"             (gnu packages readline)\n"
"             (gnu packages tex)\n"
"             (gnu packages texinfo)\n"
"             (gnu packages version-control))\n"
"\n"

msgid ""
"(package\n"
"  (name \"guile\")\n"
"  (version \"3.0.99-git\")                          ;funky version number\n"
"  (source #f)                                     ;no source\n"
"  (build-system gnu-build-system)\n"
"  (native-inputs\n"
"   (append (list autoconf\n"
"                 automake\n"
"                 libtool\n"
"                 gnu-gettext\n"
"                 flex\n"
"                 texinfo\n"
"                 texlive-base                 ;for \"make pdf\"\n"
"                 texlive-epsf\n"
"                 gperf\n"
"                 git\n"
"                 gdb\n"
"                 strace\n"
"                 readline\n"
"                 lzip\n"
"                 pkg-config)\n"
"\n"
msgstr ""
"(package\n"
"  (name \"guile\")\n"
"  (version \"3.0.99-git\")                          ;komische Versionsnummer\n"
"  (source #f)                                     ;keine Quelle\n"
"  (build-system gnu-build-system)\n"
"  (native-inputs\n"
"   (append (list autoconf\n"
"                 automake\n"
"                 libtool\n"
"                 gnu-gettext\n"
"                 flex\n"
"                 texinfo\n"
"                 texlive-base                 ;für \"make pdf\"\n"
"                 texlive-epsf\n"
"                 gperf\n"
"                 git\n"
"                 gdb\n"
"                 strace\n"
"                 readline\n"
"                 lzip\n"
"                 pkg-config)\n"
"\n"

msgid ""
"           ;; When cross-compiling, a native version of Guile itself is\n"
"           ;; needed.\n"
"           (if (%current-target-system)\n"
"               (list this-package)\n"
"               '())))\n"
"  (inputs\n"
"   (list libffi bash-minimal))\n"
"  (propagated-inputs\n"
"   (list libunistring libgc))\n"
"\n"
msgstr ""
"           ;; Zum Cross-Kompilieren ist eine native Version desselben\n"
"           ;; Guiles notwendig.\n"
"           (if (%current-target-system)\n"
"               (list this-package)\n"
"               '())))\n"
"  (inputs\n"
"   (list libffi bash-minimal))\n"
"  (propagated-inputs\n"
"   (list libunistring libgc))\n"
"\n"

msgid ""
"  (native-search-paths\n"
"   (list (search-path-specification\n"
"          (variable \"GUILE_LOAD_PATH\")\n"
"          (files '(\"share/guile/site/3.0\")))\n"
"         (search-path-specification\n"
"          (variable \"GUILE_LOAD_COMPILED_PATH\")\n"
"          (files '(\"lib/guile/3.0/site-ccache\")))))\n"
"  (synopsis \"Scheme implementation intended especially for extensions\")\n"
"  (description\n"
"   \"Guile is the GNU Ubiquitous Intelligent Language for Extensions,\n"
"and it's actually a full-blown Scheme implementation!\")\n"
"  (home-page \"https://www.gnu.org/software/guile/\")\n"
"  (license license:lgpl3+))\n"
msgstr ""
"  (native-search-paths\n"
"   (list (search-path-specification\n"
"          (variable \"GUILE_LOAD_PATH\")\n"
"          (files '(\"share/guile/site/3.0\")))\n"
"         (search-path-specification\n"
"          (variable \"GUILE_LOAD_COMPILED_PATH\")\n"
"          (files '(\"lib/guile/3.0/site-ccache\")))))\n"
"  (synopsis \"Scheme implementation intended especially for extensions\")\n"
"  (description\n"
"   \"Guile is the GNU Ubiquitous Intelligent Language for Extensions,\n"
"and it's actually a full-blown Scheme implementation!\")\n"
"  (home-page \"https://www.gnu.org/software/guile/\")\n"
"  (license license:lgpl3+))\n"

msgid "Quite a bit of boilerplate, but now someone who'd like to hack on Guile now only needs to run:"
msgstr "Das ist schon ein bisschen aufwendig, aber wenn jemand an Guile hacken will, braucht sie bloß noch das hier aufzurufen:"

msgid "guix shell\n"
msgstr "guix shell\n"

msgid "That gives them a shell containing all the dependencies of Guile: those listed above, but also @emph{implicit dependencies} such as the GCC tool chain, GNU@ Make, sed, grep, and so on.  @xref{Invoking guix shell,,, guix, GNU Guix Reference Manual}, for more info on @command{guix shell}."
msgstr "Sie findet sich in einer Shell wieder, wo es alle Abhängigkeiten von Guile gibt: die oben aufgeführten Abhängigkeiten und außerdem @emph{implizite Abhängigkeiten} wie die GCC-Toolchain, GNU@tie{}Make, sed, grep und so weiter. Siehe @ref{Aufruf von guix shell,,, guix.de, Referenzhandbuch zu GNU Guix} für weitere Informationen zu @command{guix shell}."

msgid "The chef's recommendation"
msgstr "Empfehlung des Hauses"

msgid "Our suggestion is to create development environments like this:"
msgstr "Wir legen Ihnen nahe, Entwicklungsumgebungen mit diesem Befehl anzulegen:"

msgid "guix shell --container --link-profile\n"
msgstr "guix shell --container --link-profile\n"

msgid "... or, for short:"
msgstr "… oder kurz:"

msgid "guix shell -CP\n"
msgstr "guix shell -CP\n"

msgid "That gives a shell in an isolated container, and all the dependencies show up in @code{$HOME/.guix-profile}, which plays well with caches such as @file{config.cache} (@pxref{Cache Files,,, autoconf, Autoconf}) and absolute file names recorded in generated @code{Makefile}s and the likes. The fact that the shell runs in a container brings peace of mind: nothing but the current directory and Guile's dependencies is visible inside the container; nothing from the system can possibly interfere with your development."
msgstr "So erhält man eine Shell in einem isolierten Container und alle Abhängigkeiten finden sich in @code{$HOME/.guix-profile}, was die Nutzung von Zwischenspeichern wie @file{config.cache} (siehe @ref{Cache Files,,, autoconf, Autoconf}) erleichtert und wodurch absolute Dateinamen, die in erzeugten Dateien wie @code{Makefile}s und Ähnlichem festgehalten werden, gültig bleiben. Die Tatsache, dass die Shell in einem Container läuft, erlaubt Ihnen ein Gefühl der Sicherheit: Nichts außer dem aktuellen Verzeichnis und Guiles Abhängigkeiten ist in dieser isolierten Umgebung sichtbar; nichts vom System kann Ihre Arbeit störend beeinflussen."

msgid "Level 1: Building with Guix"
msgstr "Stufe 1: Erstellen mit Guix"

msgid "Now that we have a package definition (@pxref{Getting Started}), why not also take advantage of it so we can build Guile with Guix? We had left the @code{source} field empty, because @command{guix shell} above only cares about the @emph{inputs} of our package---so it can set up the development environment---not about the package itself."
msgstr "Jetzt, wo wir eine Paketdefinition vorliegen haben (siehe @ref{Getting Started}), können wir sie dann auch gleich benutzen, um Guile mit Guix zu erstellen? Uns fehlt der Eintrag im @code{source}-Feld, das wir leer gelassen haben, denn für @command{guix shell} spielen nur die @emph{inputs} unseres Pakets eine Rolle@tie{}– um die Entwicklungsumgebung zu unserem Paket aufzusetzen@tie{}–, aber das Paket selber wurde bisher nicht gebraucht."

msgid "To build the package with Guix, we'll need to fill out the @code{source} field, along these lines:"
msgstr "Wenn wir das Paket mit Guix erstellt bekommen möchten, müssen wir etwas ins @code{source}-Feld eintragen, etwa so:"

msgid ""
"(use-modules (guix)\n"
"             (guix git-download)  ;for ‘git-predicate’\n"
"             @dots{})\n"
"\n"
msgstr ""
"(use-modules (guix)\n"
"             (guix git-download)  ;für ‚git-predicate‘\n"
"             …)\n"
"\n"

msgid ""
"(define vcs-file?\n"
"  ;; Return true if the given file is under version control.\n"
"  (or (git-predicate (current-source-directory))\n"
"      (const #t)))                                ;not in a Git checkout\n"
"\n"
msgstr ""
"(define vcs-file?\n"
"  ;; Wahr zurückliefern, wenn die angegebene Datei unter\n"
"  ;; Versionskontrolle steht.\n"
"  (or (git-predicate (current-source-directory))\n"
"      (const #t)))                                ;es ist kein Git-Checkout\n"
"\n"

msgid ""
"(package\n"
"  (name \"guile\")\n"
"  (version \"3.0.99-git\")                          ;funky version number\n"
"  (source (local-file \".\" \"guile-checkout\"\n"
"                      #:recursive? #t\n"
"                      #:select? vcs-file?))\n"
"  @dots{})\n"
msgstr ""
"(package\n"
"  (name \"guile\")\n"
"  (version \"3.0.99-git\")                          ;komische Versionsnummer\n"
"  (source (local-file \".\" \"guile-checkout\"\n"
"                      #:recursive? #t\n"
"                      #:select? vcs-file?))\n"
"  …)\n"

msgid "Here's what we changed compared to the previous section:"
msgstr "Dies sind unsere Änderungen verglichen mit dem vorherigen Abschnitt:"

msgid "We added @code{(guix git-download)} to our set of imported modules, so we can use its @code{git-predicate} procedure."
msgstr "Wir haben @code{(guix git-download)} zu unseren importierten Modulen hinzugefügt, damit wir dessen Prozedur @code{git-predicate} benutzen können."

msgid "We defined @code{vcs-file?} as a procedure that returns true when passed a file that is under version control. For good measure, we add a fallback case for when we're not in a Git checkout: always return true."
msgstr "Wir haben @code{vcs-file?} als Prozedur definiert, die wahr zurückgibt, wenn ihr eine Datei übergeben wird, die unter Versionskontrolle steht. Es gehört sich, den Fall abzufangen, wenn wir uns in keinem Git-Checkout befinden: Dann wird immer wahr geliefert."

msgid "We set @code{source} to a @uref{https://guix.gnu.org/manual/devel/en/html_node/G_002dExpressions.html#index-local_002dfile,@code{local-file}}---a recursive copy of the current directory (@code{\".\"}), limited to files under version control (the @code{#:select?} bit)."
msgstr "Wir setzen @code{source} auf @uref{https://guix.gnu.org/manual/devel/de/html_node/G_002dAusdrucke.html#index-local_002dfile,@code{local-file}}@tie{}– einer rekursiven Kopie des aktuellen Verzeichnisses (@code{\".\"}), eingeschränkt auf solche Dateien, die unter Versionskontrolle gestellt sind (mit @code{#:select?})."

msgid "From there on, our @file{guix.scm} file serves a second purpose: it lets us build the software with Guix. The whole point of building with Guix is that it's a ``clean'' build---you can be sure nothing from your working tree or system interferes with the build result---and it lets you test a variety of things. First, you can do a plain native build:"
msgstr "Von da an erfüllt @file{guix.scm} einen zweiten Zweck: Wir können die Software mit Guix erstellen. Der Vorteil der Erstellung mit Guix ist, dass eine „saubere“ Erstellung durchgeführt wird@tie{}– Sie können sich sicher sein, das Ergebnis der Erstellung beruht nicht auf Dateien in Ihrem Quellbaum oder anderen Dingen in Ihrem System@tie{}– und auch, dass Sie viele Möglichkeiten testen können. Als Erstes wäre da eine einfache native Erstellung:"

msgid "guix build -f guix.scm\n"
msgstr "guix build -f guix.scm\n"

msgid "But you can also build for another system (possibly after setting up @pxref{Daemon Offload Setup, offloading,, guix, GNU Guix Reference Manual} or @pxref{Virtualization Services, transparent emulation,, guix, GNU Guix Reference Manual}):"
msgstr "Aber auch für ein anderes System können Sie die Erstellung durchführen (unter Umständen müssen Sie erst die Auslagerungsfunktion, siehe @ref{Auslagern des Daemons einrichten,,, guix.de, Referenzhandbuch zu GNU Guix}, oder transparente Emulation, siehe @ref{Virtualisierungsdienste,,, guix.de, Referenzhandbuch zu GNU Guix}, einrichten):"

msgid "guix build -f guix.scm -s aarch64-linux -s riscv64-linux\n"
msgstr "guix build -f guix.scm -s aarch64-linux -s riscv64-linux\n"

msgid "@dots{} or cross-compile:"
msgstr "… oder Sie cross-kompilieren:"

msgid "guix build -f guix.scm --target=x86_64-w64-mingw32\n"
msgstr "guix build -f guix.scm --target=x86_64-w64-mingw32\n"

msgid "You can also use @dfn{package transformations} to test package variants (@pxref{Package Transformation Options,,, guix, GNU Guix Reference Manual}):"
msgstr "Möglich sind auch @dfn{Paketumwandlungsoptionen}, womit Sie Varianten Ihres Pakets testen können (siehe @ref{Paketumwandlungsoptionen,,, guix.de, Referenzhandbuch zu GNU Guix}):"

msgid ""
"# What if we built with Clang instead of GCC?\n"
"guix build -f guix.scm \\\n"
"  --with-c-toolchain=guile@@3.0.99-git=clang-toolchain\n"
"\n"
msgstr ""
"# Wie sieht es aus, wenn wir mit Clang statt GCC erstellen?\n"
"guix build -f guix.scm \\\n"
"  --with-c-toolchain=guile@@3.0.99-git=clang-toolchain\n"
"\n"

msgid ""
"# What about that under-tested configure flag?\n"
"guix build -f guix.scm \\\n"
"  --with-configure-flag=guile@@3.0.99-git=--disable-networking\n"
msgstr ""
"# Was ist mit wenig getesteten configure-Befehlszeilenoptionen?\n"
"guix build -f guix.scm \\\n"
"  --with-configure-flag=guile@@3.0.99-git=--disable-networking\n"

msgid "Handy!"
msgstr "Praktisch!"

msgid "Level 2: The Repository as a Channel"
msgstr "Stufe 2: Das Repository als Kanal"

msgid "We now have a Git repository containing (among other things) a package definition (@pxref{Building with Guix}).  Can't we turn it into a @dfn{channel} (@pxref{Channels,,, guix, GNU Guix Reference Manual})? After all, channels are designed to ship package definitions to users, and that's exactly what we're doing with our @file{guix.scm}."
msgstr "Jetzt haben wir ein Git-Repository mit (unter anderem) einer Paketdefinition (siehe @ref{Building with Guix}). Wäre es nicht besser, wenn wir daraus einen @dfn{Kanal} machen würden (siehe @ref{Kanäle,,, guix.de, Referenzhandbuch zu GNU Guix})? Schließlich sind Kanäle entwickelt worden, um Nutzer mit Paketdefinitionen zu versorgen, und genau das tun wir mit @file{guix.scm}."

msgid "Turns out we can indeed turn it into a channel, but with one caveat: we must create a separate directory for the @code{.scm} file(s) of our channel so that @command{guix pull} doesn't load unrelated @code{.scm} files when someone pulls the channel---and in Guile, there are lots of them! So we'll start like this, keeping a top-level @file{guix.scm} symlink for the sake of @command{guix shell}:"
msgstr "Tatsächlich sollten wir es zu einem Kanal machen, aber aufgepasst: Die @code{.scm}-Datei(en) unseres Kanals gehören in ein gesondertes Verzeichnis, damit @command{guix pull} nicht versucht, die falschen @code{.scm}-Dateien zu laden, wenn jemand damit den Kanal herunterlädt@tie{}– und in Guile gibt es viele @code{.scm}-Dateien! Wir fangen mit der Trennung an, behalten aber auf oberster Ebene eine symbolische Verknüpfung @file{guix.scm} zur Nutzung mit @command{guix shell}:"

msgid ""
"mkdir -p .guix/modules\n"
"mv guix.scm .guix/modules/guile-package.scm\n"
"ln -s .guix/modules/guile-package.scm guix.scm\n"
msgstr ""
"mkdir -p .guix/modules\n"
"mv guix.scm .guix/modules/guile-package.scm\n"
"ln -s .guix/modules/guile-package.scm guix.scm\n"

msgid "To make it usable as part of a channel, we need to turn our @file{guix.scm} file into a @dfn{package module} (@pxref{Package Modules,,, guix, GNU Guix Reference Manual}): we do that by changing the @code{use-modules} form at the top to a @code{define-module} form. We also need to actually @emph{export} a package variable, with @code{define-public}, while still returning the package value at the end of the file so we can still use @command{guix shell} and @command{guix build -f guix.scm}. The end result looks like this (not repeating things that haven't changed):"
msgstr "Damit es als Kanal verwendet werden kann, erweitern wir unsere @file{guix.scm}-Datei zu einem @dfn{Paketmodul} (siehe @ref{Paketmodule,,, guix.de, Referenzhandbuch zu GNU Guix}). Das geschieht, indem wir die @code{use-modules}-Form am Anfang durch eine @code{define-module}-Form ersetzen. Auch müssen wir dann eine Paketvariable @emph{exportieren}, mit @code{define-public}, und dennoch am Ende der Datei den Paketwert zurückliefern, damit @command{guix shell} und @command{guix build -f guix.scm} weiterhin funktionieren. Das Endergebnis sieht so aus (ohne zu wiederholen, was wir nicht verändern):"

msgid ""
"(define-module (guile-package)\n"
"  #:use-module (guix)\n"
"  #:use-module (guix git-download)   ;for ‘git-predicate’\n"
"  @dots{})\n"
"\n"
msgstr ""
"(define-module (guile-package)\n"
"  #:use-module (guix)\n"
"  #:use-module (guix git-download)   ;für ‚git-predicate‘\n"
"  …)\n"
"\n"

msgid ""
"(define vcs-file?\n"
"  ;; Return true if the given file is under version control.\n"
"  (or (git-predicate (dirname (dirname (current-source-directory))))\n"
"      (const #t)))                                ;not in a Git checkout\n"
"\n"
msgstr ""
"(define vcs-file?\n"
"  ;; Wahr zurückliefern, wenn die angegebene Datei unter\n"
"  ;; Versionskontrolle steht.\n"
"  (or (git-predicate (dirname (dirname (current-source-directory))))\n"
"      (const #t)))                                ;es ist kein Git-Checkout\n"
"\n"

msgid ""
"(define-public guile\n"
"  (package\n"
"    (name \"guile\")\n"
"    (version \"3.0.99-git\")                          ;funky version number\n"
"    (source (local-file \"../..\" \"guile-checkout\"\n"
"                        #:recursive? #t\n"
"                        #:select? vcs-file?))\n"
"    @dots{}))\n"
"\n"
msgstr ""
"(define-public guile\n"
"  (package\n"
"    (name \"guile\")\n"
"    (version \"3.0.99-git\")                          ;komische Versionsnummer\n"
"    (source (local-file \"../..\" \"guile-checkout\"\n"
"                        #:recursive? #t\n"
"                        #:select? vcs-file?))\n"
"    …))\n"
"\n"

msgid ""
";; Return the package object define above at the end of the module.\n"
"guile\n"
msgstr ""
";; Das oben definierte Paketobjekt muss am Modulende zurückgeliefert werden.\n"
"guile\n"

msgid "We need one last thing: a @uref{https://guix.gnu.org/manual/devel/en/html_node/Package-Modules-in-a-Sub_002ddirectory.html,@code{.guix-channel} file} so Guix knows where to look for package modules in our repository:"
msgstr "Zuletzt brauchen wir noch eine @uref{https://guix.gnu.org/manual/devel/de/html_node/Paketmodule-in-einem-Unterverzeichnis.html,@code{.guix-channel}-Datei}, um Guix zu erklären, woher es die Paketmodule in unserem Repository bekommt:"

msgid ""
";; This file lets us present this repo as a Guix channel.\n"
"\n"
msgstr ""
";; Mit dieser Datei kann man dieses Repo als Guix-Kanal eintragen.\n"
"\n"

msgid ""
"(channel\n"
"  (version 0)\n"
"  (directory \".guix/modules\"))  ;look for package modules under .guix/modules/\n"
msgstr ""
"(channel\n"
"  (version 0)\n"
"  (directory \".guix/modules\"))  ;Paketmodule finden sich unter .guix/modules/\n"

msgid "To recap, we now have these files:"
msgstr "Zusammengefasst liegen diese Dateien jetzt im Repository:"

msgid ""
".\n"
"├── .guix-channel\n"
"├── guix.scm → .guix/modules/guile-package.scm\n"
"└── .guix\n"
"    └── modules\n"
"       └── guile-package.scm\n"
msgstr ""
".\n"
"├── .guix-channel\n"
"├── guix.scm → .guix/modules/guile-package.scm\n"
"└── .guix\n"
"    └── modules\n"
"       └── guile-package.scm\n"

msgid "And that's it: we have a channel! (We could do better and support @uref{https://guix.gnu.org/manual/devel/en/html_node/Specifying-Channel-Authorizations.html,@emph{channel authentication}} so users know they're pulling genuine code. We'll spare you the details here but it's worth considering!) Users can pull from this channel by @uref{https://guix.gnu.org/manual/devel/en/html_node/Specifying-Additional-Channels.html,adding it to @code{~/.config/guix/channels.scm}}, along these lines:"
msgstr "Und das war alles: Wir haben einen Kanal erschaffen! (Noch besser wäre es, auch @uref{https://guix.gnu.org/en/manual/devel/de/html_node/Kanalautorisierungen-angeben.html,@emph{Kanalautorisierungen}} zu unterstützen, damit Benutzer wissen, dass der heruntergeladene Code echt ist. Wir ersparen Ihnen die Feinheiten hier, aber ziehen Sie es in Betracht!) Nutzer können von diesem Kanal pullen, indem sie @uref{https://guix.gnu.org/manual/devel/de/html_node/Weitere-Kanale-angeben.html,ihn zu @code{~/.config/guix/channels.scm} hinzufügen}, etwa so:"

msgid ""
"(append (list (channel\n"
"                (name 'guile)\n"
"                (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                (branch \"main\")))\n"
"        %default-channels)\n"
msgstr ""
"(append (list (channel\n"
"                (name 'guile)\n"
"                (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                (branch \"main\")))\n"
"        %default-channels)\n"

msgid "After running @command{guix pull}, we can see the new package:"
msgstr "Nach einem Aufruf von @command{guix pull} sind die neuen Pakete zu sehen:"

msgid ""
"$ guix describe\n"
"Generation 264  May 26 2023 16:00:35    (current)\n"
"  guile 36fd2b4\n"
"    repository URL: https://git.savannah.gnu.org/git/guile.git\n"
"    branch: main\n"
"    commit: 36fd2b4920ae926c79b936c29e739e71a6dff2bc\n"
"  guix c5bc698\n"
"    repository URL: https://git.guix.gnu.org/guix.git\n"
"    commit: c5bc698e8922d78ed85989985cc2ceb034de2f23\n"
"$ guix package -A ^guile$\n"
"guile   3.0.99-git      out,debug       guile-package.scm:51:4\n"
"guile   3.0.9           out,debug       gnu/packages/guile.scm:317:2\n"
"guile   2.2.7           out,debug       gnu/packages/guile.scm:258:2\n"
"guile   2.2.4           out,debug       gnu/packages/guile.scm:304:2\n"
"guile   2.0.14          out,debug       gnu/packages/guile.scm:148:2\n"
"guile   1.8.8           out             gnu/packages/guile.scm:77:2\n"
"$ guix build guile@@3.0.99-git\n"
"[@dots{}]\n"
"/gnu/store/axnzbl89yz7ld78bmx72vpqp802dwsar-guile-3.0.99-git-debug\n"
"/gnu/store/r34gsij7f0glg2fbakcmmk0zn4v62s5w-guile-3.0.99-git\n"
msgstr ""
"$ guix describe\n"
"Generation 264  26. Mai 2023 16:00:35    (aktuell)\n"
"  guile 36fd2b4\n"
"    Repository-URL: https://git.savannah.gnu.org/git/guile.git\n"
"    Branch: main\n"
"    Commit: 36fd2b4920ae926c79b936c29e739e71a6dff2bc\n"
"  guix c5bc698\n"
"    Repository-URL: https://git.guix.gnu.org/guix.git\n"
"    Commit: c5bc698e8922d78ed85989985cc2ceb034de2f23\n"
"$ guix package -A ^guile$\n"
"guile   3.0.99-git      out,debug       guile-package.scm:51:4\n"
"guile   3.0.9           out,debug       gnu/packages/guile.scm:317:2\n"
"guile   2.2.7           out,debug       gnu/packages/guile.scm:258:2\n"
"guile   2.2.4           out,debug       gnu/packages/guile.scm:304:2\n"
"guile   2.0.14          out,debug       gnu/packages/guile.scm:148:2\n"
"guile   1.8.8           out             gnu/packages/guile.scm:77:2\n"
"$ guix build guile@@3.0.99-git\n"
"[…]\n"
"/gnu/store/axnzbl89yz7ld78bmx72vpqp802dwsar-guile-3.0.99-git-debug\n"
"/gnu/store/r34gsij7f0glg2fbakcmmk0zn4v62s5w-guile-3.0.99-git\n"

msgid "That's how, as a developer, you get your software delivered directly into the hands of users! No intermediaries, yet no loss of transparency and provenance tracking."
msgstr "Auf diesem Weg liefern Sie, als Entwickler, Ihre Software direkt in die Hände der Nutzer! Es gibt keine Mittelsmänner, trotzdem bleiben Transparenz und Provenienzverfolgung erhalten."

msgid "With that in place, it also becomes trivial for anyone to create Docker images, Deb/RPM packages, or a plain tarball with @command{guix pack} (@pxref{Invoking guix pack,,, guix, GNU Guix Reference Manual}):"
msgstr "Auf dieser Grundlage kann außerdem jeder leicht Docker-Abbilder, Pakete als Deb/RPM oder einen einfachen Tarball mit @command{guix pack} anfertigen (siehe @ref{Aufruf von guix pack,,, guix.de, Referenzhandbuch zu GNU Guix}):"

msgid ""
"# How about a Docker image of our Guile snapshot?\n"
"guix pack -f docker -S /bin=bin guile@@3.0.99-git\n"
"\n"
msgstr ""
"# Sie wünschen ein Docker-Image mit unserem Guile-Snapshot?\n"
"guix pack -f docker -S /bin=bin guile@@3.0.99-git\n"
"\n"

msgid ""
"# And a relocatable RPM?\n"
"guix pack -f rpm -R -S /bin=bin guile@@3.0.99-git\n"
msgstr ""
"# Und ein verschiebliches RPM?\n"
"guix pack -f rpm -R -S /bin=bin guile@@3.0.99-git\n"

msgid "Bonus: Package Variants"
msgstr "Bonus: Paketvarianten"

msgid "We now have an actual channel, but it contains only one package (@pxref{The Repository as a Channel}).  While we're at it, we can define @dfn{package variants} (@pxref{Defining Package Variants,,, guix, GNU Guix Reference Manual}) in our @file{guile-package.scm} file, variants that we want to be able to test as Guile developers---similar to what we did above with transformation options. We can add them like so:"
msgstr "Jetzt, wo wir es zu einem richtigen Kanal gebracht haben (siehe @ref{The Repository as a Channel}), drängt sich die Frage auf, warum er nur ein Paket enthält. Da geht mehr, denn wir können gleich mehrere @dfn{Paketvarianten} (siehe @ref{Paketvarianten definieren,,, guix.de, Referenzhandbuch zu GNU Guix}) in unserer Datei @file{guile-package.scm} festlegen, und zwar Varianten, die wir Entwickler von Guile gerne testen würden@tie{}– wofür wir oben noch Paketumwandlungsoptionen gebraucht haben. Wir können Sie auf diese Weise eintragen:"

msgid ""
";; This is the ‘.guix/modules/guile-package.scm’ file.\n"
"\n"
msgstr ""
";; Dies ist die Datei ‚.guix/modules/guile-package.scm‘.\n"
"\n"

msgid ""
"(define-module (guile-package)\n"
"  @dots{})\n"
"\n"
msgstr ""
"(define-module (guile-package)\n"
"  …)\n"
"\n"

msgid ""
"(define-public guile\n"
"  @dots{})\n"
"\n"
msgstr ""
"(define-public guile\n"
"  …)\n"
"\n"

msgid ""
"(define (package-with-configure-flags p flags)\n"
"  \"Return P with FLAGS as additional 'configure' flags.\"\n"
"  (package/inherit p\n"
"    (arguments\n"
"     (substitute-keyword-arguments (package-arguments p)\n"
"       ((#:configure-flags original-flags #~(list))\n"
"        #~(append #$original-flags #$flags))))))\n"
"\n"
msgstr ""
"(define (package-with-configure-flags p flags)\n"
"  \"Liefert P erweitert um die 'configure'-Optionen in FLAGS.\"\n"
"  (package/inherit p\n"
"    (arguments\n"
"     (substitute-keyword-arguments (package-arguments p)\n"
"       ((#:configure-flags original-flags #~(list))\n"
"        #~(append #$original-flags #$flags))))))\n"
"\n"

msgid ""
"(define-public guile-without-threads\n"
"  (package\n"
"    (inherit (package-with-configure-flags guile\n"
"                                           #~(list \"--without-threads\")))\n"
"    (name \"guile-without-threads\")))\n"
"\n"
msgstr ""
"(define-public guile-without-threads\n"
"  (package\n"
"    (inherit (package-with-configure-flags guile\n"
"                                           #~(list \"--without-threads\")))\n"
"    (name \"guile-without-threads\")))\n"
"\n"

msgid ""
"(define-public guile-without-networking\n"
"  (package\n"
"    (inherit (package-with-configure-flags guile\n"
"                                           #~(list \"--disable-networking\")))\n"
"    (name \"guile-without-networking\")))\n"
"\n"
msgstr ""
"(define-public guile-without-networking\n"
"  (package\n"
"    (inherit (package-with-configure-flags guile\n"
"                                           #~(list \"--disable-networking\")))\n"
"    (name \"guile-without-networking\")))\n"
"\n"

msgid ""
";; Return the package object defined above at the end of the module.\n"
"guile\n"
msgstr ""
";; Das oben definierte Paketobjekt muss am Modulende zurückgeliefert werden.\n"
"guile\n"

msgid "We can build these variants as regular packages once we've pulled the channel. Alternatively, from a checkout of Guile, we can run a command like this one from the top level:"
msgstr "Sobald wir den Kanal mit @command{guix pull} aktiviert haben, können wir diese Varianten als normale Pakete erstellen. Es geht aber auch, einen Befehl wie hier in einem Checkout von Guile auf oberster Ebene auszuführen:"

msgid "guix build -L $PWD/.guix/modules guile-without-threads\n"
msgstr "guix build -L $PWD/.guix/modules guile-without-threads\n"

msgid "Level 3: Setting Up Continuous Integration"
msgstr "Stufe 3: Kontinuierliche Integration einrichten"

msgid "continuous integration (CI)"
msgstr "kontinuierliche Integration (CI)"

msgid "The channel we defined above (@pxref{The Repository as a Channel})  becomes even more interesting once we set up @uref{https://en.wikipedia.org/wiki/Continuous_integration, @dfn{continuous integration}} (CI). There are several ways to do that."
msgstr "Mit dem oben definierten Kanal (siehe @ref{The Repository as a Channel}) können wir erst recht etwas anstellen, sobald wir @uref{https://de.wikipedia.org/wiki/Kontinuierliche_Integration, @dfn{Kontinuierliche Integration}} (Continuous Integration, CI) eingerichtet haben. Hier gibt es mehrere Wege zum Ziel."

msgid "You can use one of the mainstream continuous integration tools, such as GitLab-CI. To do that, you need to make sure you run jobs in a Docker image or virtual machine that has Guix installed. If we were to do that in the case of Guile, we'd have a job that runs a shell command like this one:"
msgstr "Sie können ein dem Mainstream entsprechendes Werkzeug zur kontinuierlichen Integration nehmen wie GitLab-CI. Dazu müssen Sie Aufgaben („Jobs“) in einem Docker-Abbild oder einer virtuellen Maschine, auf der Guix installiert ist, ausführen lassen. Wenn wir das für Guile vorhätten, legten wir eine Aufgabe an, die einen Shell-Befehl wie diesen laufen lässt:"

msgid "guix build -L $PWD/.guix/modules guile@@3.0.99-git\n"
msgstr "guix build -L $PWD/.guix/modules guile@@3.0.99-git\n"

msgid "Doing this works great and has the advantage of being easy to achieve on your favorite CI platform."
msgstr "So klappt es gut und der Vorteil ist, dass Sie den Befehl leicht Ihrer bevorzugten CI-Plattform beibringen können."

msgid "That said, you'll really get the most of it by using @uref{https://guix.gnu.org/en/cuirass,Cuirass}, a CI tool designed for and tightly integrated with Guix. Using it is more work than using a hosted CI tool because you first need to set it up, but that setup phase is greatly simplified if you use its Guix System service (@pxref{Continuous Integration,,, guix, GNU Guix Reference Manual}).  Going back to our example, we give Cuirass a spec file that goes like this:"
msgstr "Aber trotzdem können Sie Guix am besten ausnutzen, wenn Sie @uref{https://guix.gnu.org/de/cuirass,Cuirass} verwenden, ein CI-Werkzeug speziell für Guix und eng damit integriert. Cuirass zu benutzen statt einem CI-Werkzeug, das jemand für Sie hostet, macht mehr Aufwand, aber die Einrichtung hält sich in Grenzen, wenn Sie Cuirass’ Dienst auf Guix System benutzen (siehe @ref{Kontinuierliche Integration,,, guix.de, Referenzhandbuch zu GNU Guix}). Kehren wir zu unserem Beispiel zurück, statten wir Cuirass mit so einer Spezifikationsdatei aus:"

msgid ""
";; Cuirass spec file to build all the packages of the ‘guile’ channel.\n"
"(list (specification\n"
"        (name \"guile\")\n"
"        (build '(channels guile))\n"
"        (channels\n"
"         (append (list (channel\n"
"                         (name 'guile)\n"
"                         (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                         (branch \"main\")))\n"
"                 %default-channels))))\n"
msgstr ""
";; Cuirass-Spezifikationsdatei, um alle Pakete des ‚guile‘-Kanals zu erstellen.\n"
"(list (specification\n"
"        (name \"guile\")\n"
"        (build '(channels guile))\n"
"        (channels\n"
"         (append (list (channel\n"
"                         (name 'guile)\n"
"                         (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                         (branch \"main\")))\n"
"                 %default-channels))))\n"

msgid "It differs from what you'd do with other CI tools in two important ways:"
msgstr "Es gibt zwei wichtige Unterschiede zu dem, was Sie mit anderen CI-Werkzeugen tun würden:"

msgid "Cuirass knows it's tracking @emph{two} channels, @code{guile} and @code{guix}. Indeed, our own @code{guile} package depends on many packages provided by the @code{guix} channel---GCC, the GNU libc, libffi, and so on. Changes to packages from the @code{guix} channel can potentially influence our @code{guile} build and this is something we'd like to see as soon as possible as Guile developers."
msgstr "Cuirass weiß über @emph{zwei} Kanäle Bescheid, @code{guile} und @code{guix}. Tatsächlich zählen viele Pakete vom @code{guix}-Kanal zu den Abhängigkeiten des von uns entwickelten @code{guile}-Pakets@tie{}– GCC, GNU libc, libffi und weitere. Es kann passieren, dass sich die Pakete vom @code{guix}-Kanal ändern und dadurch die Erstellung unseres @code{guile}-Pakets schiefgeht; so etwas wollen wir als die Entwickler von Guile so früh erfahren, wie es nur geht."

msgid "Build results are not thrown away: they can be distributed as @dfn{substitutes} so that users of our @code{guile} channel transparently get pre-built binaries! (@pxref{Substitutes,,, guix, GNU Guix Reference Manual}, for background info on substitutes.)"
msgstr "Die Erstellungsergebnisse werden @emph{nicht} entsorgt, sondern sie können als @dfn{Substitute}, d.h.@: vorerstellten Binärdateien, allen Nutzern unseres @code{guile}-Kanals transparent zur Verfügung gestellt werden! (Siehe @ref{Substitute,,, guix.de, Referenzhandbuch zu GNU Guix} für Hintergrundwissen zu Substituten.)"

msgid "From a developer's viewpoint, the end result is this @uref{https://ci.guix.gnu.org/jobset/guile,status page} listing @emph{evaluations}: each evaluation is a combination of commits of the @code{guix} and @code{guile} channels providing a number of @emph{jobs}---one job per package defined in @file{guile-package.scm} times the number of target architectures."
msgstr "Aus Entwicklersicht sieht das Ergebnis am Ende so aus wie die auf Guiles @uref{https://ci.guix.gnu.org/jobset/guile,Status-Seite} aufgelisteten @emph{Auswertungen}: Jede Auswertung besteht aus einer Kombination von Commits der @code{guix}- und @code{guile}-Kanäle, wovon es mehrere @emph{Aufträge} (Jobs) gibt@tie{}– je einen Job pro Paket, das in @file{guile-package.scm} definiert ist, mal der Anzahl der Zielarchitekturen."

msgid "As for substitutes, they come for free! As an example, since our @code{guile} jobset is built on ci.guix.gnu.org, which runs @command{guix publish} (@pxref{Invoking guix publish,,, guix, GNU Guix Reference Manual}) in addition to Cuirass, one automatically gets substitutes for @code{guile} builds from ci.guix.gnu.org; no additional work is needed for that."
msgstr "Substitute gibt es kostenlos dazu! Zum Beispiel kann jeder, weil unser @code{guile}-Jobset auf ci.guix.gnu.org erstellt wird und dort @command{guix publish} (siehe @ref{Aufruf von guix publish,,, guix.de, Referenzhandbuch zu GNU Guix}) zusätzlich zu Cuirass läuft, automatisch die Substitute für @code{guile}-Erstellungen von ci.guix.gnu.org beziehen; es ist dazu kein Mehraufwand nötig."

msgid "Bonus: Build manifest"
msgstr "Bonus: Erstellungs-Manifest"

msgid "The Cuirass spec above is convenient: it builds every package in our channel, which includes a few variants (@pxref{Setting Up Continuous Integration}).  However, this might be insufficiently expressive in some cases: one might want specific cross-compilation jobs, transformations, Docker images, RPM/Deb packages, or even system tests."
msgstr "Mit der Cuirass-Spezifikation oben können wir uns gut anfreunden: Jedes Paket in unserem Kanal wird erstellt, einschließlich einiger Varianten (siehe @ref{Setting Up Continuous Integration}). Allerdings können wir in manchen Fällen noch nicht alles ausdrücken, was wir möchten, etwa wenn wir in manchen Cuirass-Jobs cross-kompilieren möchten, Transformationen festlegen oder Docker-Abbilder, RPM-/Deb-Pakete oder sogar Systemtests wollen."

msgid "To achieve that, you can write a @dfn{manifest} (@pxref{Writing Manifests,,, guix, GNU Guix Reference Manual}).  The one we have for Guile has entries for the package variants we defined above, as well as additional variants and cross builds:"
msgstr "Das erreichen Sie, indem Sie ein @dfn{Manifest} mit den Angaben schreiben (siehe @ref{Manifeste verfassen,,, guix.de, Referenzhandbuch zu GNU Guix}). Das Manifest, was wir für Guile haben, hat Einträge für die oben definierten Paketvarianten sowie zusätzliche Varianten und Cross-Erstellungen:"

msgid ""
";; This is ‘.guix/manifest.scm’.\n"
"\n"
msgstr ""
";; Dies ist ‚.guix/manifest.scm‘.\n"
"\n"

msgid ""
"(use-modules (guix)\n"
"             (guix profiles)\n"
"             (guile-package))   ;import our own package module\n"
"\n"
msgstr ""
"(use-modules (guix)\n"
"             (guix profiles)\n"
"             (guile-package))   ;unser eigenes Paketmodul importieren\n"
"\n"

msgid ""
"(define* (package->manifest-entry* package system\n"
"                                   #:key target)\n"
"  \"Return a manifest entry for PACKAGE on SYSTEM, optionally cross-compiled to\n"
"TARGET.\"\n"
"  (manifest-entry\n"
"    (inherit (package->manifest-entry package))\n"
"    (name (string-append (package-name package) \".\" system\n"
"                         (if target\n"
"                             (string-append \".\" target)\n"
"                             \"\")))\n"
"    (item (with-parameters ((%current-system system)\n"
"                            (%current-target-system target))\n"
"            package))))\n"
"\n"
msgstr ""
"(define* (package->manifest-entry* package system\n"
"                                   #:key target)\n"
"  \"Gibt einen Manifest-Eintrag für das Paket PACKAGE für SYSTEM\n"
"zurück. Optional wird für das Zielsystem TARGET cross-kompiliert.\"\n"
"  (manifest-entry\n"
"    (inherit (package->manifest-entry package))\n"
"    (name (string-append (package-name package) \".\" system\n"
"                         (if target\n"
"                             (string-append \".\" target)\n"
"                             \"\")))\n"
"    (item (with-parameters ((%current-system system)\n"
"                            (%current-target-system target))\n"
"            package))))\n"
"\n"

msgid ""
"(define native-builds\n"
"  (manifest\n"
"   (append (map (lambda (system)\n"
"                  (package->manifest-entry* guile system))\n"
"\n"
msgstr ""
"(define native-builds\n"
"  (manifest\n"
"   (append (map (lambda (system)\n"
"                  (package->manifest-entry* guile system))\n"
"\n"

msgid ""
"                '(\"x86_64-linux\" \"i686-linux\"\n"
"                  \"aarch64-linux\" \"armhf-linux\"\n"
"                  \"powerpc64le-linux\"))\n"
"           (map (lambda (guile)\n"
"                  (package->manifest-entry* guile \"x86_64-linux\"))\n"
"                (cons (package\n"
"                        (inherit (package-with-c-toolchain\n"
"                                  guile\n"
"                                  `((\"clang-toolchain\"\n"
"                                     ,(specification->package\n"
"                                       \"clang-toolchain\")))))\n"
"                        (name \"guile-clang\"))\n"
"                      (list guile-without-threads\n"
"                            guile-without-networking\n"
"                            guile-debug\n"
"                            guile-strict-typing))))))\n"
"\n"
msgstr ""
"                '(\"x86_64-linux\" \"i686-linux\"\n"
"                  \"aarch64-linux\" \"armhf-linux\"\n"
"                  \"powerpc64le-linux\"))\n"
"           (map (lambda (guile)\n"
"                  (package->manifest-entry* guile \"x86_64-linux\"))\n"
"                (cons (package\n"
"                        (inherit (package-with-c-toolchain\n"
"                                  guile\n"
"                                  `((\"clang-toolchain\"\n"
"                                     ,(specification->package\n"
"                                       \"clang-toolchain\")))))\n"
"                        (name \"guile-clang\"))\n"
"                      (list guile-without-threads\n"
"                            guile-without-networking\n"
"                            guile-debug\n"
"                            guile-strict-typing))))))\n"
"\n"

msgid ""
"(define cross-builds\n"
"  (manifest\n"
"   (map (lambda (target)\n"
"          (package->manifest-entry* guile \"x86_64-linux\"\n"
"                                    #:target target))\n"
"        '(\"i586-pc-gnu\"\n"
"          \"aarch64-linux-gnu\"\n"
"          \"riscv64-linux-gnu\"\n"
"          \"i686-w64-mingw32\"\n"
"          \"x86_64-linux-gnu\"))))\n"
"\n"
msgstr ""
"(define cross-builds\n"
"  (manifest\n"
"   (map (lambda (target)\n"
"          (package->manifest-entry* guile \"x86_64-linux\"\n"
"                                    #:target target))\n"
"        '(\"i586-pc-gnu\"\n"
"          \"aarch64-linux-gnu\"\n"
"          \"riscv64-linux-gnu\"\n"
"          \"i686-w64-mingw32\"\n"
"          \"x86_64-linux-gnu\"))))\n"
"\n"

msgid "(concatenate-manifests (list native-builds cross-builds))\n"
msgstr "(concatenate-manifests (list native-builds cross-builds))\n"

msgid "We won't go into the details of this manifest; suffice to say that it provides additional flexibility. We now need to tell Cuirass to build this manifest, which is done with a spec slightly different from the previous one:"
msgstr "Wir gehen nicht auf die Details dieses Manifests ein; es genügt zu wissen, dass wir dadurch mehr Flexibilität haben. Wir müssen jetzt Cuirass die Information geben, dass damit dieses Manifest erstellt werden soll; dazu verwenden wir eine leicht abgeänderte Spezifikation verglichen mit vorher:"

msgid ""
";; Cuirass spec file to build all the packages of the ‘guile’ channel.\n"
"(list (specification\n"
"        (name \"guile\")\n"
"        (build '(manifest \".guix/manifest.scm\"))\n"
"        (channels\n"
"         (append (list (channel\n"
"                         (name 'guile)\n"
"                         (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                         (branch \"main\")))\n"
"                 %default-channels))))\n"
msgstr ""
";; Cuirass-Spezifikationsdatei, um alle Pakete des ‚guile‘-Kanals zu erstellen.\n"
"(list (specification\n"
"        (name \"guile\")\n"
"        (build '(manifest \".guix/manifest.scm\"))\n"
"        (channels\n"
"         (append (list (channel\n"
"                         (name 'guile)\n"
"                         (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                         (branch \"main\")))\n"
"                 %default-channels))))\n"

msgid "We changed the @code{(build @dots{})} part of the spec to @code{'(manifest \".guix/manifest.scm\")} so that it would pick our manifest, and that's it!"
msgstr "Wir haben im Teil @code{(build …)} der Spezifikation jetzt @code{'(manifest \".guix/manifest.scm\")} verwendet, damit unser Manifest genommen wird, und das war schon alles!"

msgid "We picked Guile as the running example in this chapter and you can see the result here:"
msgstr "In diesem Kapitel haben wir die Vorgehensweise auf Guile angewandt und das Ergebnis lässt sich hier bestaunen:"

msgid "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix-channel?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix-channel}};"
msgstr "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix-channel?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix-channel}},"

msgid "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix/modules/guile-package.scm?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix/modules/guile-package.scm}} with the top-level @file{guix.scm} symlink;"
msgstr "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix/modules/guile-package.scm?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix/modules/guile-package.scm}} auch symbolisch verknüpft als @file{guix.scm} auf der oberstem Verzeichnisebene,"

msgid "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix/manifest.scm?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix/manifest.scm}}."
msgstr "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix/manifest.scm?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix/manifest.scm}}."

msgid "These days, repositories are commonly peppered with dot files for various tools: @code{.envrc}, @code{.gitlab-ci.yml}, @code{.github/workflows}, @code{Dockerfile}, @code{.buildpacks}, @code{Aptfile}, @code{requirements.txt}, and whatnot. It may sound like we're proposing a bunch of @emph{additional} files, but in fact those files are expressive enough to @emph{supersede} most or all of those listed above."
msgstr "Heutzutage werden Repositorys gemeinhin mit Dotfiles für vielerlei Werkzeuge angereichert: @code{.envrc}, @code{.gitlab-ci.yml}, @code{.github/workflows}, @code{Dockerfile}, @code{.buildpacks}, @code{Aptfile}, @code{requirements.txt} und Weiteres. Es wirkt so, als würden wir Sie zu @emph{noch mehr} Dateien überreden, jedoch können Sie mit diesen Dateien so viel ausdrücken, dass sie die meisten oder alle der oben genannten Dateien @emph{ersetzen}."

msgid "With a couple of files, we get support for:"
msgstr "Mit wenigen Dateien bekommen wir Unterstützung für:"

msgid "development environments (@command{guix shell});"
msgstr "Entwicklungsumgebungen (@command{guix shell}),"

msgid "pristine test builds, including for package variants and for cross-compilation (@command{guix build});"
msgstr "Test-Erstellungen in naturbelassener Umgebung, auch für Paketvarianten und cross-kompiliert (@command{guix build}),"

msgid "continuous integration (with Cuirass or with some other tool);"
msgstr "kontinuierliche Integration (ob mit Cuirass oder mit einem anderen Werkzeug),"

msgid "continuous delivery to users (@emph{via} the channel and with pre-built binaries);"
msgstr "kontinuierliche Auslieferung an Nutzer (über den Kanal und mit vorerstellten Binärdateien),"

msgid "generation of derivative build artifacts such as Docker images or Deb/RPM packages (@command{guix pack})."
msgstr "abgeleitete Erstellungsartefakte wie Docker-Abbildern oder Deb-/RPM-Pakete (@command{guix pack})."

msgid "This a nice (in our view!) unified tool set for reproducible software deployment, and an illustration of how you as a developer can benefit from it!"
msgstr "Das ist (wie wir es sehen) ein Schweizer Taschenmesser für reproduzierbare Software-Auslieferung und diese Erklärung sollte aufgezeigt haben, welchen Nutzen Sie als Entwickler daraus gewinnen können!"

msgid "Guix provides multiple tools to manage environment.  This chapter demonstrate such utilities."
msgstr "Guix liefert mehrere Werkzeuge mit, um die Umgebung zu verwalten. Dieses Kapitel zeigt solche Werkzeuge."

msgid "Guix provides a @samp{direnv} package, which could extend shell after directory change.  This tool could be used to prepare a pure Guix environment."
msgstr "Guix stellt ein @samp{direnv}-Paket zur Verfügung, mit der die Shell nach einem Verzeichniswechsel erweitert werden kann. Dieses Werkzeug kann benutzt werden, um eine reine, „pure“ Guix-Umgebung vorzubereiten."

msgid "The following example provides a shell function for @file{~/.direnvrc} file, which could be used from Guix Git repository in @file{~/src/guix/.envrc} file to setup a build environment similar to described in @pxref{Building from Git,,, guix, GNU Guix Reference Manual}."
msgstr "Das folgende Beispiel zeigt eine Shell-Funktion für die @file{~/.direnvrc}-Datei, die in einer Datei @file{~/src/guix/.envrc} in Guix’ Git-Repository benutzt werden kann, um eine zur Beschreibung im @ref{Erstellung aus dem Git,,, guix.de, Referenzhandbuch zu GNU Guix} ähnliche Erstellungsumgebung herzustellen."

msgid "Create a @file{~/.direnvrc} with a Bash code:"
msgstr "Erstellen Sie eine @file{~/.direnvrc} mit einem Bash-Code darin:"

msgid ""
"# Thanks <https://github.com/direnv/direnv/issues/73#issuecomment-152284914>\n"
"export_function()\n"
"@{\n"
"  local name=$1\n"
"  local alias_dir=$PWD/.direnv/aliases\n"
"  mkdir -p \"$alias_dir\"\n"
"  PATH_add \"$alias_dir\"\n"
"  local target=\"$alias_dir/$name\"\n"
"  if declare -f \"$name\" >/dev/null; then\n"
"    echo \"#!$SHELL\" > \"$target\"\n"
"    declare -f \"$name\" >> \"$target\" 2>/dev/null\n"
"    # Notice that we add shell variables to the function trigger.\n"
"    echo \"$name \\$*\" >> \"$target\"\n"
"    chmod +x \"$target\"\n"
"  fi\n"
"@}\n"
"\n"
msgstr ""
"# Dank an <https://github.com/direnv/direnv/issues/73#issuecomment-152284914>\n"
"export_function()\n"
"@{\n"
"  local name=$1\n"
"  local alias_dir=$PWD/.direnv/aliases\n"
"  mkdir -p \"$alias_dir\"\n"
"  PATH_add \"$alias_dir\"\n"
"  local target=\"$alias_dir/$name\"\n"
"  if declare -f \"$name\" >/dev/null; then\n"
"    echo \"#!$SHELL\" > \"$target\"\n"
"    declare -f \"$name\" >> \"$target\" 2>/dev/null\n"
"    # Beachten Sie, wir fügen Shell-Variable in den Funktionsauslöser ein.\n"
"    echo \"$name \\$*\" >> \"$target\"\n"
"    chmod +x \"$target\"\n"
"  fi\n"
"@}\n"
"\n"

msgid ""
"use_guix()\n"
"@{\n"
"    # Set GitHub token.\n"
"    export GUIX_GITHUB_TOKEN=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n"
"\n"
msgstr ""
"use_guix()\n"
"@{\n"
"    # GitHub-Token festlegen.\n"
"    export GUIX_GITHUB_TOKEN=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n"
"\n"

msgid ""
"    # Unset 'GUIX_PACKAGE_PATH'.\n"
"    export GUIX_PACKAGE_PATH=\"\"\n"
"\n"
msgstr ""
"    # Deaktivieren von 'GUIX_PACKAGE_PATH'.\n"
"    export GUIX_PACKAGE_PATH=\"\"\n"
"\n"

msgid ""
"    # Recreate a garbage collector root.\n"
"    gcroots=\"$HOME/.config/guix/gcroots\"\n"
"    mkdir -p \"$gcroots\"\n"
"    gcroot=\"$gcroots/guix\"\n"
"    if [ -L \"$gcroot\" ]\n"
"    then\n"
"        rm -v \"$gcroot\"\n"
"    fi\n"
"\n"
msgstr ""
"    # Müllsammlerwurzel neu erzeugen.\n"
"    gcroots=\"$HOME/.config/guix/gcroots\"\n"
"    mkdir -p \"$gcroots\"\n"
"    gcroot=\"$gcroots/guix\"\n"
"    if [ -L \"$gcroot\" ]\n"
"    then\n"
"        rm -v \"$gcroot\"\n"
"    fi\n"
"\n"

msgid ""
"    # Miscellaneous packages.\n"
"    PACKAGES_MAINTENANCE=(\n"
"        direnv\n"
"        git\n"
"        git:send-email\n"
"        git-cal\n"
"        gnupg\n"
"        guile-colorized\n"
"        guile-readline\n"
"        less\n"
"        ncurses\n"
"        openssh\n"
"        xdot\n"
"    )\n"
"\n"
msgstr ""
"    # Verschiedene Pakete.\n"
"    PACKAGES_MAINTENANCE=(\n"
"        direnv\n"
"        git\n"
"        git:send-email\n"
"        git-cal\n"
"        gnupg\n"
"        guile-colorized\n"
"        guile-readline\n"
"        less\n"
"        ncurses\n"
"        openssh\n"
"        xdot\n"
"    )\n"
"\n"

msgid ""
"    # Environment packages.\n"
"    PACKAGES=(help2man guile-sqlite3 guile-gcrypt)\n"
"\n"
msgstr ""
"    # In die Umgebung aufzunehmende Pakete.\n"
"    PACKAGES=(help2man guile-sqlite3 guile-gcrypt)\n"
"\n"

msgid ""
"    # Thanks <https://lists.gnu.org/archive/html/guix-devel/2016-09/msg00859.html>\n"
"    eval \"$(guix shell --search-paths --root=\"$gcroot\" --pure \\\n"
"     --development guix $@{PACKAGES[@@]@} $@{PACKAGES_MAINTENANCE[@@]@} \"$@@\")\"\n"
"\n"
msgstr ""
"    # Dank an <https://lists.gnu.org/archive/html/guix-devel/2016-09/msg00859.html>\n"
"    eval \"$(guix shell --search-paths --root=\"$gcroot\" --pure \\\n"
"     --development guix $@{PACKAGES[@@]@} $@{PACKAGES_MAINTENANCE[@@]@} \"$@@\")\"\n"
"\n"

msgid ""
"    # Predefine configure flags.\n"
"    configure()\n"
"    @{\n"
"        ./configure\n"
"    @}\n"
"    export_function configure\n"
"\n"
msgstr ""
"    # configure-Optionen vordefinieren.\n"
"    configure()\n"
"    @{\n"
"        ./configure\n"
"    @}\n"
"    export_function configure\n"
"\n"

msgid ""
"    # Run make and optionally build something.\n"
"    build()\n"
"    @{\n"
"        make -j 2\n"
"        if [ $# -gt 0 ]\n"
"        then\n"
"            ./pre-inst-env guix build \"$@@\"\n"
"        fi\n"
"    @}\n"
"    export_function build\n"
"\n"
msgstr ""
"    # make ausführen und optional etwas erstellen.\n"
"    build()\n"
"    @{\n"
"        make -j 2\n"
"        if [ $# -gt 0 ]\n"
"        then\n"
"            ./pre-inst-env guix build \"$@@\"\n"
"        fi\n"
"    @}\n"
"    export_function build\n"
"\n"

msgid ""
"    # Predefine push Git command.\n"
"    push()\n"
"    @{\n"
"        git push --set-upstream origin\n"
"    @}\n"
"    export_function push\n"
"\n"
msgstr ""
"    # Git-Befehl zum Pushen vordefinieren.\n"
"    push()\n"
"    @{\n"
"        git push --set-upstream origin\n"
"    @}\n"
"    export_function push\n"
"\n"

msgid ""
"    clear                        # Clean up the screen.\n"
"    git-cal --author='Your Name' # Show contributions calendar.\n"
"\n"
msgstr ""
"    clear                        # Den Bildschirm löschen.\n"
"    git-cal --author='Ihr Name'  # Kalender bisheriger Beiträge zeigen.\n"
"\n"

msgid ""
"    # Show commands help.\n"
"    echo \"\n"
"build          build a package or just a project if no argument provided\n"
"configure      run ./configure with predefined parameters\n"
"push           push to upstream Git repository\n"
"\"\n"
"@}\n"
msgstr ""
"    # Befehlsübersicht anzeigen.\n"
"    echo \"\n"
"build          ein Paket oder, ohne Argumente, ein Projekt erstellen\n"
"configure      ./configure mit vordefinierten Parametern\n"
"push           ins Upstream-Git-Repository pushen\n"
"\"\n"
"@}\n"

msgid "Every project containing @file{.envrc} with a string @code{use guix} will have predefined environment variables and procedures."
msgstr "Jedes Projekt, das eine @file{.envrc} mit einer Zeichenkette @code{use guix} enthält, wird vordefinierte Umgebungsvariable und Prozeduren verwenden."

msgid "Run @command{direnv allow} to setup the environment for the first time."
msgstr "Führen Sie @command{direnv allow} aus, um die Umgebung bei der ersten Nutzung einzurichten."

msgid "Or perhaps you'll find that you could just as well provide a package definition for your code---@pxref{Defining Packages,,, guix, GNU Guix Reference Manual}, to learn more on how to do that."
msgstr "Oder vielleicht denken Sie sich, dass Sie auch gleich eine Paketdefinition für Ihren Code angeben könnten – siehe @ref{Pakete definieren,,, guix.de, Referenzhandbuch zu GNU Guix}, wenn sie erfahren möchten, wie das geht."

msgid "cluster installation"
msgstr "Installation auf einem Cluster"

msgid "high-performance computing, HPC"
msgstr "Hochleistungsrechnen (HPC)"

msgid "HPC, high-performance computing"
msgstr "HPC, Hochleistungsrechnen"

msgid "Guix is appealing to scientists and @acronym{HPC, high-performance computing} practitioners: it makes it easy to deploy potentially complex software stacks, and it lets you do so in a reproducible fashion---you can redeploy the exact same software on different machines and at different points in time."
msgstr "Guix eignet sich sehr für Forscher und jene, die sich mit Hochleistungsrechnen (@acronym{HPC, High-Performance Computing}) befassen: Komplexe Software-Stacks lassen sich leicht aufspielen und deren Zusammenstellung ist auch noch reproduzierbar@tie{}– Sie können genau die gleiche Software für andere Maschinen und zu einem späteren Zeitpunkt wieder installieren."

msgid "In this chapter we look at how a cluster sysadmin can install Guix for system-wide use, such that it can be used on all the cluster nodes, and discuss the various tradeoffs@footnote{This chapter is adapted from a @uref{https://hpc.guix.info/blog/2017/11/installing-guix-on-a-cluster/, blog post published on the Guix-HPC web site in 2017}.}."
msgstr "In diesem Kapitel wird erörtert, wie der Systemadministrator eines Clusters auf diesem systemweit Guix zur Verfügung stellen kann, so dass es auf allen Knoten im Cluster benutzt werden kann. Außerdem gehen wir auf mögliche Probleme ein@footnote{Das Kapitel ist eine aufgearbeitete Fassung eines @uref{https://hpc.guix.info/blog/2017/11/installing-guix-on-a-cluster/, Blog-Eintrags auf dem Guix-HPC-Webauftritt von 2017}.}."

msgid "Here we assume that the cluster is running a GNU/Linux distro other than Guix System and that we are going to install Guix on top of it."
msgstr "Wir gehen hier davon aus, dass auf dem Cluster eine andere GNU/Linux-Distribution als Guix System läuft und wir Guix auf dieser installieren werden."

msgid "The recommended approach is to set up one @emph{head node} running @command{guix-daemon} and exporting @file{/gnu/store} over NFS to compute nodes."
msgstr "Unsere Empfehlung ist, eine Maschine zum Zentralrechner zu ernennen (als „Head Node“) und auf dieser @command{guix-daemon} auszuführen, wobei @file{/gnu/store} über NFS mit den Arbeitsrechnern („Compute Nodes“) geteilt wird."

msgid "Remember that @command{guix-daemon} is responsible for spawning build processes and downloads on behalf of clients (@pxref{Invoking guix-daemon,,, guix, GNU Guix Reference Manual}), and more generally accessing @file{/gnu/store}, which contains all the package binaries built by all the users (@pxref{The Store,,, guix, GNU Guix Reference Manual}).  ``Client'' here refers to all the Guix commands that users see, such as @code{guix install}.  On a cluster, these commands may be running on the compute nodes and we'll want them to talk to the head node's @code{guix-daemon} instance."
msgstr "Zur Erinnerung: @command{guix-daemon} ist das Hintergrundprogramm, mit dem für Clients Erstellungsprozesse angelegt und Dateien heruntergeladen werden können (siehe @ref{Aufruf des guix-daemon,,, guix.de, Referenzhandbuch zu GNU Guix}), und das allgemein auf @file{/gnu/store} zugreift. Dort liegen dann alle Paket-Binärdateien, die irgendeiner der Nutzer erstellen lassen hat (siehe @ref{Der Store,,, guix.de, Referenzhandbuch zu GNU Guix}). Mit „Clients“ meinen wir die Guix-Befehle, die Benutzer aufgerufen haben, wie etwa @code{guix install}. Auf einem Cluster können diese Befehle auf den Arbeitsrechnern aufgerufen werden und dennoch werden wir sie mit der zentralen @code{guix-daemon}-Instanz sprechen lassen."

msgid "To begin with, the head node can be installed following the usual binary installation instructions (@pxref{Binary Installation,,, guix, GNU Guix Reference Manual}).  Thanks to the installation script, this should be quick.  Once installation is complete, we need to make some adjustments."
msgstr "Legen wir los. Für den Anfang folgen wir auf dem Zentralrechner der Anleitung zur Installation aus einer Binärdatei (siehe @ref{Aus Binärdatei installieren,,, guix.de, Referenzhandbuch zu GNU Guix}). Zum Glück gibt es das Installationsskript, so dass das schnell gehen dürfte. Wenn die Installation dann abgeschlossen ist, müssen wir daran Anpassungen vornehmen."

msgid "Since we want @code{guix-daemon} to be reachable not just from the head node but also from the compute nodes, we need to arrange so that it listens for connections over TCP/IP.  To do that, we'll edit the systemd startup file for @command{guix-daemon}, @file{/etc/systemd/system/guix-daemon.service}, and add a @code{--listen} argument to the @code{ExecStart} line so that it looks something like this:"
msgstr "Weil wir möchten, dass @code{guix-daemon} @emph{nicht} nur auf dem Zentralrechner zugänglich ist, sondern von jedem der Arbeitsrechner erreicht wird, richten wir es so ein, dass er auf Verbindungen über TCP/IP lauscht. Dazu bearbeiten wir die systemd-Datei zum Start von @command{guix-daemon}, @file{/etc/systemd/system/guix-daemon.service}, und fügen ein Argument @code{--listen} zur @code{ExecStart}-Zeile hinzu. Diese sieht jetzt ungefähr so aus:"

msgid ""
"ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon \\\n"
"    --build-users-group=guixbuild \\\n"
"    --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"
msgstr ""
"ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon \\\n"
"    --build-users-group=guixbuild \\\n"
"    --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"

msgid "ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon --build-users-group=guixbuild --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"
msgstr "ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon --build-users-group=guixbuild --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"

msgid "For these changes to take effect, the service needs to be restarted:"
msgstr "Die Änderungen wirken sich erst aus, wenn der Dienst neu gestartet wurde:"

msgid ""
"systemctl daemon-reload\n"
"systemctl restart guix-daemon\n"
msgstr ""
"systemctl daemon-reload\n"
"systemctl restart guix-daemon\n"

msgid "The @code{--listen=0.0.0.0} bit means that @code{guix-daemon} will process @emph{all} incoming TCP connections on port 44146 (@pxref{Invoking guix-daemon,,, guix, GNU Guix Reference Manual}). This is usually fine in a cluster setup where the head node is reachable exclusively from the cluster's local area network---you don't want that to be exposed to the Internet!"
msgstr "Mit @code{--listen=0.0.0.0} ist gemeint, dass @code{guix-daemon} @emph{alle} auf Port 44146 eingehenden TCP-Verbindungen annimmt (siehe @ref{Aufruf des guix-daemon,,, guix.de, Referenzhandbuch zu GNU Guix}). Das ist normalerweise auf Rechen-Clustern in Ordnung, weil der Zentralrechner für gewöhnlich ausschließlich vom lokalen Netzwerk des Clusters aus erreichbar ist@tie{}– unter keinen Umständen darf er für das gesamte Internet zugänglich sein!"

msgid "The next step is to define our NFS exports in @uref{https://linux.die.net/man/5/exports,@file{/etc/exports}} by adding something along these lines:"
msgstr "Als Nächstes müssen wir unsere NFS-Freigaben in @uref{https://linux.die.net/man/5/exports,@file{/etc/exports}} definieren. Dazu fügen wir etwas wie hier hinzu:"

msgid ""
"/gnu/store    *(ro)\n"
"/var/guix     *(rw, async)\n"
"/var/log/guix *(ro)\n"
msgstr ""
"/gnu/store    *(ro)\n"
"/var/guix     *(rw, async)\n"
"/var/log/guix *(ro)\n"

msgid "The @file{/gnu/store} directory can be exported read-only since only @command{guix-daemon} on the master node will ever modify it.  @file{/var/guix} contains @emph{user profiles} as managed by @code{guix package}; thus, to allow users to install packages with @code{guix package}, this must be read-write."
msgstr "Es genügt, das Verzeichnis @file{/gnu/store} nur lesbar zu exportieren, weil es nur durch @command{guix-daemon} auf dem Hauptknoten jemals verändert wird. In @file{/var/guix} befinden sich @emph{Benutzerprofile}, die man mit @command{guix package} anlegen kann. Damit Benutzer also Pakete mit @command{guix package} installieren können, muss Lese- und Schreibzugriff ermöglicht werden."

msgid "Users can create as many profiles as they like in addition to the default profile, @file{~/.guix-profile}.  For instance, @code{guix package -p ~/dev/python-dev -i python} installs Python in a profile reachable from the @code{~/dev/python-dev} symlink.  To make sure that this profile is protected from garbage collection---i.e., that Python will not be removed from @file{/gnu/store} while this profile exists---, @emph{home directories should be mounted on the head node} as well so that @code{guix-daemon} knows about these non-standard profiles and avoids collecting software they refer to."
msgstr "Nutzer können so viele Profile anlegen, wie sie möchten, zusätzlich zum Standardprofil, @file{~/.guix-profile}. Zum Beispiel bekommt jemand, die @code{guix package -p ~/dev/python-dev -i python} ausführt, Python in einem Profil installiert, das über die symbolische Verknüpfung @code{~/dev/python-dev} erreichbar ist. Damit dieses Profil @emph{nicht} irgendwann vom Müllsammler weggeräumt wird@tie{}– d.h.@: damit Python nicht aus @file{/gnu/store} entfernt wird, solange dieses Profil existiert@tie{}–, @emph{müssen die Persönlichen Verzeichnisse in @file{/home} auch auf dem Zentralrechner eingebunden sein}. Wir wollen, dass @code{guix-daemon} über solche Nicht-Standard-Profile weiß, dass die darin referenzierte Software noch gebraucht wird."

msgid "It may be a good idea to periodically remove unused bits from @file{/gnu/store} by running @command{guix gc} (@pxref{Invoking guix gc,,, guix, GNU Guix Reference Manual}).  This can be done by adding a crontab entry on the head node:"
msgstr "Es kann allerdings sinnvoll sein, Software die @emph{nicht} gebraucht wird, regelmäßig aus @file{/gnu/store} zu löschen. Verwenden Sie dazu @command{guix gc} (siehe @ref{Aufruf von guix gc,,, guix.de, Referenzhandbuch zu GNU Guix}). Dazu können Sie so einen crontab-Eintrag auf dem Zentralknoten vornehmen:"

msgid "root@@master# crontab -e\n"
msgstr "root@@master# crontab -e\n"

msgid "... with something like this:"
msgstr "… und schreiben Sie etwa:"

msgid ""
"# Every day at 5AM, run the garbage collector to make sure\n"
"# at least 10 GB are free on /gnu/store.\n"
"0 5 * * 1  /usr/local/bin/guix gc -F10G\n"
msgstr ""
"# Jeden Tag um 5 Uhr morgens den Müllsammler schicken,\n"
"# damit mindestens 10 GB auf /gnu/store verfügbar sind.\n"
"0 5 * * 1  /usr/local/bin/guix gc -F10G\n"

msgid "We're done with the head node! Let's look at compute nodes now."
msgstr "So viel zum Zentralrechner! Jetzt geht’s an die Arbeitsknoten."

msgid "First of all, we need compute nodes to mount those NFS directories that the head node exports.  This can be done by adding the following lines to @uref{https://linux.die.net/man/5/fstab,@file{/etc/fstab}}:"
msgstr "Zunächst einmal müssen die Arbeitsknoten auch die NFS-Verzeichnisse einbinden, die vom Zentralrechner angeboten werden. Dafür müssen die folgenden Zeilen in @uref{https://linux.die.net/man/5/fstab,@file{/etc/fstab}} hinzugefügt werden:"

msgid ""
"@var{head-node}:/gnu/store    /gnu/store    nfs  defaults,_netdev,vers=3 0 0\n"
"@var{head-node}:/var/guix     /var/guix     nfs  defaults,_netdev,vers=3 0 0\n"
"@var{head-node}:/var/log/guix /var/log/guix nfs  defaults,_netdev,vers=3 0 0\n"
msgstr ""
"@var{zentralrechner}:/gnu/store    /gnu/store    nfs  defaults,_netdev,vers=3 0 0\n"
"@var{zentralrechner}:/var/guix     /var/guix     nfs  defaults,_netdev,vers=3 0 0\n"
"@var{zentralrechner}:/var/log/guix /var/log/guix nfs  defaults,_netdev,vers=3 0 0\n"

msgid "... where @var{head-node} is the name or IP address of your head node.  From there on, assuming the mount points exist, you should be able to mount each of these on the compute nodes."
msgstr "… wobei Sie anstelle von @var{zentralrechner} den Namen oder die IP-Adresse Ihres Zentralrechners hinterlegen. Von da an sollten Sie diese Verzeichnisse, wenn die Einhängepunkte auch existieren, jeweils auf den Arbeitsknoten einbinden können."

msgid "Next, we need to provide a default @command{guix} command that users can run when they first connect to the cluster (eventually they will invoke @command{guix pull}, which will provide them with their ``own'' @command{guix} command).  Similar to what the binary installation script did on the head node, we'll store that in @file{/usr/local/bin}:"
msgstr "Zudem müssen wir unseren Benutzern einen @command{guix}-Befehl vorinstallieren, den sie verwenden können, wenn sie sich zum ersten Mal mit dem Cluster verbinden (damit werden sie @command{guix pull} aufrufen, wodurch ihnen ihr „eigener“ @command{guix}-Befehl zur Verfügung gestellt wird). Analog zum Installationsskript der Guix-Binärdatei auf dem Zentralrechner werden wir unser @command{guix} ebenfalls in @file{/usr/local/bin} unterbringen:"

msgid ""
"mkdir -p /usr/local/bin\n"
"ln -s /var/guix/profiles/per-user/root/current-guix/bin/guix \\\n"
"      /usr/local/bin/guix\n"
msgstr ""
"mkdir -p /usr/local/bin\n"
"ln -s /var/guix/profiles/per-user/root/current-guix/bin/guix \\\n"
"      /usr/local/bin/guix\n"

msgid "We then need to tell @code{guix} to talk to the daemon running on our master node, by adding these lines to @code{/etc/profile}:"
msgstr "Wir müssen dafür sorgen, dass sich @code{guix} mit dem Daemon auf dem Zentralrechner verbindet, indem wir diese Zeilen zu @code{/etc/profile} hinzufügen:"

msgid ""
"GUIX_DAEMON_SOCKET=\"guix://@var{head-node}\"\n"
"export GUIX_DAEMON_SOCKET\n"
msgstr ""
"GUIX_DAEMON_SOCKET=\"guix://@var{zentralrechner}\"\n"
"export GUIX_DAEMON_SOCKET\n"

msgid "To avoid warnings and make sure @code{guix} uses the right locale, we need to tell it to use locale data provided by Guix (@pxref{Application Setup,,, guix, GNU Guix Reference Manual}):"
msgstr "Damit unseren Benutzern keine Warnungen angezeigt werden und damit @code{guix} die richtigen Locale-Spracheinstellungen benutzen kann, müssen wir angeben, wo die von Guix bereitgestellten Locale-Daten zu finden sind (siehe @ref{Anwendungen einrichten,,, guix.de, Referenzhandbuch zu GNU Guix}):"

msgid ""
"GUIX_LOCPATH=/var/guix/profiles/per-user/root/guix-profile/lib/locale\n"
"export GUIX_LOCPATH\n"
"\n"
msgstr ""
"GUIX_LOCPATH=/var/guix/profiles/per-user/root/guix-profile/lib/locale\n"
"export GUIX_LOCPATH\n"
"\n"

msgid ""
"# Here we must use a valid locale name.  Try \"ls $GUIX_LOCPATH/*\"\n"
"# to see what names can be used.\n"
"LC_ALL=fr_FR.utf8\n"
"export LC_ALL\n"
msgstr ""
"# Der Name, den wir hier für die Locale angeben, muss gültig sein.\n"
"# Geben Sie \"ls $GUIX_LOCPATH/*\" ein, um die möglichen Namen zu sehen.\n"
"LC_ALL=fr_FR.utf8\n"
"export LC_ALL\n"

msgid "For convenience, @code{guix package} automatically generates @file{~/.guix-profile/etc/profile}, which defines all the environment variables necessary to use the packages---@code{PATH}, @code{C_INCLUDE_PATH}, @code{PYTHONPATH}, etc.  Likewise, @command{guix pull} does that under @file{~/.config/guix/current}.  Thus it's a good idea to source both from @code{/etc/profile}:"
msgstr "Um die Nutzung zu vereinfachen, legt @code{guix package} selbstständig die Datei @file{~/.guix-profile/etc/profile} an, worin alle Umgebungsvariablen definiert sind, um die Pakete zu benutzen@tie{}– @code{PATH}, @code{C_INCLUDE_PATH}, @code{PYTHONPATH}, etc. Das Gleiche gilt für @command{guix pull}, was eine Datei innerhalb von @file{~/.config/guix/current} anlegt. Diese Definitionen sollten Sie daher in @code{/etc/profile} mit @code{source} laden lassen:"

msgid ""
"for GUIX_PROFILE in \"$HOME/.config/guix/current\" \"$HOME/.guix-profile\"\n"
"do\n"
"  if [ -f \"$GUIX_PROFILE/etc/profile\" ]; then\n"
"    . \"$GUIX_PROFILE/etc/profile\"\n"
"  fi\n"
"done\n"
msgstr ""
"for GUIX_PROFILE in \"$HOME/.config/guix/current\" \"$HOME/.guix-profile\"\n"
"do\n"
"  if [ -f \"$GUIX_PROFILE/etc/profile\" ]; then\n"
"    . \"$GUIX_PROFILE/etc/profile\"\n"
"  fi\n"
"done\n"

msgid "Last but not least, Guix provides command-line completion notably for Bash and zsh.  In @code{/etc/bashrc}, consider adding this line:"
msgstr "Zu guter Letzt können Guix-Befehle durch Bash und zsh ergänzt werden. In @code{/etc/bashrc} fügen Sie dazu diese Zeile hinzu:"

msgid ". /var/guix/profiles/per-user/root/current-guix/etc/bash_completion.d/guix\n"
msgstr ". /var/guix/profiles/per-user/root/current-guix/etc/bash_completion.d/guix\n"

msgid "Voilà!"
msgstr "Erledigt!"

msgid "You can check that everything's in place by logging in on a compute node and running:"
msgstr "Überprüfen Sie, dass alles klappt, indem Sie sich auf einem der Arbeitsrechner anmelden und dies ausführen:"

msgid "guix install hello\n"
msgstr "guix install hello\n"

msgid "The daemon on the head node should download pre-built binaries on your behalf and unpack them in @file{/gnu/store}, and @command{guix install} should create @file{~/.guix-profile} containing the @file{~/.guix-profile/bin/hello} command."
msgstr "Daraufhin sollte der Daemon auf dem Zentralrechner für Sie die vorerstellten Binärdateien herunterladen und nach @file{/gnu/store} entpacken, wonach @command{guix install} dann @file{~/.guix-profile} anlegt und darin wird der Befehl @file{~/.guix-profile/bin/hello} zu finden sein."

msgid "Network Access"
msgstr "Netzwerkzugriff"

msgid "Guix requires network access to download source code and pre-built binaries.  The good news is that only the head node needs that since compute nodes simply delegate to it."
msgstr "Guix setzt voraus, dass Netzwerkzugriff besteht, um Quellcode und vorerstellte Binärdateien herunterzuladen. Die gute Nachricht ist, dass nur der Zentralrechner Netzwerkzugriff braucht, weil die Arbeitsrechner an diesen delegieren."

msgid "It is customary for cluster nodes to have access at best to a @emph{white list} of hosts.  Our head node needs at least @code{ci.guix.gnu.org} in this white list since this is where it gets pre-built binaries from by default, for all the packages that are in Guix proper."
msgstr "Üblicherweise haben Knoten im Cluster höchstens Zugriff auf eine ausgesuchte „Positivliste“ erlaubter Kommunikationspartner. Für den Zentralrechner muss zumindest @code{ci.guix.gnu.org} auf dieser Positivliste stehen, denn von dort stammen in der Vorgabeeinstellung die vorerstellten Binärdateien für alle Pakete, die das eigentliche Guix kennt."

msgid "Incidentally, @code{ci.guix.gnu.org} also serves as a @emph{content-addressed mirror} of the source code of those packages.  Consequently, it is sufficient to have @emph{only} @code{ci.guix.gnu.org} in that white list."
msgstr "Nebenbei ist @code{ci.guix.gnu.org} außerdem ein inhaltsadressierbarer Spiegelserver für die Quelldateien all dieser Pakete. Daher ist es ausreichend, wenn Sie @emph{nur} @code{ci.guix.gnu.org} auf die Positivliste setzen."

msgid "Software packages maintained in a separate repository such as one of the various @uref{https://hpc.guix.info/channels, HPC channels} are of course unavailable from @code{ci.guix.gnu.org}.  For these packages, you may want to extend the white list such that source and pre-built binaries (assuming this-party servers provide binaries for these packages) can be downloaded.  As a last resort, users can always download source on their workstation and add it to the cluster's @file{/gnu/store}, like this:"
msgstr "Software-Pakete, die in einem getrennten Repository angeboten werden wie beispielsweise den @uref{https://hpc.guix.info/channels, HPC-Kanälen}, können natürlich nicht von @code{ci.guix.gnu.org} bezogen werden. Für diese Pakete möchten Sie unter Umständen weitere Server auf die Positivliste setzen, von denen für die fremden Pakete Quell- und Binärdateien heruntergeladen werden können (vorausgesetzt jemand stellt vorerstellte Binärdateien für sie zur Verfügung). Wenn nicht, können Benutzer als Ausweg auch den Quellcode auf ihre Workstations herunterladen und dann in @file{/gnu/store} auf dem Cluster hochladen. Das geht so:"

msgid ""
"GUIX_DAEMON_SOCKET=ssh://compute-node.example.org \\\n"
"  guix download http://starpu.gforge.inria.fr/files/starpu-1.2.3/starpu-1.2.3.tar.gz\n"
msgstr ""
"GUIX_DAEMON_SOCKET=ssh://compute-node.example.org \\\n"
"  guix download http://starpu.gforge.inria.fr/files/starpu-1.2.3/starpu-1.2.3.tar.gz\n"

msgid "The above command downloads @code{starpu-1.2.3.tar.gz} @emph{and} sends it to the cluster's @code{guix-daemon} instance over SSH."
msgstr "Der obige Befehl lädt @code{starpu-1.2.3.tar.gz} herunter @emph{und} lässt es über SSH durch die @code{guix-daemon}-Instanz auf dem Cluster speichern."

msgid "Air-gapped clusters require more work.  At the moment, our suggestion would be to download all the necessary source code on a workstation running Guix.  For instance, using the @option{--sources} option of @command{guix build} (@pxref{Invoking guix build,,, guix, GNU Guix Reference Manual}), the example below downloads all the source code the @code{openmpi} package depends on:"
msgstr "Wenn Ihr Cluster gänzlich von der Außenwelt abgeschnitten ist („air-gapped“), ist es aufwendiger. In diesem Fall würden wir dazu raten, dass sie sämtlichen nötigen Quellcode auf eine Workstation herunterladen, auf der Guix läuft. Dafür gibt es zum Beispiel die Befehlszeilenoption @option{--sources} für @command{guix build} (siehe @ref{Aufruf von guix build,,, guix.de, Referenzhandbuch zu GNU Guix}); folgendes Beispiel zeigt, wie Sie sämtlichen Quellcode, von dem das @code{openmpi}-Paket abhängt, herunterladen:"

msgid ""
"$ guix build --sources=transitive openmpi\n"
"\n"
msgstr ""
"$ guix build --sources=transitive openmpi\n"
"\n"

msgid ""
"@dots{}\n"
"\n"
msgstr ""
"…\n"
"\n"

msgid ""
"/gnu/store/xc17sm60fb8nxadc4qy0c7rqph499z8s-openmpi-1.10.7.tar.bz2\n"
"/gnu/store/s67jx92lpipy2nfj5cz818xv430n4b7w-gcc-5.4.0.tar.xz\n"
"/gnu/store/npw9qh8a46lrxiwh9xwk0wpi3jlzmjnh-gmp-6.0.0a.tar.xz\n"
"/gnu/store/hcz0f4wkdbsvsdky3c0vdvcawhdkyldb-mpfr-3.1.5.tar.xz\n"
"/gnu/store/y9akh452n3p4w2v631nj0injx7y0d68x-mpc-1.0.3.tar.gz\n"
"/gnu/store/6g5c35q8avfnzs3v14dzl54cmrvddjm2-glibc-2.25.tar.xz\n"
"/gnu/store/p9k48dk3dvvk7gads7fk30xc2pxsd66z-hwloc-1.11.8.tar.bz2\n"
"/gnu/store/cry9lqidwfrfmgl0x389cs3syr15p13q-gcc-5.4.0.tar.xz\n"
"/gnu/store/7ak0v3rzpqm2c5q1mp3v7cj0rxz0qakf-libfabric-1.4.1.tar.bz2\n"
"/gnu/store/vh8syjrsilnbfcf582qhmvpg1v3rampf-rdma-core-14.tar.gz\n"
"…\n"
msgstr ""
"/gnu/store/xc17sm60fb8nxadc4qy0c7rqph499z8s-openmpi-1.10.7.tar.bz2\n"
"/gnu/store/s67jx92lpipy2nfj5cz818xv430n4b7w-gcc-5.4.0.tar.xz\n"
"/gnu/store/npw9qh8a46lrxiwh9xwk0wpi3jlzmjnh-gmp-6.0.0a.tar.xz\n"
"/gnu/store/hcz0f4wkdbsvsdky3c0vdvcawhdkyldb-mpfr-3.1.5.tar.xz\n"
"/gnu/store/y9akh452n3p4w2v631nj0injx7y0d68x-mpc-1.0.3.tar.gz\n"
"/gnu/store/6g5c35q8avfnzs3v14dzl54cmrvddjm2-glibc-2.25.tar.xz\n"
"/gnu/store/p9k48dk3dvvk7gads7fk30xc2pxsd66z-hwloc-1.11.8.tar.bz2\n"
"/gnu/store/cry9lqidwfrfmgl0x389cs3syr15p13q-gcc-5.4.0.tar.xz\n"
"/gnu/store/7ak0v3rzpqm2c5q1mp3v7cj0rxz0qakf-libfabric-1.4.1.tar.bz2\n"
"/gnu/store/vh8syjrsilnbfcf582qhmvpg1v3rampf-rdma-core-14.tar.gz\n"
"…\n"

msgid "(In case you're wondering, that's more than 320@ MiB of @emph{compressed} source code.)"
msgstr "(Wenn Sie es genauer wissen wollen, haben wir hier mehr als 320@ MiB @emph{komprimierten} Quellcodes.)"

msgid "We can then make a big archive containing all of this (@pxref{Invoking guix archive,,, guix, GNU Guix Reference Manual}):"
msgstr "Daraus lässt sich ein gesammeltes Archiv für all den Quellcode basteln (siehe @ref{Aufruf von guix archive,,, guix.de, Referenzhandbuch zu GNU Guix}):"

msgid ""
"$ guix archive --export \\\n"
"    `guix build --sources=transitive openmpi` \\\n"
"    > openmpi-source-code.nar\n"
msgstr ""
"$ guix archive --export \\\n"
"    `guix build --sources=transitive openmpi` \\\n"
"    > openmpi-quellcode.nar\n"

msgid "@dots{} and we can eventually transfer that archive to the cluster on removable storage and unpack it there:"
msgstr "… und dieses Archiv können wir dann mittels Wechseldatenträgern auf den Cluster transportieren und dort entpacken:"

msgid "$ guix archive --import < openmpi-source-code.nar\n"
msgstr "$ guix archive --import < openmpi-quellcode.nar\n"

msgid "This process has to be repeated every time new source code needs to be brought to the cluster."
msgstr "Wiederholen Sie diesen Vorgang, wann immer Sie neuen Quellcode auf den Cluster schaffen müssen."

msgid "As we write this, the research institutes involved in Guix-HPC do not have air-gapped clusters though. If you have experience with such setups, we would like to hear feedback and suggestions."
msgstr "Wir schreiben das, aber zum jetzigen Zeitpunkt haben die Forschungsinstitute, die mit Guix-HPC arbeiten, gar keinen Cluster mit Air Gap. Wenn Sie Erfahrung damit haben, freuen wir uns über Rückmeldungen und Vorschläge."

msgid "Disk Usage"
msgstr "Speicherplatz"

msgid "disk usage, on a cluster"
msgstr "Speicherplatz, auf einem Cluster"

msgid "A common concern of sysadmins' is whether this is all going to eat a lot of disk space.  If anything, if something is going to exhaust disk space, it's going to be scientific data sets rather than compiled software---that's our experience with almost ten years of Guix usage on HPC clusters.  Nevertheless, it's worth taking a look at how Guix contributes to disk usage."
msgstr "Systemadministratoren sind oft besorgt, ob Guix nicht Unmengen an Plattenplatz verschlingen wird. Aber wenn überhaupt, werden wissenschaftliche Datensätze und nicht kompilierte Software die Speicherplatzfresser sein@tie{}– unserer Erfahrung nach, da wir schon fast zehn Jahre lang Guix auf HPC-Clustern betreiben. Trotzdem lohnt sich ein Blick, wie Guix zum Speicherplatzverbrauch beiträgt."

msgid "First, having several versions or variants of a given package in @file{/gnu/store} does not necessarily cost much, because @command{guix-daemon} implements deduplication of identical files, and package variants are likely to have a number of common files."
msgstr "Zunächst einmal kostet es @emph{nicht} unbedingt viel, wenn mehrere Versionen oder Varianten eines bestimmten Pakets in @file{/gnu/store} liegen, weil @command{guix-daemon} gleiche Dateien dedupliziert und weil Paketvarianten in der Regel viele Dateien gemeinsam haben."

msgid "As mentioned above, we recommend having a cron job to run @code{guix gc} periodically, which removes @emph{unused} software from @file{/gnu/store}. However, there's always a possibility that users will keep lots of software in their profiles, or lots of old generations of their profiles, which is ``live'' and cannot be deleted from the viewpoint of @command{guix gc}."
msgstr "Dann ist es, wie oben beschrieben, unsere Empfehlung, mit einem „Cron-Job“ regelmäßig @code{guix gc} aufzurufen, was @emph{nicht benutzte} Software aus @file{/gnu/store} löscht. Dennoch kann es sein, dass Benutzer eine ganze Menge Software in ihren Profilen übrig lassen oder dass sie viele alte Generationen ihrer Profile horten, die dann „lebendig“ sind und aus Sicht von @command{guix gc} @emph{nicht} gelöscht werden dürfen."

msgid "The solution to this is for users to regularly remove old generations of their profile. For instance, the following command removes generations that are more than two-month old:"
msgstr "Die Lösung besteht darin, dass Nutzer die alten Generationen ihrer Profile regelmäßig entfernen. Zum Beispiel werden mit folgendem Befehl alle Generationen entfernt, die älter als zwei Monate sind:"

msgid "guix package --delete-generations=2m\n"
msgstr "guix package --delete-generations=2m\n"

msgid "Likewise, it's a good idea to invite users to regularly upgrade their profile, which can reduce the number of variants of a given piece of software stored in @file{/gnu/store}:"
msgstr "Ebenso ist es eine gute Idee, den Nutzern nahezulegen, dass sie ihre Profile regelmäßig auf den neuesten Stand aktualisieren, weil dann weniger Varianten einer Software in @file{/gnu/store} bleiben müssen:"

msgid ""
"guix pull\n"
"guix upgrade\n"
msgstr ""
"guix pull\n"
"guix upgrade\n"

msgid "As a last resort, it is always possible for sysadmins to do some of this on behalf of their users. Nevertheless, one of the strengths of Guix is the freedom and control users get on their software environment, so we strongly recommend leaving users in control."
msgstr "Notfalls können Systemadministratoren die Profile teilweise anstelle der Nutzer bereinigen. Das widerspricht allerdings einem Vorteil von Guix, dass Benutzer viel Freiheit und Kontrolle über ihre Software-Umgebungen bekommen. Wir empfehlen deutlich, die Kontrolle bei den Benutzern zu lassen."

msgid "Security Considerations"
msgstr "Sicherheitsüberlegungen"

msgid "security, on a cluster"
msgstr "Sicherheit, auf einem Cluster"

msgid "On an HPC cluster, Guix is typically used to manage scientific software.  Security-critical software such as the operating system kernel and system services such as @code{sshd} and the batch scheduler remain under control of sysadmins."
msgstr "Auf einem Hochleistungs-Cluster wird mit Guix normalerweise wissenschaftliche Software verwaltet. Über sicherheitskritische Software wie den Betriebssystem-Kernel und Systemdienste wie @code{sshd} und „Batch“-Auftragsplaner haben weiterhin die Systemadministratoren die Kontrolle."

msgid "The Guix project has a good track record delivering security updates in a timely fashion (@pxref{Security Updates,,, guix, GNU Guix Reference Manual}).  To get security updates, users have to run @code{guix pull && guix upgrade}."
msgstr "Das Guix-Projekt kümmert sich zügig um Sicherheitsaktualisierungen (siehe @ref{Sicherheitsaktualisierungen,,, guix.de, Referenzhandbuch zu GNU Guix}). Um die Sicherheitsaktualisierungen zu bekommen, müssen Nutzer @command{guix pull && guix upgrade} ausführen."

msgid "Because Guix uniquely identifies software variants, it is easy to see if a vulnerable piece of software is in use. For instance, to check whether the glibc@ 2.25 variant without the mitigation patch against ``@uref{https://www.qualys.com/2017/06/19/stack-clash/stack-clash.txt,Stack Clash}'', one can check whether user profiles refer to it at all:"
msgstr "Weil in Guix Software-Varianten eine eindeutige Bezeichnung haben, lässt es sich einfach überprüfen, ob jemand eine von Schwachstellen betroffene Software verwendet. Zum Beispiel kann man für die Variante von glibc@ 2.25, die den Patch zur Behebung der Sicherheitslücke namens „@uref{https://www.qualys.com/2017/06/19/stack-clash/stack-clash.txt,Stack Clash}“ noch nicht hat, prüfen, ob sie überhaupt in einem Benutzerprofil verwendet wird:"

msgid "guix gc --referrers /gnu/store/…-glibc-2.25\n"
msgstr "guix gc --referrers /gnu/store/…-glibc-2.25\n"

msgid "This will report whether profiles exist that refer to this specific glibc variant."
msgstr "Dadurch werden Profile gemeldet, die diese bestimmte glibc-Variante verwenden."

msgid "system management"
msgstr "Systemverwaltung"

msgid "sysadmin"
msgstr "Systemadministrator"

msgid "Since Guix does not handle packaging, system configuration and services the way other (more ``classical'') distributions do, some workflows tend to unfold slightly different as we are used to and need slight adjustment.  This chapter intends to help with such manners."
msgstr "Weil man in Guix mit Paketen, Systemkonfiguration und Diensten anders umgeht, als es andere („klassischere“) Distributionen vorsehen, müssen oft manche gewohnte Arbeitsweisen leicht angepasst werden. In diesem Kapitel wollen wir bei solchen Sachen helfen."

msgid "With the deprecation of the default value for the postgres package in postgresql-configuration (see b93434e656eba4260df82158a96c295000d3ff44), system upgrades need some manual action before they can take place.  Here's a handy guide on how to."
msgstr "Weil der Vorgabewert des Pakets mit postgres in postgresql-configuration jetzt als veraltet gilt (siehe b93434e656eba4260df82158a96c295000d3ff44), ist eine Systemaktualisierung nur nach einigen manuellen Schritten möglich. Hier geben wir einen Überblick."

msgid "Please note that this is a straight-forward way for smaller datasets.  For larger databases @url{https://www.postgresql.org/docs/current/pgupgrade.html, @code{pg_upgrade}} may be the better choice.  Handling the service and system upgrade as described in this guide still applies, though."
msgstr "Beachten Sie, wir beschreiben hier eine direkte Methode, die für kleine Datenmengen geeignet ist. Für große Datenbanken benutzen Sie eventuell besser @url{https://www.postgresql.org/docs/current/pgupgrade.html, @code{pg_upgrade}}. Aber auch dann müssen Sie den Dienst und die Systemaktualisierung wie hier beschrieben handhaben."

msgid "Stop and disable cuirass."
msgstr "Stoppen Sie Cuirass und deaktivieren Sie es."

msgid "Prevent the service from starting and failing after a reconfiguration:"
msgstr "Verhindern Sie somit, dass der Dienst neu startet und fehlschlägt, nachdem rekonfiguriert wird."

msgid "sudo herd stop cuirass && sudo herd disable cuirass"
msgstr "sudo herd stop cuirass && sudo herd disable cuirass"

msgid "Dump the database contents."
msgstr "Exportieren Sie ein Dump Ihrer Datenbank."

msgid "sudo su - postgres -s /bin/sh -c pg_dumpall > /tmp/pg.dump"
msgstr "sudo su - postgres -s /bin/sh -c pg_dumpall > /tmp/pg.dump"

msgid "Add or alter the postgres service."
msgstr "Fügen Sie den Postgres-Dienst hinzu oder ändern Sie ihn."

msgid "Depending on whether your postgres service is defined implicitly (through the dependency from the cuirass service) or its own entry in your operating system's @code{(services)} property, you need to either add or alter the already existing configuration to reflect your intended version upgrade."
msgstr "Je nachdem, ob der Postgres-Dienst bei Ihnen implizit definiert ist (als Abhängigkeit über den Cuirass-Dienst) oder in einem eigenen Eintrag der @code{(services)}-Eigenschaft in Ihrem Betriebssystem deklariert ist, müssen Sie ihn entweder hinzufügen oder die bestehende Konfiguration ändern, damit sie Ihrer gewünschten Versionsänderung entspricht."

msgid "Be careful not to upgrade directly to postgres-16 -- cuirass service for some reason doesn't like that.  I had to find and purge the relevant files and then re-initialize after a failed upgrade to postgres 16."
msgstr "Achten Sie darauf, nicht auf einen Schlag zu postgres-16 zu aktualisieren – aus ungeklärten Gründen mag der Cuirass-Dienst das @emph{nicht} gerne. Nach einer kaputten Aktualisierung auf Postgres 16 musste ich die betroffenen Dateien löschen und neu initialisieren."

msgid ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (postgresql (@@ (gnu packages databases) postgresql-15))))\n"
msgstr ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (postgresql (@@ (gnu packages databases) postgresql-15))))\n"

msgid "Note: If you for some reason didn't read the text here but somewhat blindly followed the examples and @emph{did upgrade to 16}, here's how you reset the state:"
msgstr "Anmerkung: Wenn es Ihnen passiert ist, dass Sie den Text hier ignoriert haben und irgendwie blind den Beispielen gefolgt sind und @emph{doch auf 16 aktualisiert} haben, ist hier beschrieben, wie Sie den Zustand zurücksetzen:"

msgid "Delete the database instance files."
msgstr "Löschen Sie die Dateien der Datenbankinstanz."

msgid "They default to live under @file{/var/lib/postgres/data}."
msgstr "Nach Vorgabeeinstellung wohnen diese in @file{/var/lib/postgres/data}."

msgid "Re-initialize postgres."
msgstr "Initialisieren Sie Postgres neu."

msgid "sudo su - postgres -s /bin/sh -c 'pg_ctl init -D /var/lib/postgres/data'"
msgstr "sudo su - postgres -s /bin/sh -c 'pg_ctl init -D /var/lib/postgres/data'"

msgid "Reconfigure your system."
msgstr "Rekonfigurieren Sie Ihr System."

msgid "sudo guix system reconfigure path/to/your/altered/config.scm"
msgstr "sudo guix system reconfigure path/to/your/altered/config.scm"

msgid "Restore database contents."
msgstr "Stellen Sie den Datenbankinhalt wieder her."

msgid "sudo su - postgres -s /bin/sh -c 'psql -d postgres -f /tmp/pg.dump'"
msgstr "sudo su - postgres -s /bin/sh -c 'psql -d postgres -f /tmp/pg.dump'"

msgid "Enable and start the service."
msgstr "Aktivieren und starten Sie den Dienst."

msgid ""
"sudo herd enable cuirass\n"
"sudo herd start cuirass\n"
msgstr ""
"sudo herd enable cuirass\n"
"sudo herd start cuirass\n"

msgid "Guix is based on the @uref{https://nixos.org/nix/, Nix package manager}, which was designed and implemented by Eelco Dolstra, with contributions from other people (see the @file{nix/AUTHORS} file in Guix.)  Nix pioneered functional package management, and promoted unprecedented features, such as transactional package upgrades and rollbacks, per-user profiles, and referentially transparent build processes.  Without this work, Guix would not exist."
msgstr "Guix baut auf dem @uref{https://nixos.org/nix/, Nix-Paketverwaltungsprogramm} auf, das von Eelco Dolstra entworfen und entwickelt wurde, mit Beiträgen von anderen Leuten (siehe die Datei @file{nix/AUTHORS} in Guix). Nix hat für die funktionale Paketverwaltung die Pionierarbeit geleistet und noch nie dagewesene Funktionalitäten vorangetrieben wie transaktionsbasierte Paketaktualisierungen und die Rücksetzbarkeit selbiger, eigene Paketprofile für jeden Nutzer und referenziell transparente Erstellungsprozesse. Ohne diese Arbeit gäbe es Guix nicht.<"

msgid "The Nix-based software distributions, Nixpkgs and NixOS, have also been an inspiration for Guix."
msgstr "Die Nix-basierten Software-Distributionen Nixpkgs und NixOS waren auch eine Inspiration für Guix."

msgid "GNU@tie{}Guix itself is a collective work with contributions from a number of people.  See the @file{AUTHORS} file in Guix for more information on these fine people.  The @file{THANKS} file lists people who have helped by reporting bugs, taking care of the infrastructure, providing artwork and themes, making suggestions, and more---thank you!"
msgstr "GNU@tie{}Guix ist selbst das Produkt kollektiver Arbeit mit Beiträgen durch eine Vielzahl von Leuten. Siehe die Datei @file{AUTHORS} in Guix für mehr Informationen, wer diese wunderbaren Menschen sind. In der Datei @file{THANKS} finden Sie eine Liste der Leute, die uns geholfen haben, indem Sie Fehler gemeldet, sich um unsere Infrastruktur gekümmert, künstlerische Arbeit und schön gestaltete Themen beigesteuert, Vorschläge gemacht und noch vieles mehr getan haben@tie{}– vielen Dank!"

msgid "This document includes adapted sections from articles that have previously been published on the Guix blog at @uref{https://guix.gnu.org/blog} and on the Guix-HPC blog at @uref{https://hpc.guix.info/blog}."
msgstr "Dieses Dokument enthält angepasste Abschnitte aus Einträgen, die zuvor auf dem Blog von Guix unter @uref{https://guix.gnu.org/blog} und dem Guix-HPC-Blog unter @uref{https://hpc.guix.info/blog} veröffentlicht wurden."

msgid "license, GNU Free Documentation License"
msgstr "Lizenz, GNU-Lizenz für freie Dokumentation"

msgid "fdl-1.3.texi"
msgstr "fdl-1.3.texi"
