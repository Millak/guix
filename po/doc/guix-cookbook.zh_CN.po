# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR the authors of Guix (msgids) and the following authors (msgstr)
# This file is distributed under the same license as the guix manual package.
# Florian Pelz <pelzflorian@pelzflorian.de>, 2025.
# rw flurando <2024110144@mails.szu.edu.cn>, 2025.
# a x <meruarasu@email1.io>, 2025.
# Weblate Translation Memory <noreply-mt-weblate-translation-memory@weblate.org>, 2025.
msgid ""
msgstr ""
"Project-Id-Version: guix manual checkout\n"
"Report-Msgid-Bugs-To: bug-guix@gnu.org\n"
"POT-Creation-Date: 2025-10-21 03:18+0000\n"
"PO-Revision-Date: 2025-10-21 11:10+0000\n"
"Last-Translator: HPCesia <hpcesia@noreply.codeberg.org>\n"
"Language-Team: Chinese (Simplified Han script) <https://translate.codeberg.org/projects/guix/documentation-cookbook/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.13.3\n"

msgid "@documentencoding UTF-8"
msgstr ""
"@documentencoding UTF-8\n"
"@documentlanguage zh_CN"

msgid "GNU Guix Cookbook"
msgstr "GNU Guix 烹饪书"

msgid "Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license is included in the section entitled ``GNU Free Documentation License''."
msgstr "现允许根据 GNU 自由文档许可证第 1.3 版或自由软件基金会发布的任何更高版本的条款复制、分发和（或）修改本文件；没有不可变小节，没有封面文字，也没有封底文字。此许可证的副本包含在标题为“GNU 自由文档许可证”的部分内。"

msgid "System administration"
msgstr "系统管理"

msgid "Guix cookbook: (guix-cookbook)"
msgstr "Guix 烹饪书: (guix-cookbook.zh_CN)"

msgid "Tutorials and examples for GNU Guix."
msgstr "GNU Guix 的教程和示例。"

msgid "Tutorials and examples for using the GNU Guix Functional Package Manager"
msgstr "GNU Guix 功能性包管理器使用教程与示例"

msgid "The GNU Guix Developers"
msgstr "GNU Guix 开发者"

msgid "Top"
msgstr "Top"

msgid "This document presents tutorials and detailed examples for GNU@tie{}Guix, a functional package management tool written for the GNU system.  Please @pxref{Top,,, guix, GNU Guix reference manual} for details about the system, its API, and related concepts."
msgstr "本文档提供 GNU@tie{}Guix 的教程与详细示例——这是一款专为 GNU 系统编写的功能性包管理工具。关于系统架构、应用程序接口及相关概念的具体说明，敬请查阅 @pxref{Top,,, guix.zh_CN, GNU Guix 参考手册}。"

msgid "This manual is also available in Simplified Chinese (@pxref{Top,,, guix-cookbook.zh_CN, GNU Guix 烹饪书}), French (@pxref{Top,,, guix-cookbook.fr, Livre de recettes de GNU Guix}), German (@pxref{Top,,, guix-cookbook.de, GNU-Guix-Kochbuch}), Korean (@pxref{Top,,, guix-cookbook.ko, GNU Guix 쿡북}), Spanish (@pxref{Top,,, guix-cookbook.es, Libro de recetas de GNU Guix}), Italian (@pxref{Top,,, guix-cookbook.it, Ricettario di GNU Guix}), Brazilian Portuguese (@pxref{Top,,, guix-cookbook.pt_BR, Livro de receitas do GNU Guix}), Russian (@pxref{Top,,, guix-cookbook.ru, GNU Guix Рецепты}), Slovak (@pxref{Top,,, guix-cookbook.sk, Receptár GNU Guix}), and Swedish (@pxref{Top,,, guix-cookbook.sv, Kokbok för GNU Guix}).  If you would like to translate this document in your native language, consider joining @uref{https://translate.codeberg.org/projects/guix/documentation-cookbook, Weblate} (@pxref{Translating Guix,,, guix, GNU Guix Reference Manual})."
msgstr "这个用户手册还提供英语版（@pxref{Top,,, guix-cookbook, GNU Guix Cookbook}）、法语版（@pxref{Top,,, guix-cookbook.fr, Livre de recettes de GNU Guix}）、德语版（@pxref{Top,,, guix-cookbook.de, GNU-Guix-Kochbuch}）、朝鲜语版 (@pxref{Top,,, guix-cookbook.ko, GNU Guix 쿡북})、西班牙语版（@pxref{Top,,, guix-cookbook.es, Libro de recetas de GNU Guix}）、意大利语版（@pxref{Top,,, guix-cookbook.it, Ricettario di GNU Guix}）、巴西葡萄牙语版（@pxref{Top,,, guix-cookbook.pt_BR, Livro de receitas do GNU Guix}）、俄语版（@pxref{Top,,, guix-cookbook.ru, GNU Guix Рецепты}）、斯洛伐克语版（@pxref{Top,,, guix-cookbook.sk, Receptár GNU Guix}）与瑞典语版（@pxref{Top,,, guix-cookbook.sv, Kokbok för GNU Guix}）。如果你想把它翻译成你的母语，请考虑加入 @uref{https://translate.codeberg.org/projects/guix/documentation-cookbook, Weblate}（@pxref{翻译 Guix,,, guix.zh_CN, GNU Guix参考手册}）。"

msgid "Scheme tutorials"
msgstr "Scheme 教程"

msgid "Meet your new favorite language!"
msgstr "邂逅您的新宠语言！"

msgid "Packaging"
msgstr "打包"

msgid "Packaging tutorials"
msgstr "打包教程"

msgid "System Configuration"
msgstr "系统配置"

msgid "Customizing the GNU System"
msgstr "客制化 GNU 系统"

msgid "Containers"
msgstr "容器"

msgid "Isolated environments and nested systems"
msgstr "隔离环境与嵌套系统"

msgid "Virtual Machines"
msgstr "虚拟机"

msgid "Virtual machines usage and configuration"
msgstr "虚拟机的使用和配置"

msgid "Advanced package management"
msgstr "进阶包管理"

msgid "Power to the users!"
msgstr "用户力量至上！"

msgid "Software Development"
msgstr "软件开发"

msgid "Environments, continuous integration, etc."
msgstr "环境、持续集成等。"

msgid "Environment management"
msgstr "环境管理"

msgid "Control environment"
msgstr "控制环境"

msgid "Installing Guix on a Cluster"
msgstr "集群安装 Guix"

msgid "High-performance computing."
msgstr "高性能计算。"

msgid "Guix System Management"
msgstr "Guix 系统管理"

msgid "System Management specifics."
msgstr "系统管理细则。"

msgid "Acknowledgments"
msgstr "致谢"

msgid "Thanks!"
msgstr "感谢！"

msgid "GNU Free Documentation License"
msgstr "GNU 自由文档许可证"

msgid "The license of this document."
msgstr "本文档许可证。"

msgid "Concept Index"
msgstr "概念索引"

msgid "Concepts."
msgstr "概念。"

msgid "--- The Detailed Node Listing ---"
msgstr "－－－详细的章节列表－－－"

msgid "A Scheme Crash Course"
msgstr "Scheme 急就"

msgid "Packaging Tutorial"
msgstr "打包教程"

msgid "A tutorial on how to add packages to Guix."
msgstr "为 Guix 添加软件包的教程。"

msgid "Packaging Workflows"
msgstr "打包工作流程"

msgid "Real life examples on working with specific build systems."
msgstr "使用特定构建系统的真实案例。"

msgid "A ``Hello World'' package"
msgstr "“世界你好”示例软件包"

msgid "Setup"
msgstr "配置"

msgid "Extended example"
msgstr "扩展示例"

msgid "Other build systems"
msgstr "其他构建系统"

msgid "Programmable and automated package definition"
msgstr "可编程和自动化的包定义"

msgid "Getting help"
msgstr "寻求帮助"

msgid "Conclusion"
msgstr "小结"

msgid "References"
msgstr "参考"

msgid "Local file"
msgstr "本地文件"

msgid "Channels"
msgstr "频道"

msgid "Automatic update"
msgstr "自动更新"

msgid "Packaging Rust Crates"
msgstr "打包 Rust Crates"

msgid "Common Workflow for Rust Packaging"
msgstr "Rust 打包的常见工作流程"

msgid "Auto-Login to a Specific TTY"
msgstr "自动登录到指定的 TTY"

msgid "Automatically Login a User to a Specific TTY"
msgstr "自动将用户登录到指定的 TTY"

msgid "Customizing the Kernel"
msgstr "自定义内核"

msgid "Creating and using a custom Linux kernel on Guix System."
msgstr "在 Guix 系统上创建和使用自定义 Linux 内核。"

msgid "Guix System Image API"
msgstr "Guix 系统映像 API"

msgid "Using security keys"
msgstr "使用安全密钥"

msgid "How to use security keys with Guix System."
msgstr "如何在 Guix 系统中使用安全密钥。"

msgid "Connecting to Wireguard VPN"
msgstr "连接 Wireguard VPN"

msgid "Connecting to a Wireguard VPN."
msgstr "连接 Wireguard VPN。"

msgid "Customizing a Window Manager"
msgstr "客制化窗口管理器"

msgid "Handle customization of a Window manager on Guix System."
msgstr "在 Guix 系统上对窗口管理器进行客制化。"

msgid "Xorg"
msgstr "Xorg"

msgid "Guix Containers"
msgstr "Guix 容器"

msgid "Guix System Containers"
msgstr "Guix 系统容器"

msgid "Getting Started"
msgstr "入门"

msgid "Building with Guix"
msgstr "用 Guix 构建"

msgid "packaging"
msgstr "打包"

msgid "This chapter is dedicated to teaching you how to add packages to the collection of packages that come with GNU Guix.  This involves writing package definitions in Guile Scheme, organizing them in package modules, and building them."
msgstr "本章将指导您为 GNU Guix 的官方软件包集添加新软件包。该过程包含三个核心环节：使用 Guile Scheme 编写软件包定义、将其组织至软件包模块中、以及执行构建过程。"

msgid "GNU Guix stands out as the @emph{hackable} package manager, mostly because it uses @uref{https://www.gnu.org/software/guile/, GNU Guile}, a powerful high-level programming language, one of the @uref{https://en.wikipedia.org/wiki/Scheme_%28programming_language%29, Scheme} dialects from the @uref{https://en.wikipedia.org/wiki/Lisp_%28programming_language%29, Lisp family}."
msgstr "GNU Guix 凭借其@emph{可魔改}特性在包管理器中独树一帜，核心在于采用 @uref{https://www.gnu.org/software/guile/, GNU Guile}——一种基于 @uref{https://en.wikipedia.org/wiki/Scheme_%28programming_language%29, Scheme} 方言的 @uref{https://en.wikipedia.org/wiki/Lisp_%28programming_language%29, Lisp 家族}高级编程语言。"

msgid "Package definitions are also written in Scheme, which empowers Guix in some very unique ways, unlike most other package managers that use shell scripts or simple languages."
msgstr "与其他包管理器使用 Shell 脚本或简易语言不同，Guix 的软件包定义采用 Scheme 编写，这赋予其独特的可扩展能力。"

msgid "Use functions, structures, macros and all of Scheme expressiveness for your package definitions."
msgstr "在软件包定义中充分发挥 Scheme 的表达能力：善用函数、结构体、宏等特性。"

msgid "Inheritance makes it easy to customize a package by inheriting from it and modifying only what is needed."
msgstr "继承机制让软件包定制变得简单——基于现有包继承后，仅需修改必要部分即可实现定制。"

msgid "Batch processing: the whole package collection can be parsed, filtered and processed.  Building a headless server with all graphical interfaces stripped out? It's possible.  Want to rebuild everything from source using specific compiler optimization flags? Pass the @code{#:make-flags \"...\"} argument to the list of packages.  It wouldn't be a stretch to think @uref{https://wiki.gentoo.org/wiki/USE_flag, Gentoo USE flags} here, but this goes even further: the changes don't have to be thought out beforehand by the packager, they can be @emph{programmed} by the user!"
msgstr "批处理能力：可对整个软件包集合进行解析、筛选与处理。例如：构建无图形界面的服务器系统？可行。需用特定编译器优化标志重建所有源码？向软件包列表传递 @code{#:make-flags \"...\"} 参数。其灵活性更胜一筹于 @uref{https://wiki.gentoo.org/wiki/USE_flag, Gentoo USE flags}：这些变更无需打包者预先设计，完全@emph{可由用户编程实现}！"

msgid "The following tutorial covers all the basics around package creation with Guix.  It does not assume much knowledge of the Guix system nor of the Lisp language.  The reader is only expected to be familiar with the command line and to have some basic programming knowledge."
msgstr "以下教程涵盖使用 Guix 创建软件包的基础知识。读者无需精通 Guix 系统或 Lisp 语言，仅需熟悉命令行并具备基础编程能力即可。"

msgid "The ``Defining Packages'' section of the manual introduces the basics of Guix packaging (@pxref{Defining Packages,,, guix, GNU Guix Reference Manual}).  In the following section, we will partly go over those basics again."
msgstr "手册的“定义软件包”章节介绍了 Guix 打包基础（@pxref{定义软件包,,, guix.zh_CN, GNU Guix 参考手册}）。下文将部分重述这些基础知识。"

msgid "GNU@tie{}Hello is a dummy project that serves as an idiomatic example for packaging.  It uses the GNU build system (@code{./configure && make && make install}).  Guix already provides a package definition which is a perfect example to start with.  You can look up its declaration with @code{guix edit hello} from the command line.  Let's see how it looks:"
msgstr "GNU@tie{}Hello 是用于演示打包范式的示例项目。它采用 GNU 构建系统（@code{./configure && make && make install}）。Guix 已提供可作为完美入门范例的软件包定义，您可通过命令行执行 @code{guix edit hello} 查看其声明。其定义如下："

msgid ""
"(define-public hello\n"
"  (package\n"
"    (name \"hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Hello, GNU world: An example GNU package\")\n"
"    (description\n"
"     \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"
msgstr ""
"(define-public hello\n"
"  (package\n"
"    (name \"hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Hello, GNU world: An example GNU package\")\n"
"    (description\n"
"     \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"

msgid "As you can see, most of it is rather straightforward.  But let's review the fields together:"
msgstr "如您所见，多数定义简明易懂。现逐字段解析："

msgid "name"
msgstr "name"

msgid "The project name.  Using Scheme conventions, we prefer to keep it lower case, without underscore and using dash-separated words."
msgstr "项目名称。遵循 Scheme 惯例，采用小写字母、短划线分隔的命名（如@code{my-package}）。"

msgid "source"
msgstr "source"

msgid "This field contains a description of the source code origin.  The @code{origin} record contains these fields:"
msgstr "该字段描述源代码来源。@code{origin} 记录（record）包含以下字段："

msgid "The method, here @code{url-fetch} to download via HTTP/FTP, but other methods"
msgstr "方法（method）。此处为通过 HTTP/FTP 下载的 @code{url-fetch}，"

msgid "exist, such as @code{git-fetch} for Git repositories."
msgstr "另有其他方法如适用于 Git 仓库的 @code{git-fetch}。"

msgid "The URI, which is typically some @code{https://} location for @code{url-fetch}.  Here"
msgstr "通常为 @code{url-fetch} 使用的 @code{https://} URI 地址。还有"

msgid "the special `mirror://gnu` refers to a set of well known locations, all of which can be used by Guix to fetch the source, should some of them fail."
msgstr "特殊地址 `mirror://gnu` 指向一组已知镜像源，当部分源失效时 Guix 会自动尝试其他镜像。"

msgid "The @code{sha256} checksum of the requested file.  This is essential to ensure"
msgstr "@code{sha256} 表示需求文件的校验和。"

msgid "the source is not corrupted.  Note that Guix works with base32 strings, hence the call to the @code{base32} function."
msgstr "这对确保源码完整性至关重要。需注意 Guix 采用 base32 字符串格式，故需调用 @code{base32} 函数进行转换。"

msgid "build-system"
msgstr "build-system"

msgid "This is where the power of abstraction provided by the Scheme language really shines: in this case, the @code{gnu-build-system} abstracts away the famous @code{./configure && make && make install} shell invocations.  Other build systems include the @code{trivial-build-system} which does not do anything and requires from the packager to program all the build steps, the @code{python-build-system}, the @code{emacs-build-system}, and many more (@pxref{Build Systems,,, guix, GNU Guix Reference Manual})."
msgstr "Scheme 语言的抽象能力在此熠熠生辉：@code{gnu-build-system} 封装了经典的 @code{./configure && make && make install} 命令流程。其他构建系统包括：@code{trivial-build-system}（不执行预设操作，需打包者编写完整构建步骤）、@code{python-build-system}、@code{emacs-build-system} 等（@pxref{构建系统,,, guix.zh_CN, GNU Guix 参考手册}）。"

msgid "synopsis"
msgstr "synopsis"

msgid "It should be a concise summary of what the package does.  For many packages a tagline from the project's home page can be used as the synopsis."
msgstr "摘要应简明概括软件包功能。多数情况下可直接复用项目首页的标语。"

msgid "description"
msgstr "description"

msgid "Same as for the synopsis, it's fine to re-use the project description from the homepage.  Note that Guix uses Texinfo syntax."
msgstr "和摘要一样，描述同样可复用首页的项目说明。需注意 Guix 采用 Texinfo 语法。"

msgid "home-page"
msgstr "home-page"

msgid "Use HTTPS if available."
msgstr "主页链接优先使用 HTTPS 协议。"

msgid "license"
msgstr "license"

msgid "See @code{guix/licenses.scm} in the project source for a full list of available licenses."
msgstr "完整许可列表详见项目源码中的 @code{guix/licenses.scm} 文件。"

msgid "Time to build our first package! Nothing fancy here for now: we will stick to a dummy @code{my-hello}, a copy of the above declaration."
msgstr "现在开始构建首个软件包！此处采用简易方案：创建示例性 @code{my-hello}——即复制前文声明内容。"

msgid "As with the ritualistic ``Hello World'' taught with most programming languages, this will possibly be the most ``manual'' approach.  We will work out an ideal setup later; for now we will go the simplest route."
msgstr "如同多数编程语言中的仪式性 “Hello World” 示例，此方法可能是最“手动”的实现方式。后续我们将探讨理想方案，此刻先采用最简路线。"

msgid "Save the following to a file @file{my-hello.scm}."
msgstr "将以下内容保存至 @file{my-hello.scm} 文件。"

msgid ""
"(use-modules (guix packages)\n"
"             (guix download)\n"
"             (guix build-system gnu)\n"
"             (guix licenses))\n"
"\n"
msgstr ""
"(use-modules (guix packages)\n"
"             (guix download)\n"
"             (guix build-system gnu)\n"
"             (guix licenses))\n"
"\n"

msgid ""
"(package\n"
"  (name \"my-hello\")\n"
"  (version \"2.10\")\n"
"  (source (origin\n"
"            (method url-fetch)\n"
"            (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                \".tar.gz\"))\n"
"            (sha256\n"
"             (base32\n"
"              \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"  (build-system gnu-build-system)\n"
"  (synopsis \"Hello, Guix world: An example custom Guix package\")\n"
"  (description\n"
"   \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"  (home-page \"https://www.gnu.org/software/hello/\")\n"
"  (license gpl3+))\n"
msgstr ""
"(package\n"
"  (name \"my-hello\")\n"
"  (version \"2.10\")\n"
"  (source (origin\n"
"            (method url-fetch)\n"
"            (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                \".tar.gz\"))\n"
"            (sha256\n"
"             (base32\n"
"              \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"  (build-system gnu-build-system)\n"
"  (synopsis \"Hello, Guix world: An example custom Guix package\")\n"
"  (description\n"
"   \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"  (home-page \"https://www.gnu.org/software/hello/\")\n"
"  (license gpl3+))\n"

msgid "We will explain the extra code in a moment."
msgstr "后续将解释额外代码的作用。"

msgid "Feel free to play with the different values of the various fields.  If you change the source, you'll need to update the checksum.  Indeed, Guix refuses to build anything if the given checksum does not match the computed checksum of the source code.  To obtain the correct checksum of the package declaration, we need to download the source, compute the sha256 checksum and convert it to base32."
msgstr "请随意调整各字段参数。若修改源码，必须更新校验和——当给定校验和与源码实际校验和不符时，Guix 将拒绝构建。获取正确的软件包声明校验和需执行以下步骤：首先下载源码文件，然后计算其 sha256 校验和，最后转换为 base32 格式。"

msgid "Thankfully, Guix can automate this task for us; all we need is to provide the URI:"
msgstr "所幸 Guix 可自动完成该流程；我们只需提供源码 URI："

msgid ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz\n"
"\n"
msgstr ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz\n"
"\n"

msgid ""
"Starting download of /tmp/guix-file.JLYgL7\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz...\n"
"following redirection to `https://mirror.ibcp.fr/pub/gnu/hello/hello-2.10.tar.gz'...\n"
" …10.tar.gz  709KiB                                 2.5MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\n"
msgstr ""
"Starting download of /tmp/guix-file.JLYgL7\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz...\n"
"following redirection to `https://mirror.ibcp.fr/pub/gnu/hello/hello-2.10.tar.gz'...\n"
" …10.tar.gz  709KiB                                 2.5MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\n"

msgid "In this specific case the output tells us which mirror was chosen.  If the result of the above command is not the same as in the above snippet, update your @code{my-hello} declaration accordingly."
msgstr "此特定情况下，输出信息将显示实际选择的镜像源。若上述命令结果与代码片段所示不一致，请相应更新您的 @code{my-hello} 声明。"

msgid ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz.sig\n"
"\n"
msgstr ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz.sig\n"
"\n"

msgid ""
"Starting download of /tmp/guix-file.03tFfb\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz.sig...\n"
"following redirection to `https://ftp.igh.cnrs.fr/pub/gnu/hello/hello-2.10.tar.gz.sig'...\n"
" ….tar.gz.sig  819B                                                                                                                       1.2MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig\n"
"0q0v86n3y38z17rl146gdakw9xc4mcscpk8dscs412j22glrv9jf\n"
"$ gpg --verify /gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig /gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"gpg: Signature made Sun 16 Nov 2014 01:08:37 PM CET\n"
"gpg:                using RSA key A9553245FDE9B739\n"
"gpg: Good signature from \"Sami Kerola <kerolasa@@iki.fi>\" [unknown]\n"
"gpg:                 aka \"Sami Kerola (http://www.iki.fi/kerolasa/) <kerolasa@@iki.fi>\" [unknown]\n"
"gpg: WARNING: This key is not certified with a trusted signature!\n"
"gpg:          There is no indication that the signature belongs to the owner.\n"
"Primary key fingerprint: 8ED3 96E3 7E38 D471 A005  30D3 A955 3245 FDE9 B739\n"
msgstr ""
"Starting download of /tmp/guix-file.03tFfb\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz.sig...\n"
"following redirection to `https://ftp.igh.cnrs.fr/pub/gnu/hello/hello-2.10.tar.gz.sig'...\n"
" ….tar.gz.sig  819B                                                                                                                       1.2MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig\n"
"0q0v86n3y38z17rl146gdakw9xc4mcscpk8dscs412j22glrv9jf\n"
"$ gpg --verify /gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig /gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"gpg: Signature made Sun 16 Nov 2014 01:08:37 PM CET\n"
"gpg:                using RSA key A9553245FDE9B739\n"
"gpg: Good signature from \"Sami Kerola <kerolasa@@iki.fi>\" [unknown]\n"
"gpg:                 aka \"Sami Kerola (http://www.iki.fi/kerolasa/) <kerolasa@@iki.fi>\" [unknown]\n"
"gpg: WARNING: This key is not certified with a trusted signature!\n"
"gpg:          There is no indication that the signature belongs to the owner.\n"
"Primary key fingerprint: 8ED3 96E3 7E38 D471 A005  30D3 A955 3245 FDE9 B739\n"

msgid "You can then happily run"
msgstr "然后你可以精神抖擞地运行"

msgid "$ guix package --install-from-file=my-hello.scm\n"
msgstr "$ guix package --install-from-file=my-hello.scm\n"

msgid "You should now have @code{my-hello} in your profile!"
msgstr "至此 @code{my-hello} 应已成功加入您的软件集！"

msgid ""
"$ guix package --list-installed=my-hello\n"
"my-hello\t2.10\tout\n"
"/gnu/store/f1db2mfm8syb8qvc357c53slbvf1g9m9-my-hello-2.10\n"
msgstr ""
"$ guix package --list-installed=my-hello\n"
"my-hello\t2.10\tout\n"
"/gnu/store/f1db2mfm8syb8qvc357c53slbvf1g9m9-my-hello-2.10\n"

msgid "We've gone as far as we could without any knowledge of Scheme.  Before moving on to more complex packages, now is the right time to brush up on your Scheme knowledge.  @xref{A Scheme Crash Course} to get up to speed."
msgstr "在无需 Scheme 知识的前提下，我们已完成最大可能探索。在深入更复杂软件包前，建议您重温 Scheme 知识以加速理解（@xref{A Scheme Crash Course}）。"

msgid "In the rest of this chapter we will rely on some basic Scheme programming knowledge.  Now let's detail the different possible setups for working on Guix packages."
msgstr "本章后续内容将基于基础 Scheme 编程知识展开。现详述 Guix 软件包开发的多种配置方案。"

msgid ""
"  -f, --install-from-file=FILE\n"
"                         install the package that the code within FILE\n"
"                         evaluates to\n"
msgstr ""
"  -f, --install-from-file=FILE\n"
"                         安装 FILE 中代码计算得到的软件包\n"

msgid "mkdir ~/my-channel\n"
msgstr "mkdir ~/my-channel\n"

msgid ""
"guix show -L ~/my-channel my-hello\n"
"guix build -L ~/my-channel my-hello\n"
msgstr ""
"guix show -L ~/my-channel my-hello\n"
"guix build -L ~/my-channel my-hello\n"

msgid ""
"cd ~/my-channel\n"
"git init\n"
"git add my-hello.scm\n"
"git commit -m \"First commit of my channel.\"\n"
msgstr ""
"cd ~/my-channel\n"
"git init\n"
"git add my-hello.scm\n"
"git commit -m \"First commit of my channel.\"\n"

msgid "$ git clone https://git.guix.gnu.org/guix.git\n"
msgstr "$ git clone https://git.guix.gnu.org/guix.git\n"

msgid ""
"  $ cd $GUIX_CHECKOUT\n"
"  $ ./pre-inst-env guix package --list-available=ruby\n"
"      ruby    1.8.7-p374      out     gnu/packages/ruby.scm:119:2\n"
"      ruby    2.1.6   out     gnu/packages/ruby.scm:91:2\n"
"      ruby    2.2.2   out     gnu/packages/ruby.scm:39:2\n"
msgstr ""
"  $ cd $GUIX_CHECKOUT\n"
"  $ ./pre-inst-env guix package --list-available=ruby\n"
"      ruby    1.8.7-p374      out     gnu/packages/ruby.scm:119:2\n"
"      ruby    2.1.6   out     gnu/packages/ruby.scm:91:2\n"
"      ruby    2.2.2   out     gnu/packages/ruby.scm:39:2\n"

msgid ""
"  $ ./pre-inst-env guix build --keep-failed ruby@@2.1\n"
"  /gnu/store/c13v73jxmj2nir2xjqaz5259zywsa9zi-ruby-2.1.6\n"
msgstr ""
"  $ ./pre-inst-env guix build --keep-failed ruby@@2.1\n"
"  /gnu/store/c13v73jxmj2nir2xjqaz5259zywsa9zi-ruby-2.1.6\n"

msgid "  $ ./pre-inst-env guix package --install ruby@@2.1\n"
msgstr "  $ ./pre-inst-env guix package --install ruby@@2.1\n"

msgid "  $ ./pre-inst-env guix lint ruby@@2.1\n"
msgstr "  $ ./pre-inst-env guix lint ruby@@2.1\n"

msgid ""
"git clone https://github.com/libgit2/libgit2/\n"
"cd libgit2\n"
"git checkout v0.26.6\n"
"guix hash -rx .\n"
msgstr ""
"git clone https://github.com/libgit2/libgit2/\n"
"cd libgit2\n"
"git checkout v0.26.6\n"
"guix hash -rx .\n"

msgid "inputs"
msgstr "inputs"

msgid "Note"
msgstr "注"

msgid "$ make CC=gcc prefix=/gnu/store/...-<out>\n"
msgstr "$ make CC=gcc prefix=/gnu/store/...-<out>\n"

msgid ""
"$ guix import cran --recursive walrus\n"
"\n"
msgstr ""
"$ guix import cran --recursive walrus\n"
"\n"

msgid ""
"(define-public r-mc2d\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"
msgstr ""
"(define-public r-mc2d\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"

msgid ""
"(define-public r-jmvcore\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"
msgstr ""
"(define-public r-jmvcore\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"

msgid ""
"(define-public r-wrs2\n"
"    ; ...\n"
"    (license gpl3)))\n"
"\n"
msgstr ""
"(define-public r-wrs2\n"
"    ; ...\n"
"    (license gpl3)))\n"
"\n"

msgid ""
"(define-public r-walrus\n"
"  (package\n"
"    (name \"r-walrus\")\n"
"    (version \"1.0.3\")\n"
"    (source\n"
"      (origin\n"
"        (method url-fetch)\n"
"        (uri (cran-uri \"walrus\" version))\n"
"        (sha256\n"
"          (base32\n"
"            \"1nk2glcvy4hyksl5ipq2mz8jy4fss90hx6cq98m3w96kzjni6jjj\"))))\n"
"    (build-system r-build-system)\n"
"    (propagated-inputs\n"
"      (list r-ggplot2 r-jmvcore r-r6 r-wrs2))\n"
"    (home-page \"https://github.com/jamovi/walrus\")\n"
"    (synopsis \"Robust Statistical Methods\")\n"
"    (description\n"
"      \"This package provides a toolbox of common robust statistical\n"
"tests, including robust descriptives, robust t-tests, and robust ANOVA.\n"
"It is also available as a module for 'jamovi' (see\n"
"<https://www.jamovi.org> for more information).  Walrus is based on the\n"
"WRS2 package by Patrick Mair, which is in turn based on the scripts and\n"
"work of Rand Wilcox.  These analyses are described in depth in the book\n"
"'Introduction to Robust Estimation & Hypothesis Testing'.\")\n"
"    (license gpl3)))\n"
msgstr ""
"(define-public r-walrus\n"
"  (package\n"
"    (name \"r-walrus\")\n"
"    (version \"1.0.3\")\n"
"    (source\n"
"      (origin\n"
"        (method url-fetch)\n"
"        (uri (cran-uri \"walrus\" version))\n"
"        (sha256\n"
"          (base32\n"
"            \"1nk2glcvy4hyksl5ipq2mz8jy4fss90hx6cq98m3w96kzjni6jjj\"))))\n"
"    (build-system r-build-system)\n"
"    (propagated-inputs\n"
"      (list r-ggplot2 r-jmvcore r-r6 r-wrs2))\n"
"    (home-page \"https://github.com/jamovi/walrus\")\n"
"    (synopsis \"Robust Statistical Methods\")\n"
"    (description\n"
"      \"This package provides a toolbox of common robust statistical\n"
"tests, including robust descriptives, robust t-tests, and robust ANOVA.\n"
"It is also available as a module for 'jamovi' (see\n"
"<https://www.jamovi.org> for more information).  Walrus is based on the\n"
"WRS2 package by Patrick Mair, which is in turn based on the scripts and\n"
"work of Rand Wilcox.  These analyses are described in depth in the book\n"
"'Introduction to Robust Estimation & Hypothesis Testing'.\")\n"
"    (license gpl3)))\n"

msgid "$ guix refresh hello\n"
msgstr "$ guix refresh hello\n"

msgid "$ guix refresh hello --update\n"
msgstr "$ guix refresh hello --update\n"

msgid "tar xf $(guix build linux-libre --source)\n"
msgstr "tar xf $(guix build linux-libre --source)\n"

msgid "guix shell -D linux-libre -- make localmodconfig\n"
msgstr "guix shell -D linux-libre -- make localmodconfig\n"

msgid "module pcspkr did not have configs CONFIG_INPUT_PCSPKR\n"
msgstr "module pcspkr did not have configs CONFIG_INPUT_PCSPKR\n"

msgid ""
"CONFIG_INPUT_PCSPKR=m\n"
"CONFIG_VIRTIO=m\n"
msgstr ""
"CONFIG_INPUT_PCSPKR=m\n"
"CONFIG_VIRTIO=m\n"

msgid "guix system image my-os.scm\n"
msgstr "guix system image my-os.scm\n"

msgid "guix system image --image-type=pine64-raw my-os.scm\n"
msgstr "guix system image --image-type=pine64-raw my-os.scm\n"

msgid ""
"mathieu@@cervin:~$ guix system --list-image-types\n"
"The available image types are:\n"
"\n"
msgstr ""
"mathieu@@cervin:~$ guix system --list-image-types\n"
"可用的镜像类型有：\n"
"\n"

msgid ""
"   - unmatched-raw\n"
"   - rock64-raw\n"
"   - pinebook-pro-raw\n"
"   - pine64-raw\n"
"   - novena-raw\n"
"   - hurd-raw\n"
"   - hurd-qcow2\n"
"   - qcow2\n"
"   - iso9660\n"
"   - uncompressed-iso9660\n"
"   - tarball\n"
"   - efi-raw\n"
"   - mbr-raw\n"
"   - docker\n"
"   - wsl2\n"
"   - raw-with-offset\n"
"   - efi32-raw\n"
msgstr ""
"   - unmatched-raw\n"
"   - rock64-raw\n"
"   - pinebook-pro-raw\n"
"   - pine64-raw\n"
"   - novena-raw\n"
"   - hurd-raw\n"
"   - hurd-qcow2\n"
"   - qcow2\n"
"   - iso9660\n"
"   - uncompressed-iso9660\n"
"   - tarball\n"
"   - efi-raw\n"
"   - mbr-raw\n"
"   - docker\n"
"   - wsl2\n"
"   - raw-with-offset\n"
"   - efi32-raw\n"

msgid "guix system image --image-type=pine64-raw my-pine-os.scm\n"
msgstr "guix system image --image-type=pine64-raw my-pine-os.scm\n"

msgid "guix system image --image-type=hurd-raw my-hurd-os.scm\n"
msgstr "guix system image --image-type=hurd-raw my-hurd-os.scm\n"

msgid "guix system image --image-type=hurd-qcow2 my-hurd-os.scm\n"
msgstr "guix system image --image-type=hurd-qcow2 my-hurd-os.scm\n"

msgid "guix shell ungoogled-chromium -- chromium chrome://settings/securityKeys\n"
msgstr "guix shell ungoogled-chromium -- chromium chrome://settings/securityKeys\n"

msgid "guix shell python-yubikey-manager -- ykman config usb --force --disable OTP\n"
msgstr "guix shell python-yubikey-manager -- ykman config usb --force --disable OTP\n"

msgid "guix shell yubikey-manager-qt -- ykman-gui\n"
msgstr "guix shell yubikey-manager-qt -- ykman-gui\n"

msgid ""
"# nmcli connection import type wireguard file wg0.conf\n"
"Connection 'wg0' (edbee261-aa5a-42db-b032-6c7757c60fde) successfully added\n"
msgstr ""
"# nmcli connection import type wireguard file wg0.conf\n"
"Connection 'wg0' (edbee261-aa5a-42db-b032-6c7757c60fde) successfully added\n"

msgid ""
"$ nmcli connection up wg0\n"
"Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/6)\n"
msgstr ""
"$ nmcli connection up wg0\n"
"Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/6)\n"

msgid "# nmcli connection modify wg0 connection.autoconnect no\n"
msgstr "# nmcli connection modify wg0 connection.autoconnect no\n"

msgid ""
"xss-lock -- slock &\n"
"exec stumpwm\n"
msgstr ""
"xss-lock -- slock &\n"
"exec stumpwm\n"

msgid "ssh-keygen\n"
msgstr "ssh-keygen\n"

msgid "cat ~/.ssh/<username>_rsa.pub\n"
msgstr "cat ~/.ssh/<username>_rsa.pub\n"

msgid ""
"sudo apt-get install gpg\n"
"wget https://sv.gnu.org/people/viewgpg.php?user_id=15145 -qO - | gpg --import -\n"
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"
msgstr ""
"sudo apt-get install gpg\n"
"wget https://sv.gnu.org/people/viewgpg.php?user_id=15145 -qO - | gpg --import -\n"
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"

msgid ""
"sftp root@@<remote server ip address>\n"
"put /path/to/files/<username>_rsa.pub .\n"
"put /path/to/files/guix-config.scm .\n"
msgstr ""
"sftp root@@<remote server ip address>\n"
"put /path/to/files/<username>_rsa.pub .\n"
"put /path/to/files/guix-config.scm .\n"

msgid ""
"mkdir /mnt/guix\n"
"mount /dev/sdc /mnt/guix\n"
msgstr ""
"mkdir /mnt/guix\n"
"mount /dev/sdc /mnt/guix\n"

msgid ""
"mkdir -p /mnt/guix/boot/grub\n"
"cp -r /boot/grub/* /mnt/guix/boot/grub/\n"
msgstr ""
"mkdir -p /mnt/guix/boot/grub\n"
"cp -r /boot/grub/* /mnt/guix/boot/grub/\n"

msgid "guix system init guix-config.scm /mnt/guix\n"
msgstr "guix system init guix-config.scm /mnt/guix\n"

msgid ""
"$ ssh root@@<server ip address>\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
"Someone could be eavesdropping on you right now (man-in-the-middle attack)!\n"
"It is also possible that a host key has just been changed.\n"
"The fingerprint for the ECDSA key sent by the remote host is\n"
"SHA256:0B+wp33w57AnKQuHCvQP0+ZdKaqYrI/kyU7CfVbS7R4.\n"
"Please contact your system administrator.\n"
"Add correct host key in /home/joshua/.ssh/known_hosts to get rid of this message.\n"
"Offending ECDSA key in /home/joshua/.ssh/known_hosts:3\n"
"ECDSA host key for 198.58.98.76 has changed and you have requested strict checking.\n"
"Host key verification failed.\n"
msgstr ""
"$ ssh root@@<server ip address>\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
"Someone could be eavesdropping on you right now (man-in-the-middle attack)!\n"
"It is also possible that a host key has just been changed.\n"
"The fingerprint for the ECDSA key sent by the remote host is\n"
"SHA256:0B+wp33w57AnKQuHCvQP0+ZdKaqYrI/kyU7CfVbS7R4.\n"
"Please contact your system administrator.\n"
"Add correct host key in /home/joshua/.ssh/known_hosts to get rid of this message.\n"
"Offending ECDSA key in /home/joshua/.ssh/known_hosts:3\n"
"ECDSA host key for 198.58.98.76 has changed and you have requested strict checking.\n"
"Host key verification failed.\n"

msgid ""
"ssh root@@<remote ip address>\n"
"passwd  ; for the root password\n"
"passwd <username> ; for the user password\n"
msgstr ""
"ssh root@@<remote ip address>\n"
"passwd  ; for the root password\n"
"passwd <username> ; for the user password\n"

msgid ""
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"
msgstr ""
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"

msgid ""
"mdadm --stop /dev/md127\n"
"mdadm --zero-superblock /dev/sda2 /dev/sdb2\n"
msgstr ""
"mdadm --stop /dev/md127\n"
"mdadm --zero-superblock /dev/sda2 /dev/sdb2\n"

msgid ""
"wipefs -a /dev/sda\n"
"wipefs -a /dev/sdb\n"
"\n"
msgstr ""
"wipefs -a /dev/sda\n"
"wipefs -a /dev/sdb\n"
"\n"

msgid ""
"parted /dev/sda --align=opt -s -m -- mklabel gpt\n"
"parted /dev/sda --align=opt -s -m -- \\\n"
" mkpart bios_grub 1049kb 512MiB \\\n"
" set 1 bios_grub on\n"
"parted /dev/sda --align=opt -s -m -- \\\n"
" mkpart primary 512MiB -512MiB\n"
" set 2 raid on\n"
"parted /dev/sda --align=opt -s -m -- mkpart primary linux-swap 512MiB 100%\n"
"\n"
msgstr ""
"parted /dev/sda --align=opt -s -m -- mklabel gpt\n"
"parted /dev/sda --align=opt -s -m -- \\\n"
" mkpart bios_grub 1049kb 512MiB \\\n"
" set 1 bios_grub on\n"
"parted /dev/sda --align=opt -s -m -- \\\n"
" mkpart primary 512MiB -512MiB\n"
" set 2 raid on\n"
"parted /dev/sda --align=opt -s -m -- mkpart primary linux-swap 512MiB 100%\n"
"\n"

msgid ""
"parted /dev/sdb --align=opt -s -m -- mklabel gpt\n"
"parted /dev/sdb --align=opt -s -m -- \\\n"
"     mkpart bios_grub 1049kb 512MiB \\\n"
"     set 1 bios_grub on\n"
"parted /dev/sdb --align=opt -s -m -- \\\n"
"     mkpart primary 512MiB -512MiB \\\n"
"     set 2 raid on\n"
"parted /dev/sdb --align=opt -s -m -- mkpart primary linux-swap 512MiB 100%\n"
msgstr ""
"parted /dev/sdb --align=opt -s -m -- mklabel gpt\n"
"parted /dev/sdb --align=opt -s -m -- \\\n"
"     mkpart bios_grub 1049kb 512MiB \\\n"
"     set 1 bios_grub on\n"
"parted /dev/sdb --align=opt -s -m -- \\\n"
"     mkpart primary 512MiB -512MiB \\\n"
"     set 2 raid on\n"
"parted /dev/sdb --align=opt -s -m -- mkpart primary linux-swap 512MiB 100%\n"

msgid ""
"mdadm --create /dev/md127 --level=1 --raid-disks=2 \\\n"
"  --metadata=0.90 /dev/sda2 /dev/sdb2\n"
msgstr ""
"mdadm --create /dev/md127 --level=1 --raid-disks=2 \\\n"
"  --metadata=0.90 /dev/sda2 /dev/sdb2\n"

msgid ""
"mkfs.ext4  /dev/sda1\n"
"mkfs.ext4  /dev/sdb1\n"
msgstr ""
"mkfs.ext4  /dev/sda1\n"
"mkfs.ext4  /dev/sdb1\n"

msgid "mkfs.ext4 /dev/md127\n"
msgstr "mkfs.ext4 /dev/md127\n"

msgid ""
"mkswap /dev/sda3\n"
"swapon /dev/sda3\n"
"mkswap /dev/sdb3\n"
"swapon /dev/sdb3\n"
msgstr ""
"mkswap /dev/sda3\n"
"swapon /dev/sda3\n"
"mkswap /dev/sdb3\n"
"swapon /dev/sdb3\n"

msgid ""
"mkdir /mnt/guix\n"
"mount /dev/md127 /mnt/guix\n"
msgstr ""
"mkdir /mnt/guix\n"
"mount /dev/md127 /mnt/guix\n"

msgid "guix install bash-static parted util-linux-with-udev coreutils guix\n"
msgstr "guix install bash-static parted util-linux-with-udev coreutils guix\n"

msgid ""
"cd /mnt && \\\n"
"mkdir -p bin etc gnu/store root/.guix-profile/ root/.config/guix/current \\\n"
"  var/guix proc sys dev\n"
msgstr ""
"cd /mnt && \\\n"
"mkdir -p bin etc gnu/store root/.guix-profile/ root/.config/guix/current \\\n"
"  var/guix proc sys dev\n"

msgid "cp /etc/resolv.conf etc/\n"
msgstr "cp /etc/resolv.conf etc/\n"

msgid ""
"mount --rbind /proc /mnt/proc\n"
"mount --rbind /sys /mnt/sys\n"
"mount --rbind /dev /mnt/dev\n"
"mount --rbind /var/guix/ var/guix/\n"
"mount --rbind /gnu/store gnu/store/\n"
"mount --rbind /root/.config/ root/.config/\n"
"mount --rbind /root/.guix-profile/bin/ bin\n"
"mount --rbind /root/.guix-profile root/.guix-profile/\n"
msgstr ""
"mount --rbind /proc /mnt/proc\n"
"mount --rbind /sys /mnt/sys\n"
"mount --rbind /dev /mnt/dev\n"
"mount --rbind /var/guix/ var/guix/\n"
"mount --rbind /gnu/store gnu/store/\n"
"mount --rbind /root/.config/ root/.config/\n"
"mount --rbind /root/.guix-profile/bin/ bin\n"
"mount --rbind /root/.guix-profile root/.guix-profile/\n"

msgid ""
"chroot /mnt/ /bin/bash\n"
"\n"
msgstr ""
"chroot /mnt/ /bin/bash\n"
"\n"

msgid "guix system init /root/os.scm /guix\n"
msgstr "guix system init /root/os.scm /guix\n"

msgid "Warning"
msgstr "警告"

msgid ""
"sudo herd set-http-proxy guix-daemon http://localhost:9250\n"
"guix build \\\n"
"  --substitute-urls=@value{SUBSTITUTE-TOR-URL} @dots{}\n"
msgstr ""
"sudo herd set-http-proxy guix-daemon http://localhost:9250\n"
"guix build \\\n"
"  --substitute-urls=@value{SUBSTITUTE-TOR-URL} @dots{}\n"

msgid ""
"local shell = require \"resty.shell\"\n"
"\n"
msgstr ""
"local shell = require \"resty.shell\"\n"
"\n"

msgid ""
"local stdin = \"\"\n"
"local timeout = 1000  -- ms\n"
"local max_size = 4096  -- byte\n"
"\n"
msgstr ""
"local stdin = \"\"\n"
"local timeout = 1000  -- ms\n"
"local max_size = 4096  -- byte\n"
"\n"

msgid ""
"local ok, stdout, stderr, reason, status =\n"
"   shell.run([[/run/current-system/profile/bin/ls /tmp]], stdin, timeout, max_size)\n"
"\n"
msgstr ""
"local ok, stdout, stderr, reason, status =\n"
"   shell.run([[/run/current-system/profile/bin/ls /tmp]], stdin, timeout, max_size)\n"
"\n"

msgid "ngx.say(stdout)\n"
msgstr "ngx.say(stdout)\n"

msgid ""
"$ bluetoothctl \n"
"[NEW] Controller 00:11:22:33:95:7F BlueZ 5.40 [default]\n"
"\n"
msgstr ""
"$ bluetoothctl \n"
"[NEW] Controller 00:11:22:33:95:7F BlueZ 5.40 [default]\n"
"\n"

msgid ""
"[bluetooth]# power on\n"
"[bluetooth]# Changing power on succeeded\n"
"\n"
msgstr ""
"[bluetooth]# power on\n"
"[bluetooth]# Changing power on succeeded\n"
"\n"

msgid ""
"[bluetooth]# agent on\n"
"[bluetooth]# Agent registered\n"
"\n"
msgstr ""
"[bluetooth]# agent on\n"
"[bluetooth]# Agent registered\n"
"\n"

msgid ""
"[bluetooth]# default-agent\n"
"[bluetooth]# Default agent request successful\n"
"\n"
msgstr ""
"[bluetooth]# default-agent\n"
"[bluetooth]# Default agent request successful\n"
"\n"

msgid ""
"[bluetooth]# scan on\n"
"[bluetooth]# Discovery started\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: yes\n"
"[NEW] Device AA:BB:CC:A4:AA:CD My Bluetooth Speaker\n"
"[NEW] Device 44:44:FF:2A:20:DC My Neighbor's TV\n"
"@dots{}\n"
"\n"
msgstr ""
"[bluetooth]# scan on\n"
"[bluetooth]# Discovery started\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: yes\n"
"[NEW] Device AA:BB:CC:A4:AA:CD My Bluetooth Speaker\n"
"[NEW] Device 44:44:FF:2A:20:DC My Neighbor's TV\n"
"@dots{}\n"
"\n"

msgid ""
"[bluetooth]# pair AA:BB:CC:A4:AA:CD\n"
"Attempting to pair with AA:BB:CC:A4:AA:CD\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"\n"
msgstr ""
"[bluetooth]# pair AA:BB:CC:A4:AA:CD\n"
"Attempting to pair with AA:BB:CC:A4:AA:CD\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"\n"

msgid ""
"[My Bluetooth Speaker]# [CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110b-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110c-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110e-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Paired: yes\n"
"Pairing successful\n"
"\n"
msgstr ""
"[My Bluetooth Speaker]# [CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110b-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110c-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110e-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Paired: yes\n"
"Pairing successful\n"
"\n"

msgid ""
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: no\n"
"\n"
msgstr ""
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: no\n"
"\n"

msgid ""
"[bluetooth]# \n"
"[bluetooth]# trust AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD Trusted: yes\n"
"Changing AA:BB:CC:A4:AA:CD trust succeeded\n"
"\n"
msgstr ""
"[bluetooth]# \n"
"[bluetooth]# trust AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD Trusted: yes\n"
"Changing AA:BB:CC:A4:AA:CD trust succeeded\n"
"\n"

msgid ""
"[bluetooth]# \n"
"[bluetooth]# connect AA:BB:CC:A4:AA:CD\n"
"Attempting to connect to AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD RSSI: -63\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"Connection successful\n"
"\n"
msgstr ""
"[bluetooth]# \n"
"[bluetooth]# connect AA:BB:CC:A4:AA:CD\n"
"Attempting to connect to AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD RSSI: -63\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"Connection successful\n"
"\n"

msgid ""
"[My Bluetooth Speaker]# scan off\n"
"[CHG] Device AA:BB:CC:A4:AA:CD RSSI is nil\n"
"Discovery stopped\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: no\n"
msgstr ""
"[My Bluetooth Speaker]# scan off\n"
"[CHG] Device AA:BB:CC:A4:AA:CD RSSI is nil\n"
"Discovery stopped\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: no\n"

msgid "guix shell --container\n"
msgstr "guix shell --container\n"

msgid ""
"$ echo /gnu/store/*\n"
"/gnu/store/@dots{}-gcc-10.3.0-lib\n"
"/gnu/store/@dots{}-glibc-2.33\n"
"/gnu/store/@dots{}-bash-static-5.1.8\n"
"/gnu/store/@dots{}-ncurses-6.2.20210619\n"
"/gnu/store/@dots{}-bash-5.1.8\n"
"/gnu/store/@dots{}-profile\n"
"/gnu/store/@dots{}-readline-8.1.1\n"
msgstr ""
"$ echo /gnu/store/*\n"
"/gnu/store/@dots{}-gcc-10.3.0-lib\n"
"/gnu/store/@dots{}-glibc-2.33\n"
"/gnu/store/@dots{}-bash-static-5.1.8\n"
"/gnu/store/@dots{}-ncurses-6.2.20210619\n"
"/gnu/store/@dots{}-bash-5.1.8\n"
"/gnu/store/@dots{}-profile\n"
"/gnu/store/@dots{}-readline-8.1.1\n"

msgid ""
"$ guix shell --container --share=/etc=/the/host/etc coreutils\n"
"$ ls /the/host/etc\n"
msgstr ""
"$ guix shell --container --share=/etc=/the/host/etc coreutils\n"
"$ ls /the/host/etc\n"

msgid ""
"$ guix shell --container --network --manifest=manifest.scm -- R\n"
"\n"
msgstr ""
"$ guix shell --container --network --manifest=manifest.scm -- R\n"
"\n"

msgid ""
"R version 4.2.1 (2022-06-23) -- \"Funny-Looking Kid\"\n"
"Copyright (C) 2022 The R Foundation for Statistical Computing\n"
"@dots{}\n"
"> e <- Sys.getenv(\"GUIX_ENVIRONMENT\")\n"
"> Sys.setenv(GIT_SSL_CAINFO=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_FILE=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_DIR=paste0(e, \"/etc/ssl/certs\"))\n"
"> install.packages(\"Cairo\", lib=paste0(getwd()))\n"
"@dots{}\n"
"* installing *source* package 'Cairo' ...\n"
"@dots{}\n"
"* DONE (Cairo)\n"
"\n"
msgstr ""
"R version 4.2.1 (2022-06-23) -- \"Funny-Looking Kid\"\n"
"Copyright (C) 2022 The R Foundation for Statistical Computing\n"
"@dots{}\n"
"> e <- Sys.getenv(\"GUIX_ENVIRONMENT\")\n"
"> Sys.setenv(GIT_SSL_CAINFO=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_FILE=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_DIR=paste0(e, \"/etc/ssl/certs\"))\n"
"> install.packages(\"Cairo\", lib=paste0(getwd()))\n"
"@dots{}\n"
"* installing *source* package 'Cairo' ...\n"
"@dots{}\n"
"* DONE (Cairo)\n"
"\n"

msgid ""
"$ guix system container os.scm\n"
"The following derivations will be built:\n"
"  /gnu/store/@dots{}-run-container.drv\n"
"  @dots{}\n"
"building /gnu/store/@dots{}-run-container.drv...\n"
"/gnu/store/@dots{}-run-container\n"
msgstr ""
"$ guix system container os.scm\n"
"将构建以下派生：\n"
"  /gnu/store/@dots{}-run-container.drv\n"
"  @dots{}\n"
"正在构建 /gnu/store/@dots{}-run-container.drv...\n"
"/gnu/store/@dots{}-run-container\n"

msgid ""
"$ sudo /gnu/store/@dots{}-run-container\n"
"system container is running as PID 5983\n"
"@dots{}\n"
msgstr ""
"$ sudo /gnu/store/@dots{}-run-container\n"
"系统容器正在以 PID 5983 运行\n"
"@dots{}\n"

msgid ""
"$ guix shell util-linux\n"
"$ sudo nsenter -a -t 5983\n"
"root@@container /# pgrep -a postgres\n"
"49 /gnu/store/@dots{}-postgresql-14.4/bin/postgres -D /var/lib/postgresql/data --config-file=/gnu/store/@dots{}-postgresql.conf -p 5432\n"
"51 postgres: checkpointer\n"
"52 postgres: background writer\n"
"53 postgres: walwriter\n"
"54 postgres: autovacuum launcher\n"
"55 postgres: stats collector\n"
"56 postgres: logical replication launcher\n"
"root@@container /# exit\n"
msgstr ""
"$ guix shell util-linux\n"
"$ sudo nsenter -a -t 5983\n"
"root@@container /# pgrep -a postgres\n"
"49 /gnu/store/@dots{}-postgresql-14.4/bin/postgres -D /var/lib/postgresql/data --config-file=/gnu/store/@dots{}-postgresql.conf -p 5432\n"
"51 postgres: checkpointer\n"
"52 postgres: background writer\n"
"53 postgres: walwriter\n"
"54 postgres: autovacuum launcher\n"
"55 postgres: stats collector\n"
"56 postgres: logical replication launcher\n"
"root@@container /# exit\n"

msgid ""
"pid=5983\n"
"ns=\"guix-test\"\n"
"host=\"veth-test\"\n"
"client=\"ceth-test\"\n"
"\n"
msgstr ""
"pid=5983\n"
"ns=\"guix-test\"\n"
"host=\"veth-test\"\n"
"client=\"ceth-test\"\n"
"\n"

msgid ""
"sudo ip link set $host up\n"
"sudo ip addr add 10.0.0.1/24 dev $host\n"
msgstr ""
"sudo ip link set $host up\n"
"sudo ip addr add 10.0.0.1/24 dev $host\n"

msgid ""
"sudo ip netns exec $ns  ip link set lo up\n"
"sudo ip netns exec $ns  ip link set $client up\n"
"sudo ip netns exec $ns  ip addr add 10.0.0.2/24 dev $client\n"
msgstr ""
"sudo ip netns exec $ns  ip link set lo up\n"
"sudo ip netns exec $ns  ip link set $client up\n"
"sudo ip netns exec $ns  ip addr add 10.0.0.2/24 dev $client\n"

msgid ""
"$ psql -h 10.0.0.2 -U test\n"
"psql (14.4)\n"
"Type \"help\" for help.\n"
"\n"
msgstr ""
"$ psql -h 10.0.0.2 -U test\n"
"psql (14.4)\n"
"Type \"help\" for help.\n"
"\n"

msgid ""
"test=> CREATE TABLE hello (who TEXT NOT NULL);\n"
"CREATE TABLE\n"
"test=> INSERT INTO hello (who) VALUES ('world');\n"
"INSERT 0 1\n"
"test=> SELECT * FROM hello;\n"
"  who\n"
"-------\n"
" world\n"
"(1 row)\n"
msgstr ""
"test=> CREATE TABLE hello (who TEXT NOT NULL);\n"
"CREATE TABLE\n"
"test=> INSERT INTO hello (who) VALUES ('world');\n"
"INSERT 0 1\n"
"test=> SELECT * FROM hello;\n"
"  who\n"
"-------\n"
" world\n"
"(1 row)\n"

msgid ""
"sudo kill $pid\n"
"sudo ip netns del $ns\n"
"sudo ip link del $host\n"
msgstr ""
"sudo kill $pid\n"
"sudo ip netns del $ns\n"
"sudo ip link del $host\n"

msgid "# nmcli con add type bridge con-name br0 ifname br0\n"
msgstr "# nmcli con add type bridge con-name br0 ifname br0\n"

msgid "# nmcli con add type bridge-slave ifname enp2s0 master br0\n"
msgstr "# nmcli con add type bridge-slave ifname enp2s0 master br0\n"

msgid ""
"(privileged-programs\n"
" (cons (privileged-program\n"
"         (program (file-append qemu \"/libexec/qemu-bridge-helper\"))\n"
"         (setuid? #t))\n"
"       %default-privileged-programs))\n"
msgstr ""
"(privileged-programs\n"
" (cons (privileged-program\n"
"         (program (file-append qemu \"/libexec/qemu-bridge-helper\"))\n"
"         (setuid? #t))\n"
"       %default-privileged-programs))\n"

msgid ""
"$ qemu-system-x86_64 [...] \\\n"
"    -device virtio-net-pci,netdev=user0,mac=XX:XX:XX:XX:XX:XX \\\n"
"    -netdev bridge,id=user0,br=br0 \\\n"
"    [...]\n"
msgstr ""
"$ qemu-system-x86_64 [...] \\\n"
"    -device virtio-net-pci,netdev=user0,mac=XX:XX:XX:XX:XX:XX \\\n"
"    -netdev bridge,id=user0,br=br0 \\\n"
"    [...]\n"

msgid ""
"mac_address=\"52:54:00:$(dd if=/dev/urandom bs=512 count=1 2>/dev/null \\\n"
"                           | md5sum \\\n"
"                           | sed -E 's/^(..)(..)(..).*$/\\1:\\2:\\3/')\"\n"
"echo $mac_address\n"
msgstr ""
"mac_address=\"52:54:00:$(dd if=/dev/urandom bs=512 count=1 2>/dev/null \\\n"
"                           | md5sum \\\n"
"                           | sed -E 's/^(..)(..)(..).*$/\\1:\\2:\\3/')\"\n"
"echo $mac_address\n"

msgid ""
"(service iptables-service-type\n"
"             (iptables-configuration\n"
"              (ipv4-rules (plain-file \"iptables.rules\" \"\\\n"
"*filter\n"
":INPUT ACCEPT [0:0]\n"
":FORWARD DROP [0:0]\n"
":OUTPUT ACCEPT [0:0]\n"
"-A FORWARD -i br0 -o br0 -j ACCEPT\n"
"COMMIT\n"
"\"))\n"
msgstr ""
"(service iptables-service-type\n"
"             (iptables-configuration\n"
"              (ipv4-rules (plain-file \"iptables.rules\" \"\\\n"
"*filter\n"
":INPUT ACCEPT [0:0]\n"
":FORWARD DROP [0:0]\n"
":OUTPUT ACCEPT [0:0]\n"
"-A FORWARD -i br0 -o br0 -j ACCEPT\n"
"COMMIT\n"
"\"))\n"

msgid ""
"<network>\n"
"  <name>virbr0</name>\n"
"  <bridge name=\"virbr0\" />\n"
"  <forward mode=\"route\"/>\n"
"  <ip address=\"192.168.2.0\" netmask=\"255.255.255.0\">\n"
"    <dhcp>\n"
"      <range start=\"192.168.2.1\" end=\"192.168.2.254\"/>\n"
"    </dhcp>\n"
"  </ip>\n"
"</network>\n"
msgstr ""
"<network>\n"
"  <name>virbr0</name>\n"
"  <bridge name=\"virbr0\" />\n"
"  <forward mode=\"route\"/>\n"
"  <ip address=\"192.168.2.0\" netmask=\"255.255.255.0\">\n"
"    <dhcp>\n"
"      <range start=\"192.168.2.1\" end=\"192.168.2.254\"/>\n"
"    </dhcp>\n"
"  </ip>\n"
"</network>\n"

msgid ""
"virsh net-define /tmp/virbr0.xml\n"
"virsh net-autostart virbr0\n"
"virsh net-start virbr0\n"
msgstr ""
"virsh net-define /tmp/virbr0.xml\n"
"virsh net-autostart virbr0\n"
"virsh net-start virbr0\n"

msgid ""
"(service static-networking-service-type\n"
"         (list (static-networking\n"
"                ;; The default provision is 'networking; if you're using any\n"
"                ;; other service with this provision, such as\n"
"                ;; `network-manager-service-type`, then you need to change the\n"
"                ;; default.\n"
"                (provision '(static-networking))\n"
"                (links\n"
"                 (list (network-link\n"
"                        (name \"virbr0\")\n"
"                        (type 'bridge)\n"
"                        (arguments '()))))\n"
"                (addresses\n"
"                 (list (network-address\n"
"                        (device \"virbr0\")\n"
"                        (value \"192.168.10.1/24\")))))))\n"
msgstr ""
"(service static-networking-service-type\n"
"         (list (static-networking\n"
"                ;; The default provision is 'networking; if you're using any\n"
"                ;; other service with this provision, such as\n"
"                ;; `network-manager-service-type`, then you need to change the\n"
"                ;; default.\n"
"                (provision '(static-networking))\n"
"                (links\n"
"                 (list (network-link\n"
"                        (name \"virbr0\")\n"
"                        (type 'bridge)\n"
"                        (arguments '()))))\n"
"                (addresses\n"
"                 (list (network-address\n"
"                        (device \"virbr0\")\n"
"                        (value \"192.168.10.1/24\")))))))\n"

msgid ""
"(service nftables-service-type\n"
"         (nftables-configuration\n"
"          (ruleset\n"
"           (plain-file \"nftables.conf\"\n"
"                       \"\\\n"
"table inet filter @{\n"
"\n"
msgstr ""
"(service nftables-service-type\n"
"         (nftables-configuration\n"
"          (ruleset\n"
"           (plain-file \"nftables.conf\"\n"
"                       \"\\\n"
"table inet filter @{\n"
"\n"

msgid ""
"  chain input @{\n"
"    type filter hook input priority filter; policy drop;\n"
"    # Add your existing packet filtering rules here...\n"
"    iifname virbr0 udp dport 67 counter accept comment \\\"allow dhcp on virbr0\\\"\n"
"    iifname virbr0 meta l4proto @{tcp, udp@} th dport 53 accept \\\\\n"
"        comment \\\"allow dns on virbr0\\\"\n"
"  @}\n"
"\n"
msgstr ""
"  chain input @{\n"
"    type filter hook input priority filter; policy drop;\n"
"    # Add your existing packet filtering rules here...\n"
"    iifname virbr0 udp dport 67 counter accept comment \\\"allow dhcp on virbr0\\\"\n"
"    iifname virbr0 meta l4proto @{tcp, udp@} th dport 53 accept \\\\\n"
"        comment \\\"allow dns on virbr0\\\"\n"
"  @}\n"
"\n"

msgid ""
"  chain forward @{\n"
"    type filter hook forward priority filter; policy drop;\n"
"    # Add your existing forwarding rules here...\n"
"    iifname virbr0 accept comment \\\"allow outbound traffic from virbr0\\\"\n"
"    oifname virbr0 ct state @{established, related @} accept \\\\\n"
"        comment \\\"allow established traffic to virbr0\\\"\n"
"  @}\n"
"\n"
msgstr ""
"  chain forward @{\n"
"    type filter hook forward priority filter; policy drop;\n"
"    # Add your existing forwarding rules here...\n"
"    iifname virbr0 accept comment \\\"allow outbound traffic from virbr0\\\"\n"
"    oifname virbr0 ct state @{established, related @} accept \\\\\n"
"        comment \\\"allow established traffic to virbr0\\\"\n"
"  @}\n"
"\n"

msgid ""
"@}\n"
"\n"
msgstr ""
"@}\n"
"\n"

msgid ""
"table inet nat @{\n"
"  chain postrouting @{\n"
"    type nat hook postrouting priority srcnat; policy accept;\n"
"    # Add your existing nat rules here...\n"
"    iifname virbr0 ip daddr @{ 224.0.0.0/24, 255.255.255.255/32 @} return \\\\\n"
"        comment \\\"don't masquerade to reserved address blocks\\\"\n"
"    iifname virbr0 oifname != virbr0 masquerade \\\\\n"
"        comment \\\"masquerade all outgoing traffic from VMs\\\"\n"
"  @}\n"
"@}\n"
"\"))))\n"
msgstr ""
"table inet nat @{\n"
"  chain postrouting @{\n"
"    type nat hook postrouting priority srcnat; policy accept;\n"
"    # Add your existing nat rules here...\n"
"    iifname virbr0 ip daddr @{ 224.0.0.0/24, 255.255.255.255/32 @} return \\\\\n"
"        comment \\\"don't masquerade to reserved address blocks\\\"\n"
"    iifname virbr0 oifname != virbr0 masquerade \\\\\n"
"        comment \\\"masquerade all outgoing traffic from VMs\\\"\n"
"  @}\n"
"@}\n"
"\"))))\n"

msgid ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"mkdir -p \"$GUIX_EXTRA_PROFILES\"/my-project # if it does not exist yet\n"
"guix package --manifest=/path/to/guix-my-project-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"
msgstr ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"mkdir -p \"$GUIX_EXTRA_PROFILES\"/my-project # if it does not exist yet\n"
"guix package --manifest=/path/to/guix-my-project-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"

msgid "guix package --list-profiles\n"
msgstr "guix package --list-profiles\n"

msgid ""
"for i in $GUIX_EXTRA_PROFILES/*; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"
msgstr ""
"for i in $GUIX_EXTRA_PROFILES/*; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"

msgid ""
"for i in \"$GUIX_EXTRA_PROFILES\"/my-project-1 \"$GUIX_EXTRA_PROFILES\"/my-project-2; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"
msgstr ""
"for i in \"$GUIX_EXTRA_PROFILES\"/my-project-1 \"$GUIX_EXTRA_PROFILES\"/my-project-2; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"

msgid "GUIX_PROFILE=\"path/to/my-project\" ; . \"$GUIX_PROFILE\"/etc/profile\n"
msgstr "GUIX_PROFILE=\"path/to/my-project\" ; . \"$GUIX_PROFILE\"/etc/profile\n"

msgid "guix package --search-paths=prefix --profile=$my_profile\"\n"
msgstr "guix package --search-paths=prefix --profile=$my_profile\"\n"

msgid ""
"guix package -m /path/to/guix-my-project-manifest.scm \\\n"
" -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"
msgstr ""
"guix package -m /path/to/guix-my-project-manifest.scm \\\n"
" -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"

msgid ""
"for profile in \"$GUIX_EXTRA_PROFILES\"/*; do\n"
"  guix package --profile=\"$profile\" \\\n"
"   --manifest=\"$HOME/.guix-manifests/guix-$profile-manifest.scm\"\n"
"done\n"
msgstr ""
"for profile in \"$GUIX_EXTRA_PROFILES\"/*; do\n"
"  guix package --profile=\"$profile\" \\\n"
"   --manifest=\"$HOME/.guix-manifests/guix-$profile-manifest.scm\"\n"
"done\n"

msgid "guix package -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project --list-generations\n"
msgstr "guix package -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project --list-generations\n"

msgid "guix package -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project --switch-generations=17\n"
msgstr "guix package -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project --switch-generations=17\n"

msgid ""
"env -i $(which bash) --login --noprofile --norc\n"
". my-project/etc/profile\n"
msgstr ""
"env -i $(which bash) --login --noprofile --norc\n"
". my-project/etc/profile\n"

msgid "export MANPATH=/path/to/profile$@{MANPATH:+:@}$MANPATH\n"
msgstr "export MANPATH=/path/to/profile$@{MANPATH:+:@}$MANPATH\n"

msgid ""
"guix install package-foo\n"
"guix upgrade package-bar\n"
msgstr ""
"guix install package-foo\n"
"guix upgrade package-bar\n"

msgid ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"GUIX_EXTRA=$HOME/.guix-extra\n"
"\n"
msgstr ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"GUIX_EXTRA=$HOME/.guix-extra\n"
"\n"

msgid ""
"mkdir -p \"$GUIX_EXTRA\"/my-project\n"
"guix pull --channels=channel-specs.scm --profile=\"$GUIX_EXTRA/my-project/guix\"\n"
"\n"
msgstr ""
"mkdir -p \"$GUIX_EXTRA\"/my-project\n"
"guix pull --channels=channel-specs.scm --profile=\"$GUIX_EXTRA/my-project/guix\"\n"
"\n"

msgid ""
"mkdir -p \"$GUIX_EXTRA_PROFILES/my-project\"\n"
"\"$GUIX_EXTRA\"/my-project/guix/bin/guix package \\\n"
" --manifest=/path/to/guix-my-project-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"
msgstr ""
"mkdir -p \"$GUIX_EXTRA_PROFILES/my-project\"\n"
"\"$GUIX_EXTRA\"/my-project/guix/bin/guix package \\\n"
" --manifest=/path/to/guix-my-project-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"

msgid "guix shell\n"
msgstr "guix shell\n"

msgid "guix shell --container --link-profile\n"
msgstr "guix shell --container --link-profile\n"

msgid "guix shell -CP\n"
msgstr "guix shell -CP\n"

msgid "guix build -f guix.scm\n"
msgstr "guix build -f guix.scm\n"

msgid ""
"# What if we built with Clang instead of GCC?\n"
"guix build -f guix.scm \\\n"
"  --with-c-toolchain=guile@@3.0.99-git=clang-toolchain\n"
"\n"
msgstr ""
"# What if we built with Clang instead of GCC?\n"
"guix build -f guix.scm \\\n"
"  --with-c-toolchain=guile@@3.0.99-git=clang-toolchain\n"
"\n"

msgid ""
"# What about that under-tested configure flag?\n"
"guix build -f guix.scm \\\n"
"  --with-configure-flag=guile@@3.0.99-git=--disable-networking\n"
msgstr ""
"# What about that under-tested configure flag?\n"
"guix build -f guix.scm \\\n"
"  --with-configure-flag=guile@@3.0.99-git=--disable-networking\n"

msgid ""
"$ guix describe\n"
"Generation 264  May 26 2023 16:00:35    (current)\n"
"  guile 36fd2b4\n"
"    repository URL: https://git.savannah.gnu.org/git/guile.git\n"
"    branch: main\n"
"    commit: 36fd2b4920ae926c79b936c29e739e71a6dff2bc\n"
"  guix c5bc698\n"
"    repository URL: https://git.guix.gnu.org/guix.git\n"
"    commit: c5bc698e8922d78ed85989985cc2ceb034de2f23\n"
"$ guix package -A ^guile$\n"
"guile   3.0.99-git      out,debug       guile-package.scm:51:4\n"
"guile   3.0.9           out,debug       gnu/packages/guile.scm:317:2\n"
"guile   2.2.7           out,debug       gnu/packages/guile.scm:258:2\n"
"guile   2.2.4           out,debug       gnu/packages/guile.scm:304:2\n"
"guile   2.0.14          out,debug       gnu/packages/guile.scm:148:2\n"
"guile   1.8.8           out             gnu/packages/guile.scm:77:2\n"
"$ guix build guile@@3.0.99-git\n"
"[@dots{}]\n"
"/gnu/store/axnzbl89yz7ld78bmx72vpqp802dwsar-guile-3.0.99-git-debug\n"
"/gnu/store/r34gsij7f0glg2fbakcmmk0zn4v62s5w-guile-3.0.99-git\n"
msgstr ""
"$ guix describe\n"
"第 264  代        5 月 26 2023 16:00:35    (当前)\n"
"  guile 36fd2b4\n"
"    仓库 URL：https://git.savannah.gnu.org/git/guile.git\n"
"    分支：main\n"
"    提交：36fd2b4920ae926c79b936c29e739e71a6dff2bc\n"
"  guix c5bc698\n"
"    仓库 URL：https://git.guix.gnu.org/guix.git\n"
"    提交：c5bc698e8922d78ed85989985cc2ceb034de2f23\n"
"$ guix package -A ^guile$\n"
"guile   3.0.99-git      out,debug       guile-package.scm:51:4\n"
"guile   3.0.9           out,debug       gnu/packages/guile.scm:317:2\n"
"guile   2.2.7           out,debug       gnu/packages/guile.scm:258:2\n"
"guile   2.2.4           out,debug       gnu/packages/guile.scm:304:2\n"
"guile   2.0.14          out,debug       gnu/packages/guile.scm:148:2\n"
"guile   1.8.8           out             gnu/packages/guile.scm:77:2\n"
"$ guix build guile@@3.0.99-git\n"
"[@dots{}]\n"
"/gnu/store/axnzbl89yz7ld78bmx72vpqp802dwsar-guile-3.0.99-git-debug\n"
"/gnu/store/r34gsij7f0glg2fbakcmmk0zn4v62s5w-guile-3.0.99-git\n"

msgid ""
"# Thanks <https://github.com/direnv/direnv/issues/73#issuecomment-152284914>\n"
"export_function()\n"
"@{\n"
"  local name=$1\n"
"  local alias_dir=$PWD/.direnv/aliases\n"
"  mkdir -p \"$alias_dir\"\n"
"  PATH_add \"$alias_dir\"\n"
"  local target=\"$alias_dir/$name\"\n"
"  if declare -f \"$name\" >/dev/null; then\n"
"    echo \"#!$SHELL\" > \"$target\"\n"
"    declare -f \"$name\" >> \"$target\" 2>/dev/null\n"
"    # Notice that we add shell variables to the function trigger.\n"
"    echo \"$name \\$*\" >> \"$target\"\n"
"    chmod +x \"$target\"\n"
"  fi\n"
"@}\n"
"\n"
msgstr ""
"# 感谢 <https://github.com/direnv/direnv/issues/73#issuecomment-152284914>\n"
"export_function()\n"
"@{\n"
"  local name=$1\n"
"  local alias_dir=$PWD/.direnv/aliases\n"
"  mkdir -p \"$alias_dir\"\n"
"  PATH_add \"$alias_dir\"\n"
"  local target=\"$alias_dir/$name\"\n"
"  if declare -f \"$name\" >/dev/null; then\n"
"    echo \"#!$SHELL\" > \"$target\"\n"
"    declare -f \"$name\" >> \"$target\" 2>/dev/null\n"
"    # Notice that we add shell variables to the function trigger.\n"
"    echo \"$name \\$*\" >> \"$target\"\n"
"    chmod +x \"$target\"\n"
"  fi\n"
"@}\n"
"\n"

msgid ""
"use_guix()\n"
"@{\n"
"    # Set GitHub token.\n"
"    export GUIX_GITHUB_TOKEN=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n"
"\n"
msgstr ""
"use_guix()\n"
"@{\n"
"    # Set GitHub token.\n"
"    export GUIX_GITHUB_TOKEN=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n"
"\n"

msgid ""
"    # Unset 'GUIX_PACKAGE_PATH'.\n"
"    export GUIX_PACKAGE_PATH=\"\"\n"
"\n"
msgstr ""
"    # Unset 'GUIX_PACKAGE_PATH'.\n"
"    export GUIX_PACKAGE_PATH=\"\"\n"
"\n"

msgid ""
"    # Thanks <https://lists.gnu.org/archive/html/guix-devel/2016-09/msg00859.html>\n"
"    eval \"$(guix shell --search-paths --root=\"$gcroot\" --pure \\\n"
"     --development guix $@{PACKAGES[@@]@} $@{PACKAGES_MAINTENANCE[@@]@} \"$@@\")\"\n"
"\n"
msgstr ""
"    # 感谢 <https://lists.gnu.org/archive/html/guix-devel/2016-09/msg00859.html>\n"
"    eval \"$(guix shell --search-paths --root=\"$gcroot\" --pure \\\n"
"     --development guix $@{PACKAGES[@@]@} $@{PACKAGES_MAINTENANCE[@@]@} \"$@@\")\"\n"
"\n"

msgid ""
"ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon \\\n"
"    --build-users-group=guixbuild \\\n"
"    --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"
msgstr ""
"ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon \\\n"
"    --build-users-group=guixbuild \\\n"
"    --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"

msgid "ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon --build-users-group=guixbuild --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"
msgstr "ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon --build-users-group=guixbuild --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"

msgid ""
"systemctl daemon-reload\n"
"systemctl restart guix-daemon\n"
msgstr ""
"systemctl daemon-reload\n"
"systemctl restart guix-daemon\n"

msgid ""
"/gnu/store    *(ro)\n"
"/var/guix     *(rw, async)\n"
"/var/log/guix *(ro)\n"
msgstr ""
"/gnu/store    *(ro)\n"
"/var/guix     *(rw, async)\n"
"/var/log/guix *(ro)\n"

msgid "root@@master# crontab -e\n"
msgstr "root@@master# crontab -e\n"

msgid ""
"# Every day at 5AM, run the garbage collector to make sure\n"
"# at least 10 GB are free on /gnu/store.\n"
"0 5 * * 1  /usr/local/bin/guix gc -F10G\n"
msgstr ""
"# Every day at 5AM, run the garbage collector to make sure\n"
"# at least 10 GB are free on /gnu/store.\n"
"0 5 * * 1  /usr/local/bin/guix gc -F10G\n"

msgid ""
"@var{head-node}:/gnu/store    /gnu/store    nfs  defaults,_netdev,vers=3 0 0\n"
"@var{head-node}:/var/guix     /var/guix     nfs  defaults,_netdev,vers=3 0 0\n"
"@var{head-node}:/var/log/guix /var/log/guix nfs  defaults,_netdev,vers=3 0 0\n"
msgstr ""
"@var{head-node}:/gnu/store    /gnu/store    nfs  defaults,_netdev,vers=3 0 0\n"
"@var{head-node}:/var/guix     /var/guix     nfs  defaults,_netdev,vers=3 0 0\n"
"@var{head-node}:/var/log/guix /var/log/guix nfs  defaults,_netdev,vers=3 0 0\n"

msgid ""
"mkdir -p /usr/local/bin\n"
"ln -s /var/guix/profiles/per-user/root/current-guix/bin/guix \\\n"
"      /usr/local/bin/guix\n"
msgstr ""
"mkdir -p /usr/local/bin\n"
"ln -s /var/guix/profiles/per-user/root/current-guix/bin/guix \\\n"
"      /usr/local/bin/guix\n"

msgid ""
"GUIX_DAEMON_SOCKET=\"guix://@var{head-node}\"\n"
"export GUIX_DAEMON_SOCKET\n"
msgstr ""
"GUIX_DAEMON_SOCKET=\"guix://@var{head-node}\"\n"
"export GUIX_DAEMON_SOCKET\n"

msgid ""
"GUIX_LOCPATH=/var/guix/profiles/per-user/root/guix-profile/lib/locale\n"
"export GUIX_LOCPATH\n"
"\n"
msgstr ""
"GUIX_LOCPATH=/var/guix/profiles/per-user/root/guix-profile/lib/locale\n"
"export GUIX_LOCPATH\n"
"\n"

msgid ""
"# Here we must use a valid locale name.  Try \"ls $GUIX_LOCPATH/*\"\n"
"# to see what names can be used.\n"
"LC_ALL=fr_FR.utf8\n"
"export LC_ALL\n"
msgstr ""
"# Here we must use a valid locale name.  Try \"ls $GUIX_LOCPATH/*\"\n"
"# to see what names can be used.\n"
"LC_ALL=fr_FR.utf8\n"
"export LC_ALL\n"

msgid ""
"for GUIX_PROFILE in \"$HOME/.config/guix/current\" \"$HOME/.guix-profile\"\n"
"do\n"
"  if [ -f \"$GUIX_PROFILE/etc/profile\" ]; then\n"
"    . \"$GUIX_PROFILE/etc/profile\"\n"
"  fi\n"
"done\n"
msgstr ""
"for GUIX_PROFILE in \"$HOME/.config/guix/current\" \"$HOME/.guix-profile\"\n"
"do\n"
"  if [ -f \"$GUIX_PROFILE/etc/profile\" ]; then\n"
"    . \"$GUIX_PROFILE/etc/profile\"\n"
"  fi\n"
"done\n"

msgid "guix install hello\n"
msgstr "guix install hello\n"

msgid ""
"$ guix build --sources=transitive openmpi\n"
"\n"
msgstr ""
"$ guix build --sources=transitive openmpi\n"
"\n"

msgid ""
"@dots{}\n"
"\n"
msgstr ""
"@dots{}\n"
"\n"

msgid ""
"/gnu/store/xc17sm60fb8nxadc4qy0c7rqph499z8s-openmpi-1.10.7.tar.bz2\n"
"/gnu/store/s67jx92lpipy2nfj5cz818xv430n4b7w-gcc-5.4.0.tar.xz\n"
"/gnu/store/npw9qh8a46lrxiwh9xwk0wpi3jlzmjnh-gmp-6.0.0a.tar.xz\n"
"/gnu/store/hcz0f4wkdbsvsdky3c0vdvcawhdkyldb-mpfr-3.1.5.tar.xz\n"
"/gnu/store/y9akh452n3p4w2v631nj0injx7y0d68x-mpc-1.0.3.tar.gz\n"
"/gnu/store/6g5c35q8avfnzs3v14dzl54cmrvddjm2-glibc-2.25.tar.xz\n"
"/gnu/store/p9k48dk3dvvk7gads7fk30xc2pxsd66z-hwloc-1.11.8.tar.bz2\n"
"/gnu/store/cry9lqidwfrfmgl0x389cs3syr15p13q-gcc-5.4.0.tar.xz\n"
"/gnu/store/7ak0v3rzpqm2c5q1mp3v7cj0rxz0qakf-libfabric-1.4.1.tar.bz2\n"
"/gnu/store/vh8syjrsilnbfcf582qhmvpg1v3rampf-rdma-core-14.tar.gz\n"
"…\n"
msgstr ""
"/gnu/store/xc17sm60fb8nxadc4qy0c7rqph499z8s-openmpi-1.10.7.tar.bz2\n"
"/gnu/store/s67jx92lpipy2nfj5cz818xv430n4b7w-gcc-5.4.0.tar.xz\n"
"/gnu/store/npw9qh8a46lrxiwh9xwk0wpi3jlzmjnh-gmp-6.0.0a.tar.xz\n"
"/gnu/store/hcz0f4wkdbsvsdky3c0vdvcawhdkyldb-mpfr-3.1.5.tar.xz\n"
"/gnu/store/y9akh452n3p4w2v631nj0injx7y0d68x-mpc-1.0.3.tar.gz\n"
"/gnu/store/6g5c35q8avfnzs3v14dzl54cmrvddjm2-glibc-2.25.tar.xz\n"
"/gnu/store/p9k48dk3dvvk7gads7fk30xc2pxsd66z-hwloc-1.11.8.tar.bz2\n"
"/gnu/store/cry9lqidwfrfmgl0x389cs3syr15p13q-gcc-5.4.0.tar.xz\n"
"/gnu/store/7ak0v3rzpqm2c5q1mp3v7cj0rxz0qakf-libfabric-1.4.1.tar.bz2\n"
"/gnu/store/vh8syjrsilnbfcf582qhmvpg1v3rampf-rdma-core-14.tar.gz\n"
"…\n"

msgid "guix package --delete-generations=2m\n"
msgstr "guix package --delete-generations=2m\n"

msgid ""
"guix pull\n"
"guix upgrade\n"
msgstr ""
"guix pull\n"
"guix upgrade\n"

msgid "guix gc --referrers /gnu/store/…-glibc-2.25\n"
msgstr "guix gc --referrers /gnu/store/…-glibc-2.25\n"

msgid ""
"sudo herd enable cuirass\n"
"sudo herd start cuirass\n"
msgstr ""
"sudo herd enable cuirass\n"
"sudo herd start cuirass\n"

msgid "The Nix-based software distributions, Nixpkgs and NixOS, have also been an inspiration for Guix."
msgstr "基于 Nix 的软件发行版 Nixpkgs 和 NixOS 也给 Guix 带来了灵感。"

msgid "GNU@tie{}Guix itself is a collective work with contributions from a number of people.  See the @file{AUTHORS} file in Guix for more information on these fine people.  The @file{THANKS} file lists people who have helped by reporting bugs, taking care of the infrastructure, providing artwork and themes, making suggestions, and more---thank you!"
msgstr "GNU@tie{}Guix 是一个许多人参与贡献的集体项目。在 Guix 的 @file{AUTHORS} 中能更多地了解这些大好人。@file{THANKS} 中列出了乐于助人者们：报告程序错误、维护基建、艺术创作，提出建议等等——谢谢你们！"

msgid "license, GNU Free Documentation License"
msgstr "许可证，GNU Free Documentation License"

msgid "fdl-1.3.texi"
msgstr "fdl-1.3.texi"
