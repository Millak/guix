# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR the authors of Guix (msgids) and the following authors (msgstr)
# This file is distributed under the same license as the guix manual package.
# Salvatore Cocuzza <info@salvatorecocuzza.it>, 2025.
# Florian Pelz <pelzflorian@pelzflorian.de>, 2025.
# Weblate Translation Memory <noreply-mt-weblate-translation-memory@weblate.org>, 2025.
# Nathan <nathan95@live.it>, 2025.
msgid ""
msgstr ""
"Project-Id-Version: guix manual checkout\n"
"Report-Msgid-Bugs-To: bug-guix@gnu.org\n"
"POT-Creation-Date: 2025-10-21 03:18+0000\n"
"PO-Revision-Date: 2025-09-12 11:35+0000\n"
"Last-Translator: pelzflorian <pelzflorian@noreply.codeberg.org>\n"
"Language-Team: Italian <https://translate.codeberg.org/projects/guix/documentation-cookbook/it/>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.13.2\n"

msgid "@documentencoding UTF-8"
msgstr ""
"@documentencoding UTF-8\n"
"@documentlanguage it\n"
"@frenchspacing on"

msgid "GNU Guix Cookbook"
msgstr "Ricettario di GNU Guix"

msgid "Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license is included in the section entitled ``GNU Free Documentation License''."
msgstr "È concesso il permesso di copiare, distribuire e/o modificare questo documento secondo i termini della GNU Free Documentation License, Versione 1.3 o qualsiasi versione successiva pubblicata dalla Free Software Foundation; senza Sezioni Invarianti, senza Testi di Copertina e senza Testi di Retro copertina. Una copia della licenza è inclusa nella sezione intitolata \"Licenza di Documentazione Libera GNU\"."

msgid "System administration"
msgstr "Amministrazione di sistema"

msgid "Guix cookbook: (guix-cookbook)"
msgstr "Libro di ricette di Guix: (guix-cookbook.it)"

msgid "Tutorials and examples for GNU Guix."
msgstr "Tutorial ed esempi per GNU Guix."

msgid "Tutorials and examples for using the GNU Guix Functional Package Manager"
msgstr "Tutorial ed esempi per l'uso del Gestore di Pacchetti Funzionale GNU Guix"

msgid "The GNU Guix Developers"
msgstr "Gli Sviluppatori di GNU Guix"

msgid "Top"
msgstr "Top"

msgid "This document presents tutorials and detailed examples for GNU@tie{}Guix, a functional package management tool written for the GNU system.  Please @pxref{Top,,, guix, GNU Guix reference manual} for details about the system, its API, and related concepts."
msgstr "Questo documento presenta tutorial ed esempi dettagliati per GNU@tie{}Guix, uno strumento di gestione pacchetti funzionale scritto per il sistema GNU. Si prega di @pxref{Top,,, guix.it, manuale di riferimento di GNU Guix} per dettagli sul sistema, la sua API e i concetti correlati."

msgid "This manual is also available in Simplified Chinese (@pxref{Top,,, guix-cookbook.zh_CN, GNU Guix 烹饪书}), French (@pxref{Top,,, guix-cookbook.fr, Livre de recettes de GNU Guix}), German (@pxref{Top,,, guix-cookbook.de, GNU-Guix-Kochbuch}), Korean (@pxref{Top,,, guix-cookbook.ko, GNU Guix 쿡북}), Spanish (@pxref{Top,,, guix-cookbook.es, Libro de recetas de GNU Guix}), Italian (@pxref{Top,,, guix-cookbook.it, Ricettario di GNU Guix}), Brazilian Portuguese (@pxref{Top,,, guix-cookbook.pt_BR, Livro de receitas do GNU Guix}), Russian (@pxref{Top,,, guix-cookbook.ru, GNU Guix Рецепты}), Slovak (@pxref{Top,,, guix-cookbook.sk, Receptár GNU Guix}), and Swedish (@pxref{Top,,, guix-cookbook.sv, Kokbok för GNU Guix}).  If you would like to translate this document in your native language, consider joining @uref{https://translate.codeberg.org/projects/guix/documentation-cookbook, Weblate} (@pxref{Translating Guix,,, guix, GNU Guix Reference Manual})."
msgstr "Questo manuale è disponibile anche in inglese (@pxref{Top,,, guix-cookbook, GNU Guix Cookbook}), francese (@pxref{Top,,, guix-cookbook.fr, Livre de recettes de GNU Guix}), cinese semplificato (@pxref{Top,,, guix-cookbook.zh_CN, GNU Guix 烹饪书}), tedesco (@pxref{Top,,, guix-cookbook.de, GNU-Guix-Kochbuch}), coreano (@pxref{Top,,, guix-cookbook.ko, GNU Guix 쿡북}), spagnolo (@pxref{Top,,, guix-cookbook.es, Libro de recetas de GNU Guix}), portoghese brasiliano (@pxref{Top,,, guix-cookbook.pt_BR, Livro de receitas do GNU Guix}), russo (@pxref{Top,,, guix-cookbook.ru, GNU Guix Рецепты}), slovacco (@pxref{Top,,, guix-cookbook.sk, Receptár GNU Guix}) e svedese (@pxref{Top,,, guix-cookbook.sv, Kokbok för GNU Guix}). Se desideri tradurre questo documento nella tua lingua madre, considera di unirti a @uref{https://translate.codeberg.org/projects/guix/documentation-cookbook, Weblate} (@pxref{Tradurre Guix,,, guix.it, Manuale di riferimento di GNU Guix})."

msgid "Scheme tutorials"
msgstr "Tutorial di Scheme"

msgid "Meet your new favorite language!"
msgstr "Incontra il tuo nuovo linguaggio preferito!"

msgid "Packaging"
msgstr "Impacchettamento"

msgid "Packaging tutorials"
msgstr "Tutorial sull'impacchettamento"

msgid "System Configuration"
msgstr "Configurazione di sistema"

msgid "Customizing the GNU System"
msgstr "Personalizzazione del Sistema GNU"

msgid "Containers"
msgstr "Contenitori"

msgid "Isolated environments and nested systems"
msgstr "Ambienti isolati e sistemi annidati"

msgid "Virtual Machines"
msgstr "Macchine virtuali"

msgid "Virtual machines usage and configuration"
msgstr "Uso e configurazione delle macchine virtuali"

msgid "Advanced package management"
msgstr "Gestione avanzata dei pacchetti"

msgid "Power to the users!"
msgstr "Potere agli utenti!"

msgid "Software Development"
msgstr "Sviluppo software"

msgid "Environments, continuous integration, etc."
msgstr "Ambienti, integrazione continua, ecc."

msgid "Environment management"
msgstr "Gestione dell'ambiente"

msgid "Control environment"
msgstr "Ambiente di controllo"

msgid "Installing Guix on a Cluster"
msgstr "Installare Guix su un Cluster"

msgid "High-performance computing."
msgstr "Calcolo ad alte prestazioni."

msgid "Guix System Management"
msgstr "Gestione del Sistema Guix"

msgid "System Management specifics."
msgstr "Specifiche della gestione di sistema."

msgid "Acknowledgments"
msgstr "Ringraziamenti"

msgid "Thanks!"
msgstr "Grazie!"

msgid "GNU Free Documentation License"
msgstr "Licenza di Documentazione Libera GNU"

msgid "The license of this document."
msgstr "La licenza di questo documento."

msgid "Concept Index"
msgstr "Indice dei concetti"

msgid "Concepts."
msgstr "Concetti."

msgid "--- The Detailed Node Listing ---"
msgstr "--- L'Elenco Dettagliato dei Nodi ---"

msgid "A Scheme Crash Course"
msgstr "Un corso intensivo di Scheme"

msgid "Packaging Tutorial"
msgstr "Tutorial sull'Impacchettamento"

msgid "A tutorial on how to add packages to Guix."
msgstr "Un tutorial su come aggiungere pacchetti a Guix."

msgid "A ``Hello World'' package"
msgstr "Un pacchetto \"Hello World\""

msgid "Setup"
msgstr "Configurazione"

msgid "Extended example"
msgstr "Esempio esteso"

msgid "Other build systems"
msgstr "Altri sistemi di build"

msgid "Programmable and automated package definition"
msgstr "Definizione di pacchetto programmabile e automatizzata"

msgid "Getting help"
msgstr "Ottenere aiuto"

msgid "Conclusion"
msgstr "Conclusione"

msgid "References"
msgstr "Riferimenti"

msgid "Local file"
msgstr "File locale"

msgid "Channels"
msgstr "Canali"

msgid "Direct checkout hacking"
msgstr "Modifica diretta dal checkout"

msgid "Recursive importers"
msgstr "Importatori ricorsivi"

msgid "Automatic update"
msgstr "Aggiornamento automatico"

msgid "Inheritance"
msgstr "Ereditarietà"

msgid "Auto-Login to a Specific TTY"
msgstr "Accesso automatico a una TTY specifica"

msgid "Automatically Login a User to a Specific TTY"
msgstr "Accedere automaticamente un utente a una TTY specifica"

msgid "Customizing the Kernel"
msgstr "Personalizzazione del kernel"

msgid "Creating and using a custom Linux kernel on Guix System."
msgstr "Creazione e utilizzo di un kernel Linux personalizzato su Guix System."

msgid "Guix System Image API"
msgstr "API immagine di Sistema Guix"

msgid "Customizing images to target specific platforms."
msgstr "Personalizzazione di immagini per piattaforme specifiche."

msgid "Using security keys"
msgstr "Utilizzo di chiavi di sicurezza"

msgid "How to use security keys with Guix System."
msgstr "Come usare le chiavi di sicurezza con Guix System."

msgid "Dynamic DNS mcron job"
msgstr "Processo mcron per DNS dinamico"

msgid "Job to update the IP address behind a DuckDNS host name."
msgstr "Processo per aggiornare l'indirizzo IP dietro un nome host DuckDNS."

msgid "Connecting to Wireguard VPN"
msgstr "Connessione a una VPN Wireguard"

msgid "Connecting to a Wireguard VPN."
msgstr "Connessione a una VPN Wireguard."

msgid "Customizing a Window Manager"
msgstr "Personalizzazione di un Window Manager"

msgid "Handle customization of a Window manager on Guix System."
msgstr "Gestire la personalizzazione di un Window Manager su Guix System."

msgid "Running Guix on a Linode Server"
msgstr "Eseguire Guix su un Server Linode"

msgid "Running Guix on a Linode Server."
msgstr "Eseguire Guix su un Server Linode."

msgid "Running Guix on a Kimsufi Server"
msgstr "Eseguire Guix su un Server Kimsufi"

msgid "Running Guix on a Kimsufi Server."
msgstr "Eseguire Guix su un Server Kimsufi."

msgid "Setting up a bind mount"
msgstr "Configurazione di un bind mount"

msgid "Setting up a bind mount in the file-systems definition."
msgstr "Configurazione di un bind mount nella definizione dei file system."

msgid "Getting substitutes from Tor"
msgstr "Ottenere sostituti da Tor"

msgid "Configuring Guix daemon to get substitutes through Tor."
msgstr "Configurazione del demone Guix per ottenere sostituti tramite Tor."

msgid "Setting up NGINX with Lua"
msgstr "Configurazione di NGINX con Lua"

msgid "Configuring NGINX web-server to load Lua modules."
msgstr "Configurazione del server web NGINX per caricare i moduli Lua."

msgid "Music Server with Bluetooth Audio"
msgstr "Server musicale con audio Bluetooth"

msgid "Headless music player with Bluetooth output."
msgstr "Lettore musicale headless con uscita Bluetooth."

msgid "StumpWM"
msgstr "StumpWM"

msgid "Session lock"
msgstr "Blocco sessione"

msgid "Xorg"
msgstr "Xorg"

msgid "Guix Containers"
msgstr "Contenitori Guix"

msgid "Perfectly isolated environments"
msgstr "Ambienti perfettamente isolati"

msgid "Guix System Containers"
msgstr "Contenitori di Sistema Guix"

msgid "A system inside your system"
msgstr "Un sistema dentro il tuo sistema"

msgid "A Database Container"
msgstr "Un contenitore Database"

msgid "Container Networking"
msgstr "Networking dei contenitori"

msgid "Network bridge for QEMU"
msgstr "Ponte di rete per QEMU"

msgid "Routed network for libvirt"
msgstr "Rete instradata per libvirt"

msgid "Custom NAT-based network for libvirt"
msgstr "Rete personalizzata basata su NAT per libvirt"

msgid "References: VM References"
msgstr "Riferimenti: Riferimenti VM"

msgid "Further reading on virtual machines."
msgstr "Ulteriori letture sulle macchine virtuali."

msgid "Guix Profiles in Practice"
msgstr "Profili Guix in pratica"

msgid "Strategies for multiple profiles and manifests."
msgstr "Strategie per profili e manifesti multipli."

msgid "Basic setup with manifests"
msgstr "Configurazione di base con i manifesti"

msgid "Required packages"
msgstr "Pacchetti richiesti"

msgid "Default profile"
msgstr "Profilo predefinito"

msgid "The benefits of manifests"
msgstr "I benefici dei manifesti"

msgid "Reproducible profiles"
msgstr "Profili riproducibili"

msgid "Getting Started"
msgstr "Per iniziare"

msgid "Step 0: using `guix shell'."
msgstr "Passo 0: usare `guix shell'."

msgid "Building with Guix"
msgstr "Costruire con Guix"

msgid "Step 1: building your code."
msgstr "Passo 1: compilare il tuo codice."

msgid "The Repository as a Channel"
msgstr "Il repository come canale"

msgid "Step 2: turning the repo in a channel."
msgstr "Passo 2: trasformare il repo in un canale."

msgid "Package Variants"
msgstr "Varianti di pacchetto"

msgid "Bonus: Defining variants."
msgstr "Bonus: Definire le varianti."

msgid "Setting Up Continuous Integration"
msgstr "Configurazione dell'integrazione continua"

msgid "Step 3: continuous integration."
msgstr "Passo 3: integrazione continua."

msgid "Build Manifest"
msgstr "Manifesto di build"

msgid "Bonus: Manifest."
msgstr "Bonus: Manifesto."

msgid "Wrapping Up"
msgstr "In conclusione"

msgid "Recap."
msgstr "Riepilogo."

msgid "Guix environment via direnv"
msgstr "Ambiente Guix tramite direnv"

msgid "Setup Guix environment with direnv"
msgstr "Configura l'ambiente Guix con direnv"

msgid "Setting Up a Head Node"
msgstr "Configurazione di un nodo principale"

msgid "The node that runs the daemon."
msgstr "Il nodo che esegue il demone."

msgid "Setting Up Compute Nodes"
msgstr "Configurazione dei nodi di calcolo"

msgid "Client nodes."
msgstr "Nodi client."

msgid "Cluster Network Access"
msgstr "Accesso alla rete del cluster"

msgid "Dealing with network access restrictions."
msgstr "Gestione delle restrizioni di accesso alla rete."

msgid "Cluster Disk Usage"
msgstr "Utilizzo del disco del cluster"

msgid "Disk usage considerations."
msgstr "Considerazioni sull'utilizzo del disco."

msgid "Cluster Security Considerations"
msgstr "Considerazioni sulla sicurezza del cluster"

msgid "Keeping the cluster secure."
msgstr "Mantenere il cluster sicuro."

msgid "Upgrade Postgres for Cuirass"
msgstr "Aggiornare Postgres per Cuirass"

msgid "Upgrading from the default postgres."
msgstr "Aggiornamento dal postgres predefinito."

msgid "GNU@tie{}Guix is written in the general purpose programming language Scheme, and many of its features can be accessed and manipulated programmatically.  You can use Scheme to generate package definitions, to modify them, to build them, to deploy whole operating systems, etc."
msgstr "GNU@tie{}Guix è scritto nel linguaggio di programmazione generico Scheme, e molte delle sue funzionalità possono essere accessibili e manipolate programmaticamente. Puoi usare Scheme per generare definizioni di pacchetti, per modificarle, per compilarle, per distribuire interi sistemi operativi, ecc."

msgid "Knowing the basics of how to program in Scheme will unlock many of the advanced features Guix provides --- and you don't even need to be an experienced programmer to use them!"
msgstr "Conoscere le basi di come programmare in Scheme sbloccherà molte delle funzionalità avanzate che Guix fornisce --- e non è nemmeno necessario essere un programmatore esperto per usarle!"

msgid "Let's get started!"
msgstr "Iniziamo!"

msgid "Scheme, crash course"
msgstr "Scheme, corso intensivo"

msgid "Guix uses the Guile implementation of Scheme.  To start playing with the language, install it with @code{guix install guile} and start a @dfn{REPL}---short for @uref{https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop, @dfn{read-eval-print loop}}---by running @code{guile} from the command line."
msgstr "Guix utilizza l'implementazione Guile di Scheme. Per iniziare a giocare con il linguaggio, installalo con @code{guix install guile} e avvia un @dfn{REPL} --- abbreviazione di @uref{https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop, @dfn{read-eval-print loop}} --- eseguendo @code{guile} dalla riga di comando."

msgid "Alternatively you can also run @code{guix shell guile -- guile} if you'd rather not have Guile installed in your user profile."
msgstr "In alternativa, puoi anche eseguire @code{guix shell guile -- guile} se preferisci non avere Guile installato nel tuo profilo utente."

msgid "In the following examples, lines show what you would type at the REPL; lines starting with ``@result{}'' show evaluation results, while lines starting with ``@print{}'' show things that get printed.  @xref{Using Guile Interactively,,, guile, GNU Guile Reference Manual}, for more details on the REPL."
msgstr "Negli esempi seguenti, le righe mostrano cosa digiteresti nel REPL; le righe che iniziano con \"@result{}\" mostrano i risultati della valutazione, mentre le righe che iniziano con \"@print{}\" mostrano le cose che vengono stampate. @xref{Using Guile Interactively,,, guile, Manuale di riferimento di GNU Guile}, per maggiori dettagli sul REPL."

msgid "Scheme syntax boils down to a tree of expressions (or @emph{s-expression} in Lisp lingo).  An expression can be a literal such as numbers and strings, or a compound which is a parenthesized list of compounds and literals.  @code{#true} and @code{#false} (abbreviated @code{#t} and @code{#f}) stand for the Booleans ``true'' and ``false'', respectively."
msgstr "La sintassi di Scheme si riduce a un albero di espressioni (o @emph{s-expression} nel gergo Lisp). Un'espressione può essere un letterale come numeri e stringhe, o un composto che è una lista tra parentesi di composti e letterali. @code{#true} e @code{#false} (abbreviato @code{#t} e @code{#f}) rappresentano i booleani \"vero\" e \"falso\", rispettivamente."

msgid "Examples of valid expressions:"
msgstr "Esempi di espressioni valide:"

msgid ""
"\"Hello World!\"\n"
"@result{} \"Hello World!\"\n"
"\n"
msgstr ""
"\"Hello World!\"\n"
"@result{} \"Hello World!\"\n"
"\n"

msgid ""
"17\n"
"@result{} 17\n"
"\n"
msgstr ""
"17\n"
"@result{} 17\n"
"\n"

msgid ""
"(display (string-append \"Hello \" \"Guix\" \"\\n\"))\n"
"@print{} Hello Guix!\n"
"@result{} #<unspecified>\n"
msgstr ""
"(display (string-append \"Ciao \" \"Guix\" \"\\n\"))\n"
"@print{} Ciao Guix!\n"
"@result{} #<unspecified>\n"

msgid "This last example is a function call nested in another function call.  When a parenthesized expression is evaluated, the first term is the function and the rest are the arguments passed to the function.  Every function returns the last evaluated expression as its return value."
msgstr "Quest'ultimo esempio è una chiamata di funzione annidata in un'altra chiamata di funzione. Quando un'espressione tra parentesi viene valutata, il primo termine è la funzione e il resto sono gli argomenti passati alla funzione. Ogni funzione restituisce l'ultima espressione valutata come valore di ritorno."

msgid "Anonymous functions---@dfn{procedures} in Scheme parlance---are declared with the @code{lambda} term:"
msgstr "Le funzioni anonime --- @dfn{procedures} nel gergo di Scheme --- sono dichiarate con il termine @code{lambda}:"

msgid ""
"(lambda (x) (* x x))\n"
"@result{} #<procedure 120e348 at <unknown port>:24:0 (x)>\n"
msgstr ""
"(lambda (x) (* x x))\n"
"@result{} #<procedure 120e348 at <unknown port>:24:0 (x)>\n"

msgid "The above procedure returns the square of its argument.  Since everything is an expression, the @code{lambda} expression returns an anonymous procedure, which can in turn be applied to an argument:"
msgstr "La procedura sopra restituisce il quadrato del suo argomento. Poiché tutto è un'espressione, l'espressione @code{lambda} restituisce una procedura anonima, che a sua volta può essere applicata a un argomento:"

msgid ""
"((lambda (x) (* x x)) 3)\n"
"@result{} 9\n"
msgstr ""
"((lambda (x) (* x x)) 3)\n"
"@result{} 9\n"

msgid "Procedures are regular values just like numbers, strings, Booleans, and so on."
msgstr "Le procedure sono valori regolari proprio come numeri, stringhe, booleani e così via."

msgid "Anything can be assigned a global name with @code{define}:"
msgstr "A qualsiasi cosa può essere assegnato un nome globale con @code{define}:"

msgid ""
"(define a 3)\n"
"(define square (lambda (x) (* x x)))\n"
"(square a)\n"
"@result{} 9\n"
msgstr ""
"(define a 3)\n"
"(define square (lambda (x) (* x x)))\n"
"(square a)\n"
"@result{} 9\n"

msgid "Procedures can be defined more concisely with the following syntax:"
msgstr "Le procedure possono essere definite in modo più conciso con la seguente sintassi:"

msgid "(define (square x) (* x x))\n"
msgstr "(define (square x) (* x x))\n"

msgid "A list structure can be created with the @code{list} procedure:"
msgstr "Una struttura di lista può essere creata con la procedura @code{list}:"

msgid ""
"(list 2 a 5 7)\n"
"@result{} (2 3 5 7)\n"
msgstr ""
"(list 2 a 5 7)\n"
"@result{} (2 3 5 7)\n"

msgid "Standard procedures are provided by the @code{(srfi srfi-1)} module to create and process lists (@pxref{SRFI-1, list processing,, guile, GNU Guile Reference Manual}).  Here are some of the most useful ones in action:"
msgstr "Le procedure standard sono fornite dal modulo @code{(srfi srfi-1)} per creare ed elaborare liste (@pxref{SRFI-1, elaborazione di liste,, guile, Manuale di riferimento di GNU Guile}). Ecco alcune delle più utili in azione:"

msgid ""
"(use-modules (srfi srfi-1))  ;import list processing procedures\n"
"\n"
msgstr ""
"(use-modules (srfi srfi-1))  ;importa procedure di elaborazione di liste\n"
"\n"

msgid ""
"(append (list 1 2) (list 3 4))\n"
"@result{} (1 2 3 4)\n"
"\n"
msgstr ""
"(append (list 1 2) (list 3 4))\n"
"@result{} (1 2 3 4)\n"
"\n"

msgid ""
"(map (lambda (x) (* x x)) (list 1 2 3 4))\n"
"@result{} (1 4 9 16)\n"
"\n"
msgstr ""
"(map (lambda (x) (* x x)) (list 1 2 3 4))\n"
"@result{} (1 4 9 16)\n"
"\n"

msgid ""
"(delete 3 (list 1 2 3 4))        @result{} (1 2 4)\n"
"(filter odd? (list 1 2 3 4))     @result{} (1 3)\n"
"(remove even? (list 1 2 3 4))    @result{} (1 3)\n"
"(find number? (list \"a\" 42 \"b\")) @result{} 42\n"
msgstr ""
"(delete 3 (list 1 2 3 4))        @result{} (1 2 4)\n"
"(filter odd? (list 1 2 3 4))     @result{} (1 3)\n"
"(remove even? (list 1 2 3 4))    @result{} (1 3)\n"
"(find number? (list \"a\" 42 \"b\")) @result{} 42\n"

msgid "Notice how the first argument to @code{map}, @code{filter}, @code{remove}, and @code{find} is a procedure!"
msgstr "Notare come il primo argomento di @code{map}, @code{filter}, @code{remove} e @code{find} sia una procedura!"

msgid "S-expression"
msgstr "S-expression"

msgid "The @dfn{quote} disables evaluation of a parenthesized expression, also called an S-expression or ``s-exp'': the first term is not called over the other terms (@pxref{Expression Syntax, quote,, guile, GNU Guile Reference Manual}).  Thus it effectively returns a list of terms."
msgstr "Il @dfn{quote} disabilita la valutazione di un'espressione tra parentesi, chiamata anche S-expression o \"s-exp\": il primo termine non viene chiamato sugli altri termini (@pxref{Expression Syntax, quote,, guile, Manuale di riferimento di GNU Guile}). Quindi restituisce effettivamente una lista di termini."

msgid ""
"'(display (string-append \"Hello \" \"Guix\" \"\\n\"))\n"
"@result{} (display (string-append \"Hello \" \"Guix\" \"\\n\"))\n"
"\n"
msgstr ""
"'(display (string-append \"Ciao \" \"Guix\" \"\\n\"))\n"
"@result{} (display (string-append \"Ciao \" \"Guix\" \"\\n\"))\n"
"\n"

msgid ""
"'(2 a 5 7)\n"
"@result{} (2 a 5 7)\n"
msgstr ""
"'(2 a 5 7)\n"
"@result{} (2 a 5 7)\n"

msgid "The @code{quasiquote} (@code{`}, a backquote) disables evaluation of a parenthesized expression until @code{unquote} (@code{,}, a comma)  re-enables it.  Thus it provides us with fine-grained control over what is evaluated and what is not."
msgstr "Il @code{quasiquote} (@code{`}, un apice inverso) disabilita la valutazione di un'espressione tra parentesi finché @code{unquote} (@code{,}, una virgola) non la riabilita. Quindi ci fornisce un controllo preciso su cosa viene valutato e cosa no."

msgid ""
"`(2 a 5 7 (2 ,a 5 ,(+ a 4)))\n"
"@result{} (2 a 5 7 (2 3 5 7))\n"
msgstr ""
"`(2 a 5 7 (2 ,a 5 ,(+ a 4)))\n"
"@result{} (2 a 5 7 (2 3 5 7))\n"

msgid "Note that the above result is a list of mixed elements: numbers, symbols (here @code{a}) and the last element is a list itself."
msgstr "Notare che il risultato sopra è una lista di elementi misti: numeri, simboli (qui @code{a}) e l'ultimo elemento è una lista stessa."

msgid "G-expressions, syntax"
msgstr "G-expressions, sintassi"

msgid "gexps, syntax"
msgstr "gexps, sintassi"

msgid "#~"
msgstr "#~"

msgid "#$"
msgstr "#$"

msgid "gexp"
msgstr "gexp"

msgid "ungexp"
msgstr "ungexp"

msgid "Guix defines a variant of S-expressions on steroids called @dfn{G-expressions} or ``gexps'', which come with a variant of @code{quasiquote} and @code{unquote}: @code{#~} (or @code{gexp}) and @code{#$} (or @code{ungexp}).  They let you @emph{stage code for later execution}."
msgstr "Guix definisce una variante delle S-expression con gli steroidi chiamata @dfn{G-expressions} o \"gexps\", che viene fornita con una variante di @code{quasiquote} e @code{unquote}: @code{#~} (o @code{gexp}) e @code{#$} (o @code{ungexp}). Ti permettono di @emph{mettere in scena il codice per un'esecuzione successiva}."

msgid "For example, you'll encounter gexps in some package definitions where they provide code to be executed during the package build process.  They look like this:"
msgstr "Ad esempio, incontrerai le gexps in alcune definizioni di pacchetto dove forniscono codice da eseguire durante il processo di compilazione del pacchetto. Appaiono così:"

msgid ""
"(use-modules (guix gexp)           ;so we can write gexps\n"
"             (gnu packages base))  ;for 'coreutils'\n"
"\n"
msgstr ""
"(use-modules (guix gexp)           ;così possiamo scrivere gexps\n"
"             (gnu packages base))  ;per 'coreutils'\n"
"\n"

msgid ""
";; Below is a G-expression representing staged code.\n"
"#~(begin\n"
"    ;; Invoke 'ls' from the package defined by the 'coreutils'\n"
"    ;; variable.\n"
"    (system* #$(file-append coreutils \"/bin/ls\") \"-l\")\n"
"\n"
msgstr ""
";; Di seguito una G-expression che rappresenta codice messo in scena.\n"
"#~(begin\n"
"    ;; Invoca 'ls' dal package definito dalla variabile 'coreutils'.\n"
"    (system* #$(file-append coreutils \"/bin/ls\") \"-l\")\n"
"\n"

msgid ""
"    ;; Create this package's output directory.\n"
"    (mkdir #$output))\n"
msgstr ""
"    ;; Crea la directory di output di questo pacchetto.\n"
"    (mkdir #$output))\n"

msgid "@xref{G-Expressions,,, guix, GNU Guix Reference Manual}, for more on gexps."
msgstr "@xref{G-expression,,, guix.it, Manuale di riferimento di GNU Guix}, per maggiori informazioni sulle gexps."

msgid "Multiple variables can be named locally with @code{let} (@pxref{Local Bindings,,, guile, GNU Guile Reference Manual}):"
msgstr "È possibile nominare più variabili localmente con @code{let} (@pxref{Local Bindings,,, guile, Manuale di Riferimento di GNU Guile}):"

msgid ""
"(define x 10)\n"
"(let ((x 2)\n"
"      (y 3))\n"
"  (list x y))\n"
"@result{} (2 3)\n"
"\n"
msgstr ""
"(define x 10)\n"
"(let ((x 2)\n"
"      (y 3))\n"
"  (list x y))\n"
"@result{} (2 3)\n"
"\n"

msgid ""
"x\n"
"@result{} 10\n"
"\n"
msgstr ""
"x\n"
"@result{} 10\n"
"\n"

msgid ""
"y\n"
"@error{} In procedure module-lookup: Unbound variable: y\n"
msgstr ""
"y\n"
"@error{} In procedure module-lookup: Variabile non legata: y\n"

msgid "Use @code{let*} to allow later variable declarations to refer to earlier definitions."
msgstr "Usa @code{let*} per permettere alle dichiarazioni di variabili successive di fare riferimento a definizioni precedenti."

msgid ""
"(let* ((x 2)\n"
"       (y (* x 3)))\n"
"  (list x y))\n"
"@result{} (2 6)\n"
msgstr ""
"(let* ((x 2)\n"
"       (y (* x 3)))\n"
"  (list x y))\n"
"@result{} (2 6)\n"

msgid "@dfn{Keywords} are typically used to identify the named parameters of a procedure.  They are prefixed by @code{#:} (hash, colon) followed by alphanumeric characters: @code{#:like-this}.  @xref{Keywords,,, guile, GNU Guile Reference Manual}."
msgstr "Le @dfn{Parole Chiave} sono tipicamente usate per identificare i parametri nominati di una procedura. Sono precedute da @code{#:} (cancelletto, due punti) seguito da caratteri alfanumerici: @code{#:in-questo-modo}. @xref{Keywords,,, guile, Manuale di riferimento di GNU Guile}."

msgid "The percentage @code{%} is typically used for read-only global variables in the build stage.  Note that it is merely a convention, like @code{_} in C.  Scheme treats @code{%} exactly the same as any other letter."
msgstr "La percentuale @code{%} è tipicamente usata per le variabili globali di sola lettura nella fase di compilazione. Notare che è solo una convenzione, come @code{_} in C. Scheme tratta @code{%} esattamente come qualsiasi altra lettera."

msgid "Modules are created with @code{define-module} (@pxref{Creating Guile Modules,,, guile, GNU Guile Reference Manual}).  For instance"
msgstr "I moduli sono creati con @code{define-module} (@pxref{Creating Guile Modules,,, guile, Manuale di riferimento di GNU Guile}). Per esempio"

msgid ""
"(define-module (guix build-system ruby)\n"
"  #:use-module (guix store)\n"
"  #:export (ruby-build\n"
"            ruby-build-system))\n"
msgstr ""
"(define-module (guix build-system ruby)\n"
"  #:use-module (guix store)\n"
"  #:export (ruby-build\n"
"            ruby-build-system))\n"

msgid "defines the module @code{guix build-system ruby} which must be located in @file{guix/build-system/ruby.scm} somewhere in the Guile load path.  It depends on the @code{(guix store)} module and it exports two variables, @code{ruby-build} and @code{ruby-build-system}."
msgstr "definisce il modulo @code{guix build-system ruby} che deve essere situato in @file{guix/build-system/ruby.scm} da qualche parte nel percorso di caricamento di Guile. Dipende dal modulo @code{(guix store)} ed esporta due variabili, @code{ruby-build} e @code{ruby-build-system}."

msgid "@xref{Package Modules,,, guix, GNU Guix Reference Manual}, for info on modules that define packages."
msgstr "@xref{Moduli di pacchetti,,, guix.it, Manuale di riferimento di GNU Guix}, per informazioni sui moduli che definiscono i pacchetti."

msgid "Going further"
msgstr "Andare oltre"

msgid "Scheme is a language that has been widely used to teach programming and you'll find plenty of material using it as a vehicle.  Here's a selection of documents to learn more about Scheme:"
msgstr "Scheme è un linguaggio ampiamente utilizzato per insegnare la programmazione e troverai molto materiale che lo usa come veicolo. Ecco una selezione di documenti per saperne di più su Scheme:"

msgid "@uref{https://spritely.institute/static/papers/scheme-primer.html, @i{A Scheme Primer}}, by Christine Lemmer-Webber and the Spritely Institute."
msgstr "@uref{https://spritely.institute/static/papers/scheme-primer.html, @i{Un Primer di Scheme}}, di Christine Lemmer-Webber e lo Spritely Institute."

msgid "@uref{http://www.troubleshooters.com/codecorn/scheme_guile/hello.htm, @i{Scheme at a Glance}}, by Steve Litt."
msgstr "@uref{http://www.troubleshooters.com/codecorn/scheme_guile/hello.htm, @i{Scheme in Sintesi}}, di Steve Litt."

msgid "@uref{https://sarabander.github.io/sicp/, @i{Structure and Interpretation of Computer Programs}}, by Harold Abelson and Gerald Jay Sussman, with Julie Sussman.  Colloquially known as ``SICP'', this book is a reference."
msgstr "@uref{https://sarabander.github.io/sicp/, @i{Struttura e Interpretazione dei Programmi per Elaboratore}}, di Harold Abelson e Gerald Jay Sussman, con Julie Sussman. Conosciuto colloquialmente come \"SICP\", questo libro è un riferimento."

msgid "You can also install it and read it from your computer:"
msgstr "Puoi anche installarlo e leggerlo dal tuo computer:"

msgid "You'll find more books, tutorials and other resources at @url{https://schemers.org/}."
msgstr "Troverai altri libri, tutorial e altre risorse su @url{https://schemers.org/}."

msgid "packaging"
msgstr "impacchettamento"

msgid "This chapter is dedicated to teaching you how to add packages to the collection of packages that come with GNU Guix.  This involves writing package definitions in Guile Scheme, organizing them in package modules, and building them."
msgstr "Questo capitolo è dedicato a insegnarti come aggiungere pacchetti alla collezione di pacchetti fornita con GNU Guix. Ciò comporta la scrittura di definizioni di pacchetti in Guile Scheme, l'organizzazione in moduli di pacchetti e la loro compilazione."

msgid "GNU Guix stands out as the @emph{hackable} package manager, mostly because it uses @uref{https://www.gnu.org/software/guile/, GNU Guile}, a powerful high-level programming language, one of the @uref{https://en.wikipedia.org/wiki/Scheme_%28programming_language%29, Scheme} dialects from the @uref{https://en.wikipedia.org/wiki/Lisp_%28programming_language%29, Lisp family}."
msgstr "GNU Guix si distingue come il gestore di pacchetti @emph{hackable}, principalmente perché utilizza @uref{https://www.gnu.org/software/guile/, GNU Guile}, un potente linguaggio di programmazione di alto livello, uno dei dialetti @uref{https://it.wikipedia.org/wiki/Scheme, Scheme} della famiglia @uref{https://it.wikipedia.org/wiki/Lisp, Lisp}."

msgid "Package definitions are also written in Scheme, which empowers Guix in some very unique ways, unlike most other package managers that use shell scripts or simple languages."
msgstr "Anche le definizioni dei pacchetti sono scritte in Scheme, il che conferisce a Guix poteri unici, a differenza della maggior parte degli altri gestori di pacchetti che utilizzano script di shell o linguaggi semplici."

msgid "Use functions, structures, macros and all of Scheme expressiveness for your package definitions."
msgstr "Usa funzioni, strutture, macro e tutta l'espressività di Scheme per le tue definizioni di pacchetto."

msgid "Inheritance makes it easy to customize a package by inheriting from it and modifying only what is needed."
msgstr "L'ereditarietà rende facile personalizzare un pacchetto ereditando da esso e modificando solo ciò che è necessario."

msgid "Batch processing: the whole package collection can be parsed, filtered and processed.  Building a headless server with all graphical interfaces stripped out? It's possible.  Want to rebuild everything from source using specific compiler optimization flags? Pass the @code{#:make-flags \"...\"} argument to the list of packages.  It wouldn't be a stretch to think @uref{https://wiki.gentoo.org/wiki/USE_flag, Gentoo USE flags} here, but this goes even further: the changes don't have to be thought out beforehand by the packager, they can be @emph{programmed} by the user!"
msgstr "Elaborazione batch: l'intera collezione di pacchetti può essere analizzata, filtrata ed elaborata. Costruire un server headless con tutte le interfacce grafiche rimosse? È possibile. Vuoi ricompilare tutto dal sorgente usando flag di ottimizzazione del compilatore specifici? Passa l'argomento @code{#:make-flags \"...\"} alla lista dei pacchetti. Non sarebbe un'esagerazione pensare ai @uref{https://wiki.gentoo.org/wiki/USE_flag, flag USE di Gentoo} qui, ma questo va anche oltre: le modifiche non devono essere pensate in anticipo dal manutentore del pacchetto, possono essere @emph{programmed} dall'utente!"

msgid "The following tutorial covers all the basics around package creation with Guix.  It does not assume much knowledge of the Guix system nor of the Lisp language.  The reader is only expected to be familiar with the command line and to have some basic programming knowledge."
msgstr "Il seguente tutorial copre tutte le basi sulla creazione di pacchetti con Guix. Non presuppone molta conoscenza del sistema Guix né del linguaggio Lisp. Si presume che il lettore abbia familiarità con la riga di comando e abbia alcune conoscenze di programmazione di base."

msgid "The ``Defining Packages'' section of the manual introduces the basics of Guix packaging (@pxref{Defining Packages,,, guix, GNU Guix Reference Manual}).  In the following section, we will partly go over those basics again."
msgstr "La sezione \"Definire i pacchetti\" del manuale introduce le basi dell'impacchettamento con Guix (@pxref{Definire i pacchetti,,, guix.it, Manuale di riferimento di GNU Guix}). Nella sezione seguente, ripercorreremo in parte queste basi."

msgid "GNU@tie{}Hello is a dummy project that serves as an idiomatic example for packaging.  It uses the GNU build system (@code{./configure && make && make install}).  Guix already provides a package definition which is a perfect example to start with.  You can look up its declaration with @code{guix edit hello} from the command line.  Let's see how it looks:"
msgstr "GNU@tie{}Hello è un progetto fittizio che serve come esempio idiomatico per l'impacchettamento. Utilizza il sistema di compilazione GNU (@code{./configure && make && make install}). Guix fornisce già una definizione di pacchetto che è un esempio perfetto da cui partire. Puoi consultare la sua dichiarazione con @code{guix edit hello} dalla riga di comando. Vediamo come appare:"

msgid ""
"(define-public hello\n"
"  (package\n"
"    (name \"hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Hello, GNU world: An example GNU package\")\n"
"    (description\n"
"     \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"
msgstr ""
"(define-public hello\n"
"  (package\n"
"    (name \"hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Ciao, mondo GNU: Un esempio di pacchetto GNU\")\n"
"    (description\n"
"     \"GNU Hello stampa il messaggio \\\"Ciao, mondo!\\\" e poi esce. Serve come esempio di pratiche di codifica standard GNU. Come tale, supporta argomenti da riga di comando, più lingue, e così via.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"

msgid "As you can see, most of it is rather straightforward.  But let's review the fields together:"
msgstr "Come puoi vedere, la maggior parte è piuttosto semplice. Ma esaminiamo i campi insieme:"

msgid "name"
msgstr "name"

msgid "The project name.  Using Scheme conventions, we prefer to keep it lower case, without underscore and using dash-separated words."
msgstr "Il nome del progetto. Usando le convenzioni di Scheme, preferiamo mantenerlo in minuscolo, senza trattini bassi e usando parole separate da trattini."

msgid "source"
msgstr "source"

msgid "This field contains a description of the source code origin.  The @code{origin} record contains these fields:"
msgstr "Questo campo contiene una descrizione dell'origine del codice sorgente. Il record @code{origin} contiene questi campi:"

msgid "The method, here @code{url-fetch} to download via HTTP/FTP, but other methods"
msgstr "Il metodo, qui @code{url-fetch} per scaricare via HTTP/FTP, ma altri metodi"

msgid "exist, such as @code{git-fetch} for Git repositories."
msgstr "esistono, come @code{git-fetch} per i repository Git."

msgid "The URI, which is typically some @code{https://} location for @code{url-fetch}.  Here"
msgstr "L'URI, che è tipicamente una posizione @code{https://} per @code{url-fetch}. Qui"

msgid "the special `mirror://gnu` refers to a set of well known locations, all of which can be used by Guix to fetch the source, should some of them fail."
msgstr "lo speciale `mirror://gnu` si riferisce a un insieme di posizioni note, tutte utilizzabili da Guix per recuperare il sorgente, nel caso in cui alcune di esse fallissero."

msgid "The @code{sha256} checksum of the requested file.  This is essential to ensure"
msgstr "La somma di controllo @code{sha256} del file richiesto. Questo è essenziale per garantire"

msgid "the source is not corrupted.  Note that Guix works with base32 strings, hence the call to the @code{base32} function."
msgstr "che il sorgente non sia corrotto. Notare che Guix lavora con stringhe base32, da cui la chiamata alla funzione @code{base32}."

msgid "build-system"
msgstr "build-system"

msgid "This is where the power of abstraction provided by the Scheme language really shines: in this case, the @code{gnu-build-system} abstracts away the famous @code{./configure && make && make install} shell invocations.  Other build systems include the @code{trivial-build-system} which does not do anything and requires from the packager to program all the build steps, the @code{python-build-system}, the @code{emacs-build-system}, and many more (@pxref{Build Systems,,, guix, GNU Guix Reference Manual})."
msgstr "È qui che il potere di astrazione fornito dal linguaggio Scheme brilla davvero: in questo caso, il @code{gnu-build-system} astrae le famose invocazioni di shell @code{./configure && make && make install}. Altri sistemi di compilazione includono il @code{trivial-build-system} che non fa nulla e richiede al manutentore del pacchetto di programmare tutti i passaggi di compilazione, il @code{python-build-system}, il @code{emacs-build-system} e molti altri (@pxref{Sistemi di build,,, guix.it, Manuale di riferimento di GNU Guix})."

msgid "synopsis"
msgstr "synopsis"

msgid "It should be a concise summary of what the package does.  For many packages a tagline from the project's home page can be used as the synopsis."
msgstr "Dovrebbe essere un riassunto conciso di ciò che fa il pacchetto. Per molti pacchetti, uno slogan dalla home page del progetto può essere usato come sinossi."

msgid "description"
msgstr "description"

msgid "Same as for the synopsis, it's fine to re-use the project description from the homepage.  Note that Guix uses Texinfo syntax."
msgstr "Come per la sinossi, va bene riutilizzare la descrizione del progetto dalla homepage. Notare che Guix usa la sintassi Texinfo."

msgid "home-page"
msgstr "home-page"

msgid "Use HTTPS if available."
msgstr "Usa HTTPS se disponibile."

msgid "license"
msgstr "license"

msgid "See @code{guix/licenses.scm} in the project source for a full list of available licenses."
msgstr "Vedere @code{guix/licenses.scm} nel sorgente del progetto per un elenco completo delle licenze disponibili."

msgid "Time to build our first package! Nothing fancy here for now: we will stick to a dummy @code{my-hello}, a copy of the above declaration."
msgstr "È ora di compilare il nostro primo pacchetto! Niente di speciale per ora: ci atterremo a un fittizio @code{my-hello}, una copia della dichiarazione precedente."

msgid "As with the ritualistic ``Hello World'' taught with most programming languages, this will possibly be the most ``manual'' approach.  We will work out an ideal setup later; for now we will go the simplest route."
msgstr "Come per il rituale \"Hello World\" insegnato con la maggior parte dei linguaggi di programmazione, questo sarà probabilmente l'approccio più \"manuale\". Elaboreremo una configurazione ideale più tardi; per ora seguiremo la strada più semplice."

msgid "Save the following to a file @file{my-hello.scm}."
msgstr "Salva quanto segue in un file @file{my-hello.scm}."

msgid ""
"(use-modules (guix packages)\n"
"             (guix download)\n"
"             (guix build-system gnu)\n"
"             (guix licenses))\n"
"\n"
msgstr ""
"(use-modules (guix packages)\n"
"             (guix download)\n"
"             (guix build-system gnu)\n"
"             (guix licenses))\n"
"\n"

msgid ""
"(package\n"
"  (name \"my-hello\")\n"
"  (version \"2.10\")\n"
"  (source (origin\n"
"            (method url-fetch)\n"
"            (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                \".tar.gz\"))\n"
"            (sha256\n"
"             (base32\n"
"              \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"  (build-system gnu-build-system)\n"
"  (synopsis \"Hello, Guix world: An example custom Guix package\")\n"
"  (description\n"
"   \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"  (home-page \"https://www.gnu.org/software/hello/\")\n"
"  (license gpl3+))\n"
msgstr ""
"(package\n"
"  (name \"my-hello\")\n"
"  (version \"2.10\")\n"
"  (source (origin\n"
"            (method url-fetch)\n"
"            (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                \".tar.gz\"))\n"
"            (sha256\n"
"             (base32\n"
"              \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"  (build-system gnu-build-system)\n"
"  (synopsis \"Ciao, mondo Guix: Un esempio di pacchetto Guix personalizzato\")\n"
"  (description\n"
"   \"GNU Hello stampa il messaggio \\\"Ciao, mondo!\\\" e poi esce. Serve\n"
"come esempio delle pratiche di codifica standard di GNU. Come tale, supporta\n"
"argomenti da riga di comando, più linguaggi, e così via.\")\n"
"  (home-page \"https://www.gnu.org/software/hello/\")\n"
"  (license gpl3+))\n"

msgid "We will explain the extra code in a moment."
msgstr "Spiegheremo il codice extra tra un momento."

msgid "Feel free to play with the different values of the various fields.  If you change the source, you'll need to update the checksum.  Indeed, Guix refuses to build anything if the given checksum does not match the computed checksum of the source code.  To obtain the correct checksum of the package declaration, we need to download the source, compute the sha256 checksum and convert it to base32."
msgstr "Sentiti libero di giocare con i diversi valori dei vari campi. Se cambi la sorgente, dovrai aggiornare il checksum. Infatti, Guix si rifiuta di compilare qualsiasi cosa se il checksum fornito non corrisponde al checksum calcolato del codice sorgente. Per ottenere il checksum corretto della dichiarazione del pacchetto, dobbiamo scaricare la sorgente, calcolare il checksum sha256 e convertirlo in base32."

msgid "Thankfully, Guix can automate this task for us; all we need is to provide the URI:"
msgstr "Fortunatamente, Guix può automatizzare questo compito per noi; tutto ciò di cui abbiamo bisogno è fornire l'URI:"

msgid ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz\n"
"\n"
msgstr ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz\n"
"\n"

msgid ""
"Starting download of /tmp/guix-file.JLYgL7\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz...\n"
"following redirection to `https://mirror.ibcp.fr/pub/gnu/hello/hello-2.10.tar.gz'...\n"
" …10.tar.gz  709KiB                                 2.5MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\n"
msgstr ""
"Inizio download di /tmp/guix-file.JLYgL7\n"
"Da https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz...\n"
"redirezione a `https://mirror.ibcp.fr/pub/gnu/hello/hello-2.10.tar.gz'...\n"
" …10.tar.gz  709KiB                                 2.5MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\n"

msgid "In this specific case the output tells us which mirror was chosen.  If the result of the above command is not the same as in the above snippet, update your @code{my-hello} declaration accordingly."
msgstr "In questo caso specifico l'output ci dice quale mirror è stato scelto. Se il risultato del comando precedente non è lo stesso dello snippet sopra, aggiorna di conseguenza la tua dichiarazione @code{my-hello}."

msgid "Note that GNU package tarballs come with an OpenPGP signature, so you should definitely check the signature of this tarball with `gpg` to authenticate it before going further:"
msgstr "Nota che i tarball dei pacchetti GNU sono dotati di una firma OpenPGP, quindi dovresti assolutamente controllare la firma di questo tarball con `gpg` per autenticarlo prima di procedere:"

msgid ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz.sig\n"
"\n"
msgstr ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz.sig\n"
"\n"

msgid ""
"Starting download of /tmp/guix-file.03tFfb\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz.sig...\n"
"following redirection to `https://ftp.igh.cnrs.fr/pub/gnu/hello/hello-2.10.tar.gz.sig'...\n"
" ….tar.gz.sig  819B                                                                                                                       1.2MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig\n"
"0q0v86n3y38z17rl146gdakw9xc4mcscpk8dscs412j22glrv9jf\n"
"$ gpg --verify /gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig /gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"gpg: Signature made Sun 16 Nov 2014 01:08:37 PM CET\n"
"gpg:                using RSA key A9553245FDE9B739\n"
"gpg: Good signature from \"Sami Kerola <kerolasa@@iki.fi>\" [unknown]\n"
"gpg:                 aka \"Sami Kerola (http://www.iki.fi/kerolasa/) <kerolasa@@iki.fi>\" [unknown]\n"
"gpg: WARNING: This key is not certified with a trusted signature!\n"
"gpg:          There is no indication that the signature belongs to the owner.\n"
"Primary key fingerprint: 8ED3 96E3 7E38 D471 A005  30D3 A955 3245 FDE9 B739\n"
msgstr ""
"Inizio download di /tmp/guix-file.03tFfb\n"
"Da https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz.sig...\n"
"redirezione a `https://ftp.igh.cnrs.fr/pub/gnu/hello/hello-2.10.tar.gz.sig'. ..\n"
" ….tar.gz.sig  819B                                                                                                                       1.2MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig\n"
"0q0v86n3y38z17rl146gdakw9xc4mcscpk8dscs412j22glrv9jf\n"
"$ gpg --verify /gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig /gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"gpg: Firma creata dom 16 nov 2014 13:08:37 CET\n"
"gpg:                usando la chiave RSA A9553245FDE9B739\n"
"gpg: Buona firma da \"Sami Kerola <kerolasa@@iki.fi>\" [sconosciuto]\n"
"gpg:                 alias \"Sami Kerola (http://www.iki.fi/kerolasa/) <kerolasa@@iki.fi>\" [sconosciuto]\n"
"gpg: ATTENZIONE: Questa chiave non è certificata con una firma fidata!\n"
"gpg:          Non c'è alcuna indicazione che la firma appartenga al proprietario.\n"
"Impronta della chiave primaria: 8ED3 96E3 7E38 D471 A005  30D3 A955 3245 FDE9 B739\n"

msgid "You can then happily run"
msgstr "Puoi quindi eseguire felicemente"

msgid "$ guix package --install-from-file=my-hello.scm\n"
msgstr "$ guix package --install-from-file=my-hello.scm\n"

msgid "You should now have @code{my-hello} in your profile!"
msgstr "Ora dovresti avere @code{my-hello} nel tuo profilo!"

msgid ""
"$ guix package --list-installed=my-hello\n"
"my-hello\t2.10\tout\n"
"/gnu/store/f1db2mfm8syb8qvc357c53slbvf1g9m9-my-hello-2.10\n"
msgstr ""
"$ guix package --list-installed=my-hello\n"
"my-hello\t2.10\tout\n"
"/gnu/store/f1db2mfm8syb8qvc357c53slbvf1g9m9-my-hello-2.10\n"

msgid "We've gone as far as we could without any knowledge of Scheme.  Before moving on to more complex packages, now is the right time to brush up on your Scheme knowledge.  @xref{A Scheme Crash Course} to get up to speed."
msgstr "Siamo andati il più lontano possibile senza alcuna conoscenza di Scheme. Prima di passare a pacchetti più complessi, ora è il momento giusto per rispolverare la tua conoscenza di Scheme. @xref{A Scheme Crash Course} per mettersi al passo."

msgid "In the rest of this chapter we will rely on some basic Scheme programming knowledge.  Now let's detail the different possible setups for working on Guix packages."
msgstr "Nel resto di questo capitolo faremo affidamento su alcune conoscenze di base di programmazione in Scheme. Ora analizziamo le diverse possibili configurazioni per lavorare sui pacchetti Guix."

msgid "There are several ways to set up a Guix packaging environment."
msgstr "Ci sono diversi modi per configurare un ambiente di pacchettizzazione Guix."

msgid "We recommend you work directly on the Guix source checkout since it makes it easier for everyone to contribute to the project."
msgstr "Ti consigliamo di lavorare direttamente sul checkout del sorgente di Guix poiché rende più facile per tutti contribuire al progetto."

msgid "But first, let's look at other possibilities."
msgstr "Ma prima, diamo un'occhiata ad altre possibilità."

msgid "This is what we previously did with @samp{my-hello}.  With the Scheme basics we've covered, we are now able to explain the leading chunks.  As stated in @code{guix package --help}:"
msgstr "Questo è quello che abbiamo fatto in precedenza con @samp{my-hello}. Con le basi di Scheme che abbiamo trattato, siamo ora in grado di spiegare i blocchi iniziali. Come indicato in @code{guix package --help}:"

msgid ""
"  -f, --install-from-file=FILE\n"
"                         install the package that the code within FILE\n"
"                         evaluates to\n"
msgstr ""
"  -f, --install-from-file=FILE\n"
"                         installa il pacchetto a cui il codice all'interno di FILE\n"
"                         valuta\n"

msgid "Thus the last expression @emph{must} return a package, which is the case in our earlier example."
msgstr "Quindi l'ultima espressione @emph{must} restituire un pacchetto, che è il caso del nostro esempio precedente."

msgid "The @code{use-modules} expression tells which of the modules we need in the file.  Modules are a collection of values and procedures.  They are commonly called ``libraries'' or ``packages'' in other programming languages."
msgstr "L'espressione @code{use-modules} indica quali moduli ci servono nel file. I moduli sono una raccolta di valori e procedure. Sono comunemente chiamati \"librerie\" o \"pacchetti\" in altri linguaggi di programmazione."

msgid "channel"
msgstr "canale"

msgid "Guix and its package collection can be extended through @dfn{channels}.  A channel is a Git repository, public or not, containing @file{.scm} files that provide packages (@pxref{Defining Packages,,, guix, GNU Guix Reference Manual}) or services (@pxref{Defining Services,,, guix, GNU Guix Reference Manual})."
msgstr "Guix e la sua collezione di pacchetti possono essere estesi tramite @dfn{canali}. Un canale è un repository Git, pubblico o meno, contenente file @file{.scm} che forniscono pacchetti (@pxref{Definire i pacchetti,,, guix.it, Manuale di riferimento di GNU Guix}) o servizi (@pxref{Definire i servizi,,, guix.it, Manuale di riferimento di GNU Guix})."

msgid "How would you go about creating a channel? First, create a directory that will contain your @file{.scm} files, say @file{~/my-channel}:"
msgstr "Come si crea un canale? Innanzitutto, crea una directory che conterrà i tuoi file @file{.scm}, diciamo @file{~/my-channel}:"

msgid "mkdir ~/my-channel\n"
msgstr "mkdir ~/my-channel\n"

msgid "Suppose you want to add the @samp{my-hello} package we saw previously; it first needs some adjustments:"
msgstr "Supponiamo che tu voglia aggiungere il pacchetto @samp{my-hello} che abbiamo visto in precedenza; prima ha bisogno di alcune modifiche:"

msgid ""
"(define-module (my-hello)\n"
"  #:use-module (guix licenses)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix build-system gnu)\n"
"  #:use-module (guix download))\n"
"\n"
msgstr ""
"(define-module (my-hello)\n"
"  #:use-module (guix licenses)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix build-system gnu)\n"
"  #:use-module (guix download))\n"
"\n"

msgid ""
"(define-public my-hello\n"
"  (package\n"
"    (name \"my-hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Hello, Guix world: An example custom Guix package\")\n"
"    (description\n"
"     \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"
msgstr ""
"(define-public my-hello\n"
"  (package\n"
"    (name \"my-hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Ciao, mondo Guix: Un esempio di pacchetto Guix personalizzato\")\n"
"    (description\n"
"     \"GNU Hello stampa il messaggio \\\"Ciao, mondo!\\\" e poi esce. Serve come esempio delle pratiche di codifica standard di GNU. Come tale, supporta\n"
"argomenti da riga di comando, più linguaggi, e così via.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"

msgid "Note that we have assigned the package value to an exported variable name with @code{define-public}.  This is effectively assigning the package to the @code{my-hello} variable so that it can be referenced, among other as dependency of other packages."
msgstr "Nota che abbiamo assegnato il valore del pacchetto a un nome di variabile esportato con @code{define-public}. Questo assegna effettivamente il pacchetto alla variabile @code{my-hello} in modo che possa essere referenziato, tra l'altro come dipendenza di altri pacchetti."

msgid "If you use @code{guix package --install-from-file=my-hello.scm} on the above file, it will fail because the last expression, @code{define-public}, does not return a package.  If you want to use @code{define-public} in this use-case nonetheless, make sure the file ends with an evaluation of @code{my-hello}:"
msgstr "Se usi @code{guix package --install-from-file=my-hello.scm} sul file precedente, fallirà perché l'ultima espressione, @code{define-public}, non restituisce un pacchetto. Se vuoi comunque usare @code{define-public} in questo caso, assicurati che il file termini con una valutazione di @code{my-hello}:"

msgid ""
";; ...\n"
"(define-public my-hello\n"
"  ;; ...\n"
"  )\n"
"\n"
msgstr ""
";; ...\n"
"(define-public my-hello\n"
"  ;; ...\n"
"  )\n"
"\n"

msgid "my-hello\n"
msgstr "my-hello\n"

msgid "This last example is not very typical."
msgstr "Quest'ultimo esempio non è molto tipico."

msgid "Now how do you make that package visible to @command{guix} commands so you can test your packages? You need to add the directory to the search path using the @option{-L} command-line option, as in these examples:"
msgstr "Ora come si rende quel pacchetto visibile ai comandi @command{guix} in modo da poter testare i pacchetti? È necessario aggiungere la directory al percorso di ricerca usando l'opzione della riga di comando @option{-L}, come in questi esempi:"

msgid ""
"guix show -L ~/my-channel my-hello\n"
"guix build -L ~/my-channel my-hello\n"
msgstr ""
"guix show -L ~/my-channel my-hello\n"
"guix build -L ~/my-channel my-hello\n"

msgid "The final step is to turn @file{~/my-channel} into an actual channel, making your package collection seamlessly available @i{via} any @command{guix} command.  To do that, you first need to make it a Git repository:"
msgstr "Il passo finale è trasformare @file{~/my-channel} in un canale vero e proprio, rendendo la tua collezione di pacchetti disponibile senza problemi @i{via} qualsiasi comando @command{guix}. Per farlo, devi prima renderlo un repository Git:"

msgid ""
"cd ~/my-channel\n"
"git init\n"
"git add my-hello.scm\n"
"git commit -m \"First commit of my channel.\"\n"
msgstr ""
"cd ~/my-channel\n"
"git init\n"
"git add my-hello.scm\n"
"git commit -m \"Primo commit del mio canale.\"\n"

msgid "And that's it, you have a channel! From there on, you can add this channel to your channel configuration in @file{~/.config/guix/channels.scm} (@pxref{Specifying Additional Channels,,, guix, GNU Guix Reference Manual}); assuming you keep your channel local for now, the @file{channels.scm} would look something like this:"
msgstr "E questo è tutto, hai un canale! Da qui in poi, puoi aggiungere questo canale alla configurazione dei tuoi canali in @file{~/.config/guix/channels.scm} (@pxref{Specificare canali aggiuntivi,,, guix.it, Manuale di riferimento di GNU Guix}); supponendo che per ora tu mantenga il tuo canale locale, il file @file{channels.scm} assomiglierebbe a qualcosa del genere:"

msgid ""
"(append (list (channel\n"
"                (name 'my-channel)\n"
"                (url (string-append \"file://\" (getenv \"HOME\")\n"
"                                    \"/my-channel\"))))\n"
"        %default-channels)\n"
msgstr ""
"(append (list (channel\n"
"                (name 'my-channel)\n"
"                (url (string-append \"file://\" (getenv \"HOME\")\n"
"                                    \"/my-channel\"))))\n"
"        %default-channels)\n"

msgid "Next time you run @command{guix pull}, your channel will be picked up and the packages it defines will be readily available to all the @command{guix} commands, even if you do not pass @option{-L}.  The @command{guix describe} command will show that Guix is, indeed, using both the @code{my-channel} and the @code{guix} channels."
msgstr "La prossima volta che eseguirai @command{guix pull}, il tuo canale verrà rilevato e i pacchetti che definisce saranno prontamente disponibili per tutti i comandi @command{guix}, anche se non passerai @option{-L}. Il comando @command{guix describe} mostrerà che Guix sta, effettivamente, usando sia i canali @code{my-channel} che @code{guix}."

msgid "@xref{Creating a Channel,,, guix, GNU Guix Reference Manual}, for details."
msgstr "@xref{Creare un canale,,, guix.it, Manuale di riferimento di GNU Guix}, per i dettagli."

msgid "Working directly on the Guix project is recommended: it reduces the friction when the time comes to submit your changes upstream to let the community benefit from your hard work!"
msgstr "Lavorare direttamente sul progetto Guix è consigliato: riduce l'attrito quando arriva il momento di inviare le tue modifiche upstream per far sì che la comunità benefici del tuo duro lavoro!"

msgid "Unlike most software distributions, the Guix repository holds in one place both the tooling (including the package manager) and the package definitions.  This choice was made so that it would give developers the flexibility to modify the API without breakage by updating all packages at the same time.  This reduces development inertia."
msgstr "A differenza della maggior parte delle distribuzioni software, il repository di Guix contiene in un unico posto sia gli strumenti (incluso il gestore di pacchetti) che le definizioni dei pacchetti. Questa scelta è stata fatta per dare agli sviluppatori la flessibilità di modificare l'API senza rotture, aggiornando tutti i pacchetti contemporaneamente. Ciò riduce l'inerzia dello sviluppo."

msgid "Check out the official @uref{https://git-scm.com/, Git} repository:"
msgstr "Dai un'occhiata al repository @uref{https://git-scm.com/, Git} ufficiale:"

msgid "$ git clone https://git.guix.gnu.org/guix.git\n"
msgstr "$ git clone https://git.guix.gnu.org/guix.git\n"

msgid "In the rest of this article, we use @samp{$GUIX_CHECKOUT} to refer to the location of the checkout."
msgstr "Nel resto di questo articolo, useremo @samp{$GUIX_CHECKOUT} per fare riferimento alla posizione del checkout."

msgid "Follow the instructions in the manual (@pxref{Contributing,,, guix, GNU Guix Reference Manual}) to set up the repository environment."
msgstr "Segui le istruzioni nel manuale (@pxref{Contribuire,,, guix.it, Manuale di riferimento di GNU Guix}) per configurare l'ambiente del repository."

msgid "Once ready, you should be able to use the package definitions from the repository environment."
msgstr "Una volta pronto, dovresti essere in grado di utilizzare le definizioni dei pacchetti dall'ambiente del repository."

msgid "Feel free to edit package definitions found in @samp{$GUIX_CHECKOUT/gnu/packages}."
msgstr "Sentiti libero di modificare le definizioni dei pacchetti che si trovano in @samp{$GUIX_CHECKOUT/gnu/packages}."

msgid "The @samp{$GUIX_CHECKOUT/pre-inst-env} script lets you use @samp{guix} over the package collection of the repository (@pxref{Running Guix Before It Is Installed,,, guix, GNU Guix Reference Manual})."
msgstr "Lo script @samp{$GUIX_CHECKOUT/pre-inst-env} ti consente di usare @samp{guix} sulla collezione di pacchetti del repository (@pxref{Eseguire Guix prima di installarlo,,, guix.it, Manuale di riferimento di GNU Guix})."

msgid "Search packages, such as Ruby:"
msgstr "Cerca pacchetti, come Ruby:"

msgid ""
"  $ cd $GUIX_CHECKOUT\n"
"  $ ./pre-inst-env guix package --list-available=ruby\n"
"      ruby    1.8.7-p374      out     gnu/packages/ruby.scm:119:2\n"
"      ruby    2.1.6   out     gnu/packages/ruby.scm:91:2\n"
"      ruby    2.2.2   out     gnu/packages/ruby.scm:39:2\n"
msgstr ""
"  $ cd $GUIX_CHECKOUT\n"
"  $ ./pre-inst-env guix package --list-available=ruby\n"
"      ruby    1.8.7-p374      out     gnu/packages/ruby.scm:119:2\n"
"      ruby    2.1.6   out     gnu/packages/ruby.scm:91:2\n"
"      ruby    2.2.2   out     gnu/packages/ruby.scm:39:2\n"

msgid "Build a package, here Ruby version 2.1:"
msgstr "Compila un pacchetto, qui Ruby versione 2.1:"

msgid ""
"  $ ./pre-inst-env guix build --keep-failed ruby@@2.1\n"
"  /gnu/store/c13v73jxmj2nir2xjqaz5259zywsa9zi-ruby-2.1.6\n"
msgstr ""
"  $ ./pre-inst-env guix build --keep-failed ruby@@2.1\n"
"  /gnu/store/c13v73jxmj2nir2xjqaz5259zywsa9zi-ruby-2.1.6\n"

msgid "Install it to your user profile:"
msgstr "Installalo nel tuo profilo utente:"

msgid "  $ ./pre-inst-env guix package --install ruby@@2.1\n"
msgstr "  $ ./pre-inst-env guix package --install ruby@@2.1\n"

msgid "Check for common mistakes:"
msgstr "Controlla errori comuni:"

msgid "  $ ./pre-inst-env guix lint ruby@@2.1\n"
msgstr "  $ ./pre-inst-env guix lint ruby@@2.1\n"

msgid "Guix strives at maintaining a high packaging standard; when contributing to the Guix project, remember to"
msgstr "Guix si impegna a mantenere uno standard di pacchettizzazione elevato; quando contribuisci al progetto Guix, ricorda di"

msgid "follow the coding style (@pxref{Coding Style,,, guix, GNU Guix Reference Manual}),"
msgstr "seguire lo stile di codifica (@pxref{Stile del codice,,, guix.it, Manuale di riferimento di GNU Guix}),"

msgid "and review the check list from the manual (@pxref{Submitting Patches,,, guix, GNU Guix Reference Manual})."
msgstr "e rivedere la lista di controllo dal manuale (@pxref{Invia delle patches,,, guix.it, Manuale di riferimento di GNU Guix})."

msgid "Once you are happy with the result, you are welcome to send your contribution to make it part of Guix.  This process is also detailed in the manual.  (@pxref{Contributing,,, guix, GNU Guix Reference Manual})"
msgstr "Una volta che sei soddisfatto del risultato, sei il benvenuto a inviare il tuo contributo per renderlo parte di Guix. Questo processo è anche dettagliato nel manuale. (@pxref{Contribuire,,, guix.it, Manuale di riferimento di GNU Guix})"

msgid "It's a community effort so the more join in, the better Guix becomes!"
msgstr "È uno sforzo della comunità, quindi più persone si uniscono, migliore diventa Guix!"

msgid "The above ``Hello World'' example is as simple as it goes.  Packages can be more complex than that and Guix can handle more advanced scenarios.  Let's look at another, more sophisticated package (slightly modified from the source):"
msgstr "L'esempio \"Ciao Mondo\" sopra è il più semplice possibile. I pacchetti possono essere più complessi di così e Guix può gestire scenari più avanzati. Diamo un'occhiata a un altro pacchetto più sofisticato (leggermente modificato dalla fonte):"

msgid ""
"(define-module (gnu packages version-control)\n"
"  #:use-module ((guix licenses) #:prefix license:)\n"
"  #:use-module (guix utils)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix git-download)\n"
"  #:use-module (guix build-system cmake)\n"
"  #:use-module (gnu packages)\n"
"  #:use-module (gnu packages compression)\n"
"  #:use-module (gnu packages pkg-config)\n"
"  #:use-module (gnu packages python)\n"
"  #:use-module (gnu packages ssh)\n"
"  #:use-module (gnu packages tls)\n"
"  #:use-module (gnu packages web))\n"
"\n"
msgstr ""
"(define-module (gnu packages version-control)\n"
"  #:use-module ((guix licenses) #:prefix license:)\n"
"  #:use-module (guix utils)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix git-download)\n"
"  #:use-module (guix build-system cmake)\n"
"  #:use-module (gnu packages)\n"
"  #:use-module (gnu packages compression)\n"
"  #:use-module (gnu packages pkg-config)\n"
"  #:use-module (gnu packages python)\n"
"  #:use-module (gnu packages ssh)\n"
"  #:use-module (gnu packages tls)\n"
"  #:use-module (gnu packages web))\n"
"\n"

msgid ""
"(define-public my-libgit2\n"
"  (let ((commit \"e98d0a37c93574d2c6107bf7f31140b548c6a7bf\")\n"
"        (revision \"1\"))\n"
"    (package\n"
"      (name \"my-libgit2\")\n"
"      (version (git-version \"0.26.6\" revision commit))\n"
"      (source (origin\n"
"                (method git-fetch)\n"
"                (uri (git-reference\n"
"                      (url \"https://github.com/libgit2/libgit2/\")\n"
"                      (commit commit)))\n"
"                (file-name (git-file-name name version))\n"
"                (sha256\n"
"                 (base32\n"
"                  \"17pjvprmdrx4h6bb1hhc98w9qi6ki7yl57f090n9kbhswxqfs7s3\"))\n"
"                (patches (search-patches \"libgit2-mtime-0.patch\"))\n"
"                (modules '((guix build utils)))\n"
"                ;; Remove bundled software.\n"
"                (snippet '(delete-file-recursively \"deps\"))))\n"
"      (build-system cmake-build-system)\n"
"      (outputs '(\"out\" \"debug\"))\n"
"      (arguments\n"
"       `(#:tests? #true                         ; Run the test suite (this is the default)\n"
"         #:configure-flags '(\"-DUSE_SHA1DC=ON\") ; SHA-1 collision detection\n"
"         #:phases\n"
"         (modify-phases %standard-phases\n"
"           (add-after 'unpack 'fix-hardcoded-paths\n"
"             (lambda _\n"
"               (substitute* \"tests/repo/init.c\"\n"
"                 ((\"#!/bin/sh\") (string-append \"#!\" (which \"sh\"))))\n"
"               (substitute* \"tests/clar/fs.h\"\n"
"                 ((\"/bin/cp\") (which \"cp\"))\n"
"                 ((\"/bin/rm\") (which \"rm\")))))\n"
"           ;; Run checks more verbosely.\n"
"           (replace 'check\n"
"             (lambda* (#:key tests? #:allow-other-keys)\n"
"               (when tests?\n"
"                 (invoke \"./libgit2_clar\" \"-v\" \"-Q\"))))\n"
"           (add-after 'unpack 'make-files-writable-for-tests\n"
"             (lambda _ (for-each make-file-writable (find-files \".\")))))))\n"
"      (inputs\n"
"       (list libssh2 http-parser python-wrapper))\n"
"      (native-inputs\n"
"       (list pkg-config))\n"
"      (propagated-inputs\n"
"       ;; These two libraries are in 'Requires.private' in libgit2.pc.\n"
"       (list openssl zlib))\n"
"      (home-page \"https://libgit2.github.com/\")\n"
"      (synopsis \"Library providing Git core methods\")\n"
"      (description\n"
"       \"Libgit2 is a portable, pure C implementation of the Git core methods\n"
"provided as a re-entrant linkable library with a solid API, allowing you to\n"
"write native speed custom Git applications in any language with bindings.\")\n"
"      ;; GPLv2 with linking exception\n"
"      (license license:gpl2))))\n"
msgstr ""
"(define-public my-libgit2\n"
"  (let ((commit \"e98d0a37c93574d2c6107bf7f31140b548c6a7bf\")\n"
"        (revision \"1\"))\n"
"    (package\n"
"      (name \"my-libgit2\")\n"
"      (version (git-version \"0.26.6\" revision commit))\n"
"      (source (origin\n"
"                (method git-fetch)\n"
"                (uri (git-reference\n"
"                      (url \"https://github.com/libgit2/libgit2/\")\n"
"                      (commit commit)))\n"
"                (file-name (git-file-name name version))\n"
"                (sha256\n"
"                 (base32\n"
"                  \"17pjvprmdrx4h6bb1hhc98w9qi6ki7yl57f090n9kbhswxqfs7s3\"))\n"
"                (patches (search-patches \"libgit2-mtime-0.patch\"))\n"
"                (modules '((guix build utils)))\n"
"                ;; Rimuovi software in bundle.\n"
"                (snippet '(delete-file-recursively \"deps\"))))\n"
"      (build-system cmake-build-system)\n"
"      (outputs '(\"out\" \"debug\"))\n"
"      (arguments\n"
"       `(#:tests? #true                         ; Esegui la suite di test (questo è il valore predefinito)\n"
"         #:configure-flags '(\"-DUSE_SHA1DC=ON\") ; Rilevamento collisioni SHA-1\n"
"         #:phases\n"
"         (modify-phases %standard-phases\n"
"           (add-after 'unpack 'fix-hardcoded-paths\n"
"             (lambda _\n"
"               (substitute* \"tests/repo/init.c\"\n"
"                 ((\"#!/bin/sh\") (string-append \"#!\" (which \"sh\"))))\n"
"               (substitute* \"tests/clar/fs.h\"\n"
"                 ((\"/bin/cp\") (which \"cp\"))\n"
"                 ((\"/bin/rm\") (which \"rm\")))))\n"
"           ;; Esegui i controlli in modo più verboso.\n"
"           (replace 'check\n"
"             (lambda* (#:key tests? #:allow-other-keys)\n"
"               (when tests?\n"
"                 (invoke \"./libgit2_clar\" \"-v\" \"-Q\"))))\n"
"           (add-after 'unpack 'make-files-writable-for-tests\n"
"             (lambda _ (for-each make-file-writable (find-files \".\")))))))\n"
"      (inputs\n"
"       (list libssh2 http-parser python-wrapper))\n"
"      (native-inputs\n"
"       (list pkg-config))\n"
"      (propagated-inputs\n"
"       ;; Queste due librerie sono in 'Requires.private' in libgit2.pc.\n"
"       (list openssl zlib))\n"
"      (home-page \"https://libgit2.github.com/\")\n"
"      (synopsis \"Libreria che fornisce i metodi core di Git\")\n"
"      (description\n"
"       \"Libgit2 è un'implementazione portatile e pura in C dei metodi core di Git\n"
"fornita come libreria rientrante collegabile con una solida API, che consente di\n"
"scrivere applicazioni Git personalizzate a velocità nativa in qualsiasi linguaggio con binding.\")\n"
"      ;; GPLv2 con eccezione di linking\n"
"      (license license:gpl2))))\n"

msgid "(In those cases were you only want to tweak a few fields from a package definition, you should rely on inheritance instead of copy-pasting everything.  See below.)"
msgstr ""
"(Nei casi in cui si desidera solo modificare alcuni campi da una definizione di pacchetto,\n"
"si dovrebbe fare affidamento sull'ereditarietà invece di copiare e incollare tutto.  Vedi sotto.)"

msgid "Let's discuss those fields in depth."
msgstr "Discutiamo questi campi in dettaglio."

msgid "@code{git-fetch} method"
msgstr "Metodo @code{git-fetch}"

msgid "Unlike the @code{url-fetch} method, @code{git-fetch} expects a @code{git-reference} which takes a Git repository and a commit.  The commit can be any Git reference such as tags, so if the @code{version} is tagged, then it can be used directly.  Sometimes the tag is prefixed with a @code{v}, in which case you'd use @code{(commit (string-append \"v\" version))}."
msgstr ""
"A differenza del metodo @code{url-fetch}, @code{git-fetch} si aspetta un @code{git-reference}\n"
"che accetta un repository Git e un commit. Il commit può essere qualsiasi riferimento Git come i tag,\n"
"quindi se la @code{version} è taggata, allora può essere usata direttamente.\n"
"A volte il tag è preceduto da una @code{v}, nel qual caso si userebbe @code{(commit (string-append \"v\" version))}."

msgid "To ensure that the source code from the Git repository is stored in a directory with a descriptive name, we use @code{(file-name (git-file-name name version))}."
msgstr ""
"Per assicurarsi che il codice sorgente dal repository Git sia memorizzato in una\n"
"directory con un nome descrittivo, usiamo @code{(file-name (git-file-name name version))}."

msgid "The @code{git-version} procedure can be used to derive the version when packaging programs for a specific commit, following the Guix contributor guidelines (@pxref{Version Numbers,,, guix, GNU Guix Reference Manual})."
msgstr ""
"La procedura @code{git-version} può essere usata per derivare la versione quando\n"
"si impacchettano programmi per un commit specifico, seguendo le linee guida per i contributori di Guix\n"
"(@pxref{Numeri di versione,,, guix.it, Manuale di riferimento di GNU Guix})."

msgid "How does one obtain the @code{sha256} hash that's in there, you ask? By invoking @command{guix hash} on a checkout of the desired commit, along these lines:"
msgstr ""
"Come si ottiene l'hash @code{sha256} che si trova lì, chiedi? Invocando @command{guix hash}\n"
"su un checkout del commit desiderato, in questo modo:"

msgid ""
"git clone https://github.com/libgit2/libgit2/\n"
"cd libgit2\n"
"git checkout v0.26.6\n"
"guix hash -rx .\n"
msgstr ""
"git clone https://github.com/libgit2/libgit2/\n"
"cd libgit2\n"
"git checkout v0.26.6\n"
"guix hash -rx .\n"

msgid "@command{guix hash -rx} computes a SHA256 hash over the whole directory, excluding the @file{.git} sub-directory (@pxref{Invoking guix hash,,, guix, GNU Guix Reference Manual})."
msgstr ""
"@command{guix hash -rx} calcola un hash SHA256 sull'intera directory,\n"
"escludendo la sottodirectory @file{.git} (@pxref{Invocare guix hash,,, guix.it, Manuale di riferimento di GNU Guix})."

msgid "In the future, @command{guix download} will hopefully be able to do these steps for you, just like it does for regular downloads."
msgstr ""
"In futuro, @command{guix download} sarà, si spera, in grado di eseguire questi\n"
"passaggi per te, proprio come fa per i download normali."

msgid "Snippets"
msgstr "Frammenti"

msgid "Snippets are quoted (i.e. non-evaluated) Scheme code that are a means of patching the source.  They are a Guix-y alternative to the traditional @file{.patch} files.  Because of the quote, the code in only evaluated when passed to the Guix daemon for building.  There can be as many snippets as needed."
msgstr ""
"Gli snippet sono codice Scheme quotato (cioè non valutato) che è un mezzo per\n"
"applicare patch al sorgente. Sono un'alternativa in stile Guix ai tradizionali\n"
"file @file{.patch}. A causa della quotatura, il codice viene valutato solo quando\n"
"passato al demone Guix per la costruzione. Possono esserci quanti snippet sono necessari."

msgid "Snippets might need additional Guile modules which can be imported from the @code{modules} field."
msgstr "Gli snippet potrebbero aver bisogno di moduli Guile aggiuntivi che possono essere importati dal campo @code{modules}."

msgid "Inputs"
msgstr "Input"

msgid "There are 3 different input types.  In short:"
msgstr "Ci sono 3 diversi tipi di input. In breve:"

msgid "native-inputs"
msgstr "native-inputs"

msgid "Required for building but not runtime -- installing a package through a substitute won't install these inputs."
msgstr ""
"Richiesti per la compilazione ma non per il runtime -- l'installazione di un pacchetto tramite un\n"
"sostituto non installerà questi input."

msgid "inputs"
msgstr "inputs"

msgid "Installed in the store but not in the profile, as well as being present at build time."
msgstr "Installati nello store ma non nel profilo, oltre ad essere presenti al momento della compilazione."

msgid "propagated-inputs"
msgstr "propagated-inputs"

msgid "Installed in the store and in the profile, as well as being present at build time."
msgstr "Installati nello store e nel profilo, oltre ad essere presenti al momento della compilazione."

msgid "@xref{package Reference,,, guix, GNU Guix Reference Manual} for more details."
msgstr "@xref{Riferimenti per 'package',,, guix.it, Manuale di riferimento di GNU Guix} per maggiori dettagli."

msgid "The distinction between the various inputs is important: if a dependency can be handled as an @emph{input} instead of a @emph{propagated input}, it should be done so, or else it ``pollutes'' the user profile for no good reason."
msgstr ""
"La distinzione tra i vari input è importante: se una dipendenza può\n"
"essere gestita come un @emph{input} invece di un @emph{input propagato}, dovrebbe\n"
"essere fatto così, altrimenti ``inquina'' il profilo utente senza una buona\n"
"ragione."

msgid "For instance, a user installing a graphical program that depends on a command line tool might only be interested in the graphical part, so there is no need to force the command line tool into the user profile.  The dependency is a concern to the package, not to the user.  @emph{Inputs} make it possible to handle dependencies without bugging the user by adding undesired executable files (or libraries) to their profile."
msgstr ""
"Ad esempio, un utente che installa un programma grafico che dipende da uno\n"
"strumento a riga di comando potrebbe essere interessato solo alla parte grafica, quindi non è necessario\n"
"forzare lo strumento a riga di comando nel profilo utente.\n"
"La dipendenza è una preoccupazione del pacchetto, non dell'utente.  Gli @emph{Inputs} rendono\n"
"possibile gestire le dipendenze senza infastidire l'utente aggiungendo\n"
"file eseguibili (o librerie) indesiderati al loro profilo."

msgid "Same goes for @emph{native-inputs}: once the program is installed, build-time dependencies can be safely garbage-collected.  It also matters when a substitute is available, in which case only the @emph{inputs} and @emph{propagated inputs} will be fetched: the @emph{native inputs} are not required to install a package from a substitute."
msgstr ""
"Lo stesso vale per gli @emph{native-inputs}: una volta installato il programma,\n"
"le dipendenze di compilazione possono essere tranquillamente raccolte come spazzatura.\n"
"È importante anche quando è disponibile un sostituto, nel qual caso verranno scaricati solo gli @emph{inputs} e gli @emph{propagated inputs}:\n"
"gli @emph{native inputs} non sono richiesti per installare un pacchetto da un sostituto."

msgid "Note"
msgstr "Nota"

msgid "You may see here and there snippets where package inputs are written quite differently, like so:"
msgstr ""
"Potresti vedere qua e là snippet in cui gli input dei pacchetti sono scritti in modo piuttosto\n"
"diverso, come questo:"

msgid ""
";; The \"old style\" for inputs.\n"
"(inputs\n"
" `((\"libssh2\" ,libssh2)\n"
"   (\"http-parser\" ,http-parser)\n"
"   (\"python\" ,python-wrapper)))\n"
msgstr ""
";; Il \"vecchio stile\" per gli input.\n"
"(inputs\n"
" `((\"libssh2\" ,libssh2)\n"
"   (\"http-parser\" ,http-parser)\n"
"   (\"python\" ,python-wrapper)))\n"

msgid "This is the ``old style'', where each input in the list is explicitly given a label (a string).  It is still supported but we recommend using the style above instead.  @xref{package Reference,,, guix, GNU Guix Reference Manual}, for more info."
msgstr ""
"Questo è il ``vecchio stile'', dove a ciascun input nell'elenco viene esplicitamente data\n"
"un'etichetta (una stringa). È ancora supportato ma raccomandiamo di usare invece lo stile\n"
"sopra. @xref{Riferimenti per 'package',,, guix.it, Manuale di riferimento di GNU Guix}, per maggiori informazioni."

msgid "Outputs"
msgstr "Prodotti"

msgid "Just like how a package can have multiple inputs, it can also produce multiple outputs."
msgstr ""
"Proprio come un pacchetto può avere più input, può anche produrre\n"
"più output."

msgid "Each output corresponds to a separate directory in the store."
msgstr "Ogni output corrisponde a una directory separata nello store."

msgid "The user can choose which output to install; this is useful to save space or to avoid polluting the user profile with unwanted executables or libraries."
msgstr ""
"L'utente può scegliere quale output installare; questo è utile per risparmiare spazio o\n"
"per evitare di inquinare il profilo utente con eseguibili o librerie indesiderate."

msgid "Output separation is optional.  When the @code{outputs} field is left out, the default and only output (the complete package) is referred to as @code{\"out\"}."
msgstr ""
"La separazione dell'output è opzionale. Quando il campo @code{outputs} viene omesso,\n"
"l'output predefinito e unico (il pacchetto completo) è indicato come @code{\"out\"}."

msgid "Typical separate output names include @code{debug} and @code{doc}."
msgstr "I nomi tipici degli output separati includono @code{debug} e @code{doc}."

msgid "It's advised to separate outputs only when you've shown it's worth it: if the output size is significant (compare with @code{guix size}) or in case the package is modular."
msgstr ""
"Si consiglia di separare gli output solo quando si è dimostrato che ne vale la pena:\n"
"se la dimensione dell'output è significativa (confrontare con @code{guix size}) o nel caso\n"
"in cui il pacchetto sia modulare."

msgid "Build system arguments"
msgstr "Argomenti del sistema di compilazione"

msgid "The @code{arguments} is a keyword-value list used to configure the build process."
msgstr "L'argomento @code{arguments} è un elenco di coppie chiave-valore utilizzato per configurare il processo di compilazione."

msgid "The simplest argument @code{#:tests?} can be used to disable the test suite when building the package.  This is mostly useful when the package does not feature any test suite.  It's strongly recommended to keep the test suite on if there is one."
msgstr ""
"L'argomento più semplice @code{#:tests?} può essere utilizzato per disabilitare la suite di test\n"
"durante la compilazione del pacchetto. Questo è utile soprattutto quando il pacchetto non\n"
"dispone di alcuna suite di test. Si consiglia vivamente di mantenere la suite di test attiva\n"
"se presente."

msgid "Another common argument is @code{:make-flags}, which specifies a list of flags to append when running make, as you would from the command line.  For instance, the following flags"
msgstr ""
"Un altro argomento comune è @code{:make-flags}, che specifica un elenco di\n"
"flag da aggiungere quando si esegue make, come si farebbe dalla riga di comando.\n"
"Ad esempio, i seguenti flag"

msgid ""
"#:make-flags (list (string-append \"prefix=\" (assoc-ref %outputs \"out\"))\n"
"                   \"CC=gcc\")\n"
msgstr ""
"#:make-flags (list (string-append \"prefix=\" (assoc-ref %outputs \"out\"))\n"
"                   \"CC=gcc\")\n"

msgid "translate into"
msgstr "si traducono in"

msgid "$ make CC=gcc prefix=/gnu/store/...-<out>\n"
msgstr "$ make CC=gcc prefix=/gnu/store/...-<out>\n"

msgid "This sets the C compiler to @code{gcc} and the @code{prefix} variable (the installation directory in Make parlance) to @code{(assoc-ref %outputs \"out\")}, which is a build-stage global variable pointing to the destination directory in the store (something like @file{/gnu/store/...-my-libgit2-20180408})."
msgstr ""
"Questo imposta il compilatore C a @code{gcc} e la variabile @code{prefix} (la\n"
"directory di installazione nel linguaggio Make) a @code{(assoc-ref %outputs \"out\")}, che è una variabile globale di fase di compilazione che punta alla directory di destinazione\n"
"nello store (qualcosa come @file{/gnu/store/...-my-libgit2-20180408})."

msgid "Similarly, it's possible to set the configure flags:"
msgstr "Allo stesso modo, è possibile impostare i flag di configurazione:"

msgid "#:configure-flags '(\"-DUSE_SHA1DC=ON\")\n"
msgstr "#:configure-flags '(\"-DUSE_SHA1DC=ON\")\n"

msgid "The @code{%build-inputs} variable is also generated in scope.  It's an association table that maps the input names to their store directories."
msgstr ""
"La variabile @code{%build-inputs} viene anche generata nello scope. È una\n"
"tabella di associazione che mappa i nomi degli input alle loro directory dello store."

msgid "The @code{phases} keyword lists the sequential steps of the build system.  Typically phases include @code{unpack}, @code{configure}, @code{build}, @code{install} and @code{check}.  To know more about those phases, you need to work out the appropriate build system definition in @samp{$GUIX_CHECKOUT/guix/build/gnu-build-system.scm}:"
msgstr ""
"La parola chiave @code{phases} elenca i passaggi sequenziali del sistema di compilazione.\n"
"Tipicamente le fasi includono @code{unpack}, @code{configure}, @code{build},\n"
"@code{install} e @code{check}. Per saperne di più su queste fasi, è necessario\n"
"trovare la definizione appropriata del sistema di compilazione in @samp{$GUIX_CHECKOUT/\n"
"guix/build/gnu-build-system.scm}:"

msgid ""
"(define %standard-phases\n"
"  ;; Standard build phases, as a list of symbol/procedure pairs.\n"
"  (let-syntax ((phases (syntax-rules ()\n"
"                         ((_ p ...) `((p . ,p) ...)))))\n"
"    (phases set-SOURCE-DATE-EPOCH set-paths install-locale unpack\n"
"            bootstrap\n"
"            patch-usr-bin-file\n"
"            patch-source-shebangs configure patch-generated-file-shebangs\n"
"            build check install\n"
"            patch-shebangs strip\n"
"            validate-runpath\n"
"            validate-documentation-location\n"
"            delete-info-dir-file\n"
"            patch-dot-desktop-files\n"
"            make-dynamic-linker-cache\n"
"            install-license-files\n"
"            reset-gzip-timestamps\n"
"            compress-documentation)))\n"
msgstr ""
"(define %standard-phases\n"
"  ;; Fasi di compilazione standard, come un elenco di coppie simbolo/procedura.\n"
"  (let-syntax ((phases (syntax-rules ()\n"
"                         ((_ p ...) `((p . ,p) ...)))))\n"
"    (phases set-SOURCE-DATE-EPOCH set-paths install-locale unpack\n"
"            bootstrap\n"
"            patch-usr-bin-file\n"
"            patch-source-shebangs configure patch-generated-file-shebangs\n"
"            build check install\n"
"            patch-shebangs strip\n"
"            validate-runpath\n"
"            validate-documentation-location\n"
"            delete-info-dir-file\n"
"            patch-dot-desktop-files\n"
"            make-dynamic-linker-cache\n"
"            install-license-files\n"
"            reset-gzip-timestamps\n"
"            compress-documentation)))\n"

msgid "Or from the REPL:"
msgstr "O dalla REPL:"

msgid ""
"(add-to-load-path \"/path/to/guix/checkout\")\n"
",use (guix build gnu-build-system)\n"
"(map car %standard-phases)\n"
"@result{} (set-SOURCE-DATE-EPOCH set-paths install-locale unpack bootstrap patch-usr-bin-file patch-source-shebangs configure patch-generated-file-shebangs build check install patch-shebangs strip validate-runpath validate-documentation-location delete-info-dir-file patch-dot-desktop-files make-dynamic-linker-cache install-license-files reset-gzip-timestamps compress-documentation)\n"
msgstr ""
"(add-to-load-path \"/path/to/guix/checkout\")\n"
",use (guix build gnu-build-system)\n"
"(map car %standard-phases)\n"
"@result{} (set-SOURCE-DATE-EPOCH set-paths install-locale unpack bootstrap patch-usr-bin-file patch-source-shebangs configure patch-generated-file-shebangs build check install patch-shebangs strip validate-runpath validate-documentation-location delete-info-dir-file patch-dot-desktop-files make-dynamic-linker-cache install-license-files reset-gzip-timestamps compress-documentation)\n"

msgid "If you want to know more about what happens during those phases, consult the associated procedures."
msgstr "Se vuoi saperne di più su cosa succede durante queste fasi, consulta le procedure associate."

msgid "For instance, as of this writing the definition of @code{unpack} for the GNU build system is:"
msgstr "Ad esempio, al momento in cui scrivo, la definizione di @code{unpack} per il sistema di compilazione GNU è:"

msgid ""
"(define* (unpack #:key source #:allow-other-keys)\n"
"  \"Unpack SOURCE in the working directory, and change directory within the\n"
"source.  When SOURCE is a directory, copy it in a sub-directory of the current\n"
"working directory.\"\n"
"  (if (file-is-directory? source)\n"
"      (begin\n"
"        (mkdir \"source\")\n"
"        (chdir \"source\")\n"
"\n"
msgstr ""
"(define* (unpack #:key source #:allow-other-keys)\n"
"  \"Decomprime SOURCE nella directory di lavoro e cambia directory all'interno del\n"
"sorgente. Quando SOURCE è una directory, copiala in una sottodirectory della\n"
"directory di lavoro corrente.\"\n"
"  (if (file-is-directory? source)\n"
"      (begin\n"
"        (mkdir \"source\")\n"
"        (chdir \"source\")\n"
"\n"

msgid ""
"        ;; Preserve timestamps (set to the Epoch) on the copied tree so that\n"
"        ;; things work deterministically.\n"
"        (copy-recursively source \".\"\n"
"                          #:keep-mtime? #t)\n"
"        ;; Make the source checkout files writable, for convenience.\n"
"        (for-each (lambda (f)\n"
"                    (false-if-exception (make-file-writable f)))\n"
"                  (find-files \".\")))\n"
"      (begin\n"
"        (cond\n"
"         ((string-suffix? \".zip\" source)\n"
"          (invoke \"unzip\" source))\n"
"         ((tarball? source)\n"
"          (invoke \"tar\" \"xvf\" source))\n"
"         (else\n"
"          (let ((name (strip-store-file-name source))\n"
"                (command (compressor source)))\n"
"            (copy-file source name)\n"
"            (when command\n"
"              (invoke command \"--decompress\" name)))))\n"
"        ;; Attempt to change into child directory.\n"
"        (and=> (first-subdirectory \".\") chdir))))\n"
msgstr ""
"        ;; Preserva i timestamp (impostati sull'Epoch) sull'albero copiato in modo che\n"
"        ;; le cose funzionino in modo deterministico.\n"
"        (copy-recursively source \".\"\n"
"                          #:keep-mtime? #t)\n"
"        ;; Rendi scrivibili i file del checkout sorgente, per comodità.\n"
"        (for-each (lambda (f)\n"
"                    (false-if-exception (make-file-writable f)))\n"
"                  (find-files \".\")))\n"
"      (begin\n"
"        (cond\n"
"         ((string-suffix? \".zip\" source)\n"
"          (invoke \"unzip\" source))\n"
"         ((tarball? source)\n"
"          (invoke \"tar\" \"xvf\" source))\n"
"         (else\n"
"          (let ((name (strip-store-file-name source))\n"
"                (command (compressor source)))\n"
"            (copy-file source name)\n"
"            (when command\n"
"              (invoke command \"--decompress\" name)))))\n"
"        ;; Tenta di cambiare nella directory figlia.\n"
"        (and=> (first-subdirectory \".\") chdir))))\n"

msgid "Note the @code{chdir} call: it changes the working directory to where the source was unpacked.  Thus every phase following the @code{unpack} will use the source as a working directory, which is why we can directly work on the source files.  That is to say, unless a later phase changes the working directory to something else."
msgstr ""
"Nota la chiamata @code{chdir}: cambia la directory di lavoro dove il sorgente è stato decompresso.\n"
"Quindi ogni fase successiva a @code{unpack} userà il sorgente come directory di lavoro,\n"
"ecco perché possiamo lavorare direttamente sui file sorgente. Cioè, a meno che una fase successiva non cambi la directory di lavoro in qualcos'altro."

msgid "We modify the list of @code{%standard-phases} of the build system with the @code{modify-phases} macro as per the list of specified modifications, which may have the following forms:"
msgstr ""
"Modifichiamo l'elenco di @code{%standard-phases} del sistema di compilazione con la\n"
"macro @code{modify-phases} secondo l'elenco delle modifiche specificate, che\n"
"possono avere le seguenti forme:"

msgid "@code{(add-before @var{phase} @var{new-phase} @var{procedure})}: Run @var{procedure} named @var{new-phase} before @var{phase}."
msgstr ""
"@code{(add-before @var{phase} @var{new-phase} @var{procedure})}: Esegue la\n"
"@var{procedure} denominata @var{new-phase} prima di @var{phase}."

msgid "@code{(add-after @var{phase} @var{new-phase} @var{procedure})}: Same, but afterwards."
msgstr ""
"@code{(add-after @var{phase} @var{new-phase} @var{procedure})}: Idem, ma\n"
"dopo."

msgid "@code{(replace @var{phase} @var{procedure})}."
msgstr "@code{(replace @var{phase} @var{procedure})}."

msgid "@code{(delete @var{phase})}."
msgstr "@code{(delete @var{phase})}."

msgid "The @var{procedure} supports the keyword arguments @code{inputs} and @code{outputs}.  Each input (whether @emph{native}, @emph{propagated} or not) and output directory is referenced by their name in those variables.  Thus @code{(assoc-ref outputs \"out\")} is the store directory of the main output of the package.  A phase procedure may look like this:"
msgstr ""
"La @var{procedure} supporta gli argomenti con parola chiave @code{inputs} e\n"
"@code{outputs}. Ogni input (sia @emph{native}, @emph{propagato} o meno)\n"
"e la directory di output sono referenziati dai loro nomi in quelle variabili. Quindi\n"
"@code{(assoc-ref outputs \"out\")} è la directory dello store dell'output principale\n"
"del pacchetto. Una procedura di fase può apparire così:"

msgid ""
"(lambda* (#:key inputs outputs #:allow-other-keys)\n"
"  (let ((bash-directory (assoc-ref inputs \"bash\"))\n"
"        (output-directory (assoc-ref outputs \"out\"))\n"
"        (doc-directory (assoc-ref outputs \"doc\")))\n"
"    ;; ... ))\n"
msgstr ""
"(lambda* (#:key inputs outputs #:allow-other-keys)\n"
"  (let ((bash-directory (assoc-ref inputs \"bash\"))\n"
"        (output-directory (assoc-ref outputs \"out\"))\n"
"        (doc-directory (assoc-ref outputs \"doc\")))\n"
"    ;; ... ))\n"

msgid "Its return value is ignored."
msgstr "Il suo valore di ritorno viene ignorato."

msgid "Code staging"
msgstr "Code staging"

msgid "The astute reader may have noticed the quasi-quote and comma syntax in the argument field.  Indeed, the build code in the package declaration should not be evaluated on the client side, but only when passed to the Guix daemon.  This mechanism of passing code around two running processes is called @uref{https://arxiv.org/abs/1709.00833, code staging}."
msgstr ""
"Il lettore attento potrebbe aver notato la sintassi di quasi-citazione e virgola nel\n"
"campo argomento. Infatti, il codice di compilazione nella dichiarazione del pacchetto non dovrebbe\n"
"essere valutato lato client, ma solo quando passato al demone Guix.\n"
"Questo meccanismo di passaggio di codice tra due processi in esecuzione è chiamato\n"
"@uref{https://arxiv.org/abs/1709.00833, staging del codice}."

msgid "Utility functions"
msgstr "Funzioni di utilità"

msgid "When customizing @code{phases}, we often need to write code that mimics the equivalent system invocations (@code{make}, @code{mkdir}, @code{cp}, etc.)@: commonly used during regular ``Unix-style'' installations."
msgstr ""
"Quando si personalizzano le @code{phases}, spesso è necessario scrivere codice che imita le\n"
"invocazioni di sistema equivalenti (@code{make}, @code{mkdir}, @code{cp}, ecc.)@:\n"
"comunemente usate durante le normali installazioni in ``stile Unix''."

msgid "Some like @code{chmod} are native to Guile.  @xref{,,, guile, Guile reference manual} for a complete list."
msgstr ""
"Alcune come @code{chmod} sono native di Guile. @xref{,,, guile, Manuale di riferimento di Guile}\n"
"per un elenco completo."

msgid "Guix provides additional helper functions which prove especially handy in the context of package management."
msgstr ""
"Guix fornisce funzioni helper aggiuntive che si rivelano particolarmente utili nel\n"
"contesto della gestione dei pacchetti."

msgid "Some of those functions can be found in @samp{$GUIX_CHECKOUT/guix/guix/build/utils.scm}.  Most of them mirror the behaviour of the traditional Unix system commands:"
msgstr ""
"Alcune di queste funzioni si trovano in @samp{$GUIX_CHECKOUT/guix/guix/build/\n"
"utils.scm}. La maggior parte di esse riflette il comportamento dei comandi di sistema Unix tradizionali:"

msgid "which"
msgstr "which"

msgid "Like the @samp{which} system command."
msgstr "Come il comando di sistema @samp{which}."

msgid "find-files"
msgstr "find-files"

msgid "Akin to the @samp{find} system command."
msgstr "Simile al comando di sistema @samp{find}."

msgid "mkdir-p"
msgstr "mkdir-p"

msgid "Like @samp{mkdir -p}, which creates all parents as needed."
msgstr "Come @samp{mkdir -p}, che crea tutti i genitori se necessario."

msgid "install-file"
msgstr "install-file"

msgid "Similar to @samp{install} when installing a file to a (possibly non-existing) directory.  Guile has @code{copy-file} which works like @samp{cp}."
msgstr ""
"Simile a @samp{install} quando si installa un file in una directory (possibilmente non esistente).\n"
"Guile ha @code{copy-file} che funziona come @samp{cp}."

msgid "copy-recursively"
msgstr "copy-recursively"

msgid "Like @samp{cp -r}."
msgstr "Come @samp{cp -r}."

msgid "delete-file-recursively"
msgstr "delete-file-recursively"

msgid "Like @samp{rm -rf}."
msgstr "Come @samp{rm -rf}."

msgid "invoke"
msgstr "invoke"

msgid "Run an executable.  This should be used instead of @code{system*}."
msgstr "Esegui un eseguibile. Questo dovrebbe essere usato al posto di @code{system*}."

msgid "with-directory-excursion"
msgstr "with-directory-excursion"

msgid "Run the body in a different working directory, then restore the previous working directory."
msgstr ""
"Esegui il corpo in una diversa directory di lavoro, quindi ripristina la precedente\n"
"directory di lavoro."

msgid "substitute*"
msgstr "substitute*"

msgid "A ``@command{sed}-like'' function."
msgstr "Una funzione ``simile a @command{sed}''."

msgid "@xref{Build Utilities,,, guix, GNU Guix Reference Manual}, for more information on these utilities."
msgstr ""
"@xref{Utilità di build,,, guix.it, Manuale di riferimento di GNU Guix}, per maggiori\n"
"informazioni su queste utilità."

msgid "Module prefix"
msgstr "Prefisso modulo"

msgid "The license in our last example needs a prefix: this is because of how the @code{license} module was imported in the package, as @code{#:use-module ((guix licenses)  #:prefix license:)}.  The Guile module import mechanism (@pxref{Using Guile Modules,,, guile, Guile reference manual})  gives the user full control over namespacing: this is needed to avoid clashes between, say, the @samp{zlib} variable from @samp{licenses.scm} (a @emph{license} value) and the @samp{zlib} variable from @samp{compression.scm} (a @emph{package} value)."
msgstr ""
"La licenza nel nostro ultimo esempio richiede un prefisso: ciò è dovuto a come il\n"
"modulo @code{license} è stato importato nel pacchetto, come @code{#:use-module ((guix licenses) #:prefix license:)}.\n"
"Il meccanismo di importazione dei moduli Guile\n"
"(@pxref{Using Guile Modules,,, guile, Manuale di riferimento di Guile}) offre all'utente il controllo completo sulla gestione degli spazi dei nomi:\n"
"ciò è necessario per evitare conflitti tra, ad esempio, la variabile @samp{zlib} di @samp{licenses.scm}\n"
"(un valore di @emph{license}) e la variabile @samp{zlib} di @samp{compression.scm}\n"
"(un valore di @emph{package})."

msgid "What we've seen so far covers the majority of packages using a build system other than the @code{trivial-build-system}.  The latter does not automate anything and leaves you to build everything manually.  This can be more demanding and we won't cover it here for now, but thankfully it is rarely necessary to fall back on this system."
msgstr ""
"Quanto abbiamo visto finora copre la maggior parte dei pacchetti che utilizzano un sistema di compilazione\n"
"diverso da @code{trivial-build-system}. Quest'ultimo non automatizza\n"
"nulla e ti lascia il compito di compilare tutto manualmente. Questo può essere più\n"
"impegnativo e per ora non lo tratteremo qui, ma fortunatamente è raramente\n"
"necessario ricorrere a questo sistema."

msgid "For the other build systems, such as ASDF, Emacs, Perl, Ruby and many more, the process is very similar to the GNU build system except for a few specialized arguments."
msgstr ""
"Per gli altri sistemi di compilazione, come ASDF, Emacs, Perl, Ruby e molti altri,\n"
"il processo è molto simile al sistema di compilazione GNU, ad eccezione di alcuni\n"
"argomenti specializzati."

msgid "@xref{Build Systems,,, guix, GNU Guix Reference Manual}, for more information on build systems, or check the source code in the @samp{$GUIX_CHECKOUT/guix/build} and @samp{$GUIX_CHECKOUT/guix/build-system} directories."
msgstr ""
"@xref{Sistemi di build,,, guix.it, Manuale di riferimento di GNU Guix}, per maggiori\n"
"informazioni sui sistemi di compilazione, o controlla il codice sorgente nelle directory @samp{$GUIX_CHECKOUT/guix/build}\n"
"e @samp{$GUIX_CHECKOUT/guix/build-system}."

msgid "We can't repeat it enough: having a full-fledged programming language at hand empowers us in ways that reach far beyond traditional package management."
msgstr ""
"Non possiamo ripeterlo abbastanza: avere un linguaggio di programmazione completo a\n"
"portata di mano ci dà potere in modi che vanno ben oltre la tradizionale gestione dei pacchetti."

msgid "Let's illustrate this with some awesome features of Guix!"
msgstr "Illustriamo questo con alcune fantastiche funzionalità di Guix!"

msgid "You might find some build systems good enough that there is little to do at all to write a package, to the point that it becomes repetitive and tedious after a while.  A @emph{raison d'être} of computers is to replace human beings at those boring tasks.  So let's tell Guix to do this for us and create the package definition of an R package from CRAN (the output is trimmed for conciseness):"
msgstr ""
"Potresti trovare alcuni sistemi di compilazione così buoni che c'è poco da fare per scrivere un pacchetto,\n"
"al punto che diventa ripetitivo e noioso dopo un po'. Una @emph{ragione d'essere}\n"
"dei computer è quella di sostituire gli esseri umani in questi compiti noiosi.\n"
"Quindi, diciamo a Guix di farlo per noi e di creare la definizione di pacchetto di un pacchetto R da CRAN (l'output è\n"
"troncato per brevità):"

msgid ""
"$ guix import cran --recursive walrus\n"
"\n"
msgstr ""
"$ guix import cran --recursive walrus\n"
"\n"

msgid ""
"(define-public r-mc2d\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"
msgstr ""
"(define-public r-mc2d\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"

msgid ""
"(define-public r-jmvcore\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"
msgstr ""
"(define-public r-jmvcore\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"

msgid ""
"(define-public r-wrs2\n"
"    ; ...\n"
"    (license gpl3)))\n"
"\n"
msgstr ""
"(define-public r-wrs2\n"
"    ; ...\n"
"    (license gpl3)))\n"
"\n"

msgid ""
"(define-public r-walrus\n"
"  (package\n"
"    (name \"r-walrus\")\n"
"    (version \"1.0.3\")\n"
"    (source\n"
"      (origin\n"
"        (method url-fetch)\n"
"        (uri (cran-uri \"walrus\" version))\n"
"        (sha256\n"
"          (base32\n"
"            \"1nk2glcvy4hyksl5ipq2mz8jy4fss90hx6cq98m3w96kzjni6jjj\"))))\n"
"    (build-system r-build-system)\n"
"    (propagated-inputs\n"
"      (list r-ggplot2 r-jmvcore r-r6 r-wrs2))\n"
"    (home-page \"https://github.com/jamovi/walrus\")\n"
"    (synopsis \"Robust Statistical Methods\")\n"
"    (description\n"
"      \"This package provides a toolbox of common robust statistical\n"
"tests, including robust descriptives, robust t-tests, and robust ANOVA.\n"
"It is also available as a module for 'jamovi' (see\n"
"<https://www.jamovi.org> for more information).  Walrus is based on the\n"
"WRS2 package by Patrick Mair, which is in turn based on the scripts and\n"
"work of Rand Wilcox.  These analyses are described in depth in the book\n"
"'Introduction to Robust Estimation & Hypothesis Testing'.\")\n"
"    (license gpl3)))\n"
msgstr ""
"(define-public r-walrus\n"
"  (package\n"
"    (name \"r-walrus\")\n"
"    (version \"1.0.3\")\n"
"    (source\n"
"      (origin\n"
"        (method url-fetch)\n"
"        (uri (cran-uri \"walrus\" version))\n"
"        (sha256\n"
"          (base32\n"
"            \"1nk2glcvy4hyksl5ipq2mz8jy4fss90hx6cq98m3w96kzjni6jjj\"))))\n"
"    (build-system r-build-system)\n"
"    (propagated-inputs\n"
"      (list r-ggplot2 r-jmvcore r-r6 r-wrs2))\n"
"    (home-page \"https://github.com/jamovi/walrus\")\n"
"    (synopsis \"Metodi Statistici Robusti\")\n"
"    (description\n"
"      \"Questo pacchetto fornisce una cassetta degli attrezzi di comuni test statistici robusti,\n"
"inclusi descrittori robusti, t-test robusti e ANOVA robusta.\n"
"È disponibile anche come modulo per 'jamovi' (vedere\n"
"<https://www.jamovi.org> per maggiori informazioni). Walrus si basa sul\n"
"pacchetto WRS2 di Patrick Mair, che a sua volta si basa sugli script e sul\n"
"lavoro di Rand Wilcox. Queste analisi sono descritte in dettaglio nel libro\n"
"'Introduction to Robust Estimation & Hypothesis Testing'.\")\n"
"    (license gpl3)))\n"

msgid "The recursive importer won't import packages for which Guix already has package definitions, except for the very first."
msgstr ""
"L'importatore ricorsivo non importerà i pacchetti per i quali Guix ha già\n"
"definizioni di pacchetto, ad eccezione del primissimo."

msgid "Not all applications can be packaged this way, only those relying on a select number of supported systems.  Read about the full list of importers in the guix import section of the manual (@pxref{Invoking guix import,,, guix, GNU Guix Reference Manual})."
msgstr ""
"Non tutte le applicazioni possono essere impacchettate in questo modo, solo quelle che si basano su un\n"
"numero selezionato di sistemi supportati. Leggi l'elenco completo degli importatori\n"
"nella sezione import di guix del manuale (@pxref{Invocare guix import,,, guix.it, Manuale di riferimento di GNU Guix})."

msgid "Guix can be smart enough to check for updates on systems it knows.  It can report outdated package definitions with"
msgstr ""
"Guix è abbastanza intelligente da controllare gli aggiornamenti sui sistemi che conosce. Può\n"
"segnalare definizioni di pacchetto obsolete con"

msgid "$ guix refresh hello\n"
msgstr "$ guix refresh hello\n"

msgid "In most cases, updating a package to a newer version requires little more than changing the version number and the checksum.  Guix can do that automatically as well:"
msgstr ""
"Nella maggior parte dei casi, l'aggiornamento di un pacchetto a una versione più recente richiede poco più\n"
"che la modifica del numero di versione e del checksum. Guix può farlo\n"
"anche automaticamente:"

msgid "$ guix refresh hello --update\n"
msgstr "$ guix refresh hello --update\n"

msgid "If you've started browsing the existing package definitions, you might have noticed that a significant number of them have a @code{inherit} field:"
msgstr ""
"Se hai iniziato a sfogliare le definizioni dei pacchetti esistenti, potresti aver\n"
"notato che un numero significativo di esse ha un campo @code{inherit}:"

msgid ""
"(define-public adwaita-icon-theme\n"
"  (package (inherit gnome-icon-theme)\n"
"    (name \"adwaita-icon-theme\")\n"
"    (version \"3.26.1\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnome/sources/\" name \"/\"\n"
"                                  (version-major+minor version) \"/\"\n"
"                                  name \"-\" version \".tar.xz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"17fpahgh5dyckgz7rwqvzgnhx53cx9kr2xw0szprc6bnqy977fi8\"))))\n"
"    (native-inputs (list `(,gtk+ \"bin\")))))\n"
msgstr ""
"(define-public adwaita-icon-theme\n"
"  (package (inherit gnome-icon-theme)\n"
"    (name \"adwaita-icon-theme\")\n"
"    (version \"3.26.1\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnome/sources/\" name \"/\"\n"
"                                  (version-major+minor version) \"/\"\n"
"                                  name \"-\" version \".tar.xz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"17fpahgh5dyckgz7rwqvzgnhx53cx9kr2xw0szprc6bnqy977fi8\"))))\n"
"    (native-inputs (list `(,gtk+ \"bin\")))))\n"

msgid "All unspecified fields are inherited from the parent package.  This is very convenient to create alternative packages, for instance with different source, version or compilation options."
msgstr ""
"Tutti i campi non specificati sono ereditati dal pacchetto padre. Questo è molto\n"
"comodo per creare pacchetti alternativi, ad esempio con sorgenti, versioni o opzioni di compilazione diverse."

msgid "Sadly, some applications can be tough to package.  Sometimes they need a patch to work with the non-standard file system hierarchy enforced by the store.  Sometimes the tests won't run properly.  (They can be skipped but this is not recommended.)  Other times the resulting package won't be reproducible."
msgstr ""
"Purtroppo, alcune applicazioni possono essere difficili da impacchettare. A volte hanno bisogno di una\n"
"patch per funzionare con la gerarchia del file system non standard imposta dallo\n"
"store. A volte i test non vengono eseguiti correttamente. (Possono essere saltati ma\n"
"questo non è raccomandato.) Altre volte il pacchetto risultante non sarà\n"
"riproducibile."

msgid "Should you be stuck, unable to figure out how to fix any sort of packaging issue, don't hesitate to ask the community for help."
msgstr ""
"Se dovessi trovarti bloccato, incapace di capire come risolvere qualsiasi tipo di problema di packaging,\n"
"non esitare a chiedere aiuto alla comunità."

msgid "See the @uref{https://guix.gnu.org/contact/, Guix homepage} for information on the mailing lists, IRC, etc."
msgstr ""
"Vedi la @uref{https://guix.gnu.org/contact/, homepage di Guix} per\n"
"informazioni sulle mailing list, IRC, ecc."

msgid "This tutorial was a showcase of the sophisticated package management that Guix boasts.  At this point we have mostly restricted this introduction to the @code{gnu-build-system} which is a core abstraction layer on which more advanced abstractions are based."
msgstr ""
"Questo tutorial è stato una vetrina della sofisticata gestione dei pacchetti di cui\n"
"Guix si vanta. A questo punto abbiamo in gran parte limitato questa introduzione\n"
"al @code{gnu-build-system} che è un livello di astrazione fondamentale su cui si basano\n"
"astrazioni più avanzate."

msgid "Where do we go from here? Next we ought to dissect the innards of the build system by removing all abstractions, using the @code{trivial-build-system}: this should give us a thorough understanding of the process before investigating some more advanced packaging techniques and edge cases."
msgstr ""
"Da dove proseguiamo? Successivamente dovremmo dissezionare le viscere del sistema di compilazione\n"
"rimuovendo tutte le astrazioni, usando il @code{trivial-build-system}:\n"
"questo dovrebbe darci una comprensione approfondita del processo prima di\n"
"indagare su alcune tecniche di packaging più avanzate e casi limite."

msgid "Other features worth exploring are the interactive editing and debugging capabilities of Guix provided by the Guile REPL@."
msgstr ""
"Altre funzionalità degne di esplorazione sono le capacità di editing e debugging interattivi\n"
"di Guix fornite dal Guile REPL@."

msgid "Those fancy features are completely optional and can wait; now is a good time to take a well-deserved break.  With what we've introduced here you should be well armed to package lots of programs.  You can get started right away and hopefully we will see your contributions soon!"
msgstr ""
"Queste fantasiose funzionalità sono completamente opzionali e possono aspettare;\n"
"ora è un buon momento per prendersi una meritata pausa. Con quanto abbiamo introdotto qui dovresti\n"
"essere ben attrezzato per impacchettare molti programmi. Puoi iniziare subito e speriamo\n"
"di vedere i tuoi contributi presto!"

msgid "The @uref{https://guix.gnu.org/manual/en/html_node/Defining-Packages.html, package reference in the manual}"
msgstr "La @uref{https://guix.gnu.org/manual/devel/it/html_node/Definire-i-pacchetti.html, reference del pacchetto nel manuale}"

msgid "@uref{https://gitlab.com/pjotrp/guix-notes/blob/master/HACKING.org, Pjotr’s hacking guide to GNU Guix}"
msgstr "@uref{https://gitlab.com/pjotrp/guix-notes/blob/master/HACKING.org, la guida di hacking di Pjotr a GNU Guix}"

msgid "@uref{https://guix.gnu.org/guix-ghm-andreas-20130823.pdf, ``GNU Guix: Package without a scheme!''}, by Andreas Enge"
msgstr ""
"@uref{https://guix.gnu.org/guix-ghm-andreas-20130823.pdf, ``GNU\n"
"Guix: Package without a scheme!''}, di Andreas Enge"

msgid "Guix offers a flexible language for declaratively configuring your Guix System.  This flexibility can at times be overwhelming.  The purpose of this chapter is to demonstrate some advanced configuration concepts."
msgstr ""
"Guix offre un linguaggio flessibile per configurare dichiarativamente il tuo sistema Guix.\n"
"Questa flessibilità può a volte essere eccessiva. Lo scopo di questo\n"
"capitolo è dimostrare alcuni concetti avanzati di configurazione."

msgid "@pxref{System Configuration,,, guix, GNU Guix Reference Manual} for a complete reference."
msgstr ""
"@pxref{Configurazione di sistema,,, guix.it, Manuale di riferimento di GNU Guix} per un\n"
"riferimento completo."

msgid "While the Guix manual explains auto-login one user to @emph{all} TTYs (@pxref{auto-login to TTY,,, guix, GNU Guix Reference Manual}), some might prefer a situation, in which one user is logged into one TTY with the other TTYs either configured to login different users or no one at all.  Note that one can auto-login one user to any TTY, but it is usually advisable to avoid @code{tty1}, which, by default, is used to log warnings and errors."
msgstr ""
"Mentre il manuale di Guix spiega l'auto-login di un utente su @emph{tutte} le TTY (@pxref{auto-login to TTY,,,\n"
"guix.it, Manuale di riferimento di GNU Guix}), alcuni potrebbero preferire una\n"
"situazione in cui un utente è loggato su una TTY con le altre TTY\n"
"configurate per accedere a utenti diversi o a nessuno. Si noti che si può\n"
"auto-loggare un utente su qualsiasi TTY, ma di solito è consigliabile evitare\n"
"@code{tty1}, che, per impostazione predefinita, viene utilizzata per registrare avvisi ed errori."

msgid "Here is how one might set up auto login for one user to one tty:"
msgstr "Ecco come si potrebbe impostare l'accesso automatico per un utente a una tty:"

msgid ""
"(define (auto-login-to-tty config tty user)\n"
"  (if (string=? tty (mingetty-configuration-tty config))\n"
"        (mingetty-configuration\n"
"         (inherit config)\n"
"         (auto-login user))\n"
"        config))\n"
"\n"
msgstr ""
"(define (auto-login-to-tty config tty user)\n"
"  (if (string=? tty (mingetty-configuration-tty config))\n"
"        (mingetty-configuration\n"
"         (inherit config)\n"
"         (auto-login user))\n"
"        config))\n"
"\n"

msgid ""
"(define %my-services\n"
"  (modify-services %base-services\n"
"    ;; @dots{}\n"
"    (mingetty-service-type config =>\n"
"                           (auto-login-to-tty\n"
"                            config \"tty3\" \"alice\"))))\n"
"\n"
msgstr ""
"(define %my-services\n"
"  (modify-services %base-services\n"
"    ;; @dots{}\n"
"    (mingetty-service-type config =>\n"
"                           (auto-login-to-tty\n"
"                            config \"tty3\" \"alice\"))))\n"
"\n"

msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services %my-services))\n"
msgstr ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services %my-services))\n"

msgid "One could also @code{compose} (@pxref{Higher-Order Functions,,, guile, The Guile Reference Manual}) @code{auto-login-to-tty} to login multiple users to multiple ttys."
msgstr "Si potrebbe anche @code{compose} (@pxref{Higher-Order Functions,,, guile, Manuale di riferimento di Guile}) @code{auto-login-to-tty} per accedere a più utenti su più tty."

msgid "Finally, here is a note of caution.  Setting up auto login to a TTY, means that anyone can turn on your computer and run commands as your regular user.  However, if you have an encrypted root partition, and thus already need to enter a passphrase when the system boots, auto-login might be a convenient option."
msgstr ""
"Infine, ecco una nota di cautela. Impostare l'auto-login su una TTY significa\n"
"che chiunque può accendere il tuo computer ed eseguire comandi come il tuo utente\n"
"regolare. Tuttavia, se hai una partizione root crittografata, e quindi hai già\n"
"bisogno di inserire una passphrase all'avvio del sistema, l'auto-login potrebbe essere un'\n"
"opzione comoda."

msgid "Guix is, at its core, a source based distribution with substitutes (@pxref{Substitutes,,, guix, GNU Guix Reference Manual}), and as such building packages from their source code is an expected part of regular package installations and upgrades.  Given this starting point, it makes sense that efforts are made to reduce the amount of time spent compiling packages, and recent changes and upgrades to the building and distribution of substitutes continues to be a topic of discussion within Guix."
msgstr ""
"Guix è, al suo interno, una distribuzione basata su sorgente con sostituti (@pxref{Sostituti,,,\n"
"guix.it, Manuale di riferimento di GNU Guix}), e come tale la compilazione\n"
"di pacchetti dal loro codice sorgente è una parte prevista delle normali installazioni\n"
"e aggiornamenti di pacchetti. Dato questo punto di partenza, ha senso che\n"
"siano fatti sforzi per ridurre il tempo impiegato nella compilazione dei pacchetti, e\n"
"i recenti cambiamenti e aggiornamenti alla costruzione e distribuzione dei sostituti\n"
"continuano ad essere un argomento di discussione all'interno di Guix."

msgid "The kernel, while not requiring an overabundance of RAM to build, does take a rather long time on an average machine.  The official kernel configuration, as is the case with many GNU/Linux distributions, errs on the side of inclusiveness, and this is really what causes the build to take such a long time when the kernel is built from source."
msgstr "Il kernel, pur non richiedendo un'eccessiva quantità di RAM per la compilazione, impiega un tempo piuttosto lungo su una macchina media. La configurazione ufficiale del kernel, come accade con molte distribuzioni GNU/Linux, tende all'inclusività, ed è proprio questo che fa sì che la compilazione richieda così tanto tempo quando il kernel viene compilato dal sorgente."

msgid "The Linux kernel, however, can also just be described as a regular old package, and as such can be customized just like any other package.  The procedure is a little bit different, although this is primarily due to the nature of how the package definition is written."
msgstr ""
"Il kernel Linux, tuttavia, può anche essere semplicemente descritto come un normale vecchio\n"
"pacchetto, e come tale può essere personalizzato proprio come qualsiasi altro pacchetto.\n"
"La procedura è leggermente diversa, anche se ciò è dovuto principalmente alla\n"
"natura di come è scritta la definizione del pacchetto."

msgid "The @code{linux-libre} kernel package definition is actually a procedure which creates a package."
msgstr ""
"La definizione del pacchetto kernel @code{linux-libre} è in realtà una procedura\n"
"che crea un pacchetto."

msgid ""
"(define* (make-linux-libre* version gnu-revision source supported-systems\n"
"                            #:key\n"
"                            (extra-version #f)\n"
"                            ;; A function that takes an arch and a variant.\n"
"                            ;; See kernel-config for an example.\n"
"                            (configuration-file #f)\n"
"                            (defconfig \"defconfig\")\n"
"                            (extra-options (default-extra-linux-options version)))\n"
"  ...)\n"
msgstr ""
"(define* (make-linux-libre* version gnu-revision source supported-systems\n"
"                            #:key\n"
"                            (extra-version #f)\n"
"                            ;; Una funzione che accetta un'architettura e una variante.\n"
"                            ;; Vedi kernel-config per un esempio.\n"
"                            (configuration-file #f)\n"
"                            (defconfig \"defconfig\")\n"
"                            (extra-options (default-extra-linux-options version)))\n"
"  ...)\n"

msgid "The current @code{linux-libre} package is for the 5.15.x series, and is declared like this:"
msgstr ""
"L'attuale pacchetto @code{linux-libre} è per la serie 5.15.x, ed è\n"
"dichiarato così:"

msgid ""
"(define-public linux-libre-5.15\n"
"  (make-linux-libre* linux-libre-5.15-version\n"
"                     linux-libre-5.15-gnu-revision\n"
"                     linux-libre-5.15-source\n"
"                     '(\"x86_64-linux\" \"i686-linux\" \"armhf-linux\"\n"
"                       \"aarch64-linux\" \"riscv64-linux\")\n"
"                     #:configuration-file kernel-config))\n"
msgstr ""
"(define-public linux-libre-5.15\n"
"  (make-linux-libre* linux-libre-5.15-version\n"
"                     linux-libre-5.15-gnu-revision\n"
"                     linux-libre-5.15-source\n"
"                     '(\"x86_64-linux\" \"i686-linux\" \"armhf-linux\"\n"
"                       \"aarch64-linux\" \"riscv64-linux\")\n"
"                     #:configuration-file kernel-config))\n"

msgid "Any keys which are not assigned values inherit their default value from the @code{make-linux-libre} definition.  When comparing the two snippets above, notice the code comment that refers to @code{#:configuration-file}.  Because of this, it is not actually easy to include a custom kernel configuration from the definition, but don't worry, there are other ways to work with what we do have."
msgstr ""
"Qualsiasi chiave a cui non sono stati assegnati valori eredita il loro valore predefinito dalla\n"
"definizione @code{make-linux-libre}. Confrontando i due snippet sopra,\n"
"nota il commento al codice che si riferisce a @code{#:configuration-file}. A causa\n"
"di ciò, non è effettivamente facile includere una configurazione personalizzata del kernel\n"
"dalla definizione, ma non preoccuparti, ci sono altri modi per lavorare con ciò\n"
"che abbiamo."

msgid "There are two ways to create a kernel with a custom kernel configuration.  The first is to provide a standard @file{defconfig} to @code{customize-linux} procedure.  To produce such file you need to obtain Linux source code, create a @file{.config} file (using @code{make menuconfig} command, for example) or provide one you already have.  After that you will need to run @code{make savedefconfig} command within the kernel source tree---this will produce the @file{defconfig} file which we will use to build a custom kernel."
msgstr ""
"Ci sono due modi per creare un kernel con una configurazione kernel personalizzata.\n"
"Il primo è fornire un @file{defconfig} standard alla procedura @code{customize-linux}.\n"
"Per produrre tale file è necessario ottenere il codice sorgente Linux,\n"
"creare un file @file{.config} (usando il comando @code{make menuconfig}, ad esempio)\n"
"o fornirne uno che già si possiede. Dopodiché sarà necessario eseguire\n"
"il comando @code{make savedefconfig} all'interno dell'albero sorgente del kernel --- questo produrrà\n"
"il file @file{defconfig} che useremo per compilare un kernel personalizzato."

msgid "Below is a sample kernel package."
msgstr "Di seguito è riportato un esempio di pacchetto kernel."

msgid ""
"(define-public my-linux-libre\n"
"  (package\n"
"    (inherit (customize-linux\n"
"              #:linux linux-libre\n"
"              #:defconfig\n"
"              (local-file \"defconfig\")))\n"
"    (name \"my-linux-libre\")))\n"
msgstr ""
"(define-public my-linux-libre\n"
"  (package\n"
"    (inherit (customize-linux\n"
"              #:linux linux-libre\n"
"              #:defconfig\n"
"              (local-file \"defconfig\")))\n"
"    (name \"my-linux-libre\")))\n"

msgid "In the same directory as the file defining @code{my-linux-libre} is a file named @file{defconfig}. This way you can provide kernel options you want to have in the result kernel."
msgstr ""
"Nella stessa directory del file che definisce @code{my-linux-libre} c'è un file\n"
"chiamato @file{defconfig}. In questo modo puoi fornire le opzioni del kernel che desideri\n"
"nel kernel risultante."

msgid "The second way to create a custom kernel is to pass a new value to the @code{extra-options} keyword of the @code{make-linux-libre} procedure.  The @code{extra-options} keyword works with another function defined right below it:"
msgstr "Il secondo modo per creare un kernel personalizzato è passare un nuovo valore alla parola chiave @code{extra-options} della procedura @code{make-linux-libre}. La parola chiave @code{extra-options} funziona con un'altra funzione definita subito sotto:"

msgid ""
"(define (default-extra-linux-options version)\n"
"  `(;; https://lists.gnu.org/archive/html/guix-devel/2014-04/msg00039.html\n"
"   (\"CONFIG_DEVPTS_MULTIPLE_INSTANCES\" . #true)\n"
"   ;; Modules required for initrd:\n"
"   (\"CONFIG_NET_9P\" . m)\n"
"   (\"CONFIG_NET_9P_VIRTIO\" . m)\n"
"   (\"CONFIG_VIRTIO_BLK\" . m)\n"
"   (\"CONFIG_VIRTIO_NET\" . m)\n"
"   (\"CONFIG_VIRTIO_PCI\" . m)\n"
"   (\"CONFIG_VIRTIO_BALLOON\" . m)\n"
"   (\"CONFIG_VIRTIO_MMIO\" . m)\n"
"   (\"CONFIG_FUSE_FS\" . m)\n"
"   (\"CONFIG_CIFS\" . m)\n"
"   (\"CONFIG_9P_FS\" . m)))\n"
"\n"
msgstr ""
"(define (default-extra-linux-options version)\n"
"  `(;; https://lists.gnu.org/archive/html/guix-devel/2014-04/msg00039.html\n"
"   (\"CONFIG_DEVPTS_MULTIPLE_INSTANCES\" . #true)\n"
"   ;; Moduli richiesti per initrd:\n"
"   (\"CONFIG_NET_9P\" . m)\n"
"   (\"CONFIG_NET_9P_VIRTIO\" . m)\n"
"   (\"CONFIG_VIRTIO_BLK\" . m)\n"
"   (\"CONFIG_VIRTIO_NET\" . m)\n"
"   (\"CONFIG_VIRTIO_PCI\" . m)\n"
"   (\"CONFIG_VIRTIO_BALLOON\" . m)\n"
"   (\"CONFIG_VIRTIO_MMIO\" . m)\n"
"   (\"CONFIG_FUSE_FS\" . m)\n"
"   (\"CONFIG_CIFS\" . m)\n"
"   (\"CONFIG_9P_FS\" . m)))\n"
"\n"

msgid ""
"(define (config->string options)\n"
"  (string-join (map (match-lambda\n"
"                      ((option . 'm)\n"
"                       (string-append option \"=m\"))\n"
"                      ((option . #true)\n"
"                       (string-append option \"=y\"))\n"
"                      ((option . #false)\n"
"                       (string-append option \"=n\")))\n"
"                    options)\n"
"               \"\\n\"))\n"
msgstr ""
"(define (config->string options)\n"
"  (string-join (map (match-lambda\n"
"                      ((option . 'm)\n"
"                       (string-append option \"=m\"))\n"
"                      ((option . #true)\n"
"                       (string-append option \"=y\"))\n"
"                      ((option . #false)\n"
"                       (string-append option \"=n\")))\n"
"                    options)\n"
"               \"\\n\"))\n"

msgid "And in the custom configure script from the `make-linux-libre` package:"
msgstr "E nello script di configurazione personalizzato del pacchetto `make-linux-libre`:"

msgid ""
";; Appending works even when the option wasn't in the\n"
";; file.  The last one prevails if duplicated.\n"
"(let ((port (open-file \".config\" \"a\"))\n"
"      (extra-configuration ,(config->string extra-options)))\n"
"  (display extra-configuration port)\n"
"  (close-port port))\n"
"\n"
msgstr ""
";; L'aggiunta funziona anche se l'opzione non era presente nel\n"
";; file. L'ultima prevale se duplicata.\n"
"(let ((port (open-file \".config\" \"a\"))\n"
"      (extra-configuration ,(config->string extra-options)))\n"
"  (display extra-configuration port)\n"
"  (close-port port))\n"
"\n"

msgid "(invoke \"make\" \"oldconfig\")\n"
msgstr "(invoke \"make\" \"oldconfig\")\n"

msgid "So by not providing a configuration-file the @file{.config} starts blank, and then we write into it the collection of flags that we want.  Here's another custom kernel:"
msgstr ""
"Quindi, non fornendo un file di configurazione, il @file{.config} inizia vuoto,\n"
"e poi ci scriviamo la raccolta di flag che vogliamo. Ecco\n"
"un altro kernel personalizzato:"

msgid ""
"(define %macbook41-full-config\n"
"  (append %macbook41-config-options\n"
"          %file-systems\n"
"          %efi-support\n"
"          %emulation\n"
"          ((@@@@ (gnu packages linux) default-extra-linux-options) version)))\n"
"\n"
msgstr ""
"(define %macbook41-full-config\n"
"  (append %macbook41-config-options\n"
"          %file-systems\n"
"          %efi-support\n"
"          %emulation\n"
"          ((@@@@ (gnu packages linux) default-extra-linux-options) version)))\n"
"\n"

msgid ""
"(define-public linux-libre-macbook41\n"
"  ;; XXX: Access the internal 'make-linux-libre*' procedure, which is\n"
"  ;; private and unexported, and is liable to change in the future.\n"
"  ((@@@@ (gnu packages linux) make-linux-libre*)\n"
"   (@@@@ (gnu packages linux) linux-libre-version)\n"
"   (@@@@ (gnu packages linux) linux-libre-gnu-revision)\n"
"   (@@@@ (gnu packages linux) linux-libre-source)\n"
"   '(\"x86_64-linux\")\n"
"   #:extra-version \"macbook41\"\n"
"   #:extra-options %macbook41-config-options))\n"
msgstr ""
"(define-public linux-libre-macbook41\n"
"  ;; XXX: Accedere alla procedura interna 'make-linux-libre*', che è\n"
"  ;; privata e non esportata, e soggetta a modifiche future.\n"
"  ((@@@@ (gnu packages linux) make-linux-libre*)\n"
"   (@@@@ (gnu packages linux) linux-libre-version)\n"
"   (@@@@ (gnu packages linux) linux-libre-gnu-revision)\n"
"   (@@@@ (gnu packages linux) linux-libre-source)\n"
"   '(\"x86_64-linux\")\n"
"   #:extra-version \"macbook41\"\n"
"   #:extra-options %macbook41-config-options))\n"

msgid "In the above example @code{%file-systems} is a collection of flags enabling different file system support, @code{%efi-support} enables EFI support and @code{%emulation} enables a x86_64-linux machine to act in 32-bit mode also.  The @code{default-extra-linux-options} procedure is the one defined above, which had to be used to avoid losing the default configuration options of the @code{extra-options} keyword."
msgstr ""
"Nell'esempio precedente @code{%file-systems} è una raccolta di flag che abilitano\n"
"il supporto di diversi file system, @code{%efi-support} abilita il supporto EFI e\n"
"@code{%emulation} abilita una macchina x86_64-linux a operare anche in modalità 32 bit.\n"
"La procedura @code{default-extra-linux-options} è quella definita\n"
"sopra, che è stata usata per evitare di perdere le opzioni di configurazione predefinite\n"
"della parola chiave @code{extra-options}."

msgid "This all sounds like it should be doable, but how does one even know which modules are required for a particular system? Two places that can be helpful in trying to answer this question is the @uref{https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Kernel, Gentoo Handbook} and the @uref{https://www.kernel.org/doc/html/latest/admin-guide/README.html?highlight=localmodconfig, documentation from the kernel itself}.  From the kernel documentation, it seems that @code{make localmodconfig} is the command we want."
msgstr ""
"Tutto questo sembra fattibile, ma come si fa a sapere quali\n"
"moduli sono richiesti per un sistema particolare? Due posti che possono essere utili\n"
"nel tentativo di rispondere a questa domanda sono il @uref{https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Kernel, Manuale Gentoo} e la @uref{https://www.kernel.org/doc/html/latest/admin-guide/README.html?highlight=localmodconfig, documentazione del kernel stesso}. Dalla documentazione del kernel, sembra che @code{make localmodconfig}\n"
"sia il comando che vogliamo."

msgid "In order to actually run @code{make localmodconfig} we first need to get and unpack the kernel source code:"
msgstr ""
"Per poter effettivamente eseguire @code{make localmodconfig}, dobbiamo prima ottenere e\n"
"decomprimere il codice sorgente del kernel:"

msgid "tar xf $(guix build linux-libre --source)\n"
msgstr "tar xf $(guix build linux-libre --source)\n"

msgid "Once inside the directory containing the source code run @code{touch .config} to create an initial, empty @file{.config} to start with.  @code{make localmodconfig} works by seeing what you already have in @file{.config} and letting you know what you're missing.  If the file is blank then you're missing everything.  The next step is to run:"
msgstr ""
"Una volta all'interno della directory contenente il codice sorgente, esegui @code{touch .config}\n"
"per creare un file @file{.config} iniziale e vuoto con cui iniziare. @code{make\n"
"localmodconfig} funziona controllando ciò che hai già in @file{.config} e\n"
"facendoti sapere cosa ti manca. Se il file è vuoto, ti manca tutto.\n"
"Il passo successivo è eseguire:"

msgid "guix shell -D linux-libre -- make localmodconfig\n"
msgstr "guix shell -D linux-libre -- make localmodconfig\n"

msgid "and note the output.  Do note that the @file{.config} file is still empty.  The output generally contains two types of warnings.  The first start with \"WARNING\" and can actually be ignored in our case.  The second read:"
msgstr ""
"e annota l'output. Si noti che il file @file{.config} è ancora vuoto.\n"
"L'output generalmente contiene due tipi di avvisi. I primi iniziano con\n"
"\"WARNING\" e possono essere ignorati nel nostro caso. I secondi recitano:"

msgid "module pcspkr did not have configs CONFIG_INPUT_PCSPKR\n"
msgstr "il modulo pcspkr non aveva configurazioni CONFIG_INPUT_PCSPKR\n"

msgid "For each of these lines, copy the @code{CONFIG_XXXX_XXXX} portion into the @file{.config} in the directory, and append @code{=m}, so in the end it looks like this:"
msgstr ""
"Per ciascuna di queste righe, copia la porzione @code{CONFIG_XXXX_XXXX} nel\n"
"@file{.config} nella directory, e aggiungi @code{=m}, così alla fine\n"
"appare così:"

msgid ""
"CONFIG_INPUT_PCSPKR=m\n"
"CONFIG_VIRTIO=m\n"
msgstr ""
"CONFIG_INPUT_PCSPKR=m\n"
"CONFIG_VIRTIO=m\n"

msgid "After copying all the configuration options, run @code{make localmodconfig} again to make sure that you don't have any output starting with ``module''.  After all of these machine specific modules there are a couple more left that are also needed.  @code{CONFIG_MODULES} is necessary so that you can build and load modules separately and not have everything built into the kernel.  @code{CONFIG_BLK_DEV_SD} is required for reading from hard drives.  It is possible that there are other modules which you will need."
msgstr ""
"Dopo aver copiato tutte le opzioni di configurazione, esegui di nuovo @code{make localmodconfig}\n"
"per assicurarti di non avere output che iniziano con ``module''.\n"
"Dopo tutti questi moduli specifici della macchina, ne rimangono un paio che sono anche necessari.\n"
"@code{CONFIG_MODULES} è necessario affinché tu possa compilare e caricare i moduli separatamente\n"
"e non avere tutto compilato nel kernel. @code{CONFIG_BLK_DEV_SD} è richiesto per la lettura da dischi rigidi.\n"
"È possibile che tu abbia bisogno di altri moduli."

msgid "This post does not aim to be a guide to configuring your own kernel however, so if you do decide to build a custom kernel you'll have to seek out other guides to create a kernel which is just right for your needs."
msgstr ""
"Questo post non intende tuttavia essere una guida alla configurazione del proprio kernel,\n"
"quindi se decidi di compilare un kernel personalizzato dovrai cercare altre\n"
"guide per creare un kernel adatto alle tue esigenze."

msgid "The second way to setup the kernel configuration makes more use of Guix's features and allows you to share configuration segments between different kernels.  For example, all machines using EFI to boot have a number of EFI configuration flags that they need.  It is likely that all the kernels will share a list of file systems to support.  By using variables it is easier to see at a glance what features are enabled and to make sure you don't have features in one kernel but missing in another."
msgstr ""
"Il secondo modo per configurare il kernel sfrutta maggiormente le funzionalità di Guix\n"
"e consente di condividere segmenti di configurazione tra kernel diversi.\n"
"Ad esempio, tutte le macchine che usano EFI per l'avvio hanno una serie di flag di configurazione EFI\n"
"di cui hanno bisogno. È probabile che tutti i kernel condividano un elenco\n"
"di file system da supportare. Usando le variabili è più facile\n"
"vedere a colpo d'occhio quali funzionalità sono abilitate e assicurarsi di non avere\n"
"funzionalità in un kernel ma mancanti in un altro."

msgid "Left undiscussed however, is Guix's initrd and its customization.  It is likely that you'll need to modify the initrd on a machine using a custom kernel, since certain modules which are expected to be built may not be available for inclusion into the initrd."
msgstr ""
"Rimane tuttavia non discusso il sistema initrd di Guix e la sua personalizzazione.\n"
"È probabile che sia necessario modificare l'initrd su una macchina che utilizza un kernel\n"
"personalizzato, poiché alcuni moduli che ci si aspetta siano compilati potrebbero non essere\n"
"disponibili per l'inclusione nell'initrd."

msgid "Historically, Guix System is centered around an @code{operating-system} structure.  This structure contains various fields ranging from the bootloader and kernel declaration to the services to install."
msgstr ""
"Storicamente, Guix System è incentrato su una struttura @code{operating-system}.\n"
"Questa struttura contiene vari campi che vanno dal bootloader e dalla dichiarazione del kernel ai servizi da installare."

msgid "Depending on the target machine, that can go from a standard @code{x86_64} machine to a small ARM single board computer such as the Pine64, the image constraints can vary a lot.  The hardware manufacturers will impose different image formats with various partition sizes and offsets."
msgstr ""
"A seconda della macchina di destinazione, che può variare da una macchina @code{x86_64}\n"
"standard a un piccolo computer a scheda singola ARM come la Pine64, i vincoli dell'immagine\n"
"possono variare molto. I produttori di hardware imporranno\n"
"diversi formati di immagine con varie dimensioni e offset delle partizioni."

msgid "To create images suitable for all those machines, a new abstraction is necessary: that's the goal of the @code{image} record.  This record contains all the required information to be transformed into a standalone image, that can be directly booted on any target machine."
msgstr ""
"Per creare immagini adatte a tutte quelle macchine, è necessaria una nuova astrazione:\n"
"questo è l'obiettivo del record @code{image}. Questo record contiene\n"
"tutte le informazioni necessarie per essere trasformate in un'immagine standalone, che\n"
"può essere avviata direttamente su qualsiasi macchina di destinazione."

msgid ""
"(define-record-type* <image>\n"
"  image make-image\n"
"  image?\n"
"  (name               image-name ;symbol\n"
"                      (default #f))\n"
"  (format             image-format) ;symbol\n"
"  (target             image-target\n"
"                      (default #f))\n"
"  (size               image-size  ;size in bytes as integer\n"
"                      (default 'guess))\n"
"  (operating-system   image-operating-system  ;<operating-system>\n"
"                      (default #f))\n"
"  (partitions         image-partitions ;list of <partition>\n"
"                      (default '()))\n"
"  (compression?       image-compression? ;boolean\n"
"                      (default #t))\n"
"  (volatile-root?     image-volatile-root? ;boolean\n"
"                      (default #t))\n"
"  (substitutable?     image-substitutable? ;boolean\n"
"                      (default #t)))\n"
msgstr ""
"(define-record-type* <image>\n"
"  image make-image\n"
"  image?\n"
"  (name               image-name ;simbolo\n"
"                      (default #f))\n"
"  (format             image-format) ;simbolo\n"
"  (target             image-target\n"
"                      (default #f))\n"
"  (size               image-size  ;dimensione in byte come intero\n"
"                      (default 'guess))\n"
"  (operating-system   image-operating-system  ;<operating-system>\n"
"                      (default #f))\n"
"  (partitions         image-partitions ;lista di <partition>\n"
"                      (default '()))\n"
"  (compression?       image-compression? ;booleano\n"
"                      (default #t))\n"
"  (volatile-root?     image-volatile-root? ;booleano\n"
"                      (default #t))\n"
"  (substitutable?     image-substitutable? ;booleano\n"
"                      (default #t)))\n"

msgid "This record contains the operating-system to instantiate. The @code{format} field defines the image type and can be @code{efi-raw}, @code{qcow2} or @code{iso9660} for instance. In the future, it could be extended to @code{docker} or other image types."
msgstr ""
"Questo record contiene il sistema operativo da istanziare. Il campo @code{format}\n"
"definisce il tipo di immagine e può essere @code{efi-raw}, @code{qcow2} o\n"
"@code{iso9660} per esempio. In futuro, potrebbe essere esteso a\n"
"@code{docker} o altri tipi di immagine."

msgid "A new directory in the Guix sources is dedicated to images definition. For now there are four files:"
msgstr ""
"Una nuova directory nelle fonti Guix è dedicata alla definizione delle immagini. Per\n"
"ora ci sono quattro file:"

msgid "gnu/system/images/hurd.scm"
msgstr "gnu/system/images/hurd.scm"

msgid "gnu/system/images/pine64.scm"
msgstr "gnu/system/images/pine64.scm"

msgid "gnu/system/images/novena.scm"
msgstr "gnu/system/images/novena.scm"

msgid "gnu/system/images/pinebook-pro.scm"
msgstr "gnu/system/images/pinebook-pro.scm"

msgid "Let's have a look to @file{pine64.scm}. It contains the @code{pine64-barebones-os} variable which is a minimal definition of an operating-system dedicated to the @b{Pine A64 LTS} board."
msgstr ""
"Diamo un'occhiata a @file{pine64.scm}. Contiene la variabile @code{pine64-barebones-os}\n"
"che è una definizione minima di un sistema operativo dedicata alla scheda @b{Pine A64 LTS}."

msgid ""
"(define pine64-barebones-os\n"
"  (operating-system\n"
"   (host-name \"vignemale\")\n"
"   (timezone \"Europe/Paris\")\n"
"   (locale \"en_US.utf8\")\n"
"   (bootloader (bootloader-configuration\n"
"                (bootloader u-boot-pine64-lts-bootloader)\n"
"                (targets '(\"/dev/vda\"))))\n"
"   (initrd-modules '())\n"
"   (kernel linux-libre-arm64-generic)\n"
"   (file-systems (cons (file-system\n"
"                        (device (file-system-label \"my-root\"))\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                       %base-file-systems))\n"
"   (services (cons (service agetty-service-type\n"
"                            (agetty-configuration\n"
"                             (extra-options '(\"-L\")) ; no carrier detect\n"
"                             (baud-rate \"115200\")\n"
"                             (term \"vt100\")\n"
"                             (tty \"ttyS0\")))\n"
"                   %base-services))))\n"
msgstr ""
"(define pine64-barebones-os\n"
"  (operating-system\n"
"   (host-name \"vignemale\")\n"
"   (timezone \"Europe/Paris\")\n"
"   (locale \"en_US.utf8\")\n"
"   (bootloader (bootloader-configuration\n"
"                (bootloader u-boot-pine64-lts-bootloader)\n"
"                (targets '(\"/dev/vda\"))))\n"
"   (initrd-modules '())\n"
"   (kernel linux-libre-arm64-generic)\n"
"   (file-systems (cons (file-system\n"
"                        (device (file-system-label \"my-root\"))\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                       %base-file-systems))\n"
"   (services (cons (service agetty-service-type\n"
"                            (agetty-configuration\n"
"                             (extra-options '(\"-L\")) ; nessun rilevamento portante\n"
"                             (baud-rate \"115200\")\n"
"                             (term \"vt100\")\n"
"                             (tty \"ttyS0\")))\n"
"                   %base-services))))\n"

msgid "The @code{kernel} and @code{bootloader} fields are pointing to packages dedicated to this board."
msgstr ""
"I campi @code{kernel} e @code{bootloader} puntano a pacchetti\n"
"dedicati a questa scheda."

msgid "Right below, the @code{pine64-image-type} variable is also defined."
msgstr "Subito sotto, è definita anche la variabile @code{pine64-image-type}."

msgid ""
"(define pine64-image-type\n"
"  (image-type\n"
"   (name 'pine64-raw)\n"
"   (constructor (cut image-with-os arm64-disk-image <>))))\n"
msgstr ""
"(define pine64-image-type\n"
"  (image-type\n"
"   (name 'pine64-raw)\n"
"   (constructor (cut image-with-os arm64-disk-image <>))))\n"

msgid "It's using a record we haven't talked about yet, the @code{image-type} record, defined this way:"
msgstr ""
"Sta usando un record di cui non abbiamo ancora parlato, il record @code{image-type},\n"
"definito in questo modo:"

msgid ""
"(define-record-type* <image-type>\n"
"  image-type make-image-type\n"
"  image-type?\n"
"  (name           image-type-name) ;symbol\n"
"  (constructor    image-type-constructor)) ;<operating-system> -> <image>\n"
msgstr ""
"(define-record-type* <image-type>\n"
"  image-type make-image-type\n"
"  image-type?\n"
"  (name           image-type-name) ;simbolo\n"
"  (constructor    image-type-constructor)) ;<operating-system> -> <image>\n"

msgid "The main purpose of this record is to associate a name to a procedure transforming an @code{operating-system} to an image.  To understand why it is necessary, let's have a look to the command producing an image from an @code{operating-system} configuration file:"
msgstr ""
"Lo scopo principale di questo record è associare un nome a una procedura\n"
"che trasforma un @code{operating-system} in un'immagine. Per capire perché\n"
"è necessario, diamo un'occhiata al comando che produce un'immagine da un file\n"
"di configurazione @code{operating-system}:"

msgid "guix system image my-os.scm\n"
msgstr "guix system image my-os.scm\n"

msgid "This command expects an @code{operating-system} configuration but how should we indicate that we want an image targeting a Pine64 board? We need to provide an extra information, the @code{image-type}, by passing the @code{--image-type} or @code{-t} flag, this way:"
msgstr ""
"Questo comando si aspetta una configurazione @code{operating-system} ma come dovremmo\n"
"indicare che vogliamo un'immagine destinata a una scheda Pine64? Dobbiamo\n"
"fornire un'informazione extra, il @code{image-type}, passando il flag @code\n"
"{--image-type} o @code{-t}, in questo modo:"

msgid "guix system image --image-type=pine64-raw my-os.scm\n"
msgstr "guix system image --image-type=pine64-raw my-os.scm\n"

msgid "This @code{image-type} parameter points to the @code{pine64-image-type} defined above. Hence, the @code{operating-system} declared in @code{my-os.scm} will be applied the @code{(cut image-with-os arm64-disk-image <>)} procedure to turn it into an image."
msgstr "Questo parametro @code{image-type} punta al @code{pine64-image-type} definito sopra. Quindi, il @code{operating-system} dichiarato in @code{my-os.scm} verrà applicato alla procedura @code{(cut image-with-os arm64-disk-image <>)} per trasformarlo in un'immagine."

msgid "The resulting image looks like:"
msgstr "L'immagine risultante si presenta così:"

msgid ""
"(image\n"
" (format 'disk-image)\n"
" (target \"aarch64-linux-gnu\")\n"
" (operating-system my-os)\n"
" (partitions\n"
"  (list (partition\n"
"         (inherit root-partition)\n"
"         (offset root-offset)))))\n"
msgstr ""
"(image\n"
" (format 'disk-image)\n"
" (target \"aarch64-linux-gnu\")\n"
" (operating-system my-os)\n"
" (partitions\n"
"  (list (partition\n"
"         (inherit root-partition)\n"
"         (offset root-offset)))))\n"

msgid "which is the aggregation of the @code{operating-system} defined in @code{my-os.scm} to the @code{arm64-disk-image} record."
msgstr "che è l'aggregazione del @code{operating-system} definito in @code{my-os.scm} al record @code{arm64-disk-image}."

msgid "But enough Scheme madness. What does this image API bring to the Guix user?"
msgstr "Ma basta follia Scheme. Cosa porta questa API immagine all'utente Guix?"

msgid "One can run:"
msgstr "Si può eseguire:"

msgid ""
"mathieu@@cervin:~$ guix system --list-image-types\n"
"The available image types are:\n"
"\n"
msgstr ""
"mathieu@@cervin:~$ guix system --list-image-types\n"
"I tipi di immagine disponibili sono:\n"
"\n"

msgid ""
"   - unmatched-raw\n"
"   - rock64-raw\n"
"   - pinebook-pro-raw\n"
"   - pine64-raw\n"
"   - novena-raw\n"
"   - hurd-raw\n"
"   - hurd-qcow2\n"
"   - qcow2\n"
"   - iso9660\n"
"   - uncompressed-iso9660\n"
"   - tarball\n"
"   - efi-raw\n"
"   - mbr-raw\n"
"   - docker\n"
"   - wsl2\n"
"   - raw-with-offset\n"
"   - efi32-raw\n"
msgstr ""
"   - unmatched-raw\n"
"   - rock64-raw\n"
"   - pinebook-pro-raw\n"
"   - pine64-raw\n"
"   - novena-raw\n"
"   - hurd-raw\n"
"   - hurd-qcow2\n"
"   - qcow2\n"
"   - iso9660\n"
"   - uncompressed-iso9660\n"
"   - tarball\n"
"   - efi-raw\n"
"   - mbr-raw\n"
"   - docker\n"
"   - wsl2\n"
"   - raw-with-offset\n"
"   - efi32-raw\n"

msgid "and by writing an @code{operating-system} file based on @code{pine64-barebones-os}, you can customize your image to your preferences in a file (@file{my-pine-os.scm}) like this:"
msgstr ""
"e scrivendo un file @code{operating-system} basato su @code{pine64-barebones-os},\n"
"puoi personalizzare la tua immagine secondo le tue preferenze in un file\n"
"(@file{my-pine-os.scm}) come questo:"

msgid ""
"(use-modules (gnu services linux)\n"
"             (gnu system images pine64))\n"
"\n"
msgstr ""
"(use-modules (gnu services linux)\n"
"             (gnu system images pine64))\n"
"\n"

msgid ""
"(let ((base-os pine64-barebones-os))\n"
"  (operating-system\n"
"    (inherit base-os)\n"
"    (timezone \"America/Indiana/Indianapolis\")\n"
"    (services\n"
"     (cons\n"
"      (service earlyoom-service-type\n"
"               (earlyoom-configuration\n"
"                (prefer-regexp \"icecat|chromium\")))\n"
"      (operating-system-user-services base-os)))))\n"
msgstr ""
"(let ((base-os pine64-barebones-os))\n"
"  (operating-system\n"
"    (inherit base-os)\n"
"    (timezone \"America/Indiana/Indianapolis\")\n"
"    (services\n"
"     (cons\n"
"      (service earlyoom-service-type\n"
"               (earlyoom-configuration\n"
"                (prefer-regexp \"icecat|chromium\")))\n"
"      (operating-system-user-services base-os)))))\n"

msgid "run:"
msgstr "esegui:"

msgid "guix system image --image-type=pine64-raw my-pine-os.scm\n"
msgstr "guix system image --image-type=pine64-raw my-pine-os.scm\n"

msgid "or,"
msgstr "o,"

msgid "guix system image --image-type=hurd-raw my-hurd-os.scm\n"
msgstr "guix system image --image-type=hurd-raw my-hurd-os.scm\n"

msgid "to get an image that can be written directly to a hard drive and booted from."
msgstr "per ottenere un'immagine che può essere scritta direttamente su un disco rigido e avviata."

msgid "Without changing anything to @code{my-hurd-os.scm}, calling:"
msgstr "Senza cambiare nulla in @code{my-hurd-os.scm}, chiamando:"

msgid "guix system image --image-type=hurd-qcow2 my-hurd-os.scm\n"
msgstr "guix system image --image-type=hurd-qcow2 my-hurd-os.scm\n"

msgid "will instead produce a Hurd QEMU image."
msgstr "produrrà invece un'immagine Hurd QEMU."

msgid "2FA, two-factor authentication"
msgstr "2FA, autenticazione a due fattori"

msgid "U2F, Universal 2nd Factor"
msgstr "U2F, Secondo Fattore Universale"

msgid "security key, configuration"
msgstr "chiave di sicurezza, configurazione"

msgid "The use of security keys can improve your security by providing a second authentication source that cannot be easily stolen or copied, at least for a remote adversary (something that you have), to the main secret (a passphrase -- something that you know), reducing the risk of impersonation."
msgstr ""
"L'uso delle chiavi di sicurezza può migliorare la tua sicurezza fornendo una seconda\n"
"fonte di autenticazione che non può essere facilmente rubata o copiata, almeno per un\n"
"avversario remoto (qualcosa che hai), al segreto principale (una passphrase\n"
"-- qualcosa che sai), riducendo il rischio di impersonificazione."

msgid "The example configuration detailed below showcases what minimal configuration needs to be made on your Guix System to allow the use of a Yubico security key.  It is hoped the configuration can be useful for other security keys as well, with minor adjustments."
msgstr ""
"L'esempio di configurazione dettagliato di seguito mostra quali configurazioni minime\n"
"devono essere apportate al tuo sistema Guix per consentire l'uso di una\n"
"chiave di sicurezza Yubico. Si spera che la configurazione possa essere utile anche per altre\n"
"chiavi di sicurezza, con piccole modifiche."

msgid "Configuration for use as a two-factor authenticator (2FA)"
msgstr "Configurazione per l'uso come autenticatore a due fattori (2FA)"

msgid "To be usable, the udev rules of the system should be extended with key-specific rules.  The following shows how to extend your udev rules with the @file{lib/udev/rules.d/70-u2f.rules} udev rule file provided by the @code{libfido2} package from the @code{(gnu packages security-token)} module and add your user to the @samp{\"plugdev\"} group it uses:"
msgstr ""
"Per essere utilizzabile, le regole udev del sistema dovrebbero essere estese con regole\n"
"specifiche per la chiave. Il seguente mostra come estendere le tue regole udev con il\n"
"file di regole udev @file{lib/udev/rules.d/70-u2f.rules} fornito dal\n"
"pacchetto @code{libfido2} dal modulo @code{(gnu packages security-token)}\n"
"e aggiungere il tuo utente al gruppo @samp{\"plugdev\"} che utilizza:"

msgid ""
"(use-package-modules ... security-token ...)\n"
"...\n"
"(operating-system\n"
" ...\n"
" (users (cons* (user-account\n"
"               (name \"your-user\")\n"
"               (group \"users\")\n"
"               (supplementary-groups\n"
"\t\t'(\"wheel\" \"netdev\" \"audio\" \"video\"\n"
"                  \"plugdev\"))           ;<- added system group\n"
"               (home-directory \"/home/your-user\"))\n"
"              %base-user-accounts))\n"
" ...\n"
" (services\n"
"  (cons*\n"
"   ...\n"
"   (udev-rules-service 'fido2 libfido2 #:groups '(\"plugdev\")))))\n"
msgstr ""
"(use-package-modules ... security-token ...)\n"
"...\n"
"(operating-system\n"
" ...\n"
" (users (cons* (user-account\n"
"               (name \"tuo-utente\")\n"
"               (group \"users\")\n"
"               (supplementary-groups\n"
"\t\t'(\"wheel\" \"netdev\" \"audio\" \"video\"\n"
"                  \"plugdev\"))           ;<- gruppo di sistema aggiunto\n"
"               (home-directory \"/home/tuo-utente\"))\n"
"              %base-user-accounts))\n"
" ...\n"
" (services\n"
"  (cons*\n"
"   ...\n"
"   (udev-rules-service 'fido2 libfido2 #:groups '(\"plugdev\")))))\n"

msgid "After re-configuring your system and re-logging in your graphical session so that the new group is in effect for your user, you can verify that your key is usable by launching:"
msgstr "Dopo aver riconfigurato il sistema e aver effettuato nuovamente l'accesso alla sessione grafica in modo che il nuovo gruppo sia effettivo per il tuo utente, puoi verificare che la tua chiave sia utilizzabile avviando:"

msgid "guix shell ungoogled-chromium -- chromium chrome://settings/securityKeys\n"
msgstr "guix shell ungoogled-chromium -- chromium chrome://settings/securityKeys\n"

msgid "and validating that the security key can be reset via the ``Reset your security key'' menu.  If it works, congratulations, your security key is ready to be used with applications supporting two-factor authentication (2FA)."
msgstr "e verificando che la chiave di sicurezza possa essere resettata tramite il menu ``Reset your security key''. Se funziona, congratulazioni, la tua chiave di sicurezza è pronta per essere utilizzata con applicazioni che supportano l'autenticazione a due fattori (2FA)."

msgid "Disabling OTP code generation for a Yubikey"
msgstr "Disabilitazione della generazione di codici OTP per una Yubikey"

msgid "disabling yubikey OTP"
msgstr "disabilitazione OTP yubikey"

msgid "If you use a Yubikey security key and are irritated by the spurious OTP codes it generates when inadvertently touching the key (e.g. causing you to become a spammer in the @samp{#guix} channel when discussing from your favorite IRC client!), you can disable it via the following @command{ykman} command:"
msgstr ""
"Se utilizzi una chiave di sicurezza Yubikey e sei irritato dai codici OTP spuri\n"
"che genera quando tocchi involontariamente la chiave (ad esempio, facendoti diventare\n"
"uno spammer nel canale @samp{#guix} mentre discuti dal tuo client IRC\n"
"preferito!), puoi disabilitarlo tramite il seguente comando @command{ykman}:"

msgid "guix shell python-yubikey-manager -- ykman config usb --force --disable OTP\n"
msgstr "guix shell python-yubikey-manager -- ykman config usb --force --disable OTP\n"

msgid "Alternatively, you could use the @command{ykman-gui} command provided by the @code{yubikey-manager-qt} package and either wholly disable the @samp{OTP} application for the USB interface or, from the @samp{Applications -> OTP} view, delete the slot 1 configuration, which comes pre-configured with the Yubico OTP application."
msgstr ""
"In alternativa, potresti usare il comando @command{ykman-gui} fornito dal\n"
"pacchetto @code{yubikey-manager-qt} e disabilitare completamente l'applicazione @samp{OTP}\n"
"per l'interfaccia USB oppure, dalla vista @samp{Applications -> OTP},\n"
"eliminare la configurazione dello slot 1, che viene preconfigurata con l'applicazione\n"
"Yubico OTP."

msgid "Requiring a Yubikey to open a KeePassXC database"
msgstr "Richiedere una Yubikey per aprire un database KeePassXC"

msgid "yubikey, keepassxc integration"
msgstr "yubikey, integrazione keepassxc"

msgid "The KeePassXC password manager application has support for Yubikeys, but it requires installing a udev rules for your Guix System and some configuration of the Yubico OTP application on the key."
msgstr "L'applicazione KeePassXC, gestore di password, supporta le Yubikey, ma richiede l'installazione di regole udev per il tuo sistema Guix e una certa configurazione dell'applicazione Yubico OTP sulla chiave."

msgid "The necessary udev rules file comes from the @code{yubikey-personalization} package, and can be installed like:"
msgstr ""
"Il file di regole udev necessario proviene dal pacchetto @code{yubikey-personalization},\n"
"e può essere installato così:"

msgid ""
"(use-package-modules ... security-token ...)\n"
"...\n"
"(operating-system\n"
" ...\n"
" (services\n"
"  (cons*\n"
"   ...\n"
"   (udev-rules-service 'yubikey yubikey-personalization))))\n"
msgstr ""
"(use-package-modules ... security-token ...)\n"
"...\n"
"(operating-system\n"
" ...\n"
" (services\n"
"  (cons*\n"
"   ...\n"
"   (udev-rules-service 'yubikey yubikey-personalization))))\n"

msgid "After reconfiguring your system (and reconnecting your Yubikey), you'll then want to configure the OTP challenge/response application of your Yubikey on its slot 2, which is what KeePassXC uses.  It's easy to do so via the Yubikey Manager graphical configuration tool, which can be invoked with:"
msgstr ""
"Dopo aver riconfigurato il sistema (e ricollegato la tua Yubikey), dovrai poi\n"
"configurare l'applicazione di sfida/risposta OTP della tua Yubikey sullo\n"
"slot 2, che è ciò che KeePassXC usa. È facile farlo tramite lo\n"
"strumento di configurazione grafica Yubikey Manager, che può essere invocato con:"

msgid "guix shell yubikey-manager-qt -- ykman-gui\n"
msgstr "guix shell yubikey-manager-qt -- ykman-gui\n"

msgid "First, ensure @samp{OTP} is enabled under the @samp{Interfaces} tab, then navigate to @samp{Applications -> OTP}, and click the @samp{Configure} button under the @samp{Long Touch (Slot 2)} section.  Select @samp{Challenge-response}, input or generate a secret key, and click the @samp{Finish} button.  If you have a second Yubikey you'd like to use as a backup, you should configure it the same way, using the @emph{same} secret key."
msgstr ""
"Innanzitutto, assicurati che @samp{OTP} sia abilitato nella scheda @samp{Interfacce}, quindi\n"
"vai a @samp{Applicazioni -> OTP} e fai clic sul pulsante @samp{Configura}\n"
"nella sezione @samp{Tocco lungo (Slot 2)}. Seleziona @samp{Challenge-response},\n"
"inserisci o genera una chiave segreta e fai clic sul pulsante @samp{Fine}.\n"
"Se hai una seconda Yubikey che desideri utilizzare come backup, dovresti\n"
"configurarla nello stesso modo, utilizzando la @emph{stessa} chiave segreta."

msgid "Your Yubikey should now be detected by KeePassXC.  It can be added to a database by navigating to KeePassXC's @samp{Database -> Database Security...} menu, then clicking the @samp{Add additional protection...} button, then @samp{Add Challenge-Response}, selecting the security key from the drop-down menu and clicking the @samp{OK} button to complete the setup."
msgstr ""
"La tua Yubikey dovrebbe ora essere rilevata da KeePassXC. Può essere aggiunta a un\n"
"database navigando nel menu @samp{Database -> Sicurezza database...} di KeePassXC,\n"
"quindi facendo clic sul pulsante @samp{Aggiungi protezione aggiuntiva...}, quindi su\n"
"@samp{Aggiungi Challenge-Response}, selezionando la chiave di sicurezza dal menu a discesa\n"
"e facendo clic sul pulsante @samp{OK} per completare la configurazione."

msgid "dynamic DNS, DDNS"
msgstr "DNS dinamico, DDNS"

msgid "If your @acronym{ISP, Internet Service Provider} only provides dynamic IP addresses, it can be useful to setup a dynamic @acronym{DNS, Domain Name System} (also known as @acronym{DDNS, Dynamic DNS}) service to associate a static host name to a public but dynamic (often changing) IP address.  There are multiple existing services that can be used for this; in the following mcron job, @url{https://duckdns.org, DuckDNS} is used.  It should also work with other dynamic DNS services that offer a similar interface to update the IP address, such as @url{https://freedns.afraid.org/}, with minor adjustments."
msgstr ""
"Se il tuo @acronym{ISP, Internet Service Provider} fornisce solo indirizzi IP dinamici,\n"
"può essere utile configurare un servizio @acronym{DNS, Domain Name System} dinamico\n"
"(noto anche come @acronym{DDNS, Dynamic DNS}) per associare un nome host statico\n"
"a un indirizzo IP pubblico ma dinamico (spesso variabile). Esistono diversi\n"
"servizi che possono essere utilizzati a questo scopo; nel seguente job mcron,\n"
"@url{https://duckdns.org, DuckDNS} viene utilizzato. Dovrebbe funzionare anche\n"
"con altri servizi DNS dinamici che offrono un'interfaccia simile per aggiornare l'\n"
"indirizzo IP, come @url{https://freedns.afraid.org/}, con piccole\n"
"modifiche."

msgid "The mcron job is provided below, where @var{DOMAIN} should be substituted for your own domain prefix, and the DuckDNS provided token associated to @var{DOMAIN} added to the @file{/etc/duckdns/@var{DOMAIN}.token} file."
msgstr ""
"Il job mcron è fornito di seguito, dove @var{DOMAIN} dovrebbe essere sostituito\n"
"con il tuo prefisso di dominio, e il token fornito da DuckDNS associato a\n"
"@var{DOMAIN} aggiunto al file @file{/etc/duckdns/@var{DOMAIN}.token}."

msgid ""
"(define duckdns-job\n"
"  ;; Update personal domain IP every 5 minutes.\n"
"  #~(job '(next-minute (range 0 60 5))\n"
"\t #$(program-file\n"
"            \"duckdns-update\"\n"
"            (with-extensions (list guile-gnutls) ;required by (web client)\n"
"              #~(begin\n"
"                  (use-modules (ice-9 textual-ports)\n"
"                               (web client))\n"
"                  (let ((token (string-trim-both\n"
"                                (call-with-input-file \"/etc/duckdns/@var{DOMAIN}.token\"\n"
"                                  get-string-all)))\n"
"                        (query-template (string-append \"https://www.duckdns.org/\"\n"
"                                                       \"update?domains=@var{DOMAIN}\"\n"
"                                                       \"&token=~a&ip=\")))\n"
"                    (http-get (format #f query-template token))))))\n"
"         \"duckdns-update\"\n"
"         #:user \"nobody\"))\n"
msgstr ""
"(define duckdns-job\n"
"  ;; Aggiorna l'IP del dominio personale ogni 5 minuti.\n"
"  #~(job '(next-minute (range 0 60 5))\n"
"\t #$(program-file\n"
"            \"duckdns-update\"\n"
"            (with-extensions (list guile-gnutls) ;richiesto da (web client)\n"
"              #~(begin\n"
"                  (use-modules (ice-9 textual-ports)\n"
"                               (web client))\n"
"                  (let ((token (string-trim-both\n"
"                                (call-with-input-file \"/etc/duckdns/@var{DOMAIN}.token\"\n"
"                                  get-string-all)))\n"
"                        (query-template (string-append \"https://www.duckdns.org/\"\n"
"                                                       \"update?domains=@var{DOMAIN}\"\n"
"                                                       \"&token=~a&ip=\")))\n"
"                    (http-get (format #f query-template token))))))\n"
"         \"duckdns-update\"\n"
"         #:user \"nobody\"))\n"

msgid "The job then needs to be added to the list of mcron jobs for your system, using something like:"
msgstr ""
"Il job deve quindi essere aggiunto all'elenco dei job mcron per il tuo sistema,\n"
"usando qualcosa come:"

msgid ""
"(operating-system\n"
" (services\n"
"  (cons* (service mcron-service-type\n"
"           (mcron-configuration\n"
"             (jobs (list duckdns-job ...))))\n"
"         ...\n"
"         %base-services)))\n"
msgstr ""
"(operating-system\n"
" (services\n"
"  (cons* (service mcron-service-type\n"
"           (mcron-configuration\n"
"             (jobs (list duckdns-job ...))))\n"
"         ...\n"
"         %base-services)))\n"

msgid "To connect to a Wireguard VPN server you need the kernel module to be loaded in memory and a package providing networking tools that support it (e.g.  @code{wireguard-tools} or @code{network-manager})."
msgstr ""
"Per connettersi a un server VPN Wireguard è necessario che il modulo del kernel sia caricato\n"
"in memoria e un pacchetto che fornisca strumenti di rete che lo supportino (ad esempio,\n"
"@code{wireguard-tools} o @code{network-manager})."

msgid "Here is a configuration example for Linux-Libre < 5.6, where the module is out of tree and need to be loaded manually---following revisions of the kernel have it built-in and so don't need such configuration:"
msgstr ""
"Ecco un esempio di configurazione per Linux-Libre < 5.6, dove il modulo è\n"
"esterno all'albero e deve essere caricato manualmente---le revisioni successive del\n"
"kernel lo hanno integrato e quindi non necessitano di tale configurazione:"

msgid ""
"(use-modules (gnu))\n"
"(use-service-modules desktop)\n"
"(use-package-modules vpn)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-service-modules desktop)\n"
"(use-package-modules vpn)\n"
"\n"

msgid ""
"(operating-system\n"
"  ;; …\n"
"  (services (cons (simple-service 'wireguard-module\n"
"                                  kernel-module-loader-service-type\n"
"                                  '(\"wireguard\"))\n"
"                  %desktop-services))\n"
"  (packages (cons wireguard-tools %base-packages))\n"
"  (kernel-loadable-modules (list wireguard-linux-compat)))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (services (cons (simple-service 'wireguard-module\n"
"                                  kernel-module-loader-service-type\n"
"                                  '(\"wireguard\"))\n"
"                  %desktop-services))\n"
"  (packages (cons wireguard-tools %base-packages))\n"
"  (kernel-loadable-modules (list wireguard-linux-compat)))\n"

msgid "After reconfiguring and restarting your system you can either use Wireguard tools or NetworkManager to connect to a VPN server."
msgstr ""
"Dopo aver riconfigurato e riavviato il sistema, puoi usare gli strumenti Wireguard\n"
"o NetworkManager per connetterti a un server VPN."

msgid "Using Wireguard tools"
msgstr "Utilizzo degli strumenti Wireguard"

msgid "To test your Wireguard setup it is convenient to use @command{wg-quick}.  Just give it a configuration file @command{wg-quick up ./wg0.conf}; or put that file in @file{/etc/wireguard} and run @command{wg-quick up wg0} instead."
msgstr ""
"Per testare la tua configurazione Wireguard è comodo usare @command{wg-quick}.\n"
"Basta dargli un file di configurazione @command{wg-quick up ./wg0.conf}; o metterlo\n"
"in @file{/etc/wireguard} ed eseguire @command{wg-quick up wg0} invece."

msgid "Be warned that the author described this command as a: “[…] very quick and dirty bash script […]”."
msgstr "Si noti che l'autore ha descritto questo comando come: “[…] uno script bash molto veloce e sporco […]”."

msgid "Using NetworkManager"
msgstr "Utilizzo di NetworkManager"

msgid "Thanks to NetworkManager support for Wireguard we can connect to our VPN using @command{nmcli} command.  Up to this point this guide assumes that you're using Network Manager service provided by @code{%desktop-services}.  Ortherwise you need to adjust your services list to load @code{network-manager-service-type} and reconfigure your Guix system."
msgstr ""
"Grazie al supporto di NetworkManager per Wireguard, possiamo connetterci alla nostra VPN\n"
"usando il comando @command{nmcli}. Fino a questo punto, questa guida presuppone che\n"
"stai usando il servizio Network Manager fornito da @code{%desktop-services}.\n"
"Altrimenti devi regolare l'elenco dei tuoi servizi per caricare @code{network-manager-service-type} e riconfigurare il tuo sistema Guix."

msgid "To import your VPN configuration execute nmcli import command:"
msgstr "Per importare la tua configurazione VPN, esegui il comando nmcli import:"

msgid ""
"# nmcli connection import type wireguard file wg0.conf\n"
"Connection 'wg0' (edbee261-aa5a-42db-b032-6c7757c60fde) successfully added\n"
msgstr ""
"# nmcli connection import type wireguard file wg0.conf\n"
"Connessione 'wg0' (edbee261-aa5a-42db-b032-6c7757c60fde) aggiunta con successo\n"

msgid "This will create a configuration file in @file{/etc/NetworkManager/wg0.nmconnection}.  Next connect to the Wireguard server:"
msgstr ""
"Questo creerà un file di configurazione in @file{/etc/NetworkManager/\n"
"wg0.nmconnection}. Quindi connettiti al server Wireguard:"

msgid ""
"$ nmcli connection up wg0\n"
"Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/6)\n"
msgstr ""
"$ nmcli connection up wg0\n"
"Connessione attivata con successo (percorso attivo D-Bus: /org/freedesktop/\n"
"NetworkManager/ActiveConnection/6)\n"

msgid "By default NetworkManager will connect automatically on system boot.  To change that behaviour you need to edit your config:"
msgstr ""
"Per impostazione predefinita, NetworkManager si connetterà automaticamente all'avvio del sistema.\n"
"Per modificare questo comportamento, devi modificare la tua configurazione:"

msgid "# nmcli connection modify wg0 connection.autoconnect no\n"
msgstr "# nmcli connection modify wg0 connection.autoconnect no\n"

msgid "For more specific information about NetworkManager and wireguard @uref{https://blogs.gnome.org/thaller/2019/03/15/wireguard-in-networkmanager/,see this post by thaller}."
msgstr ""
"Per informazioni più specifiche su NetworkManager e Wireguard,\n"
"@uref{https://blogs.gnome.org/thaller/2019/03/15/wireguard-in-networkmanager/, vedi questo post di Thaller}."

msgid "wm"
msgstr "wm"

msgid "stumpwm"
msgstr "stumpwm"

msgid "You could install StumpWM with a Guix system by adding @code{stumpwm} and optionally @code{`(,stumpwm \"lib\")} packages to a system configuration file, e.g.@: @file{/etc/config.scm}."
msgstr ""
"Potresti installare StumpWM con un sistema Guix aggiungendo i pacchetti @code{stumpwm} e\n"
"opzionalmente @code{`(,stumpwm \"lib\")} a un file di configurazione di sistema,\n"
"ad esempio: @file{/etc/config.scm}."

msgid "An example configuration can look like this:"
msgstr "Una configurazione di esempio può apparire così:"

msgid ""
"(use-modules (gnu))\n"
"(use-package-modules wm)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-package-modules wm)\n"
"\n"

msgid ""
"(operating-system\n"
"  ;; …\n"
"  (packages (append (list sbcl stumpwm `(,stumpwm \"lib\"))\n"
"                    %base-packages)))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (packages (append (list sbcl stumpwm `(,stumpwm \"lib\"))\n"
"                    %base-packages)))\n"

msgid "stumpwm fonts"
msgstr "caratteri stumpwm"

msgid "By default StumpWM uses X11 fonts, which could be small or pixelated on your system.  You could fix this by installing StumpWM contrib Lisp module @code{sbcl-ttf-fonts}, adding it to Guix system packages:"
msgstr ""
"Per impostazione predefinita StumpWM utilizza i font X11, che potrebbero essere piccoli o pixelati sul tuo\n"
"sistema. Puoi risolvere questo problema installando il modulo Lisp di StumpWM contrib @code{sbcl-ttf-fonts},\n"
"aggiungendolo ai pacchetti di sistema Guix:"

msgid ""
"(use-modules (gnu))\n"
"(use-package-modules fonts wm)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-package-modules fonts wm)\n"
"\n"

msgid ""
"(operating-system\n"
"  ;; …\n"
"  (packages (append (list sbcl stumpwm `(,stumpwm \"lib\"))\n"
"                    sbcl-ttf-fonts font-dejavu %base-packages)))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (packages (append (list sbcl stumpwm `(,stumpwm \"lib\"))\n"
"                    sbcl-ttf-fonts font-dejavu %base-packages)))\n"

msgid "Then you need to add the following code to a StumpWM configuration file @file{~/.stumpwm.d/init.lisp}:"
msgstr "Quindi devi aggiungere il seguente codice a un file di configurazione di StumpWM @file{~/.stumpwm.d/init.lisp}:"

msgid ""
"(require :ttf-fonts)\n"
"(setf xft:*font-dirs* '(\"/run/current-system/profile/share/fonts/\"))\n"
"(setf clx-truetype:+font-cache-filename+ (concat (getenv \"HOME\")\n"
"                                                 \"/.fonts/font-cache.sexp\"))\n"
"(xft:cache-fonts)\n"
"(set-font (make-instance 'xft:font :family \"DejaVu Sans Mono\"\n"
"                                   :subfamily \"Book\" :size 11))\n"
msgstr ""
"(require :ttf-fonts)\n"
"(setf xft:*font-dirs* '(\"/run/current-system/profile/share/fonts/\"))\n"
"(setf clx-truetype:+font-cache-filename+ (concat (getenv \"HOME\")\n"
"                                                 \"/.fonts/font-cache.sexp\"))\n"
"(xft:cache-fonts)\n"
"(set-font (make-instance 'xft:font :family \"DejaVu Sans Mono\"\n"
"                                   :subfamily \"Book\" :size 11))\n"

msgid "sessionlock"
msgstr "sessionlock"

msgid "Depending on your environment, locking the screen of your session might come built in or it might be something you have to set up yourself. If you use a desktop environment like GNOME or KDE, it's usually built in. If you use a plain window manager like StumpWM or EXWM, you might have to set it up yourself."
msgstr "A seconda del tuo ambiente, il blocco dello schermo della tua sessione potrebbe essere integrato o potresti doverlo configurare tu stesso. Se usi un ambiente desktop come GNOME o KDE, di solito è integrato. Se usi un semplice window manager come StumpWM o EXWM, potresti doverlo configurare tu stesso."

msgid "If you use Xorg, you can use the utility @uref{https://www.mankier.com/1/xss-lock, xss-lock} to lock the screen of your session.  xss-lock is triggered by DPMS which since Xorg 1.8 is auto-detected and enabled if ACPI is also enabled at kernel runtime."
msgstr "Se usi Xorg, puoi usare l'utility @uref{https://www.mankier.com/1/xss-lock, xss-lock} per bloccare lo schermo della tua sessione. xss-lock è attivato da DPMS che da Xorg 1.8 è auto-rilevato e abilitato se ACPI è anche abilitato durante l'esecuzione del kernel."

msgid "To use xss-lock, you can simple execute it and put it into the background before you start your window manager from e.g. your @file{~/.xsession}:"
msgstr "Per usare xss-lock, puoi semplicemente eseguirlo e metterlo in background prima di avviare il tuo window manager da, ad esempio, il tuo @file{~/.xsession}:"

msgid ""
"xss-lock -- slock &\n"
"exec stumpwm\n"
msgstr ""
"xss-lock -- slock &\n"
"exec stumpwm\n"

msgid "In this example, xss-lock uses @code{slock} to do the actual locking of the screen when it determines it's appropriate, like when you suspend your device."
msgstr "In questo esempio, xss-lock usa @code{slock} per bloccare effettivamente lo schermo quando lo ritiene opportuno, ad esempio quando sospendi il tuo dispositivo."

msgid "For slock to be allowed to be a screen locker for the graphical session, it needs to be made setuid-root so it can authenticate users, and it needs a PAM service. This can be achieved by adding the following service to your @file{config.scm}:"
msgstr "Affinché slock possa essere un blocco schermo per la sessione grafica, deve essere reso setuid-root in modo da poter autenticare gli utenti, e ha bisogno di un servizio PAM. Ciò può essere ottenuto aggiungendo il seguente servizio al tuo @file{config.scm}:"

msgid ""
"(service screen-locker-service-type\n"
"         (screen-locker-configuration\n"
"          (name \"slock\")\n"
"          (program (file-append slock \"/bin/slock\"))))\n"
msgstr ""
"(service screen-locker-service-type\n"
"         (screen-locker-configuration\n"
"          (name \"slock\")\n"
"          (program (file-append slock \"/bin/slock\"))))\n"

msgid "If you manually lock your screen, e.g. by directly calling slock when you want to lock your screen but not suspend it, it's a good idea to notify xss-lock about this so no confusion occurs. This can be done by executing @code{xset s activate} immediately before you execute slock."
msgstr "Se blocchi manualmente lo schermo, ad esempio chiamando direttamente slock quando vuoi bloccare lo schermo ma non sospenderlo, è una buona idea notificare xss-lock in modo che non si crei confusione. Ciò può essere fatto eseguendo @code{xset s activate} immediatamente prima di eseguire slock."

msgid "linode, Linode"
msgstr "linode, Linode"

msgid "To run Guix on a server hosted by @uref{https://www.linode.com, Linode}, start with a recommended Debian server.  We recommend using the default distro as a way to bootstrap Guix. Create your SSH keys."
msgstr "Per eseguire Guix su un server ospitato da @uref{https://www.linode.com, Linode}, inizia con un server Debian consigliato. Consigliamo di usare la distro predefinita come modo per avviare Guix. Crea le tue chiavi SSH."

msgid "ssh-keygen\n"
msgstr "ssh-keygen\n"

msgid "Be sure to add your SSH key for easy login to the remote server.  This is trivially done via Linode's graphical interface for adding SSH keys.  Go to your profile and click add SSH Key.  Copy into it the output of:"
msgstr "Assicurati di aggiungere la tua chiave SSH per un facile accesso al server remoto. Questo è facilmente fatto tramite l'interfaccia grafica di Linode per l'aggiunta di chiavi SSH. Vai al tuo profilo e clicca su aggiungi chiave SSH. Copia al suo interno l'output di:"

msgid "cat ~/.ssh/<username>_rsa.pub\n"
msgstr "cat ~/.ssh/<nomeutente>_rsa.pub\n"

msgid "Power the Linode down."
msgstr "Spegni il Linode."

msgid "In the Linode's Storage tab, resize the Debian disk to be smaller.  30 GB free space is recommended.  Then click \"Add a disk\", and fill out the form with the following:"
msgstr "Nella scheda Storage di Linode, ridimensiona il disco Debian per renderlo più piccolo. Si consigliano 30 GB di spazio libero. Quindi clicca su \"Aggiungi un disco\" e compila il modulo con quanto segue:"

msgid "Label: \"Guix\""
msgstr "Etichetta: \"Guix\""

msgid "Filesystem: ext4"
msgstr "Filesystem: ext4"

msgid "Set it to the remaining size"
msgstr "Impostalo alla dimensione rimanente"

msgid "In the Configurations tab, press \"Edit\" on the default Debian profile.  Under \"Block Device Assignment\" click \"Add a Device\". It should be @file{/dev/sdc} and you can select the \"Guix\" disk. Save Changes."
msgstr "Nella scheda Configurazioni, premi \"Modifica\" sul profilo Debian predefinito. Sotto \"Assegnazione Dispositivo a Blocchi\" clicca \"Aggiungi un Dispositivo\". Dovrebbe essere @file{/dev/sdc} e puoi selezionare il disco \"Guix\". Salva le modifiche."

msgid "Now \"Add a Configuration\", with the following:"
msgstr "Ora \"Aggiungi una Configurazione\", con quanto segue:"

msgid "Label: Guix"
msgstr "Etichetta: Guix"

msgid "Kernel:GRUB 2 (it's at the bottom! This step is @b{IMPORTANT!})"
msgstr "Kernel:GRUB 2 (è in fondo! Questo passaggio è @b{IMPORTANTE!})"

msgid "Block device assignment:"
msgstr "Assegnazione dispositivo a blocchi:"

msgid "@file{/dev/sda}: Guix"
msgstr "@file{/dev/sda}: Guix"

msgid "@file{/dev/sdb}: swap"
msgstr "@file{/dev/sdb}: swap"

msgid "Root device: @file{/dev/sda}"
msgstr "Dispositivo root: @file{/dev/sda}"

msgid "Turn off all the filesystem/boot helpers"
msgstr "Disattiva tutti gli assistenti di filesystem/avvio"

msgid "Now power it back up, booting with the Debian configuration.  Once it's running, ssh to your server via @code{ssh root@@@var{<your-server-IP-here>}}. (You can find your server IP address in your Linode Summary section.) Now you can run the \"install guix from @pxref{Binary Installation,,, guix, GNU Guix}\" steps:"
msgstr "Ora riaccendilo, avviando con la configurazione Debian. Una volta in esecuzione, connettiti al tuo server via ssh con @code{ssh root@@@var{<il-tuo-IP-server-qui>}}. (Puoi trovare l'indirizzo IP del tuo server nella sezione Riepilogo di Linode.) Ora puoi eseguire i passaggi per \"installare Guix da @pxref{Installazione binaria,,, guix.it, GNU Guix}\":"

msgid ""
"sudo apt-get install gpg\n"
"wget https://sv.gnu.org/people/viewgpg.php?user_id=15145 -qO - | gpg --import -\n"
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"
msgstr ""
"sudo apt-get install gpg\n"
"wget https://sv.gnu.org/people/viewgpg.php?user_id=15145 -qO - | gpg --import -\n"
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"

msgid "Now it's time to write out a config for the server.  The key information is below. Save the resulting file as @file{guix-config.scm}."
msgstr "Ora è il momento di scrivere una configurazione per il server. Le informazioni chiave sono qui sotto. Salva il file risultante come @file{guix-config.scm}."

msgid ""
"(use-modules (gnu)\n"
"             (guix modules))\n"
"(use-service-modules networking\n"
"                     ssh)\n"
"(use-package-modules admin\n"
"                     package-management\n"
"                     ssh\n"
"                     tls)\n"
"\n"
msgstr ""
"(use-modules (gnu)\n"
"             (guix modules))\n"
"(use-service-modules networking\n"
"                     ssh)\n"
"(use-package-modules admin\n"
"                     package-management\n"
"                     ssh\n"
"                     tls)\n"
"\n"

msgid ""
"(operating-system\n"
"  (host-name \"my-server\")\n"
"  (timezone \"America/New_York\")\n"
"  (locale \"en_US.UTF-8\")\n"
"  ;; This goofy code will generate the grub.cfg\n"
"  ;; without installing the grub bootloader on disk.\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader\n"
"                (bootloader\n"
"                 (inherit grub-bootloader)\n"
"                 (installer #~(const #true))))))\n"
"  (file-systems (cons (file-system\n"
"                        (device \"/dev/sda\")\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                      %base-file-systems))\n"
"\n"
msgstr ""
"(operating-system\n"
"  (host-name \"my-server\")\n"
"  (timezone \"America/New_York\")\n"
"  (locale \"en_US.UTF-8\")\n"
"  ;; Questo codice strambo genererà il grub.cfg\n"
"  ;; senza installare il bootloader grub sul disco.\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader\n"
"                (bootloader\n"
"                 (inherit grub-bootloader)\n"
"                 (installer #~(const #true))))))\n"
"  (file-systems (cons (file-system\n"
"                        (device \"/dev/sda\")\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                      %base-file-systems))\n"
"\n"

msgid ""
"  (swap-devices (list \"/dev/sdb\"))\n"
"\n"
msgstr ""
"  (swap-devices (list \"/dev/sdb\"))\n"
"\n"

msgid ""
"  (initrd-modules (cons \"virtio_scsi\"    ; Needed to find the disk\n"
"                        %base-initrd-modules))\n"
"\n"
msgstr ""
"  (initrd-modules (cons \"virtio_scsi\"    ; Necessario per trovare il disco\n"
"                        %base-initrd-modules))\n"
"\n"

msgid ""
"  (users (cons (user-account\n"
"                (name \"janedoe\")\n"
"                (group \"users\")\n"
"                ;; Adding the account to the \"wheel\" group\n"
"                ;; makes it a sudoer.\n"
"                (supplementary-groups '(\"wheel\"))\n"
"                (home-directory \"/home/janedoe\"))\n"
"               %base-user-accounts))\n"
"\n"
msgstr ""
"  (users (cons (user-account\n"
"                (name \"janedoe\")\n"
"                (group \"users\")\n"
"                ;; Aggiungendo l'account al gruppo \"wheel\"\n"
"                ;; lo rende un sudoer.\n"
"                (supplementary-groups '(\"wheel\"))\n"
"                (home-directory \"/home/janedoe\"))\n"
"               %base-user-accounts))\n"
"\n"

msgid ""
"  (packages (cons* openssh-sans-x\n"
"                   %base-packages))\n"
"\n"
msgstr ""
"  (packages (cons* openssh-sans-x\n"
"                   %base-packages))\n"
"\n"

msgid ""
"  (services (cons*\n"
"             (service dhcp-client-service-type)\n"
"             (service openssh-service-type\n"
"                      (openssh-configuration\n"
"                       (openssh openssh-sans-x)\n"
"                       (password-authentication? #false)\n"
"                       (authorized-keys\n"
"                        `((\"janedoe\" ,(local-file \"janedoe_rsa.pub\"))\n"
"                          (\"root\" ,(local-file \"janedoe_rsa.pub\"))))))\n"
"             %base-services)))\n"
msgstr ""
"  (services (cons*\n"
"             (service dhcp-client-service-type)\n"
"             (service openssh-service-type\n"
"                      (openssh-configuration\n"
"                       (openssh openssh-sans-x)\n"
"                       (password-authentication? #false)\n"
"                       (authorized-keys\n"
"                        `((\"janedoe\" ,(local-file \"janedoe_rsa.pub\"))\n"
"                          (\"root\" ,(local-file \"janedoe_rsa.pub\"))))))\n"
"             %base-services)))\n"

msgid "Replace the following fields in the above configuration:"
msgstr "Sostituisci i seguenti campi nella configurazione sopra:"

msgid ""
"(host-name \"my-server\")       ; replace with your server name\n"
"; if you chose a linode server outside the U.S., then\n"
"; use tzselect to find a correct timezone string\n"
"(timezone \"America/New_York\") ; if needed replace timezone\n"
"(name \"janedoe\")              ; replace with your username\n"
"(\"janedoe\" ,(local-file \"janedoe_rsa.pub\")) ; replace with your ssh key\n"
"(\"root\" ,(local-file \"janedoe_rsa.pub\")) ; replace with your ssh key\n"
msgstr ""
"(host-name \"il-mio-server\")       ; sostituisci con il nome del tuo server\n"
"; se hai scelto un server linode fuori dagli Stati Uniti, allora\n"
"; usa tzselect per trovare una stringa di fuso orario corretta\n"
"(timezone \"America/New_York\") ; se necessario sostituisci il fuso orario\n"
"(name \"janedoe\")              ; sostituisci con il tuo nome utente\n"
"(\"janedoe\" ,(local-file \"janedoe_rsa.pub\")) ; sostituisci con la tua chiave ssh\n"
"(\"root\" ,(local-file \"janedoe_rsa.pub\")) ; sostituisci con la tua chiave ssh\n"

msgid "The last line in the above example lets you log into the server as root and set the initial root password (see the note at the end of this recipe about root login).  After you have done this, you may delete that line from your configuration and reconfigure to prevent root login."
msgstr "L'ultima riga nell'esempio sopra ti permette di accedere al server come root e impostare la password iniziale di root (vedi la nota alla fine di questa ricetta su l'accesso come root). Dopo aver fatto ciò, puoi eliminare quella riga dalla tua configurazione e riconfigurare per impedire l'accesso come root."

msgid "Copy your ssh public key (eg: @file{~/.ssh/id_rsa.pub}) as @file{@var{<your-username-here>}_rsa.pub} and put @file{guix-config.scm} in the same directory.  In a new terminal run these commands."
msgstr "Copia la tua chiave pubblica ssh (es: @file{~/.ssh/id_rsa.pub}) come @file{@var{<il-tuo-nomeutente-qui>}_rsa.pub} e metti @file{guix-config.scm} nella stessa directory. In un nuovo terminale esegui questi comandi."

msgid ""
"sftp root@@<remote server ip address>\n"
"put /path/to/files/<username>_rsa.pub .\n"
"put /path/to/files/guix-config.scm .\n"
msgstr ""
"sftp root@@<indirizzo ip del server remoto>\n"
"put /percorso/ai/files/<nomeutente>_rsa.pub .\n"
"put /percorso/ai/files/guix-config.scm .\n"

msgid "In your first terminal, mount the guix drive:"
msgstr "Nel tuo primo terminale, monta l'unità guix:"

msgid ""
"mkdir /mnt/guix\n"
"mount /dev/sdc /mnt/guix\n"
msgstr ""
"mkdir /mnt/guix\n"
"mount /dev/sdc /mnt/guix\n"

msgid "Due to the way we set up the bootloader section of the guix-config.scm, only the grub configuration file will be installed.  So, we need to copy over some of the other GRUB stuff already installed on the Debian system:"
msgstr "A causa del modo in cui abbiamo configurato la sezione del bootloader di guix-config.scm, solo il file di configurazione di grub verrà installato. Quindi, dobbiamo copiare parte del resto del GRUB già installato sul sistema Debian:"

msgid ""
"mkdir -p /mnt/guix/boot/grub\n"
"cp -r /boot/grub/* /mnt/guix/boot/grub/\n"
msgstr ""
"mkdir -p /mnt/guix/boot/grub\n"
"cp -r /boot/grub/* /mnt/guix/boot/grub/\n"

msgid "Now initialize the Guix installation:"
msgstr "Ora inizializza l'installazione di Guix:"

msgid "guix system init guix-config.scm /mnt/guix\n"
msgstr "guix system init guix-config.scm /mnt/guix\n"

msgid "Ok, power it down! Now from the Linode console, select boot and select \"Guix\"."
msgstr "Ok, spegnilo! Ora dalla console di Linode, seleziona boot e seleziona \"Guix\"."

msgid "Once it boots, you should be able to log in via SSH! (The server config will have changed though.)  You may encounter an error like:"
msgstr "Una volta avviato, dovresti essere in grado di accedere via SSH! (La configurazione del server sarà cambiata però.) Potresti incontrare un errore come:"

msgid ""
"$ ssh root@@<server ip address>\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
"Someone could be eavesdropping on you right now (man-in-the-middle attack)!\n"
"It is also possible that a host key has just been changed.\n"
"The fingerprint for the ECDSA key sent by the remote host is\n"
"SHA256:0B+wp33w57AnKQuHCvQP0+ZdKaqYrI/kyU7CfVbS7R4.\n"
"Please contact your system administrator.\n"
"Add correct host key in /home/joshua/.ssh/known_hosts to get rid of this message.\n"
"Offending ECDSA key in /home/joshua/.ssh/known_hosts:3\n"
"ECDSA host key for 198.58.98.76 has changed and you have requested strict checking.\n"
"Host key verification failed.\n"
msgstr ""
"$ ssh root@@<indirizzo ip del server>\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"@    ATTENZIONE: L'IDENTIFICAZIONE DELL'HOST REMOTO È CAMBIATA!     @\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"È POSSIBILE CHE QUALCUNO STIA FACENDO QUALCOSA DI BRUTTO!\n"
"Qualcuno potrebbe intercettarti in questo momento (attacco man-in-the-middle)!\n"
"È anche possibile che una chiave host sia stata appena cambiata.\n"
"L'impronta digitale della chiave ECDSA inviata dall'host remoto è\n"
"SHA256:0B+wp33w57AnKQuHCvQP0+ZdKaqYrI/kyU7CfVbS7R4.\n"
"Si prega di contattare l'amministratore del sistema.\n"
"Aggiungi la chiave host corretta in /home/joshua/.ssh/known_hosts per eliminare questo messaggio.\n"
"Chiave ECDSA offensiva in /home/joshua/.ssh/known_hosts:3\n"
"La chiave host ECDSA per 198.58.98.76 è cambiata e hai richiesto un controllo rigoroso.\n"
"Verifica della chiave host fallita.\n"

msgid "Either delete @file{~/.ssh/known_hosts} file, or delete the offending line starting with your server IP address."
msgstr "Elimina il file @file{~/.ssh/known_hosts} oppure elimina la riga incriminata che inizia con l'indirizzo IP del tuo server."

msgid "Be sure to set your password and root's password."
msgstr "Assicurati di impostare la tua password e quella di root."

msgid ""
"ssh root@@<remote ip address>\n"
"passwd  ; for the root password\n"
"passwd <username> ; for the user password\n"
msgstr ""
"ssh root@@<indirizzo ip remoto>\n"
"passwd  ; per la password di root\n"
"passwd <nomeutente> ; per la password utente\n"

msgid "You may not be able to run the above commands at this point.  If you have issues remotely logging into your linode box via SSH, then you may still need to set your root and user password initially by clicking on the ``Launch Console'' option in your linode.  Choose the ``Glish'' instead of ``Weblish''.  Now you should be able to ssh into the machine."
msgstr "Potresti non essere in grado di eseguire i comandi sopra a questo punto. Se hai problemi ad accedere in remoto alla tua macchina Linode via SSH, potresti ancora dover impostare inizialmente la password di root e dell'utente cliccando sull'opzione ``Launch Console'' nel tuo Linode. Scegli ``Glish'' invece di ``Weblish''. Ora dovresti essere in grado di accedere alla macchina tramite ssh."

msgid "Hooray! At this point you can shut down the server, delete the Debian disk, and resize the Guix to the rest of the size.  Congratulations!"
msgstr "Evviva! A questo punto puoi spegnere il server, eliminare il disco Debian, e ridimensionare il Guix al resto della dimensione. Congratulazioni!"

msgid "By the way, if you save it as a disk image right at this point, you'll have an easy time spinning up new Guix images! You may need to down-size the Guix image to 6144MB, to save it as an image.  Then you can resize it again to the max size."
msgstr "A proposito, se lo salvi come immagine disco proprio a questo punto, avrai facilità a creare nuove immagini Guix! Potrebbe essere necessario ridurre la dimensione dell'immagine Guix a 6144MB, per salvarla come immagine. Quindi puoi ridimensionarla di nuovo a la dimensione massima."

msgid "kimsufi, Kimsufi, OVH"
msgstr "kimsufi, Kimsufi, OVH"

msgid "To run Guix on a server hosted by @uref{https://www.kimsufi.com/, Kimsufi}, click on the netboot tab then select rescue64-pro and restart."
msgstr "Per eseguire Guix su un server ospitato da @uref{https://www.kimsufi.com/, Kimsufi}, clicca sulla scheda netboot, quindi seleziona rescue64-pro e riavvia."

msgid "OVH will email you the credentials required to ssh into a Debian system."
msgstr "OVH ti invierà via email le credenziali necessarie per accedere via ssh a un sistema Debian."

msgid "Now you can run the \"install guix from @pxref{Binary Installation,,, guix, GNU Guix}\" steps:"
msgstr "Ora puoi eseguire i passaggi per \"installare Guix da @pxref{Installazione binaria,,, guix.it, GNU Guix}\":"

msgid ""
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"
msgstr ""
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"

msgid "Partition the drives and format them, first stop the raid array:"
msgstr "Partiziona i dischi e formattali, prima ferma l'array raid:"

msgid ""
"mdadm --stop /dev/md127\n"
"mdadm --zero-superblock /dev/sda2 /dev/sdb2\n"
msgstr ""
"mdadm --stop /dev/md127\n"
"mdadm --zero-superblock /dev/sda2 /dev/sdb2\n"

msgid "Then wipe the disks and set up the partitions, we will create a RAID 1 array."
msgstr "Quindi azzera i dischi e configura le partizioni, creeremo un array RAID 1."

msgid ""
"wipefs -a /dev/sda\n"
"wipefs -a /dev/sdb\n"
"\n"
msgstr ""
"wipefs -a /dev/sda\n"
"wipefs -a /dev/sdb\n"
"\n"

msgid ""
"parted /dev/sda --align=opt -s -m -- mklabel gpt\n"
"parted /dev/sda --align=opt -s -m -- \\\n"
" mkpart bios_grub 1049kb 512MiB \\\n"
" set 1 bios_grub on\n"
"parted /dev/sda --align=opt -s -m -- \\\n"
" mkpart primary 512MiB -512MiB\n"
" set 2 raid on\n"
"parted /dev/sda --align=opt -s -m -- mkpart primary linux-swap 512MiB 100%\n"
"\n"
msgstr ""
"parted /dev/sda --align=opt -s -m -- mklabel gpt\n"
"parted /dev/sda --align=opt -s -m -- \\\n"
" mkpart bios_grub 1049kb 512MiB \\\n"
" set 1 bios_grub on\n"
"parted /dev/sda --align=opt -s -m -- \\\n"
" mkpart primary 512MiB -512MiB\n"
" set 2 raid on\n"
"parted /dev/sda --align=opt -s -m -- mkpart primary linux-swap 512MiB 100%\n"
"\n"

msgid ""
"parted /dev/sdb --align=opt -s -m -- mklabel gpt\n"
"parted /dev/sdb --align=opt -s -m -- \\\n"
"     mkpart bios_grub 1049kb 512MiB \\\n"
"     set 1 bios_grub on\n"
"parted /dev/sdb --align=opt -s -m -- \\\n"
"     mkpart primary 512MiB -512MiB \\\n"
"     set 2 raid on\n"
"parted /dev/sdb --align=opt -s -m -- mkpart primary linux-swap 512MiB 100%\n"
msgstr ""
"parted /dev/sdb --align=opt -s -m -- mklabel gpt\n"
"parted /dev/sdb --align=opt -s -m -- \\\n"
"     mkpart bios_grub 1049kb 512MiB \\\n"
"     set 1 bios_grub on\n"
"parted /dev/sdb --align=opt -s -m -- \\\n"
"     mkpart primary 512MiB -512MiB \\\n"
"     set 2 raid on\n"
"parted /dev/sdb --align=opt -s -m -- mkpart primary linux-swap 512MiB 100%\n"

msgid "Create the array:"
msgstr "Crea l'array:"

msgid ""
"mdadm --create /dev/md127 --level=1 --raid-disks=2 \\\n"
"  --metadata=0.90 /dev/sda2 /dev/sdb2\n"
msgstr ""
"mdadm --create /dev/md127 --level=1 --raid-disks=2 \\\n"
"  --metadata=0.90 /dev/sda2 /dev/sdb2\n"

msgid "Now create file systems on the relevant partitions, first the boot partitions:"
msgstr "Ora crea i file system sulle partizioni pertinenti, prima le partizioni di avvio:"

msgid ""
"mkfs.ext4  /dev/sda1\n"
"mkfs.ext4  /dev/sdb1\n"
msgstr ""
"mkfs.ext4  /dev/sda1\n"
"mkfs.ext4  /dev/sdb1\n"

msgid "Then the root partition:"
msgstr "Quindi la partizione root:"

msgid "mkfs.ext4 /dev/md127\n"
msgstr "mkfs.ext4 /dev/md127\n"

msgid "Initialize the swap partitions:"
msgstr "Inizializza le partizioni di swap:"

msgid ""
"mkswap /dev/sda3\n"
"swapon /dev/sda3\n"
"mkswap /dev/sdb3\n"
"swapon /dev/sdb3\n"
msgstr ""
"mkswap /dev/sda3\n"
"swapon /dev/sda3\n"
"mkswap /dev/sdb3\n"
"swapon /dev/sdb3\n"

msgid "Mount the guix drive:"
msgstr "Monta l'unità guix:"

msgid ""
"mkdir /mnt/guix\n"
"mount /dev/md127 /mnt/guix\n"
msgstr ""
"mkdir /mnt/guix\n"
"mount /dev/md127 /mnt/guix\n"

msgid "Now is time to write an operating system declaration @file{os.scm} file; here is a sample:"
msgstr "Ora è il momento di scrivere un file di dichiarazione del sistema operativo @file{os.scm}; ecco un esempio:"

msgid ""
"(use-modules (gnu) (guix))\n"
"(use-service-modules networking ssh vpn virtualization sysctl admin mcron)\n"
"(use-package-modules ssh tls tmux vpn virtualization)\n"
"\n"
msgstr ""
"(use-modules (gnu) (guix))\n"
"(use-service-modules networking ssh vpn virtualization sysctl admin mcron)\n"
"(use-package-modules ssh tls tmux vpn virtualization)\n"
"\n"

msgid ""
"(operating-system\n"
"  (host-name \"kimsufi\")\n"
"\n"
msgstr ""
"(operating-system\n"
"  (host-name \"kimsufi\")\n"
"\n"

msgid ""
"  (bootloader (bootloader-configuration\n"
"\t       (bootloader grub-bootloader)\n"
"\t       (targets (list \"/dev/sda\" \"/dev/sdb\"))\n"
"\t       (terminal-outputs '(console))))\n"
"\n"
msgstr ""
"  (bootloader (bootloader-configuration\n"
"\t       (bootloader grub-bootloader)\n"
"\t       (targets (list \"/dev/sda\" \"/dev/sdb\"))\n"
"\t       (terminal-outputs '(console))))\n"
"\n"

msgid ""
"  ;; Add a kernel module for RAID-1 (aka. \"mirror\").\n"
"  (initrd-modules (cons* \"raid1\"  %base-initrd-modules))\n"
"\n"
msgstr ""
"  ;; Aggiungi un modulo del kernel per RAID-1 (alias \"mirror\").\n"
"  (initrd-modules (cons* \"raid1\"  %base-initrd-modules))\n"
"\n"

msgid ""
"  (mapped-devices\n"
"   (list (mapped-device\n"
"          (source (list \"/dev/sda2\" \"/dev/sdb2\"))\n"
"          (target \"/dev/md127\")\n"
"          (type raid-device-mapping))))\n"
"\n"
msgstr ""
"  (mapped-devices\n"
"   (list (mapped-device\n"
"          (source (list \"/dev/sda2\" \"/dev/sdb2\"))\n"
"          (target \"/dev/md127\")\n"
"          (type raid-device-mapping))))\n"
"\n"

msgid ""
"  (swap-devices\n"
"   (list (swap-space\n"
"          (target \"/dev/sda3\"))\n"
"         (swap-space\n"
"          (target \"/dev/sdb3\"))))\n"
"\n"
msgstr ""
"  (swap-devices\n"
"   (list (swap-space\n"
"          (target \"/dev/sda3\"))\n"
"         (swap-space\n"
"          (target \"/dev/sdb3\"))))\n"
"\n"

msgid ""
"  (issue\n"
"   ;; Default contents for /etc/issue.\n"
"   \"\\\n"
"This is the GNU system at Kimsufi.  Welcome.\\n\")\n"
"\n"
msgstr ""
"  (issue\n"
"   ;; Contenuti predefiniti per /etc/issue.\n"
"   \"\\\n"
"Questo è il sistema GNU su Kimsufi. Benvenuto.\\n\")\n"
"\n"

msgid ""
"  (file-systems (cons* (file-system\n"
"\t\t         (mount-point \"/\")\n"
"\t\t         (device \"/dev/md127\")\n"
"\t\t         (type \"ext4\")\n"
"\t\t         (dependencies mapped-devices))\n"
"\t\t       %base-file-systems))\n"
"\n"
msgstr ""
"  (file-systems (cons* (file-system\n"
"\t\t         (mount-point \"/\")\n"
"\t\t         (device \"/dev/md127\")\n"
"\t\t         (type \"ext4\")\n"
"\t\t         (dependencies mapped-devices))\n"
"\t\t       %base-file-systems))\n"
"\n"

msgid ""
"  (users (cons (user-account\n"
"\t        (name \"guix\")\n"
"\t        (comment \"guix\")\n"
"\t        (group \"users\")\n"
"\t        (supplementary-groups '(\"wheel\"))\n"
"\t        (home-directory \"/home/guix\"))\n"
"\t       %base-user-accounts))\n"
"\n"
msgstr ""
"  (users (cons (user-account\n"
"\t        (name \"guix\")\n"
"\t        (comment \"guix\")\n"
"\t        (group \"users\")\n"
"\t        (supplementary-groups '(\"wheel\"))\n"
"\t        (home-directory \"/home/guix\"))\n"
"\t       %base-user-accounts))\n"
"\n"

msgid ""
"  (sudoers-file\n"
"   (plain-file \"sudoers\" \"\\\n"
"root ALL=(ALL) ALL\n"
"%wheel ALL=(ALL) ALL\n"
"guix ALL=(ALL) NOPASSWD:ALL\\n\"))\n"
"\n"
msgstr ""
"  (sudoers-file\n"
"   (plain-file \"sudoers\" \"\\\n"
"root ALL=(ALL) ALL\n"
"%wheel ALL=(ALL) ALL\n"
"guix ALL=(ALL) NOPASSWD:ALL\\n\"))\n"
"\n"

msgid ""
"  ;; Globally-installed packages.\n"
"  (packages (cons* tmux gnutls wireguard-tools %base-packages))\n"
"  (services\n"
"   (cons*\n"
"    (service static-networking-service-type\n"
"\t     (list (static-networking\n"
"\t\t    (addresses (list (network-address\n"
"\t\t\t\t      (device \"enp3s0\")\n"
"\t\t\t\t      (value \"@var{server-ip-address}/24\"))))\n"
"\t\t    (routes (list (network-route\n"
"\t\t\t\t   (destination \"default\")\n"
"\t\t\t\t   (gateway \"@var{server-gateway}\"))))\n"
"\t\t    (name-servers '(\"213.186.33.99\")))))\n"
"\n"
msgstr ""
"  ;; Pacchetti installati globalmente.\n"
"  (packages (cons* tmux gnutls wireguard-tools %base-packages))\n"
"  (services\n"
"   (cons*\n"
"    (service static-networking-service-type\n"
"\t     (list (static-networking\n"
"\t\t    (addresses (list (network-address\n"
"\t\t\t\t      (device \"enp3s0\")\n"
"\t\t\t\t      (value \"@var{indirizzo-ip-server}/24\"))))\n"
"\t\t    (routes (list (network-route\n"
"\t\t\t\t   (destination \"default\")\n"
"\t\t\t\t   (gateway \"@var{server-gateway}\"))))\n"
"\t\t    (name-servers '(\"213.186.33.99\")))))\n"
"\n"

msgid ""
"    (service unattended-upgrade-service-type)\n"
"\n"
msgstr ""
"    (service unattended-upgrade-service-type)\n"
"\n"

msgid ""
"    (service openssh-service-type\n"
"\t     (openssh-configuration\n"
"\t      (openssh openssh-sans-x)\n"
"\t      (permit-root-login #f)\n"
"\t      (authorized-keys\n"
"\t       `((\"guix\" ,(plain-file \"@var{ssh-key-name.pub}\"\n"
"                                      \"@var{ssh-public-key-content}\"))))))\n"
"    (modify-services %base-services\n"
"      (sysctl-service-type\n"
"       config =>\n"
"       (sysctl-configuration\n"
"\t(settings (append '((\"net.ipv6.conf.all.autoconf\" . \"0\")\n"
"\t\t\t    (\"net.ipv6.conf.all.accept_ra\" . \"0\"))\n"
"\t\t\t  %default-sysctl-settings))))))))\n"
msgstr ""
"    (service openssh-service-type\n"
"\t     (openssh-configuration\n"
"\t      (openssh openssh-sans-x)\n"
"\t      (permit-root-login #f)\n"
"\t      (authorized-keys\n"
"\t       `((\"guix\" ,(plain-file \"@var{ssh-key-name.pub}\"\n"
"                                      \"@var{contenuto-chiave-pubblica-ssh}\"))))))\n"
"    (modify-services %base-services\n"
"      (sysctl-service-type\n"
"       config =>\n"
"       (sysctl-configuration\n"
"\t(settings (append '((\"net.ipv6.conf.all.autoconf\" . \"0\")\n"
"\t\t\t    (\"net.ipv6.conf.all.accept_ra\" . \"0\"))\n"
"\t\t\t  %default-sysctl-settings))))))))\n"

msgid "Don't forget to substitute the @var{server-ip-address}, @var{server-gateway}, @var{ssh-key-name} and @var{ssh-public-key-content} variables with your own values."
msgstr "Non dimenticare di sostituire le variabili @var{indirizzo-ip-server}, @var{server-gateway}, @var{nome-chiave-ssh} e @var{contenuto-chiave-pubblica-ssh} con i tuoi valori."

msgid "The gateway is the last usable IP in your block so if you have a server with an IP of @samp{37.187.79.10} then its gateway will be @samp{37.187.79.254}."
msgstr "Il gateway è l'ultimo IP utilizzabile nel tuo blocco, quindi se hai un server con un IP di @samp{37.187.79.10} allora il suo gateway sarà @samp{37.187.79.254}."

msgid "Transfer your operating system declaration @file{os.scm} file on the server via the @command{scp} or @command{sftp} commands."
msgstr "Trasferisci il file di dichiarazione del tuo sistema operativo @file{os.scm} sul server tramite i comandi @command{scp} o @command{sftp}."

msgid "Now all that is left is to install Guix with a @code{guix system init} and restart."
msgstr "Ora non resta che installare Guix con un @code{guix system init} e riavviare."

msgid "However we first need to set up a chroot, because the root partition of the rescue system is mounted on an aufs partition and if you try to install Guix it will fail at the GRUB install step complaining about the canonical path of \"aufs\"."
msgstr "Tuttavia, dobbiamo prima configurare un chroot, perché la partizione root del sistema di recupero è montata su una partizione aufs e se provi a installare Guix fallirà al passaggio di installazione di GRUB lamentandosi del percorso canonico di \"aufs\"."

msgid "Install packages that will be used in the chroot:"
msgstr "Installa i pacchetti che verranno usati nel chroot:"

msgid "guix install bash-static parted util-linux-with-udev coreutils guix\n"
msgstr "guix install bash-static parted util-linux-with-udev coreutils guix\n"

msgid "Then run the following to create directories needed for the chroot:"
msgstr "Quindi esegui quanto segue per creare le directory necessarie per il chroot:"

msgid ""
"cd /mnt && \\\n"
"mkdir -p bin etc gnu/store root/.guix-profile/ root/.config/guix/current \\\n"
"  var/guix proc sys dev\n"
msgstr ""
"cd /mnt && \\\n"
"mkdir -p bin etc gnu/store root/.guix-profile/ root/.config/guix/current \\\n"
"  var/guix proc sys dev\n"

msgid "Copy the host resolv.conf in the chroot:"
msgstr "Copia il resolv.conf dell'host nel chroot:"

msgid "cp /etc/resolv.conf etc/\n"
msgstr "cp /etc/resolv.conf etc/\n"

msgid "Mount block devices, the store and its database and the current guix config:"
msgstr "Monta i dispositivi a blocchi, lo store e il suo database e la configurazione attuale di guix:"

msgid ""
"mount --rbind /proc /mnt/proc\n"
"mount --rbind /sys /mnt/sys\n"
"mount --rbind /dev /mnt/dev\n"
"mount --rbind /var/guix/ var/guix/\n"
"mount --rbind /gnu/store gnu/store/\n"
"mount --rbind /root/.config/ root/.config/\n"
"mount --rbind /root/.guix-profile/bin/ bin\n"
"mount --rbind /root/.guix-profile root/.guix-profile/\n"
msgstr ""
"mount --rbind /proc /mnt/proc\n"
"mount --rbind /sys /mnt/sys\n"
"mount --rbind /dev /mnt/dev\n"
"mount --rbind /var/guix/ var/guix/\n"
"mount --rbind /gnu/store gnu/store/\n"
"mount --rbind /root/.config/ root/.config/\n"
"mount --rbind /root/.guix-profile/bin/ bin\n"
"mount --rbind /root/.guix-profile root/.guix-profile/\n"

msgid "Chroot in /mnt and install the system:"
msgstr "Chroot in /mnt e installa il sistema:"

msgid ""
"chroot /mnt/ /bin/bash\n"
"\n"
msgstr ""
"chroot /mnt/ /bin/bash\n"
"\n"

msgid "guix system init /root/os.scm /guix\n"
msgstr "guix system init /root/os.scm /guix\n"

msgid "Finally, from the web user interface (UI), change @samp{netboot} to @samp{boot to disk} and restart (also from the web UI)."
msgstr "Infine, dall'interfaccia utente web (UI), cambia @samp{netboot} in @samp{avvio da disco} e riavvia (anche dall'interfaccia utente web)."

msgid "Wait a few minutes and try to ssh with @code{ssh guix@@@var{server-ip-address>} -i @var{path-to-your-ssh-key}}"
msgstr "Aspetta qualche minuto e prova a connetterti via ssh con @code{ssh guix@@@var{indirizzo-ip-server>} -i @var{path-to-your-ssh-key}}"

msgid "You should have a Guix system up and running on Kimsufi; congratulations!"
msgstr "Dovresti avere un sistema Guix attivo e funzionante su Kimsufi; congratulazioni!"

msgid "To bind mount a file system, one must first set up some definitions before the @code{operating-system} section of the system definition.  In this example we will bind mount a folder from a spinning disk drive to @file{/tmp}, to save wear and tear on the primary SSD, without dedicating an entire partition to be mounted as @file{/tmp}."
msgstr "Per montare con bind un file system, è necessario prima impostare alcune definizioni prima della sezione @code{operating-system} della definizione del sistema. In questo esempio monteremo con bind una cartella da un disco rotante su @file{/tmp}, per risparmiare usura sul SSD primario, senza dedicare un'intera partizione da montare come @file{/tmp}."

msgid "First, the source drive that hosts the folder we wish to bind mount should be defined, so that the bind mount can depend on it."
msgstr "Innanzitutto, l'unità sorgente che ospita la cartella che desideriamo montare con bind dovrebbe essere definita, in modo che il mount bind possa dipendere da essa."

msgid ""
"(define source-drive ;; \"source-drive\" can be named anything you want.\n"
"   (file-system\n"
"    (device (uuid \"UUID goes here\"))\n"
"    (mount-point \"/path-to-spinning-disk-goes-here\")\n"
"    (type \"ext4\"))) ;Make sure to set this to the appropriate type for your drive.\n"
msgstr ""
"(define source-drive ;; \"source-drive\" può essere chiamato come vuoi.\n"
"   (file-system\n"
"    (device (uuid \"UUID va qui\"))\n"
"    (mount-point \"/percorso-al-disco-rotante-va-qui\")\n"
"    (type \"ext4\"))) ;Assicurati di impostarlo al tipo appropriato per la tua unità.\n"

msgid "The source folder must also be defined, so that guix will know it's not a regular block device, but a folder."
msgstr "La cartella sorgente deve essere definita anche, in modo che guix sappia che non è un dispositivo a blocchi regolare, ma una cartella."

msgid ""
";; \"source-directory\" can be named any valid variable name.\n"
"(define (%source-directory) \"/path-to-spinning-disk-goes-here/tmp\")\n"
msgstr ""
";; \"source-directory\" può essere qualsiasi nome di variabile valido.\n"
"(define (%source-directory) \"/percorso-al-disco-rotante-va-qui/tmp\")\n"

msgid "Finally, inside the @code{file-systems} definition, we must add the mount itself."
msgstr "Infine, all'interno della definizione @code{file-systems}, dobbiamo aggiungere il mount stesso."

msgid ""
"(file-systems (cons*\n"
"\n"
msgstr ""
"(file-systems (cons*\n"
"\n"

msgid ""
"                ...<other drives omitted for clarity>...\n"
"\n"
msgstr ""
"                ...<altre unità omesse per chiarezza>...\n"
"\n"

msgid ""
"                ;; Must match the name you gave the source drive in the earlier definition.\n"
"                source-drive\n"
"\n"
msgstr ""
"                ;; Deve corrispondere al nome che hai dato all'unità sorgente nella definizione precedente.\n"
"                source-drive\n"
"\n"

msgid ""
"                (file-system\n"
"                 ;; Make sure \"source-directory\" matches your earlier definition.\n"
"                 (device (%source-directory))\n"
"                 (mount-point \"/tmp\")\n"
"                 ;; We are mounting a folder, not a partition, so this type needs to be \"none\"\n"
"                 (type \"none\")\n"
"                 (flags '(bind-mount))\n"
"                 ;; Ensure \"source-drive\" matches what you've named the variable for the drive.\n"
"                 (dependencies (list source-drive))\n"
"                 )\n"
"\n"
msgstr ""
"                (file-system\n"
"                 ;; Assicurati che \"source-directory\" corrisponda alla tua definizione precedente.\n"
"                 (device (%source-directory))\n"
"                 (mount-point \"/tmp\")\n"
"                 ;; Stiamo montando una cartella, non una partizione, quindi questo tipo deve essere \"none\"\n"
"                 (type \"none\")\n"
"                 (flags '(bind-mount))\n"
"                 ;; Assicurati che \"source-drive\" corrisponda al nome che hai dato alla variabile per l'unità.\n"
"                 (dependencies (list source-drive))\n"
"                 )\n"
"\n"

msgid ""
"                 ...<other drives omitted for clarity>...\n"
"\n"
msgstr ""
"                 ...<altre unità omesse per chiarezza>...\n"
"\n"

msgid "                ))\n"
msgstr "                ))\n"

msgid "Guix daemon can use a HTTP proxy to get substitutes, here we are configuring it to get them via Tor."
msgstr "Il demone Guix può usare un proxy HTTP per ottenere i sostituti, qui lo stiamo configurando per ottenerli tramite Tor."

msgid "Warning"
msgstr "Avviso"

msgid "@emph{Not all} Guix daemon's traffic will go through Tor! Only HTTP/HTTPS will get proxied; FTP, Git protocol, SSH, etc connections will still go through the clearnet.  Again, this configuration isn't foolproof some of your traffic won't get routed by Tor at all.  Use it at your own risk."
msgstr "@emph{Non tutto} il traffico del demone Guix passerà attraverso Tor! Solo HTTP/HTTPS sarà proxato; FTP, protocollo Git, SSH, ecc. le connessioni passeranno comunque attraverso il clearnet. Ancora una volta, questa configurazione non è a prova di errore, parte del tuo traffico non sarà affatto instradato da Tor. Usala a tuo rischio e pericolo."

msgid "Also note that the procedure described here applies only to package substitution. When you update your guix distribution with @command{guix pull}, you still need to use @command{torsocks} if you want to route the connection to guix's git repository servers through Tor."
msgstr "Si noti inoltre che la procedura qui descritta si applica solo alla sostituzione di pacchetti. Quando si aggiorna la distribuzione guix con @command{guix pull}, è comunque necessario utilizzare @command{torsocks} se si desidera instradare la connessione ai server del repository git di guix tramite Tor."

msgid "Guix's substitute server is available as a Onion service, if you want to use it to get your substitutes through Tor configure your system as follow:"
msgstr "Il server di sostituzione di Guix è disponibile come servizio Onion, se vuoi usarlo per ottenere i tuoi sostituti tramite Tor, configura il tuo sistema come segue:"

msgid ""
"(use-modules (gnu))\n"
"(use-service-module base networking)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-service-module base networking)\n"
"\n"

msgid ""
"(operating-system\n"
"  …\n"
"  (services\n"
"    (cons\n"
"      (service tor-service-type\n"
"              (tor-configuration\n"
"                (config-file (plain-file \"tor-config\"\n"
"                                         \"HTTPTunnelPort 127.0.0.1:9250\"))))\n"
"      (modify-services %base-services\n"
"        (guix-service-type\n"
"          config => (guix-configuration\n"
"                      (inherit config)\n"
"                      ;; ci.guix.gnu.org's Onion service\n"
"                      (substitute-urls \"\\\n"
"@value{SUBSTITUTE-TOR-URL}\")\n"
"                      (http-proxy \"http://localhost:9250\")))))))\n"
msgstr ""
"(operating-system\n"
"  …\n"
"  (services\n"
"    (cons\n"
"      (service tor-service-type\n"
"              (tor-configuration\n"
"                (config-file (plain-file \"tor-config\"\n"
"                                         \"HTTPTunnelPort 127.0.0.1:9250\"))))\n"
"      (modify-services %base-services\n"
"        (guix-service-type\n"
"          config => (guix-configuration\n"
"                      (inherit config)\n"
"                      ;; servizio Onion di ci.guix.gnu.org\n"
"                      (substitute-urls \"\\\n"
"@value{SUBSTITUTE-TOR-URL}\")\n"
"                      (http-proxy \"http://localhost:9250\")))))))\n"

msgid "This will keep a tor process running that provides a HTTP CONNECT tunnel which will be used by @command{guix-daemon}.  The daemon can use other protocols than HTTP(S) to get remote resources, request using those protocols won't go through Tor since we are only setting a HTTP tunnel here.  Note that @code{substitutes-urls} is using HTTPS and not HTTP or it won't work, that's a limitation of Tor's tunnel; you may want to use @command{privoxy} instead to avoid such limitations."
msgstr "Questo manterrà un processo tor in esecuzione che fornisce un tunnel HTTP CONNECT che sarà usato da @command{guix-daemon}. Il demone può usare altri protocolli oltre a HTTP(S) per ottenere risorse remote, le richieste che usano tali protocolli non passeranno attraverso Tor poiché stiamo impostando solo un tunnel HTTP qui. Si noti che @code{substitutes-urls} sta usando HTTPS e non HTTP o non funzionerà, questa è una limitazione del tunnel di Tor; potresti voler usare @command{privoxy} invece per evitare tali limitazioni."

msgid "If you don't want to always get substitutes through Tor but using it just some of the times, then skip the @code{guix-configuration}.  When you want to get a substitute from the Tor tunnel run:"
msgstr "Se non vuoi ottenere sempre sostituti tramite Tor ma usarlo solo a volte, allora salta la @code{guix-configuration}. Quando vuoi ottenere un sostituto dal tunnel Tor esegui:"

msgid ""
"sudo herd set-http-proxy guix-daemon http://localhost:9250\n"
"guix build \\\n"
"  --substitute-urls=@value{SUBSTITUTE-TOR-URL} @dots{}\n"
msgstr ""
"sudo herd set-http-proxy guix-daemon http://localhost:9250\n"
"guix build \\\n"
"  --substitute-urls=@value{SUBSTITUTE-TOR-URL} @dots{}\n"

msgid "nginx, lua, openresty, resty"
msgstr "nginx, lua, openresty, resty"

msgid "NGINX could be extended with Lua scripts."
msgstr "NGINX potrebbe essere esteso con script Lua."

msgid "Guix provides NGINX service with ability to load Lua module and specific Lua packages, and reply to requests by evaluating Lua scripts."
msgstr "Guix fornisce il servizio NGINX con la capacità di caricare il modulo Lua e specifici pacchetti Lua, e di rispondere alle richieste valutando gli script Lua."

msgid "The following example demonstrates system definition with configuration to evaluate @file{index.lua} Lua script on HTTP request to @uref{http://localhost/hello} endpoint:"
msgstr "Il seguente esempio dimostra la definizione del sistema con la configurazione per valutare lo script Lua @file{index.lua} su richiesta HTTP all'endpoint @uref{http://localhost/hello}:"

msgid ""
"local shell = require \"resty.shell\"\n"
"\n"
msgstr ""
"local shell = require \"resty.shell\"\n"
"\n"

msgid ""
"local stdin = \"\"\n"
"local timeout = 1000  -- ms\n"
"local max_size = 4096  -- byte\n"
"\n"
msgstr ""
"local stdin = \"\"\n"
"local timeout = 1000  -- ms\n"
"local max_size = 4096  -- byte\n"
"\n"

msgid ""
"local ok, stdout, stderr, reason, status =\n"
"   shell.run([[/run/current-system/profile/bin/ls /tmp]], stdin, timeout, max_size)\n"
"\n"
msgstr ""
"local ok, stdout, stderr, reason, status =\n"
"   shell.run([[/run/current-system/profile/bin/ls /tmp]], stdin, timeout, max_size)\n"
"\n"

msgid "ngx.say(stdout)\n"
msgstr "ngx.say(stdout)\n"

msgid ""
"(use-modules (gnu))\n"
"(use-service-modules #;… web)\n"
"(use-package-modules #;… lua)\n"
"(operating-system\n"
"  ;; …\n"
"  (services\n"
"   ;; …\n"
"   (service nginx-service-type\n"
"            (nginx-configuration\n"
"             (modules\n"
"              (list\n"
"               (file-append nginx-lua-module \"/etc/nginx/modules/ngx_http_lua_module.so\")))\n"
"             (lua-package-path (list lua-resty-core\n"
"                                     lua-resty-lrucache\n"
"                                     lua-resty-signal\n"
"                                     lua-tablepool\n"
"                                     lua-resty-shell))\n"
"             (lua-package-cpath (list lua-resty-signal))\n"
"             (server-blocks\n"
"              (list (nginx-server-configuration\n"
"                     (server-name '(\"localhost\"))\n"
"                     (listen '(\"80\"))\n"
"                     (root \"/etc\")\n"
"                     (locations (list\n"
"                                 (nginx-location-configuration\n"
"                                  (uri \"/hello\")\n"
"                                  (body (list #~(format #f \"content_by_lua_file ~s;\"\n"
"                                                        #$(local-file \"index.lua\"))))))))))))))\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-service-modules #;… web)\n"
"(use-package-modules #;… lua)\n"
"(operating-system\n"
"  ;; …\n"
"  (services\n"
"   ;; …\n"
"   (service nginx-service-type\n"
"            (nginx-configuration\n"
"             (modules\n"
"              (list\n"
"               (file-append nginx-lua-module \"/etc/nginx/modules/ngx_http_lua_module.so\")))\n"
"             (lua-package-path (list lua-resty-core\n"
"                                     lua-resty-lrucache\n"
"                                     lua-resty-signal\n"
"                                     lua-tablepool\n"
"                                     lua-resty-shell))\n"
"             (lua-package-cpath (list lua-resty-signal))\n"
"             (server-blocks\n"
"              (list (nginx-server-configuration\n"
"                     (server-name '(\"localhost\"))\n"
"                     (listen '(\"80\"))\n"
"                     (root \"/etc\")\n"
"                     (locations (list\n"
"                                 (nginx-location-configuration\n"
"                                  (uri \"/hello\")\n"
"                                  (body (list #~(format #f \"content_by_lua_file ~s;\"\n"
"                                                        #$(local-file \"index.lua\"))))))))))))))\n"

msgid "mpd"
msgstr "mpd"

msgid "music server, headless"
msgstr "server musicale, headless"

msgid "bluetooth, ALSA configuration"
msgstr "bluetooth, configurazione ALSA"

msgid "MPD, the Music Player Daemon, is a flexible server-side application for playing music.  Client programs on different machines on the network --- a mobile phone, a laptop, a desktop workstation --- can connect to it to control the playback of audio files from your local music collection.  MPD decodes the audio files and plays them back on one or many outputs."
msgstr "MPD, il Music Player Daemon, è un'applicazione flessibile lato server per riprodurre musica. I programmi client su diverse macchine della rete --- un telefono cellulare, un laptop, una workstation desktop --- possono connettersi ad esso per controllare la riproduzione di file audio dalla tua collezione musicale locale. MPD decodifica i file audio e li riproduce su una o più uscite."

msgid "By default MPD will play to the default audio device.  In the example below we make things a little more interesting by setting up a headless music server.  There will be no graphical user interface, no Pulseaudio daemon, and no local audio output.  Instead we will configure MPD with two outputs: a bluetooth speaker and a web server to serve audio streams to any streaming media player."
msgstr "Per impostazione predefinita MPD riprodurrà sul dispositivo audio predefinito. Nell'esempio seguente rendiamo le cose un po' più interessanti impostando un server musicale headless. Non ci sarà interfaccia grafica utente, nessun demone Pulseaudio, e nessuna uscita audio locale. Invece configureremo MPD con due uscite: un altoparlante bluetooth e un server web per servire flussi audio a qualsiasi lettore multimediale in streaming."

msgid "Bluetooth is often rather frustrating to set up.  You will have to pair your Bluetooth device and make sure that the device is automatically connected as soon as it powers on.  The Bluetooth system service returned by the @code{bluetooth-service} procedure provides the infrastructure needed to set this up."
msgstr "Il Bluetooth è spesso piuttosto frustrante da configurare. Dovrai accoppiare il tuo dispositivo Bluetooth e assicurarti che il dispositivo sia connesso automaticamente non appena si accende. Il servizio di sistema Bluetooth restituito dalla procedura @code{bluetooth-service} fornisce l'infrastruttura necessaria per configurarlo."

msgid "Reconfigure your system with at least the following services and packages:"
msgstr "Riconfigura il tuo sistema con almeno i seguenti servizi e pacchetti:"

msgid ""
"(operating-system\n"
"  ;; …\n"
"  (packages (cons* bluez bluez-alsa\n"
"                   %base-packages))\n"
"  (services\n"
"   ;; …\n"
"   (dbus-service #:services (list bluez-alsa))\n"
"   (bluetooth-service #:auto-enable? #t)))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (packages (cons* bluez bluez-alsa\n"
"                   %base-packages))\n"
"  (services\n"
"   ;; …\n"
"   (dbus-service #:services (list bluez-alsa))\n"
"   (bluetooth-service #:auto-enable? #t)))\n"

msgid "Start the @code{bluetooth} service and then use @command{bluetoothctl} to scan for Bluetooth devices.  Try to identify your Bluetooth speaker and pick out its device ID from the resulting list of devices that is indubitably dominated by a baffling smorgasbord of your neighbors' home automation gizmos.  This only needs to be done once:"
msgstr "Avvia il servizio @code{bluetooth} e poi usa @command{bluetoothctl} per scandire i dispositivi Bluetooth. Prova a identificare il tuo altoparlante Bluetooth e ricava il suo ID dispositivo dalla lista risultante di dispositivi che è indubbiamente dominata da un'incredibile varietà di gadget di automazione domestica dei tuoi vicini. Questo deve essere fatto solo una volta:"

msgid ""
"$ bluetoothctl \n"
"[NEW] Controller 00:11:22:33:95:7F BlueZ 5.40 [default]\n"
"\n"
msgstr ""
"$ bluetoothctl \n"
"[NEW] Controller 00:11:22:33:95:7F BlueZ 5.40 [default]\n"
"\n"

msgid ""
"[bluetooth]# power on\n"
"[bluetooth]# Changing power on succeeded\n"
"\n"
msgstr ""
"[bluetooth]# power on\n"
"[bluetooth]# Changing power on succeeded\n"
"\n"

msgid ""
"[bluetooth]# agent on\n"
"[bluetooth]# Agent registered\n"
"\n"
msgstr ""
"[bluetooth]# agent on\n"
"[bluetooth]# Agente registrato\n"
"\n"

msgid ""
"[bluetooth]# default-agent\n"
"[bluetooth]# Default agent request successful\n"
"\n"
msgstr ""
"[bluetooth]# default-agent\n"
"[bluetooth]# Richiesta agente predefinito riuscita\n"
"\n"

msgid ""
"[bluetooth]# scan on\n"
"[bluetooth]# Discovery started\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: yes\n"
"[NEW] Device AA:BB:CC:A4:AA:CD My Bluetooth Speaker\n"
"[NEW] Device 44:44:FF:2A:20:DC My Neighbor's TV\n"
"@dots{}\n"
"\n"
msgstr ""
"[bluetooth]# scan on\n"
"[bluetooth]# Rilevamento avviato\n"
"[CHG] Controller 00:11:22:33:95:7F Rilevamento: sì\n"
"[NEW] Dispositivo AA:BB:CC:A4:AA:CD Il mio altoparlante Bluetooth\n"
"[NEW] Dispositivo 44:44:FF:2A:20:DC TV del mio vicino\n"
"@dots{}\n"
"\n"

msgid ""
"[bluetooth]# pair AA:BB:CC:A4:AA:CD\n"
"Attempting to pair with AA:BB:CC:A4:AA:CD\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"\n"
msgstr ""
"[bluetooth]# pair AA:BB:CC:A4:AA:CD\n"
"Tentativo di accoppiamento con AA:BB:CC:A4:AA:CD\n"
"[CHG] Dispositivo AA:BB:CC:A4:AA:CD Connesso: sì\n"
"\n"

msgid ""
"[My Bluetooth Speaker]# [CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110b-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110c-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110e-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Paired: yes\n"
"Pairing successful\n"
"\n"
msgstr ""
"[My Bluetooth Speaker]# [CHG] Dispositivo AA:BB:CC:A4:AA:CD UUIDs: 0000110b-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Dispositivo AA:BB:CC:A4:AA:CD UUIDs: 0000110c-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Dispositivo AA:BB:CC:A4:AA:CD UUIDs: 0000110e-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Dispositivo AA:BB:CC:A4:AA:CD Accoppiato: sì\n"
"Accoppiamento riuscito\n"
"\n"

msgid ""
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: no\n"
"\n"
msgstr ""
"[CHG] Dispositivo AA:BB:CC:A4:AA:CD Connesso: no\n"
"\n"

msgid ""
"[bluetooth]# \n"
"[bluetooth]# trust AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD Trusted: yes\n"
"Changing AA:BB:CC:A4:AA:CD trust succeeded\n"
"\n"
msgstr ""
"[bluetooth]# \n"
"[bluetooth]# trust AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Dispositivo AA:BB:CC:A4:AA:CD Affidabile: sì\n"
"Modifica dell'affidabilità di AA:BB:CC:A4:AA:CD riuscita\n"
"\n"

msgid ""
"[bluetooth]# \n"
"[bluetooth]# connect AA:BB:CC:A4:AA:CD\n"
"Attempting to connect to AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD RSSI: -63\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"Connection successful\n"
"\n"
msgstr ""
"[bluetooth]# \n"
"[bluetooth]# connect AA:BB:CC:A4:AA:CD\n"
"Tentativo di connessione a AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Dispositivo AA:BB:CC:A4:AA:CD RSSI: -63\n"
"[CHG] Dispositivo AA:BB:CC:A4:AA:CD Connesso: sì\n"
"Connessione riuscita\n"
"\n"

msgid ""
"[My Bluetooth Speaker]# scan off\n"
"[CHG] Device AA:BB:CC:A4:AA:CD RSSI is nil\n"
"Discovery stopped\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: no\n"
msgstr ""
"[My Bluetooth Speaker]# scan off\n"
"[CHG] Dispositivo AA:BB:CC:A4:AA:CD RSSI è nullo\n"
"Rilevamento interrotto\n"
"[CHG] Controller 00:11:22:33:95:7F Rilevamento: no\n"

msgid "Congratulations, you can now automatically connect to your Bluetooth speaker!"
msgstr "Congratulazioni, ora puoi connetterti automaticamente al tuo altoparlante Bluetooth!"

msgid "It is now time to configure ALSA to use the @emph{bluealsa} Bluetooth module, so that you can define an ALSA pcm device corresponding to your Bluetooth speaker.  For a headless server using @emph{bluealsa} with a fixed Bluetooth device is likely simpler than configuring Pulseaudio and its stream switching behavior.  We configure ALSA by crafting a custom @code{alsa-configuration} for the @code{alsa-service-type}.  The configuration will declare a @code{pcm} type @code{bluealsa} from the @code{bluealsa} module provided by the @code{bluez-alsa} package, and then define a @code{pcm} device of that type for your Bluetooth speaker."
msgstr "Ora è il momento di configurare ALSA per utilizzare il modulo Bluetooth @emph{bluealsa}, in modo da poter definire un dispositivo pcm ALSA corrispondente al tuo altoparlante Bluetooth. Per un server headless che utilizza @emph{bluealsa} con un dispositivo Bluetooth fisso è probabilmente più semplice che configurare Pulseaudio e il suo comportamento di commutazione del flusso. Configureremo ALSA creando una @code{alsa-configuration} personalizzata per il @code{alsa-service-type}. La configurazione dichiarerà un tipo @code{pcm} @code{bluealsa} dal modulo @code{bluealsa} fornito dal pacchetto @code{bluez-alsa}, e quindi definirà un dispositivo @code{pcm} di quel tipo per il tuo altoparlante Bluetooth."

msgid "All that is left then is to make MPD send audio data to this ALSA device.  We also add a secondary MPD output that makes the currently played audio files available as a stream through a web server on port 8080.  When enabled a device on the network could listen to the audio stream by connecting any capable media player to the HTTP server on port 8080, independent of the status of the Bluetooth speaker."
msgstr "Tutto ciò che resta da fare è far sì che MPD invii dati audio a questo dispositivo ALSA. Aggiungiamo anche un'uscita MPD secondaria che rende i file audio attualmente riprodotti disponibili come stream tramite un server web sulla porta 8080. Quando abilitato un dispositivo sulla rete potrebbe ascoltare il flusso audio collegando qualsiasi lettore multimediale compatibile al server HTTP sulla porta 8080, indipendentemente dallo stato dell'altoparlante Bluetooth."

msgid "What follows is the outline of an @code{operating-system} declaration that should accomplish the above-mentioned tasks:"
msgstr "Quello che segue è lo schema di una dichiarazione @code{operating-system} che dovrebbe compiere i compiti sopra menzionati:"

msgid ""
"(use-modules (gnu))\n"
"(use-service-modules audio dbus sound #;… etc)\n"
"(use-package-modules audio linux #;… etc)\n"
"(operating-system\n"
"  ;; …\n"
"  (packages (cons* bluez bluez-alsa\n"
"                   %base-packages))\n"
"  (services\n"
"   ;; …\n"
"   (service mpd-service-type\n"
"            (mpd-configuration\n"
"             (user \"your-username\")\n"
"             (music-dir \"/path/to/your/music\")\n"
"             (address \"192.168.178.20\")\n"
"             (outputs (list (mpd-output\n"
"                             (type \"alsa\")\n"
"                             (name \"MPD\")\n"
"                             (extra-options\n"
"                              ;; Use the same name as in the ALSA\n"
"                              ;; configuration below.\n"
"                              '((device . \"pcm.btspeaker\"))))\n"
"                            (mpd-output\n"
"                             (type \"httpd\")\n"
"                             (name \"streaming\")\n"
"                             (enabled? #false)\n"
"                             (always-on? #true)\n"
"                             (tags? #true)\n"
"                             (mixer-type 'null)\n"
"                             (extra-options\n"
"                              '((encoder . \"vorbis\")\n"
"                                (port    . \"8080\")\n"
"                                (bind-to-address . \"192.168.178.20\")\n"
"                                (max-clients . \"0\") ;no limit\n"
"                                (quality . \"5.0\")\n"
"                                (format  . \"44100:16:1\"))))))))\n"
"   (dbus-service #:services (list bluez-alsa))\n"
"   (bluetooth-service #:auto-enable? #t)\n"
"   (service alsa-service-type\n"
"            (alsa-configuration\n"
"             (pulseaudio? #false) ;we don't need it\n"
"             (extra-options\n"
"              #~(string-append \"\\\n"
"# Declare Bluetooth audio device type \\\"bluealsa\\\" from bluealsa module\n"
"pcm_type.bluealsa @{\n"
"    lib \\\"\"\n"
"#$(file-append bluez-alsa \"/lib/alsa-lib/libasound_module_pcm_bluealsa.so\") \"\\\"\n"
"@}\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-service-modules audio dbus sound #;… etc)\n"
"(use-package-modules audio linux #;… etc)\n"
"(operating-system\n"
"  ;; …\n"
"  (packages (cons* bluez bluez-alsa\n"
"                   %base-packages))\n"
"  (services\n"
"   ;; …\n"
"   (service mpd-service-type\n"
"            (mpd-configuration\n"
"             (user \"il-tuo-nome-utente\")\n"
"             (music-dir \"/percorso/alla/tua/musica\")\n"
"             (address \"192.168.178.20\")\n"
"             (outputs (list (mpd-output\n"
"                             (type \"alsa\")\n"
"                             (name \"MPD\")\n"
"                             (extra-options\n"
"                              ;; Usa lo stesso nome della configurazione ALSA\n"
"                              ;; qui sotto.\n"
"                              '((device . \"pcm.btspeaker\"))))\n"
"                            (mpd-output\n"
"                             (type \"httpd\")\n"
"                             (name \"streaming\")\n"
"                             (enabled? #false)\n"
"                             (always-on? #true)\n"
"                             (tags? #true)\n"
"                             (mixer-type 'null)\n"
"                             (extra-options\n"
"                              '((encoder . \"vorbis\")\n"
"                                (port    . \"8080\")\n"
"                                (bind-to-address . \"192.168.178.20\")\n"
"                                (max-clients . \"0\") ;nessun limite\n"
"                                (quality . \"5.0\")\n"
"                                (format  . \"44100:16:1\"))))))))\n"
"   (dbus-service #:services (list bluez-alsa))\n"
"   (bluetooth-service #:auto-enable? #t)\n"
"   (service alsa-service-type\n"
"            (alsa-configuration\n"
"             (pulseaudio? #false) ;non ne abbiamo bisogno\n"
"             (extra-options\n"
"              #~(string-append \"\\\n"
"# Dichiara il tipo di dispositivo audio Bluetooth \\\"bluealsa\\\" dal modulo bluealsa\n"
"pcm_type.bluealsa @{\n"
"    lib \\\"\"\n"
"#$(file-append bluez-alsa \"/lib/alsa-lib/libasound_module_pcm_bluealsa.so\") \"\\\"\n"
"@}\n"
"\n"

msgid ""
"# Declare control device type \\\"bluealsa\\\" from the same module\n"
"ctl_type.bluealsa @{\n"
"    lib \\\"\"\n"
"#$(file-append bluez-alsa \"/lib/alsa-lib/libasound_module_ctl_bluealsa.so\") \"\\\"\n"
"@}\n"
"\n"
msgstr ""
"# Dichiara il tipo di dispositivo di controllo \\\"bluealsa\\\" dallo stesso modulo\n"
"ctl_type.bluealsa @{\n"
"    lib \\\"\"\n"
"#$(file-append bluez-alsa \"/lib/alsa-lib/libasound_module_ctl_bluealsa.so\") \"\\\"\n"
"@}\n"
"\n"

msgid ""
"# Define the actual Bluetooth audio device.\n"
"pcm.btspeaker @{\n"
"    type bluealsa\n"
"    device \\\"AA:BB:CC:A4:AA:CD\\\" # unique device identifier\n"
"    profile \\\"a2dp\\\"\n"
"@}\n"
"\n"
msgstr ""
"# Definisci il dispositivo audio Bluetooth effettivo.\n"
"pcm.btspeaker @{\n"
"    type bluealsa\n"
"    device \\\"AA:BB:CC:A4:AA:CD\\\" # identificatore unico del dispositivo\n"
"    profile \\\"a2dp\\\"\n"
"@}\n"
"\n"

msgid ""
"# Define an associated controller.\n"
"ctl.btspeaker @{\n"
"    type bluealsa\n"
"@}\n"
"\"))))))\n"
msgstr ""
"# Definisci un controller associato.\n"
"ctl.btspeaker @{\n"
"    type bluealsa\n"
"@}\n"
"\"))))))\n"

msgid "Enjoy the music with the MPD client of your choice or a media player capable of streaming via HTTP!"
msgstr "Goditi la musica con il client MPD di tua scelta o un lettore multimediale capace di streaming via HTTP!"

msgid "The kernel Linux provides a number of shared facilities that are available to processes in the system.  These facilities include a shared view on the file system, other processes, network devices, user and group identities, and a few others.  Since Linux 3.19 a user can choose to @emph{unshare} some of these shared facilities for selected processes, providing them (and their child processes) with a different view on the system."
msgstr "Il kernel Linux fornisce una serie di strutture condivise che sono disponibili ai processi nel sistema. Queste strutture includono una vista condivisa sul file system, altri processi, dispositivi di rete, identità di utenti e gruppi, e alcune altre. Dal kernel Linux 3.19 un utente può scegliere di @emph{unshare} alcune di queste strutture condivise per processi selezionati, fornendo loro (e ai loro processi figli) una vista diversa del sistema."

msgid "A process with an unshared @code{mount} namespace, for example, has its own view on the file system --- it will only be able to see directories that have been explicitly bound in its mount namespace.  A process with its own @code{proc} namespace will consider itself to be the only process running on the system, running as PID 1."
msgstr "Un processo con un namespace @code{mount} non condiviso, ad esempio, ha la sua propria vista sul file system --- sarà in grado di vedere solo le directory che sono state esplicitamente vincolate nel suo namespace mount. Un processo con il suo proprio namespace @code{proc} si considererà l'unico processo in esecuzione sul sistema, in esecuzione come PID 1."

msgid "Guix uses these kernel features to provide fully isolated environments and even complete Guix System containers, lightweight virtual machines that share the host system's kernel.  This feature comes in especially handy when using Guix on a foreign distribution to prevent interference from foreign libraries or configuration files that are available system-wide."
msgstr "Guix utilizza queste funzionalità del kernel per fornire ambienti completamente isolati e anche contenitori Guix System completi, macchine virtuali leggere che condividono il kernel del sistema host. Questa funzionalità è particolarmente utile quando si utilizza Guix su una distribuzione esterna per prevenire interferenze da librerie o file di configurazione esterni disponibili a livello di sistema."

msgid "The easiest way to get started is to use @command{guix shell} with the @option{--container} option.  @xref{Invoking guix shell,,, guix, GNU Guix Reference Manual} for a reference of valid options."
msgstr "Il modo più semplice per iniziare è usare @command{guix shell} con l'opzione @option{--container}. @xref{Invocare guix shell,,, guix.it, Manuale di riferimento di GNU Guix} per un riferimento delle opzioni valide."

msgid "The following snippet spawns a minimal shell process with most namespaces unshared from the system.  The current working directory is visible to the process, but anything else on the file system is unavailable.  This extreme isolation can be very useful when you want to rule out any sort of interference from environment variables, globally installed libraries, or configuration files."
msgstr "Il seguente frammento avvia un processo shell minimale con la maggior parte dei namespace non condivisi dal sistema. La directory di lavoro corrente è visibile al processo, ma qualsiasi altra cosa sul file system non è disponibile. Questa estrema isolazione può essere molto utile quando si desidera escludere qualsiasi tipo di interferenza da variabili d'ambiente, librerie installate globalmente o file di configurazione."

msgid "guix shell --container\n"
msgstr "guix shell --container\n"

msgid "It is a bleak environment, barren, desolate.  You will find that not even the GNU coreutils are available here, so to explore this deserted wasteland you need to use built-in shell commands.  Even the usually gigantic @file{/gnu/store} directory is reduced to a faint shadow of itself."
msgstr "È un ambiente desolato, sterile, deserto. Scoprirai che nemmeno i coreutils GNU sono disponibili qui, quindi per esplorare questa landa deserta devi usare i comandi shell integrati. Anche la di solito gigantesca directory @file{/gnu/store} è ridotta a una flebile ombra di se stessa."

msgid ""
"$ echo /gnu/store/*\n"
"/gnu/store/@dots{}-gcc-10.3.0-lib\n"
"/gnu/store/@dots{}-glibc-2.33\n"
"/gnu/store/@dots{}-bash-static-5.1.8\n"
"/gnu/store/@dots{}-ncurses-6.2.20210619\n"
"/gnu/store/@dots{}-bash-5.1.8\n"
"/gnu/store/@dots{}-profile\n"
"/gnu/store/@dots{}-readline-8.1.1\n"
msgstr ""
"$ echo /gnu/store/*\n"
"/gnu/store/@dots{}-gcc-10.3.0-lib\n"
"/gnu/store/@dots{}-glibc-2.33\n"
"/gnu/store/@dots{}-bash-static-5.1.8\n"
"/gnu/store/@dots{}-ncurses-6.2.20210619\n"
"/gnu/store/@dots{}-bash-5.1.8\n"
"/gnu/store/@dots{}-profile\n"
"/gnu/store/@dots{}-readline-8.1.1\n"

msgid "exiting a container"
msgstr "uscire da un contenitore"

msgid "There isn't much you can do in an environment like this other than exiting it.  You can use @key{^D} or @command{exit} to terminate this limited shell environment."
msgstr "Non c'è molto che tu possa fare in un ambiente come questo oltre a uscirne. Puoi usare @key{^D} o @command{exit} per terminare questo ambiente shell limitato."

msgid "exposing directories, container"
msgstr "esporre directory, contenitore"

msgid "sharing directories, container"
msgstr "condividere directory, contenitore"

msgid "mapping locations, container"
msgstr "mappare posizioni, contenitore"

msgid "You can make other directories available inside of the container environment; use @option{--expose=DIRECTORY} to bind-mount the given directory as a read-only location inside the container, or use @option{--share=DIRECTORY} to make the location writable.  With an additional mapping argument after the directory name you can control the name of the directory inside the container.  In the following example we map @file{/etc} on the host system to @file{/the/host/etc} inside a container in which the GNU coreutils are installed."
msgstr "È possibile rendere disponibili altre directory all'interno dell'ambiente del contenitore; utilizzare @option{--expose=DIRECTORY} per montare con bind la directory specificata come posizione di sola lettura all'interno del contenitore, o utilizzare @option{--share=DIRECTORY} per rendere la posizione scrivibile. Con un argomento di mappatura aggiuntivo dopo il nome della directory è possibile controllare il nome della directory all'interno del contenitore. Nell'esempio seguente mappiamo @file{/etc} sul sistema host a @file{/the/host/etc} all'interno di un contenitore in cui sono installati i coreutils GNU."

msgid ""
"$ guix shell --container --share=/etc=/the/host/etc coreutils\n"
"$ ls /the/host/etc\n"
msgstr ""
"$ guix shell --container --share=/etc=/the/host/etc coreutils\n"
"$ ls /the/host/etc\n"

msgid "Similarly, you can prevent the current working directory from being mapped into the container with the @option{--no-cwd} option.  Another good idea is to create a dedicated directory that will serve as the container's home directory, and spawn the container shell from that directory."
msgstr "Allo stesso modo, puoi impedire che la directory di lavoro corrente venga mappata nel contenitore con l'opzione @option{--no-cwd}. Un'altra buona idea è creare una directory dedicata che fungerà da directory home del contenitore, e avviare la shell del contenitore da quella directory."

msgid "hide system libraries, container"
msgstr "nascondi librerie di sistema, contenitore"

msgid "avoid ABI mismatch, container"
msgstr "evitare disallineamento ABI, contenitore"

msgid "On a foreign system a container environment can be used to compile software that cannot possibly be linked with system libraries or with the system's compiler toolchain.  A common use-case in a research context is to install packages from within an R session.  Outside of a container environment there is a good chance that the foreign compiler toolchain and incompatible system libraries are found first, resulting in incompatible binaries that cannot be used by R.  In a container shell this problem disappears, as system libraries and executables simply aren't available due to the unshared @code{mount} namespace."
msgstr "Su un sistema esterno, un ambiente container può essere utilizzato per compilare software che non può essere collegato a librerie di sistema o alla toolchain del compilatore del sistema. Un caso d'uso comune in un contesto di ricerca è l'installazione di pacchetti da una sessione R. Al di fuori di un ambiente container è molto probabile che la toolchain del compilatore esterno e le librerie di sistema incompatibili vengano trovate per prime, risultando in binari incompatibili che non possono essere utilizzati da R. In una shell container questo problema scompare, poiché le librerie di sistema e gli eseguibili semplicemente non sono disponibili a causa del namespace @code{mount} non condiviso."

msgid "Let's take a comprehensive manifest providing a comfortable development environment for use with R:"
msgstr "Prendiamo un manifesto completo che fornisce un ambiente di sviluppo confortevole per l'uso con R:"

msgid ""
"(specifications->manifest\n"
"  (list \"r-minimal\"\n"
"\n"
msgstr ""
"(specifications->manifest\n"
"  (list \"r-minimal\"\n"
"\n"

msgid ""
"        ;; base packages\n"
"        \"bash-minimal\"\n"
"        \"glibc-locales\"\n"
"        \"nss-certs\"\n"
"\n"
msgstr ""
"        ;; pacchetti base\n"
"        \"bash-minimal\"\n"
"        \"glibc-locales\"\n"
"        \"nss-certs\"\n"
"\n"

msgid ""
"        ;; Common command line tools lest the container is too empty.\n"
"        \"coreutils\"\n"
"        \"grep\"\n"
"        \"which\"\n"
"        \"wget\"\n"
"        \"sed\"\n"
"\n"
msgstr ""
"        ;; Strumenti comuni da riga di comando per evitare che il contenitore sia troppo vuoto.\n"
"        \"coreutils\"\n"
"        \"grep\"\n"
"        \"which\"\n"
"        \"wget\"\n"
"        \"sed\"\n"
"\n"

msgid ""
"        ;; R markdown tools\n"
"        \"pandoc\"\n"
"\n"
msgstr ""
"        ;; Strumenti R markdown\n"
"        \"pandoc\"\n"
"\n"

msgid ""
"        ;; Toolchain and common libraries for \"install.packages\"\n"
"        \"gcc-toolchain@@10\"\n"
"        \"gfortran-toolchain\"\n"
"        \"gawk\"\n"
"        \"tar\"\n"
"        \"gzip\"\n"
"        \"unzip\"\n"
"        \"make\"\n"
"        \"cmake\"\n"
"        \"pkg-config\"\n"
"        \"cairo\"\n"
"        \"libxt\"\n"
"        \"openssl\"\n"
"        \"curl\"\n"
"        \"zlib\"))\n"
msgstr ""
"        ;; Toolchain e librerie comuni per \"install.packages\"\n"
"        \"gcc-toolchain@@10\"\n"
"        \"gfortran-toolchain\"\n"
"        \"gawk\"\n"
"        \"tar\"\n"
"        \"gzip\"\n"
"        \"unzip\"\n"
"        \"make\"\n"
"        \"cmake\"\n"
"        \"pkg-config\"\n"
"        \"cairo\"\n"
"        \"libxt\"\n"
"        \"openssl\"\n"
"        \"curl\"\n"
"        \"zlib\"))\n"

msgid "Let's use this to run R inside a container environment.  For convenience we share the @code{net} namespace to use the host system's network interfaces.  Now we can build R packages from source the traditional way without having to worry about ABI mismatch or incompatibilities."
msgstr "Utilizziamolo per eseguire R all'interno di un ambiente container. Per comodità, condividiamo il namespace @code{net} per utilizzare le interfacce di rete del sistema host. Ora possiamo compilare i pacchetti R dal sorgente nel modo tradizionale senza doverci preoccupare di disallineamenti ABI o incompatibilità."

msgid ""
"$ guix shell --container --network --manifest=manifest.scm -- R\n"
"\n"
msgstr ""
"$ guix shell --container --network --manifest=manifest.scm -- R\n"
"\n"

msgid ""
"R version 4.2.1 (2022-06-23) -- \"Funny-Looking Kid\"\n"
"Copyright (C) 2022 The R Foundation for Statistical Computing\n"
"@dots{}\n"
"> e <- Sys.getenv(\"GUIX_ENVIRONMENT\")\n"
"> Sys.setenv(GIT_SSL_CAINFO=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_FILE=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_DIR=paste0(e, \"/etc/ssl/certs\"))\n"
"> install.packages(\"Cairo\", lib=paste0(getwd()))\n"
"@dots{}\n"
"* installing *source* package 'Cairo' ...\n"
"@dots{}\n"
"* DONE (Cairo)\n"
"\n"
msgstr ""
"R version 4.2.1 (2022-06-23) -- \"Funny-Looking Kid\"\n"
"Copyright (C) 2022 The R Foundation for Statistical Computing\n"
"@dots{}\n"
"> e <- Sys.getenv(\"GUIX_ENVIRONMENT\")\n"
"> Sys.setenv(GIT_SSL_CAINFO=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_FILE=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_DIR=paste0(e, \"/etc/ssl/certs\"))\n"
"> install.packages(\"Cairo\", lib=paste0(getwd()))\n"
"@dots{}\n"
"* installing *source* package 'Cairo' ...\n"
"@dots{}\n"
"* DONE (Cairo)\n"
"\n"

msgid ""
"The downloaded source packages are in\n"
"\t'/tmp/RtmpCuwdwM/downloaded_packages'\n"
"> library(\"Cairo\", lib=getwd())\n"
"> # success!\n"
msgstr ""
"I pacchetti sorgente scaricati si trovano in\n"
"\t'/tmp/RtmpCuwdwM/downloaded_packages'\n"
"> library(\"Cairo\", lib=getwd())\n"
"> # successo!\n"

msgid "Using container shells is fun, but they can become a little cumbersome when you want to go beyond just a single interactive process.  Some tasks become a lot easier when they sit on the rock solid foundation of a proper Guix System and its rich set of system services.  The next section shows you how to launch a complete Guix System inside of a container."
msgstr "L'uso delle shell container è divertente, ma possono diventare un po' complicate quando si vuole andare oltre un singolo processo interattivo. Alcuni compiti diventano molto più facili quando si basano sulla solida fondazione di un vero sistema Guix e del suo ricco set di servizi di sistema. La prossima sezione ti mostrerà come avviare un sistema Guix completo all'interno di un container."

msgid "The Guix System provides a wide array of interconnected system services that are configured declaratively to form a dependable stateless GNU System foundation for whatever tasks you throw at it.  Even when using Guix on a foreign distribution you can benefit from the design of Guix System by running a system instance as a container.  Using the same kernel features of unshared namespaces mentioned in the previous section, the resulting Guix System instance is isolated from the host system and only shares file system locations that you explicitly declare."
msgstr "Il sistema Guix fornisce una vasta gamma di servizi di sistema interconnessi che sono configurati in modo dichiarativo per formare una fondazione affidabile e senza stato per il sistema GNU per qualsiasi attività tu gli assegni. Anche quando usi Guix su una distribuzione esterna, puoi beneficiare del design del sistema Guix eseguendo un'istanza di sistema come container. Usando le stesse funzionalità del kernel di namespace non condivisi menzionati nella sezione precedente, l'istanza Guix System risultante è isolata dal sistema host e condivide solo le posizioni del file system che dichiari esplicitamente."

msgid "A Guix System container differs from the shell process created by @command{guix shell --container} in a number of important ways.  While in a container shell the containerized process is a Bash shell process, a Guix System container runs the Shepherd as PID 1.  In a system container all system services (@pxref{Services,,, guix, GNU Guix Reference Manual}) are set up just as they would be on a Guix System in a virtual machine or on bare metal---this includes daemons managed by the GNU@tie{}Shepherd (@pxref{Shepherd Services,,, guix, GNU Guix Reference Manual}) as well as other kinds of extensions to the operating system (@pxref{Service Composition,,, guix, GNU Guix Reference Manual})."
msgstr "Un contenitore del sistema Guix differisce dal processo di shell creato da @command{guix shell --container} in una serie di modi importanti. Mentre in una shell contenitore il processo containerizzato è un processo shell Bash, un contenitore del sistema Guix esegue Shepherd come PID 1. In un contenitore di sistema tutti i servizi di sistema (@pxref{Services,,, guix, GNU Guix Reference Manual}) sono configurati esattamente come lo sarebbero su un sistema Guix in una macchina virtuale o su hardware bare metal --- questo include i demoni gestiti da GNU@tie{}Shepherd (@pxref{Servizi Shepherd,,, guix.it, Manuale di riferimento di GNU Guix}) così come altri tipi di estensioni al sistema operativo (@pxref{Composizione dei servizi,,, guix.it, Manuale di riferimento di GNU Guix})."

msgid "The perceived increase in complexity of running a Guix System container is easily justified when dealing with more complex applications that have higher or just more rigid requirements on their execution contexts---configuration files, dedicated user accounts, directories for caches or log files, etc.  In Guix System the demands of this kind of software are satisfied through the deployment of system services."
msgstr "Il percepito aumento di complessità nell'esecuzione di un contenitore del sistema Guix è facilmente giustificato quando si ha a che fare con applicazioni più complesse che hanno requisiti più elevati o semplicemente più rigidi sui loro contesti di esecuzione --- file di configurazione, account utente dedicati, directory per cache o file di log, ecc. Nel sistema Guix le esigenze di questo tipo di software sono soddisfatte attraverso l'implementazione di servizi di sistema."

msgid "A good example might be a PostgreSQL database server.  Much of the complexity of setting up such a database server is encapsulated in this deceptively short service declaration:"
msgstr "Un buon esempio potrebbe essere un server di database PostgreSQL. Gran parte della complessità della configurazione di un tale server di database è incapsulata in questa ingannevolmente breve dichiarazione di servizio:"

msgid ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (postgresql postgresql-14)))\n"
msgstr ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (postgresql postgresql-14)))\n"

msgid "A complete operating system declaration for use with a Guix System container would look something like this:"
msgstr "Una dichiarazione completa del sistema operativo da utilizzare con un contenitore del sistema Guix sarebbe simile a questa:"

msgid ""
"(use-modules (gnu))\n"
"(use-package-modules databases)\n"
"(use-service-modules databases)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-package-modules databases)\n"
"(use-service-modules databases)\n"
"\n"

msgid ""
"(operating-system\n"
"  (host-name \"container\")\n"
"  (timezone \"Europe/Berlin\")\n"
"  (file-systems (cons (file-system\n"
"                        (device (file-system-label \"does-not-matter\"))\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                      %base-file-systems))\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader grub-bootloader)\n"
"               (targets '(\"/dev/sdX\"))))\n"
"  (services\n"
"   (cons* (service postgresql-service-type\n"
"                   (postgresql-configuration\n"
"                    (postgresql postgresql-14)\n"
"                    (config-file\n"
"                     (postgresql-config-file\n"
"                      (log-destination \"stderr\")\n"
"                      (hba-file\n"
"                       (plain-file \"pg_hba.conf\"\n"
"                                   \"\\\n"
"local\tall\tall\t\t\ttrust\n"
"host\tall\tall\t10.0.0.1/32 \ttrust\"))\n"
"                      (extra-config\n"
"                       '((\"listen_addresses\" \"*\")\n"
"                         (\"log_directory\"    \"/var/log/postgresql\")))))))\n"
"          (service postgresql-role-service-type\n"
"                   (postgresql-role-configuration\n"
"                    (roles\n"
"                     (list (postgresql-role\n"
"                            (name \"test\")\n"
"                            (create-database? #t))))))\n"
"          %base-services)))\n"
msgstr ""
"(operating-system\n"
"  (host-name \"container\")\n"
"  (timezone \"Europe/Berlin\")\n"
"  (file-systems (cons (file-system\n"
"                        (device (file-system-label \"non-importa\"))\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                      %base-file-systems))\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader grub-bootloader)\n"
"               (targets '(\"/dev/sdX\"))))\n"
"  (services\n"
"   (cons* (service postgresql-service-type\n"
"                   (postgresql-configuration\n"
"                    (postgresql postgresql-14)\n"
"                    (config-file\n"
"                     (postgresql-config-file\n"
"                      (log-destination \"stderr\")\n"
"                      (hba-file\n"
"                       (plain-file \"pg_hba.conf\"\n"
"                                   \"\\\n"
"local\tall\tall\t\t\ttrust\n"
"host\tall\tall\t10.0.0.1/32 \ttrust\"))\n"
"                      (extra-config\n"
"                       '((\"listen_addresses\" \"*\")\n"
"                         (\"log_directory\"    \"/var/log/postgresql\")))))))\n"
"          (service postgresql-role-service-type\n"
"                   (postgresql-role-configuration\n"
"                    (roles\n"
"                     (list (postgresql-role\n"
"                            (name \"test\")\n"
"                            (create-database? #t))))))\n"
"          %base-services)))\n"

msgid "With @code{postgresql-role-service-type} we define a role ``test'' and create a matching database, so that we can test right away without any further manual setup.  The @code{postgresql-config-file} settings allow a client from IP address 10.0.0.1 to connect without requiring authentication---a bad idea in production systems, but convenient for this example."
msgstr "Con @code{postgresql-role-service-type} definiamo un ruolo ``test'' e creiamo un database corrispondente, in modo da poter testare subito senza alcuna ulteriore configurazione manuale. Le impostazioni di @code{postgresql-config-file} permettono a un client dall'indirizzo IP 10.0.0.1 di connettersi senza richiedere autenticazione---una cattiva idea nei sistemi di produzione, ma comoda per questo esempio."

msgid "Let's build a script that will launch an instance of this Guix System as a container.  Write the @code{operating-system} declaration above to a file @file{os.scm} and then use @command{guix system container} to build the launcher.  (@pxref{Invoking guix system,,, guix, GNU Guix Reference Manual})."
msgstr "Costruiamo uno script che avvierà un'istanza di questo sistema Guix come contenitore. Scrivi la dichiarazione @code{operating-system} sopra in un file @file{os.scm} e poi usa @command{guix system container} per costruire il launcher. (@pxref{Invocare guix system,,, guix.it, Manuale di riferimento di GNU Guix})."

msgid ""
"$ guix system container os.scm\n"
"The following derivations will be built:\n"
"  /gnu/store/@dots{}-run-container.drv\n"
"  @dots{}\n"
"building /gnu/store/@dots{}-run-container.drv...\n"
"/gnu/store/@dots{}-run-container\n"
msgstr ""
"$ guix system container os.scm\n"
"Verranno costruite le seguenti derivazioni:\n"
"  /gnu/store/@dots{}-run-container.drv\n"
"  @dots{}\n"
"costruzione di /gnu/store/@dots{}-run-container.drv...\n"
"/gnu/store/@dots{}-run-container\n"

msgid "Now that we have a launcher script we can run it to spawn the new system with a running PostgreSQL service.  Note that due to some as yet unresolved limitations we need to run the launcher as the root user, for example with @command{sudo}."
msgstr "Ora che abbiamo uno script di avvio, possiamo eseguirlo per avviare il nuovo sistema con un servizio PostgreSQL in esecuzione. Si noti che a causa di alcune limitazioni non ancora risolte, dobbiamo eseguire il launcher come utente root, ad esempio con @command{sudo}."

msgid ""
"$ sudo /gnu/store/@dots{}-run-container\n"
"system container is running as PID 5983\n"
"@dots{}\n"
msgstr ""
"$ sudo /gnu/store/@dots{}-run-container\n"
"il contenitore di sistema è in esecuzione come PID 5983\n"
"@dots{}\n"

msgid "Background the process with @key{Ctrl-z} followed by @command{bg}.  Note the process ID in the output; we will need it to connect to the container later.  You know what? Let's try attaching to the container right now.  We will use @command{nsenter}, a tool provided by the @code{util-linux} package:"
msgstr "Metti in background il processo con @key{Ctrl-z} seguito da @command{bg}. Nota il ID del processo nell'output; ci servirà per connetterci al contenitore più tardi. Sai cosa? Proviamo a connetterci al contenitore subito. Useremo @command{nsenter}, uno strumento fornito dal pacchetto @code{util-linux}:"

msgid ""
"$ guix shell util-linux\n"
"$ sudo nsenter -a -t 5983\n"
"root@@container /# pgrep -a postgres\n"
"49 /gnu/store/@dots{}-postgresql-14.4/bin/postgres -D /var/lib/postgresql/data --config-file=/gnu/store/@dots{}-postgresql.conf -p 5432\n"
"51 postgres: checkpointer\n"
"52 postgres: background writer\n"
"53 postgres: walwriter\n"
"54 postgres: autovacuum launcher\n"
"55 postgres: stats collector\n"
"56 postgres: logical replication launcher\n"
"root@@container /# exit\n"
msgstr ""
"$ guix shell util-linux\n"
"$ sudo nsenter -a -t 5983\n"
"root@@container /# pgrep -a postgres\n"
"49 /gnu/store/@dots{}-postgresql-14.4/bin/postgres -D /var/lib/postgresql/data --config-file=/gnu/store/@dots{}-postgresql.conf -p 5432\n"
"51 postgres: checkpointer\n"
"52 postgres: background writer\n"
"53 postgres: walwriter\n"
"54 postgres: autovacuum launcher\n"
"55 postgres: stats collector\n"
"56 postgres: logical replication launcher\n"
"root@@container /# exit\n"

msgid "The PostgreSQL service is running in the container!"
msgstr "Il servizio PostgreSQL è in esecuzione nel contenitore!"

msgid "container networking"
msgstr "networking del contenitore"

msgid "What good is a Guix System running a PostgreSQL database service as a container when we can only talk to it with processes originating in the container? It would be much better if we could talk to the database over the network."
msgstr "A che serve un sistema Guix che esegue un servizio di database PostgreSQL come contenitore quando possiamo comunicare con esso solo con processi originari del contenitore? Sarebbe molto meglio se potessimo comunicare con il database tramite la rete."

msgid "The easiest way to do this is to create a pair of connected virtual Ethernet devices (known as @code{veth}).  We move one of the devices (@code{ceth-test}) into the @code{net} namespace of the container and leave the other end (@code{veth-test}) of the connection on the host system."
msgstr "Il modo più semplice per farlo è creare una coppia di dispositivi Ethernet virtuali connessi (noti come @code{veth}). Spostiamo uno dei dispositivi (@code{ceth-test}) nel namespace @code{net} del contenitore e lasciamo l'altra estremità (@code{veth-test}) della connessione sul sistema host."

msgid ""
"pid=5983\n"
"ns=\"guix-test\"\n"
"host=\"veth-test\"\n"
"client=\"ceth-test\"\n"
"\n"
msgstr ""
"pid=5983\n"
"ns=\"guix-test\"\n"
"host=\"veth-test\"\n"
"client=\"ceth-test\"\n"
"\n"

msgid ""
"# Attach the new net namespace \"guix-test\" to the container PID.\n"
"sudo ip netns attach $ns $pid\n"
"\n"
msgstr ""
"# Collega il nuovo net namespace \"guix-test\" al PID del contenitore.\n"
"sudo ip netns attach $ns $pid\n"
"\n"

msgid ""
"# Create the pair of devices\n"
"sudo ip link add $host type veth peer name $client\n"
"\n"
msgstr ""
"# Crea la coppia di dispositivi\n"
"sudo ip link add $host type veth peer name $client\n"
"\n"

msgid ""
"# Move the client device into the container's net namespace\n"
"sudo ip link set $client netns $ns\n"
msgstr ""
"# Sposta il dispositivo client nel namespace di rete del contenitore\n"
"sudo ip link set $client netns $ns\n"

msgid "Then we configure the host side:"
msgstr "Quindi configuriamo il lato host:"

msgid ""
"sudo ip link set $host up\n"
"sudo ip addr add 10.0.0.1/24 dev $host\n"
msgstr ""
"sudo ip link set $host up\n"
"sudo ip addr add 10.0.0.1/24 dev $host\n"

msgid "@dots{}and then we configure the client side:"
msgstr "@dots{}e poi configuriamo il lato client:"

msgid ""
"sudo ip netns exec $ns  ip link set lo up\n"
"sudo ip netns exec $ns  ip link set $client up\n"
"sudo ip netns exec $ns  ip addr add 10.0.0.2/24 dev $client\n"
msgstr ""
"sudo ip netns exec $ns  ip link set lo up\n"
"sudo ip netns exec $ns  ip link set $client up\n"
"sudo ip netns exec $ns  ip addr add 10.0.0.2/24 dev $client\n"

msgid "At this point the host can reach the container at IP address 10.0.0.2, and the container can reach the host at IP 10.0.0.1.  This is all we need to talk to the database server inside the container from the host system on the outside."
msgstr "A questo punto l'host può raggiungere il contenitore all'indirizzo IP 10.0.0.2, e il contenitore può raggiungere l'host all'IP 10.0.0.1. Questo è tutto ciò di cui abbiamo bisogno per parlare con il server di database all'interno del contenitore dal sistema host all'esterno."

msgid ""
"$ psql -h 10.0.0.2 -U test\n"
"psql (14.4)\n"
"Type \"help\" for help.\n"
"\n"
msgstr ""
"$ psql -h 10.0.0.2 -U test\n"
"psql (14.4)\n"
"Digita \"help\" per aiuto.\n"
"\n"

msgid ""
"test=> CREATE TABLE hello (who TEXT NOT NULL);\n"
"CREATE TABLE\n"
"test=> INSERT INTO hello (who) VALUES ('world');\n"
"INSERT 0 1\n"
"test=> SELECT * FROM hello;\n"
"  who\n"
"-------\n"
" world\n"
"(1 row)\n"
msgstr ""
"test=> CREATE TABLE hello (who TEXT NOT NULL);\n"
"CREATE TABLE\n"
"test=> INSERT INTO hello (who) VALUES ('world');\n"
"INSERT 0 1\n"
"test=> SELECT * FROM hello;\n"
"  who\n"
"-------\n"
" world\n"
"(1 riga)\n"

msgid "Now that we're done with this little demonstration let's clean up:"
msgstr "Ora che abbiamo finito con questa piccola dimostrazione, puliamo:"

msgid ""
"sudo kill $pid\n"
"sudo ip netns del $ns\n"
"sudo ip link del $host\n"
msgstr ""
"sudo kill $pid\n"
"sudo ip netns del $ns\n"
"sudo ip link del $host\n"

msgid "Guix can produce disk images (@pxref{Invoking guix system,,, guix, GNU Guix Reference Manual}) that can be used with virtual machines solutions such as virt-manager, GNOME Boxes or the more bare QEMU, among others."
msgstr "Guix può produrre immagini disco (@pxref{Invocare guix system,,, guix.it, Manuale di riferimento di GNU Guix}) che possono essere utilizzate con soluzioni di macchine virtuali come virt-manager, GNOME Boxes o il più semplice QEMU, tra gli altri."

msgid "This chapter aims to provide hands-on, practical examples that relates to the usage and configuration of virtual machines on a Guix System."
msgstr "Questo capitolo si propone di fornire esempi pratici e concreti relativi all'utilizzo e alla configurazione di macchine virtuali su un sistema Guix."

msgid "Network bridge interface"
msgstr "Interfaccia bridge di rete"

msgid "networking, bridge"
msgstr "networking, bridge"

msgid "qemu, network bridge"
msgstr "qemu, bridge di rete"

msgid "By default, QEMU uses a so-called ``user mode'' host network back-end, which is convenient as it does not require any configuration.  Unfortunately, it is also quite limited.  In this mode, the guest @abbr{VM, virtual machine} can access the network the same way the host would, but it cannot be reached from the host.  Additionally, since the QEMU user networking mode relies on ICMP, ICMP-based networking tools such as @command{ping} do @emph{not} work in this mode.  Thus, it is often desirable to configure a network bridge, which enables the guest to fully participate in the network.  This is necessary, for example, when the guest is to be used as a server."
msgstr "Per impostazione predefinita, QEMU utilizza un back-end di rete host cosiddetto ``user mode'', che è comodo in quanto non richiede alcuna configurazione. Sfortunatamente, è anche piuttosto limitato. In questa modalità, la @abbr{VM, macchina virtuale} guest può accedere alla rete nello stesso modo in cui lo farebbe l'host, ma non può essere raggiunta dall'host. Inoltre, poiché la modalità di rete utente di QEMU si basa su ICMP, gli strumenti di rete basati su ICMP come @command{ping} @emph{not} funzionano in questa modalità. Pertanto, è spesso desiderabile configurare un bridge di rete, che consente al guest di partecipare pienamente alla rete. Ciò è necessario, ad esempio, quando il guest deve essere utilizzato come server."

msgid "Creating a network bridge interface"
msgstr "Creazione di un'interfaccia bridge di rete"

msgid "There are many ways to create a network bridge.  The following command shows how to use NetworkManager and its @command{nmcli} command line interface (CLI) tool, which should already be available if your operating system declaration is based on one of the desktop templates:"
msgstr "Esistono molti modi per creare un bridge di rete. Il seguente comando mostra come usare NetworkManager e il suo strumento @command{nmcli} da riga di comando (CLI), che dovrebbe essere già disponibile se la dichiarazione del tuo sistema operativo si basa su uno dei modelli desktop:"

msgid "# nmcli con add type bridge con-name br0 ifname br0\n"
msgstr "# nmcli con add type bridge con-name br0 ifname br0\n"

msgid "To have this bridge be part of your network, you must associate your network bridge with the Ethernet interface used to connect with the network.  Assuming your interface is named @samp{enp2s0}, the following command can be used to do so:"
msgstr "Per far sì che questo bridge faccia parte della tua rete, devi associare il tuo bridge di rete all'interfaccia Ethernet usata per connetterti alla rete. Supponendo che la tua interfaccia si chiami @samp{enp2s0}, il seguente comando può essere usato per farlo:"

msgid "# nmcli con add type bridge-slave ifname enp2s0 master br0\n"
msgstr "# nmcli con add type bridge-slave ifname enp2s0 master br0\n"

msgid "Important"
msgstr "Importante"

msgid "Only Ethernet interfaces can be added to a bridge.  For wireless interfaces, consider the routed network approach detailed in @xref{Routed network for libvirt}."
msgstr "Solo le interfacce Ethernet possono essere aggiunte a un bridge. Per le interfacce wireless, considerare l'approccio di rete instradata dettagliato in @xref{Routed network for libvirt}."

msgid "By default, the network bridge will allow your guests to obtain their IP address via DHCP, if available on your local network.  For simplicity, this is what we will use here.  To easily find the guests, they can be configured to advertise their host names via mDNS."
msgstr "Per impostazione predefinita, il bridge di rete consentirà ai tuoi ospiti di ottenere il loro indirizzo IP tramite DHCP, se disponibile sulla tua rete locale. Per semplicità, questo è ciò che useremo qui. Per trovare facilmente gli ospiti, possono essere configurati per pubblicizzare i loro nomi host tramite mDNS."

msgid "Configuring the QEMU bridge helper script"
msgstr "Configurazione dello script helper del bridge QEMU"

msgid "QEMU comes with a helper program to conveniently make use of a network bridge interface as an unprivileged user @pxref{Network options,,, QEMU, QEMU Documentation}.  The binary must be made setuid root for proper operation; this can be achieved by adding it to the @code{privileged-programs} field of your (host) @code{operating-system} definition, as shown below:"
msgstr "QEMU viene fornito con un programma di aiuto per utilizzare comodamente un'interfaccia bridge di rete come utente non privilegiato @pxref{Network options,,, QEMU, Documentazione QEMU}. Il binario deve essere reso setuid root per il corretto funzionamento; questo può essere ottenuto aggiungendolo al campo @code{privileged-programs} della tua definizione @code{operating-system} (host), come mostrato sotto:"

msgid ""
"(privileged-programs\n"
" (cons (privileged-program\n"
"         (program (file-append qemu \"/libexec/qemu-bridge-helper\"))\n"
"         (setuid? #t))\n"
"       %default-privileged-programs))\n"
msgstr ""
"(privileged-programs\n"
" (cons (privileged-program\n"
"         (program (file-append qemu \"/libexec/qemu-bridge-helper\"))\n"
"         (setuid? #t))\n"
"       %default-privileged-programs))\n"

msgid "The file @file{/etc/qemu/bridge.conf} must also be made to allow the bridge interface, as the default is to deny all.  Add the following to your list of services to do so:"
msgstr "Il file @file{/etc/qemu/bridge.conf} deve anche essere modificato per consentire l'interfaccia del bridge, poiché l'impostazione predefinita è di negare tutto. Aggiungi quanto segue all'elenco dei servizi per farlo:"

msgid "Invoking QEMU with the right command line options"
msgstr "Avviare QEMU con le opzioni da riga di comando corrette"

msgid "When invoking QEMU, the following options should be provided so that the network bridge is used, after having selected a unique MAC address for the guest."
msgstr "Quando si invoca QEMU, le seguenti opzioni devono essere fornite in modo che il bridge di rete sia utilizzato, dopo aver selezionato un indirizzo MAC unico per il guest."

msgid "By default, a single MAC address is used for all guests, unless provided.  Failing to provide different MAC addresses to each virtual machine making use of the bridge would cause networking issues."
msgstr "Per impostazione predefinita, viene utilizzato un singolo indirizzo MAC per tutti gli ospiti, a meno che non venga fornito. Il mancato fornitura di indirizzi MAC diversi a ciascuna macchina virtuale che utilizza il bridge causerebbe problemi di rete."

msgid ""
"$ qemu-system-x86_64 [...] \\\n"
"    -device virtio-net-pci,netdev=user0,mac=XX:XX:XX:XX:XX:XX \\\n"
"    -netdev bridge,id=user0,br=br0 \\\n"
"    [...]\n"
msgstr ""
"$ qemu-system-x86_64 [...] \\\n"
"    -device virtio-net-pci,netdev=user0,mac=XX:XX:XX:XX:XX:XX \\\n"
"    -netdev bridge,id=user0,br=br0 \\\n"
"    [...]\n"

msgid "To generate MAC addresses that have the QEMU registered prefix, the following snippet can be employed:"
msgstr "Per generare indirizzi MAC che hanno il prefisso registrato da QEMU, può essere utilizzato il seguente frammento:"

msgid ""
"mac_address=\"52:54:00:$(dd if=/dev/urandom bs=512 count=1 2>/dev/null \\\n"
"                           | md5sum \\\n"
"                           | sed -E 's/^(..)(..)(..).*$/\\1:\\2:\\3/')\"\n"
"echo $mac_address\n"
msgstr ""
"mac_address=\"52:54:00:$(dd if=/dev/urandom bs=512 count=1 2>/dev/null \\\n"
"                           | md5sum \\\n"
"                           | sed -E 's/^(..)(..)(..).*$/\\1:\\2:\\3/')\"\n"
"echo $mac_address\n"

msgid "Networking issues caused by Docker"
msgstr "Problemi di rete causati da Docker"

msgid "If you use Docker on your machine, you may experience connectivity issues when attempting to use a network bridge, which are caused by Docker also relying on network bridges and configuring its own routing rules.  The solution is add the following @code{iptables} snippet to your @code{operating-system} declaration:"
msgstr "Se usi Docker sulla tua macchina, potresti riscontrare problemi di connettività quando tenti di usare un bridge di rete, causati dal fatto che Docker si basa anche sui bridge di rete e configura le proprie regole di routing. La soluzione è aggiungere il seguente frammento @code{iptables} alla tua dichiarazione @code{operating-system}:"

msgid ""
"(service iptables-service-type\n"
"             (iptables-configuration\n"
"              (ipv4-rules (plain-file \"iptables.rules\" \"\\\n"
"*filter\n"
":INPUT ACCEPT [0:0]\n"
":FORWARD DROP [0:0]\n"
":OUTPUT ACCEPT [0:0]\n"
"-A FORWARD -i br0 -o br0 -j ACCEPT\n"
"COMMIT\n"
"\"))\n"
msgstr ""
"(service iptables-service-type\n"
"             (iptables-configuration\n"
"              (ipv4-rules (plain-file \"iptables.rules\" \"\\\n"
"*filter\n"
":INPUT ACCEPT [0:0]\n"
":FORWARD DROP [0:0]\n"
":OUTPUT ACCEPT [0:0]\n"
"-A FORWARD -i br0 -o br0 -j ACCEPT\n"
"COMMIT\n"
"\"))\n"

msgid "Virtual network bridge interface"
msgstr "Interfaccia bridge di rete virtuale"

msgid "networking, virtual bridge"
msgstr "networking, bridge virtuale"

msgid "libvirt, virtual network switch"
msgstr "libvirt, switch di rete virtuale"

msgid "If the machine hosting your virtual machines is connected wirelessly to the network, you won't be able to use a true network bridge as explained in the preceding section (@pxref{Network bridge for QEMU}).  In this case, the next best option is to use a @emph{virtual network switch} with static routing and to configure a libvirt-powered virtual machine to use it (via the @command{virt-manager} GUI for example).  This is similar to the default mode of operation of QEMU/libvirt, except that instead of using @abbr{NAT, Network Address Translation}, it relies on static routes to join the @abbr{VM, virtual machine} IP address to the @abbr{LAN, local area network}.  This provides two-way connectivity to and from the virtual machine, which is needed for exposing services hosted on the virtual machine."
msgstr "Se la macchina che ospita le tue macchine virtuali è collegata in modalità wireless alla rete, non sarai in grado di usare un vero bridge di rete come spiegato nella sezione precedente (@pxref{Network bridge for QEMU}). In questo caso, la prossima migliore opzione è usare uno @emph{switch di rete virtuale} con routing statico e configurare una macchina virtuale basata su libvirt per usarlo (tramite la GUI di @command{virt-manager} per esempio). Questo è simile alla modalità di funzionamento predefinita di QEMU/libvirt, tranne che invece di usare @abbr{NAT, Network Address Translation}, si basa su rotte statiche per unire l'indirizzo IP della @abbr{VM, macchina virtuale} alla @abbr{LAN, rete locale}. Questo fornisce connettività bidirezionale da e verso la macchina virtuale, che è necessaria per esporre i servizi ospitati sulla macchina virtuale."

msgid "Creating a virtual network switch"
msgstr "Creazione di uno switch di rete virtuale"

msgid "A virtual network switch consists of a virtual network device called a `virtual bridge', DHCP server (dnsmasq) and firewall rules (iptables). See the @url{https://wiki.libvirt.org/VirtualNetworking.html, libvirt Wiki article on Virtual Networking} for more details on the modes of operation, management and implementation of virtual network switches."
msgstr "Uno switch di rete virtuale consiste in un dispositivo di rete virtuale chiamato `bridge virtuale', server DHCP (dnsmasq) e regole firewall (iptables). Vedi l'@url{https://wiki.libvirt.org/VirtualNetworking.html, articolo wiki di libvirt sulle Reti Virtuali} per maggiori dettagli sulle modalità di funzionamento, gestione e implementazione degli switch di rete virtuali."

msgid "The @command{virsh} command, provided by the @code{libvirt} package, makes it very easy to create a virtual switch.  You first need to choose a network subnet for your virtual switch; if your home LAN is in the @samp{192.168.1.0/24} network, you could opt to use e.g.@: @samp{192.168.2.0/24}.  Define an XML file, e.g.@: @file{/tmp/virbr0.xml}, containing the following:"
msgstr "Il comando @command{virsh}, fornito dal pacchetto @code{libvirt}, rende molto facile creare uno switch virtuale. Per prima cosa devi scegliere una sottorete di rete per il tuo switch virtuale; se la tua LAN domestica è nella rete @samp{192.168.1.0/24}, potresti optare per l'uso ad es.: @samp{192.168.2.0/24}. Definisci un file XML, ad es.: @file{/tmp/virbr0.xml}, contenente quanto segue:"

msgid ""
"<network>\n"
"  <name>virbr0</name>\n"
"  <bridge name=\"virbr0\" />\n"
"  <forward mode=\"route\"/>\n"
"  <ip address=\"192.168.2.0\" netmask=\"255.255.255.0\">\n"
"    <dhcp>\n"
"      <range start=\"192.168.2.1\" end=\"192.168.2.254\"/>\n"
"    </dhcp>\n"
"  </ip>\n"
"</network>\n"
msgstr ""
"<network>\n"
"  <name>virbr0</name>\n"
"  <bridge name=\"virbr0\" />\n"
"  <forward mode=\"route\"/>\n"
"  <ip address=\"192.168.2.0\" netmask=\"255.255.255.0\">\n"
"    <dhcp>\n"
"      <range start=\"192.168.2.1\" end=\"192.168.2.254\"/>\n"
"    </dhcp>\n"
"  </ip>\n"
"</network>\n"

msgid "Then create and configure the interface using the @command{virsh} command, as root:"
msgstr "Quindi crea e configura l'interfaccia usando il comando @command{virsh}, come root:"

msgid ""
"virsh net-define /tmp/virbr0.xml\n"
"virsh net-autostart virbr0\n"
"virsh net-start virbr0\n"
msgstr ""
"virsh net-define /tmp/virbr0.xml\n"
"virsh net-autostart virbr0\n"
"virsh net-start virbr0\n"

msgid "The @samp{virbr0} interface should now be visible e.g.@: via the @samp{ip address} command.  It will be automatically started every time your libvirt virtual machine is started."
msgstr "L'interfaccia @samp{virbr0} dovrebbe ora essere visibile ad es.: tramite il comando @samp{ip address}. Verrà avviata automaticamente ogni volta che la tua macchina virtuale libvirt viene avviata."

msgid "Configuring the static routes for your virtual bridge"
msgstr "Configurazione delle rotte statiche per il tuo bridge virtuale"

msgid "If you configured your virtual machine to use your newly created @samp{virbr0} virtual bridge interface, it should already receive an IP via DHCP such as @samp{192.168.2.15} and be reachable from the server hosting it, e.g.@: via @samp{ping 192.168.2.15}.  There's one last configuration needed so that the VM can reach the external network: adding static routes to the network's router."
msgstr "Se hai configurato la tua macchina virtuale per utilizzare la tua nuova interfaccia bridge virtuale @samp{virbr0}, dovrebbe già ricevere un IP tramite DHCP come @samp{192.168.2.15} ed essere raggiungibile dal server che la ospita, ad es.: tramite @samp{ping 192.168.2.15}. C'è un'ultima configurazione necessaria affinché la VM possa raggiungere la rete esterna: aggiungere rotte statiche al router della rete."

msgid "In this example, the LAN network is @samp{192.168.1.0/24} and the router configuration web page may be accessible via e.g.@: the @url{http://192.168.1.1} page.  On a router running the @url{https://librecmc.org/, libreCMC} firmware, you would navigate to the @clicksequence{Network @click{} Static Routes} page (@url{https://192.168.1.1/cgi-bin/luci/admin/network/routes}), and you would add a new entry to the @samp{Static IPv4 Routes} with the following information:"
msgstr "In questo esempio, la rete LAN è @samp{192.168.1.0/24} e la pagina web di configurazione del router potrebbe essere accessibile ad es.: tramite la pagina @url{http://192.168.1.1}. Su un router che esegue il firmware @url{https://librecmc.org/, libreCMC}, dovresti navigare alla pagina @clicksequence{Rete @click{} Rotte Statiche} (@url{https://192.168.1.1/cgi-bin/luci/admin/network/routes}), e aggiungeresti una nuova voce a @samp{Rotte IPv4 Statiche} con le seguenti informazioni:"

msgid "Interface"
msgstr "Interfaccia"

msgid "lan"
msgstr "lan"

msgid "Target"
msgstr "Destinazione"

msgid "192.168.2.0"
msgstr "192.168.2.0"

msgid "IPv4-Netmask"
msgstr "Maschera di rete IPv4"

msgid "255.255.255.0"
msgstr "255.255.255.0"

msgid "IPv4-Gateway"
msgstr "Gateway IPv4"

msgid "server-ip"
msgstr "ip-server"

msgid "Route type"
msgstr "Tipo di rotta"

msgid "unicast"
msgstr "unicast"

msgid "where @var{server-ip} is the IP address of the machine hosting the VMs, which should be static."
msgstr "dove @var{server-ip} è l'indirizzo IP della macchina che ospita le VM, che dovrebbe essere statico."

msgid "After saving/applying this new static route, external connectivity should work from within your VM; you can e.g.@: run @samp{ping gnu.org} to verify that it functions correctly."
msgstr "Dopo aver salvato/applicato questa nuova rotta statica, la connettività esterna dovrebbe funzionare all'interno della tua VM; puoi ad es.: eseguire @samp{ping gnu.org} per verificare che funzioni correttamente."

msgid "As mentioned in the preceding section (@pxref{Routed network for libvirt}), libvirt allows virtual networks to be defined via XML files and managed by the @command{virsh} command.  The details of the creation and removal of virtual network switches are handled by libvirt, so the user does not have to deal with them."
msgstr "Come menzionato nella sezione precedente (@pxref{Routed network for libvirt}), libvirt permette di definire reti virtuali tramite file XML e di gestirle con il comando @command{virsh}. I dettagli della creazione e rimozione di switch di rete virtuali sono gestiti da libvirt, quindi l'utente non deve occuparsene."

msgid "However, libvirt's handling of virtual network switches can sometimes clash with more complex networking setups.  In particular, the iptables rules inserted by libvirt for switches operating in the NAT mode can clash with existing iptables/nftables rules, leading to insecure or broken packet filtering."
msgstr "Tuttavia, la gestione degli switch di rete virtuali da parte di libvirt può a volte entrare in conflitto con configurazioni di rete più complesse. In particolare, le regole iptables inserite da libvirt per gli switch che operano in modalità NAT possono entrare in conflitto con regole iptables/nftables esistenti, portando a un filtraggio dei pacchetti insicuro o interrotto."

msgid "In such cases, the only solution is to manually set up a virtual network switch.  This section will provide instructions on how to do so using Guix System services."
msgstr "In questi casi, l'unica soluzione è configurare manualmente uno switch di rete virtuale. Questa sezione fornirà istruzioni su come farlo utilizzando i servizi del sistema Guix."

msgid "Creating the virtual network bridge"
msgstr "Creazione del bridge di rete virtuale"

msgid "The @code{static-networking-service-type} can be used to create a virtual network bridge and assign an IP address to it:"
msgstr "Il @code{static-networking-service-type} può essere usato per creare un bridge di rete virtuale e assegnargli un indirizzo IP:"

msgid ""
"(service static-networking-service-type\n"
"         (list (static-networking\n"
"                ;; The default provision is 'networking; if you're using any\n"
"                ;; other service with this provision, such as\n"
"                ;; `network-manager-service-type`, then you need to change the\n"
"                ;; default.\n"
"                (provision '(static-networking))\n"
"                (links\n"
"                 (list (network-link\n"
"                        (name \"virbr0\")\n"
"                        (type 'bridge)\n"
"                        (arguments '()))))\n"
"                (addresses\n"
"                 (list (network-address\n"
"                        (device \"virbr0\")\n"
"                        (value \"192.168.10.1/24\")))))))\n"
msgstr ""
"(service static-networking-service-type\n"
"         (list (static-networking\n"
"                ;; La fornitura predefinita è 'networking; se stai usando qualsiasi\n"
"                ;; altro servizio con questa fornitura, come\n"
"                ;; `network-manager-service-type`, allora devi cambiare il\n"
"                ;; predefinito.\n"
"                (provision '(static-networking))\n"
"                (links\n"
"                 (list (network-link\n"
"                        (name \"virbr0\")\n"
"                        (type 'bridge)\n"
"                        (arguments '()))))\n"
"                (addresses\n"
"                 (list (network-address\n"
"                        (device \"virbr0\")\n"
"                        (value \"192.168.10.1/24\")))))))\n"

msgid "Running dnsmasq for the virtual network bridge"
msgstr "Esecuzione di dnsmasq per il bridge di rete virtuale"

msgid "The @code{dnsmasq-service-type} can be used to provide DNS and DHCP for guests connected to this virtual network switch:"
msgstr "Il @code{dnsmasq-service-type} può essere usato per fornire DNS e DHCP per gli ospiti connessi a questo switch di rete virtuale:"

msgid ""
"(service dnsmasq-service-type\n"
"         (dnsmasq-configuration\n"
"          ;; You can have multiple instances of `dnsmasq-service-type` as long\n"
"          ;; as each one has a different shepherd-provision.\n"
"          (shepherd-provision '(dnsmasq-virbr0))\n"
"          (extra-options (list\n"
"                          ;; Only bind to the virtual bridge. This\n"
"                          ;; avoids conflicts with other running\n"
"                          ;; dnsmasq instances.\n"
"                          \"--except-interface=lo\"\n"
"                          \"--interface=virbr0\"\n"
"                          \"--bind-dynamic\"\n"
"                          ;; IPv4 addresses to offer to VMs. This\n"
"                          ;; should match the chosen subnet.\n"
"                          \"--dhcp-range=192.168.10.2,192.168.10.254\"))))\n"
msgstr ""
"(service dnsmasq-service-type\n"
"         (dnsmasq-configuration\n"
"          ;; Puoi avere più istanze di `dnsmasq-service-type` purché\n"
"          ;; ognuna abbia una diversa shepherd-provision.\n"
"          (shepherd-provision '(dnsmasq-virbr0))\n"
"          (extra-options (list\n"
"                          ;; Bind solo al bridge virtuale. Questo\n"
"                          ;; evita conflitti con altre istanze di\n"
"                          ;; dnsmasq in esecuzione.\n"
"                          \"--except-interface=lo\"\n"
"                          \"--interface=virbr0\"\n"
"                          \"--bind-dynamic\"\n"
"                          ;; Indirizzi IPv4 da offrire alle VM. Questo\n"
"                          ;; dovrebbe corrispondere alla sottorete scelta.\n"
"                          \"--dhcp-range=192.168.10.2,192.168.10.254\"))))\n"

msgid "Configuring NAT for the virtual network switch"
msgstr "Configurazione del NAT per lo switch di rete virtuale"

msgid "If you intend to use the virtual network switch in NAT mode, you will need to use nftables (or iptables) rules to set up IP masquerading.  The following example shows how to use @code{nftables-service-type} to do this:"
msgstr "Se intendi utilizzare lo switch di rete virtuale in modalità NAT, dovrai utilizzare le regole nftables (o iptables) per impostare il masquerading IP. Il seguente esempio mostra come utilizzare @code{nftables-service-type} per farlo:"

msgid ""
"(service nftables-service-type\n"
"         (nftables-configuration\n"
"          (ruleset\n"
"           (plain-file \"nftables.conf\"\n"
"                       \"\\\n"
"table inet filter @{\n"
"\n"
msgstr ""
"(service nftables-service-type\n"
"         (nftables-configuration\n"
"          (ruleset\n"
"           (plain-file \"nftables.conf\"\n"
"                       \"\\\n"
"table inet filter @{\n"
"\n"

msgid ""
"  chain input @{\n"
"    type filter hook input priority filter; policy drop;\n"
"    # Add your existing packet filtering rules here...\n"
"    iifname virbr0 udp dport 67 counter accept comment \\\"allow dhcp on virbr0\\\"\n"
"    iifname virbr0 meta l4proto @{tcp, udp@} th dport 53 accept \\\\\n"
"        comment \\\"allow dns on virbr0\\\"\n"
"  @}\n"
"\n"
msgstr ""
"  input catena @{\n"
"    tipo filtro hook input priorità filtro; policy drop;\n"
"    # Aggiungi qui le tue regole di filtraggio pacchetti esistenti...\n"
"    iifname virbr0 udp dport 67 contatore accetta commento \\\"consenti DHCP su virbr0\\\"\n"
"    iifname virbr0 meta l4proto @{tcp, udp@} th dport 53 accetta \\\\\n"
"        commento \\\"consenti DNS su virbr0\\\"\n"
"  @}\n"
"\n"

msgid ""
"  chain forward @{\n"
"    type filter hook forward priority filter; policy drop;\n"
"    # Add your existing forwarding rules here...\n"
"    iifname virbr0 accept comment \\\"allow outbound traffic from virbr0\\\"\n"
"    oifname virbr0 ct state @{established, related @} accept \\\\\n"
"        comment \\\"allow established traffic to virbr0\\\"\n"
"  @}\n"
"\n"
msgstr ""
"  chain forward @{\n"
"    type filter hook forward priority filter; policy drop;\n"
"    # Aggiungi qui le tue regole di inoltro esistenti...\n"
"    iifname virbr0 accept comment \\\"consenti il traffico in uscita da virbr0\\\"\n"
"    oifname virbr0 ct state @{established, related @} accept \\\\\n"
"        comment \\\"consenti il traffico stabilito verso virbr0\\\"\n"
"  @}\n"
"\n"

msgid ""
"@}\n"
"\n"
msgstr ""
"@}\n"
"\n"

msgid ""
"table inet nat @{\n"
"  chain postrouting @{\n"
"    type nat hook postrouting priority srcnat; policy accept;\n"
"    # Add your existing nat rules here...\n"
"    iifname virbr0 ip daddr @{ 224.0.0.0/24, 255.255.255.255/32 @} return \\\\\n"
"        comment \\\"don't masquerade to reserved address blocks\\\"\n"
"    iifname virbr0 oifname != virbr0 masquerade \\\\\n"
"        comment \\\"masquerade all outgoing traffic from VMs\\\"\n"
"  @}\n"
"@}\n"
"\"))))\n"
msgstr ""
"table inet nat @{\n"
"  chain postrouting @{\n"
"    type nat hook postrouting priority srcnat; policy accept;\n"
"    # Aggiungi qui le tue regole NAT esistenti...\n"
"    iifname virbr0 ip daddr @{ 224.0.0.0/24, 255.255.255.255/32 @} return \\\\\n"
"        comment \\\"non mascherare verso blocchi di indirizzi riservati\\\"\n"
"    iifname virbr0 oifname != virbr0 masquerade \\\\\n"
"        comment \\\"mascherare tutto il traffico in uscita dalle VM\\\"\n"
"  @}\n"
"@}\n"
"\"))))\n"

msgid "Ensure that you have IPv4 forwarding enabled (you can use @code{sysctl-service-type} for this)."
msgstr "Assicurati di avere l'inoltro IPv4 abilitato (puoi usare @code{sysctl-service-type} per questo)."

msgid "VM References"
msgstr "Riferimenti VM"

msgid "@uref{https://jamielinux.com/docs/libvirt-networking-handbook/index.html, The (unofficial) libvirt Networking Handbook}@* Note that this resource is rather outdated at the time of writing (as of March 2025, it was last updated in 2015).  Nevertheless, the authors of this chapter have found it to be a valuable source of information."
msgstr "@uref{https://jamielinux.com/docs/libvirt-networking-handbook/index.html, The (unofficial) libvirt Networking Handbook}@* Nota che questa risorsa è piuttosto datata al momento della stesura (a marzo 2025, è stata aggiornata l'ultima volta nel 2015). Ciononostante, gli autori di questo capitolo l'hanno trovata una preziosa fonte di informazioni."

msgid "Guix is a functional package manager that offers many features beyond what more traditional package managers can do.  To the uninitiated, those features might not have obvious use cases at first.  The purpose of this chapter is to demonstrate some advanced package management concepts."
msgstr "Guix è un gestore di pacchetti funzionale che offre molte funzionalità oltre a ciò che i gestori di pacchetti più tradizionali possono fare. Per i non iniziati, queste funzionalità potrebbero non avere casi d'uso ovvi all'inizio. Lo scopo di questo capitolo è dimostrare alcuni concetti avanzati di gestione dei pacchetti."

msgid "@pxref{Package Management,,, guix, GNU Guix Reference Manual} for a complete reference."
msgstr "@pxref{Gestione dei pacchetti,,, guix,it, Manuale di riferimento GNU Guix} per un riferimento completo."

msgid "Guix provides a very useful feature that may be quite foreign to newcomers: @dfn{profiles}.  They are a way to group package installations together and all users on the same system are free to use as many profiles as they want."
msgstr "Guix fornisce una funzionalità molto utile che potrebbe essere piuttosto estranea ai nuovi arrivati: i @dfn{profiles}. Sono un modo per raggruppare le installazioni di pacchetti e tutti gli utenti sullo stesso sistema sono liberi di usare quanti profili desiderano."

msgid "Whether you're a developer or not, you may find that multiple profiles bring you great power and flexibility.  While they shift the paradigm somewhat compared to @emph{traditional package managers}, they are very convenient to use once you've understood how to set them up."
msgstr "Che tu sia uno sviluppatore o meno, potresti scoprire che più profili ti offrono grande potenza e flessibilità. Sebbene spostino un po' il paradigma rispetto ai @emph{gestori di pacchetti tradizionali}, sono molto comodi da usare una volta che hai capito come configurarli."

msgid "This section is an opinionated guide on the use of multiple profiles.  It predates @command{guix shell} and its fast profile cache (@pxref{Invoking guix shell,,, guix, GNU Guix Reference Manual})."
msgstr "Questa sezione è una guida ragionata sull'uso di più profili. Precede @command{guix shell} e la sua cache veloce dei profili (@pxref{Invocare guix shell,,, guix.it, Manuale di riferimento di GNU Guix})."

msgid "In many cases, you may find that using @command{guix shell} to set up the environment you need, when you need it, is less work that maintaining a dedicated profile.  Your call!"
msgstr "In molti casi, potresti scoprire che l'utilizzo di @command{guix shell} per configurare l'ambiente di cui hai bisogno, quando ne hai bisogno, richiede meno lavoro rispetto al mantenimento di un profilo dedicato. A te la scelta!"

msgid "If you are familiar with Python's @samp{virtualenv}, you can think of a profile as a kind of universal @samp{virtualenv} that can hold any kind of software whatsoever, not just Python software.  Furthermore, profiles are self-sufficient: they capture all the runtime dependencies which guarantees that all programs within a profile will always work at any point in time."
msgstr "Se hai familiarità con @samp{virtualenv} di Python, puoi pensare a un profilo come a una sorta di @samp{virtualenv} universale che può contenere qualsiasi tipo di software, non solo software Python. Inoltre, i profili sono autosufficienti: catturano tutte le dipendenze di runtime, il che garantisce che tutti i programmi all'interno di un profilo funzioneranno sempre in qualsiasi momento."

msgid "Multiple profiles have many benefits:"
msgstr "Più profili offrono molti vantaggi:"

msgid "Clean semantic separation of the various packages a user needs for different contexts."
msgstr "Pulita separazione semantica dei vari pacchetti di cui un utente ha bisogno per diversi contesti."

msgid "Multiple profiles can be made available into the environment either on login or within a dedicated shell."
msgstr "È possibile rendere disponibili più profili nell'ambiente sia all'accesso che all'interno di una shell dedicata."

msgid "Profiles can be loaded on demand.  For instance, the user can use multiple shells, each of them running different profiles."
msgstr "I profili possono essere caricati su richiesta. Ad esempio, l'utente può usare più shell, ognuna delle quali esegue profili diversi."

msgid "Isolation: Programs from one profile will not use programs from the other, and the user can even install different versions of the same programs to the two profiles without conflict."
msgstr "Isolamento: i programmi di un profilo non utilizzeranno i programmi dell'altro, e l'utente può persino installare diverse versioni degli stessi programmi nei due profili senza conflitto."

msgid "Deduplication: Profiles share dependencies that happens to be the exact same.  This makes multiple profiles storage-efficient."
msgstr "Deduplicazione: i profili condividono dipendenze che risultano essere esattamente le stesse. Questo rende più profili efficienti in termini di archiviazione."

msgid "Reproducible: when used with declarative manifests, a profile can be fully specified by the Guix commit that was active when it was set up.  This means that the exact same profile can be @uref{https://guix.gnu.org/blog/2018/multi-dimensional-transactions-and-rollbacks-oh-my/, set up anywhere and anytime}, with just the commit information.  See the section on @ref{Reproducible profiles}."
msgstr "Riproducibile: se utilizzato con manifest dichiarativi, un profilo può essere completamente specificato dal commit Guix attivo al momento della sua configurazione. Ciò significa che lo stesso identico profilo può essere @uref{https://guix.gnu.org/blog/2018/multi-dimensional-transactions-and-rollbacks-oh-my/, configurato ovunque e in qualsiasi momento}, con le sole informazioni di commit. Consulta la sezione sui @ref{Reproducible profiles}."

msgid "Easier upgrades and maintenance: Multiple profiles make it easy to keep package listings at hand and make upgrades completely frictionless."
msgstr "Aggiornamenti e manutenzione più semplici: più profili rendono facile avere a portata di mano gli elenchi dei pacchetti e rendono gli aggiornamenti completamente senza attriti."

msgid "Concretely, here follows some typical profiles:"
msgstr "Concretamente, ecco alcuni profili tipici:"

msgid "The dependencies of a project you are working on."
msgstr "Le dipendenze di un progetto su cui stai lavorando."

msgid "Your favourite programming language libraries."
msgstr "Le tue librerie di linguaggio di programmazione preferite."

msgid "Laptop-specific programs (like @samp{powertop}) that you don't need on a desktop."
msgstr "Programmi specifici per laptop (come @samp{powertop}) di cui non hai bisogno su un desktop."

msgid "@TeX{}live (this one can be really useful when you need to install just one package for this one document you've just received over email)."
msgstr "@TeX{}live (questo può essere davvero utile quando hai bisogno di installare un solo pacchetto per un documento che hai appena ricevuto via email)."

msgid "Games."
msgstr "Giochi."

msgid "Let's dive in the set up!"
msgstr "Immergiamoci nella configurazione!"

msgid "A Guix profile can be set up @i{via} a @dfn{manifest}.  A manifest is a snippet of Scheme code that specifies the set of packages you want to have in your profile; it looks like this:"
msgstr "Un profilo Guix può essere configurato @i{via} un @dfn{manifest}. Un manifest è uno snippet di codice Scheme che specifica l'insieme di pacchetti che desideri avere nel tuo profilo; assomiglia a questo:"

msgid ""
"(specifications->manifest\n"
"  '(\"package-1\"\n"
"    ;; Version 1.3 of package-2.\n"
"    \"package-2@@1.3\"\n"
"    ;; The \"lib\" output of package-3.\n"
"    \"package-3:lib\"\n"
"    ; ...\n"
"    \"package-N\"))\n"
msgstr ""
"(specifications->manifest\n"
"  '(\"pacchetto-1\"\n"
"    ;; Versione 1.3 del pacchetto-2.\n"
"    \"pacchetto-2@@1.3\"\n"
"    ;; L'output \"lib\" del pacchetto-3.\n"
"    \"pacchetto-3:lib\"\n"
"    ; ...\n"
"    \"pacchetto-N\"))\n"

msgid "@xref{Writing Manifests,,, guix, GNU Guix Reference Manual}, for more information about the syntax."
msgstr "@xref{Scrivere manifesti,,, guix.it, Manuale di riferimento GNU Guix}, per maggiori informazioni sulla sintassi."

msgid "We can create a manifest specification per profile and install them this way:"
msgstr "Possiamo creare una specifica di manifest per ogni profilo e installarli in questo modo:"

msgid ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"mkdir -p \"$GUIX_EXTRA_PROFILES\"/my-project # if it does not exist yet\n"
"guix package --manifest=/path/to/guix-my-project-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"
msgstr ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"mkdir -p \"$GUIX_EXTRA_PROFILES\"/my-project # se non esiste ancora\n"
"guix package --manifest=/percorso/a/guix-my-project-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"

msgid "Here we set an arbitrary variable @samp{GUIX_EXTRA_PROFILES} to point to the directory where we will store our profiles in the rest of this article."
msgstr "Qui impostiamo una variabile arbitraria @samp{GUIX_EXTRA_PROFILES} per indicare la directory dove memorizzeremo i nostri profili nel resto di questo articolo."

msgid "Placing all your profiles in a single directory, with each profile getting its own sub-directory, is somewhat cleaner.  This way, each sub-directory will contain all the symlinks for precisely one profile.  Besides, ``looping over profiles'' becomes obvious from any programming language (e.g.@: a shell script) by simply looping over the sub-directories of @samp{$GUIX_EXTRA_PROFILES}."
msgstr "Posizionare tutti i tuoi profili in una singola directory, con ogni profilo che ottiene la propria sottodirectory, è un po' più pulito. In questo modo, ogni sottodirectory conterrà tutti i symlink per un solo profilo. Inoltre, ``iterare sui profili'' diventa ovvio da qualsiasi linguaggio di programmazione (ad esempio: uno script di shell) semplicemente iterando sulle sottodirectory di @samp{$GUIX_EXTRA_PROFILES}."

msgid "Note that it's also possible to loop over the output of"
msgstr "Nota che è anche possibile scorrere l'output di"

msgid "guix package --list-profiles\n"
msgstr "guix package --list-profiles\n"

msgid "although you'll probably have to filter out @file{~/.config/guix/current}."
msgstr "anche se probabilmente dovrai filtrare @file{~/.config/guix/current}."

msgid "To enable all profiles on login, add this to your @file{~/.bash_profile} (or similar):"
msgstr "Per abilitare tutti i profili all'accesso, aggiungi questo al tuo @file{~/.bash_profile} (o simile):"

msgid ""
"for i in $GUIX_EXTRA_PROFILES/*; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"
msgstr ""
"for i in $GUIX_EXTRA_PROFILES/*; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"

msgid "Note to Guix System users: the above reflects how your default profile @file{~/.guix-profile} is activated from @file{/etc/profile}, that latter being loaded by @file{~/.bashrc} by default."
msgstr "Nota per gli utenti di Guix System: quanto sopra riflette come il tuo profilo predefinito @file{~/.guix-profile} viene attivato da @file{/etc/profile}, quest'ultimo caricato da @file{~/.bashrc} per impostazione predefinita."

msgid "You can obviously choose to only enable a subset of them:"
msgstr "Puoi ovviamente scegliere di abilitarne solo un sottoinsieme:"

msgid ""
"for i in \"$GUIX_EXTRA_PROFILES\"/my-project-1 \"$GUIX_EXTRA_PROFILES\"/my-project-2; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"
msgstr ""
"for i in \"$GUIX_EXTRA_PROFILES\"/my-project-1 \"$GUIX_EXTRA_PROFILES\"/my-project-2; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"

msgid "When a profile is off, it's straightforward to enable it for an individual shell without \"polluting\" the rest of the user session:"
msgstr "Quando un profilo è disabilitato, è semplice abilitarlo per una singola shell senza \"inquinare\" il resto della sessione utente:"

msgid "GUIX_PROFILE=\"path/to/my-project\" ; . \"$GUIX_PROFILE\"/etc/profile\n"
msgstr "GUIX_PROFILE=\"percorso/al/mio-progetto\" ; . \"$GUIX_PROFILE\"/etc/profile\n"

msgid "The key to enabling a profile is to @emph{source} its @samp{etc/profile} file.  This file contains shell code that exports the right environment variables necessary to activate the software contained in the profile.  It is built automatically by Guix and meant to be sourced.  It contains the same variables you would get if you ran:"
msgstr "La chiave per abilitare un profilo è @emph{source} il suo file @samp{etc/profile}. Questo file contiene codice shell che esporta le variabili d'ambiente corrette necessarie per attivare il software contenuto nel profilo. È costruito automaticamente da Guix e destinato all'esecuzione. Contiene le stesse variabili che otterresti eseguendo:"

msgid "guix package --search-paths=prefix --profile=$my_profile\"\n"
msgstr "guix package --search-paths=prefix --profile=$my_profile\"\n"

msgid "Once again, see @ref{Invoking guix package,,, guix, GNU Guix Reference Manual} for the command line options."
msgstr "Ancora una volta, vedi @ref{Invocare guix package,,, guix.it, Manuale di riferimento di GNU Guix} per le opzioni della riga di comando."

msgid "To upgrade a profile, simply install the manifest again:"
msgstr "Per aggiornare un profilo, è sufficiente installare di nuovo il manifest:"

msgid ""
"guix package -m /path/to/guix-my-project-manifest.scm \\\n"
" -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"
msgstr ""
"guix package -m /percorso/a/guix-my-project-manifest.scm \\\n"
" -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"

msgid "To upgrade all profiles, it's easy enough to loop over them.  For instance, assuming your manifest specifications are stored in @file{~/.guix-manifests/guix-$profile-manifest.scm}, with @samp{$profile} being the name of the profile (e.g.@: \"project1\"), you could do the following in Bourne shell:"
msgstr "Per aggiornare tutti i profili, è abbastanza facile scorrerli. Ad esempio, supponendo che le specifiche del tuo manifest siano archiviate in @file{~/.guix-manifests/guix-$profile-manifest.scm}, con @samp{$profile} che è il nome del profilo (es.: \"project1\"), potresti fare quanto segue in una shell Bourne:"

msgid ""
"for profile in \"$GUIX_EXTRA_PROFILES\"/*; do\n"
"  guix package --profile=\"$profile\" \\\n"
"   --manifest=\"$HOME/.guix-manifests/guix-$profile-manifest.scm\"\n"
"done\n"
msgstr ""
"for profile in \"$GUIX_EXTRA_PROFILES\"/*; do\n"
"  guix package --profile=\"$profile\" \\\n"
"   --manifest=\"$HOME/.guix-manifests/guix-$profile-manifest.scm\"\n"
"done\n"

msgid "Each profile has its own generations:"
msgstr "Ogni profilo ha le sue generazioni:"

msgid "guix package -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project --list-generations\n"
msgstr "guix package -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project --list-generations\n"

msgid "You can roll-back to any generation of a given profile:"
msgstr "Puoi tornare indietro a qualsiasi generazione di un dato profilo:"

msgid "guix package -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project --switch-generations=17\n"
msgstr "guix package -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project --switch-generations=17\n"

msgid "Finally, if you want to switch to a profile without inheriting from the current environment, you can activate it from an empty shell:"
msgstr "Infine, se vuoi passare a un profilo senza ereditare dall'ambiente corrente, puoi attivarlo da una shell vuota:"

msgid ""
"env -i $(which bash) --login --noprofile --norc\n"
". my-project/etc/profile\n"
msgstr ""
"env -i $(which bash) --login --noprofile --norc\n"
". my-project/etc/profile\n"

msgid "Activating a profile essentially boils down to exporting a bunch of environmental variables.  This is the role of the @samp{etc/profile} within the profile."
msgstr "L'attivazione di un profilo si riduce essenzialmente all'esportazione di una serie di variabili d'ambiente. Questo è il ruolo del file @samp{etc/profile} all'interno del profilo."

msgid "Note: Only the environmental variables of the packages that consume them will be set."
msgstr "Nota: verranno impostate solo le variabili d'ambiente dei pacchetti che le consumano."

msgid "For instance, @samp{MANPATH} won't be set if there is no consumer application for man pages within the profile.  So if you need to transparently access man pages once the profile is loaded, you've got two options:"
msgstr "Ad esempio, @samp{MANPATH} non verrà impostato se non esiste un'applicazione che consuma le pagine man all'interno del profilo. Quindi, se hai bisogno di accedere in modo trasparente alle pagine man una volta caricato il profilo, hai due opzioni:"

msgid "Either export the variable manually, e.g."
msgstr "Esporta la variabile manualmente, ad esempio"

msgid "export MANPATH=/path/to/profile$@{MANPATH:+:@}$MANPATH\n"
msgstr "export MANPATH=/percorso/al/profilo$@{MANPATH:+:@}$MANPATH\n"

msgid "Or include @samp{man-db} to the profile manifest."
msgstr "Oppure includi @samp{man-db} nel manifest del profilo."

msgid "The same is true for @samp{INFOPATH} (you can install @samp{info-reader}), @samp{PKG_CONFIG_PATH} (install @samp{pkg-config}), etc."
msgstr "Lo stesso vale per @samp{INFOPATH} (puoi installare @samp{info-reader}), @samp{PKG_CONFIG_PATH} (installa @samp{pkg-config}), ecc."

msgid "What about the default profile that Guix keeps in @file{~/.guix-profile}?"
msgstr "Che dire del profilo predefinito che Guix mantiene in @file{~/.guix-profile}?"

msgid "You can assign it the role you want.  Typically you would install the manifest of the packages you want to use all the time."
msgstr "Puoi assegnargli il ruolo che desideri. Tipicamente installeresti il manifest dei pacchetti che vuoi usare sempre."

msgid "Alternatively, you could keep it ``manifest-less'' for throw-away packages that you would just use for a couple of days.  This way makes it convenient to run"
msgstr "In alternativa, potresti mantenerlo ``senza manifest'' per pacchetti usa-e-getta che useresti solo per un paio di giorni. In questo modo è comodo eseguire"

msgid ""
"guix install package-foo\n"
"guix upgrade package-bar\n"
msgstr ""
"guix install package-foo\n"
"guix upgrade package-bar\n"

msgid "without having to specify the path to a profile."
msgstr "senza dover specificare il percorso di un profilo."

msgid "Manifests let you @dfn{declare} the set of packages you'd like to have in a profile (@pxref{Writing Manifests,,, guix, GNU Guix Reference Manual}).  They are a convenient way to keep your package lists around and, say, to synchronize them across multiple machines using a version control system."
msgstr "I manifest ti permettono di @dfn{declare} l'insieme di pacchetti che vorresti avere in un profilo (@pxref{Scrivere manifesti,,, guix.it, Manuale di riferimento GNU Guix}). Sono un modo conveniente per tenere a portata di mano gli elenchi dei pacchetti e, ad esempio, sincronizzarli su più macchine utilizzando un sistema di controllo versione."

msgid "A common complaint about manifests is that they can be slow to install when they contain large number of packages.  This is especially cumbersome when you just want get an upgrade for one package within a big manifest."
msgstr "Una lamentela comune sui manifest è che possono essere lenti da installare quando contengono un gran numero di pacchetti. Questo è particolarmente ingombrante quando si desidera solo un aggiornamento per un pacchetto all'interno di un manifest grande."

msgid "This is one more reason to use multiple profiles, which happen to be just perfect to break down manifests into multiple sets of semantically connected packages.  Using multiple, small profiles provides more flexibility and usability."
msgstr "Questo è un motivo in più per utilizzare più profili, che si rivelano perfetti per suddividere i manifest in più insiemi di pacchetti semanticamente collegati. L'utilizzo di più profili piccoli offre maggiore flessibilità e usabilità."

msgid "Manifests come with multiple benefits.  In particular, they ease maintenance:"
msgstr "I manifest offrono numerosi vantaggi. In particolare, facilitano la manutenzione:"

msgid "When a profile is set up from a manifest, the manifest itself is self-sufficient to keep a ``package listing'' around and reinstall the profile later or on a different system.  For ad-hoc profiles, we would need to generate a manifest specification manually and maintain the package versions for the packages that don't use the default version."
msgstr "Quando un profilo viene configurato da un manifest, il manifest stesso è autosufficiente per mantenere un ``elenco di pacchetti'' e reinstallare il profilo in seguito o su un sistema diverso. Per i profili ad-hoc, dovremmo generare manualmente una specifica di manifest e mantenere le versioni dei pacchetti per i pacchetti che non utilizzano la versione predefinita."

msgid "@code{guix package --upgrade} always tries to update the packages that have propagated inputs, even if there is nothing to do.  Guix manifests remove this problem."
msgstr "@code{guix package --upgrade} tenta sempre di aggiornare i pacchetti che hanno input propagati, anche se non c'è nulla da fare. I manifest di Guix rimuovono questo problema."

msgid "When partially upgrading a profile, conflicts may arise (due to diverging dependencies between the updated and the non-updated packages) and they can be annoying to resolve manually.  Manifests remove this problem altogether since all packages are always upgraded at once."
msgstr "Quando si aggiorna parzialmente un profilo, possono sorgere conflitti (a causa di dipendenze divergenti tra i pacchetti aggiornati e quelli non aggiornati) e possono essere fastidiosi da risolvere manualmente. I manifest eliminano del tutto questo problema, poiché tutti i pacchetti vengono sempre aggiornati contemporaneamente."

msgid "As mentioned above, manifests allow for reproducible profiles, while the imperative @code{guix install}, @code{guix upgrade}, etc. do not, since they produce different profiles every time even when they hold the same packages.  See @uref{https://issues.guix.gnu.org/issue/33285, the related discussion on the matter}."
msgstr "Come accennato in precedenza, i manifest consentono profili riproducibili, mentre i comandi imperativi @code{guix install}, @code{guix upgrade}, ecc. non lo fanno, poiché producono profili diversi ogni volta anche quando contengono gli stessi pacchetti. Vedi @uref{https://issues.guix.gnu.org/issue/33285, la discussione correlata sull'argomento}."

msgid "Manifest specifications are usable by other @samp{guix} commands.  For example, you can run @code{guix weather -m manifest.scm} to see how many substitutes are available, which can help you decide whether you want to try upgrading today or wait a while.  Another example: you can run @code{guix pack -m manifest.scm} to create a pack containing all the packages in the manifest (and their transitive references)."
msgstr "Le specifiche dei manifest sono utilizzabili da altri comandi @samp{guix}. Ad esempio, puoi eseguire @code{guix weather -m manifest.scm} per vedere quanti sostituti sono disponibili, il che può aiutarti a decidere se vuoi provare ad aggiornare oggi o aspettare un po'. Un altro esempio: puoi eseguire @code{guix pack -m manifest.scm} per creare un pacchetto contenente tutti i pacchetti nel manifest (e i loro riferimenti transitivi)."

msgid "Finally, manifests have a Scheme representation, the @samp{<manifest>} record type.  They can be manipulated in Scheme and passed to the various Guix @uref{https://en.wikipedia.org/wiki/Api, APIs}."
msgstr "Infine, i manifest hanno una rappresentazione Scheme, il tipo di record @samp{<manifest>}. Possono essere manipolati in Scheme e passati alle varie @uref{https://it.wikipedia.org/wiki/Application_programming_interface, API} di Guix."

msgid "It's important to understand that while manifests can be used to declare profiles, they are not strictly equivalent: profiles have the side effect that they ``pin'' packages in the store, which prevents them from being garbage-collected (@pxref{Invoking guix gc,,, guix, GNU Guix Reference Manual})  and ensures that they will still be available at any point in the future.  The @command{guix shell} command also protects recently-used profiles from garbage collection; profiles that have not been used for a while may be garbage-collected though, along with the packages they refer to."
msgstr "È importante capire che, sebbene i manifest possano essere usati per dichiarare i profili, non sono strettamente equivalenti: i profili hanno l'effetto collaterale di ``fissare'' i pacchetti nello store, il che impedisce che vengano raccolti dalla spazzatura (@pxref{Invocare guix gc,,, guix.it, Manuale di riferimento GNU Guix}) e assicura che saranno ancora disponibili in qualsiasi momento in futuro. Il comando @command{guix shell} protegge anche i profili usati di recente dalla raccolta della spazzatura; i profili che non sono stati usati per un po' possono essere comunque raccolti dalla spazzatura, insieme ai pacchetti a cui si riferiscono."

msgid "To be 100% sure that a given profile will never be collected, install the manifest to a profile and use @code{GUIX_PROFILE=/the/profile; . \"$GUIX_PROFILE\"/etc/profile} as explained above: this guarantees that our hacking environment will be available at all times."
msgstr "Per essere sicuri al 100% che un dato profilo non verrà mai raccolto, installare il manifest in un profilo e usare @code{GUIX_PROFILE=/il/profilo; . \"$GUIX_PROFILE\"/etc/profile} come spiegato sopra: questo garantisce che il nostro ambiente di hacking sarà sempre disponibile."

msgid "@emph{Security warning:} While keeping old profiles around can be convenient, keep in mind that outdated packages may not have received the latest security fixes."
msgstr "@emph{Avviso di sicurezza:} Sebbene mantenere i vecchi profili possa essere comodo, tieni presente che i pacchetti obsoleti potrebbero non aver ricevuto le ultime correzioni di sicurezza."

msgid "To reproduce a profile bit-for-bit, we need two pieces of information:"
msgstr "Per riprodurre un profilo bit per bit, abbiamo bisogno di due informazioni:"

msgid "a manifest (@pxref{Writing Manifests,,, guix, GNU Guix Reference Manual});"
msgstr "un manifest (@pxref{Scrivere manifesti,,, guix.it, Manuale di riferimento GNU Guix});"

msgid "a Guix channel specification (@pxref{Replicating Guix,,, guix, GNU Guix Reference Manual})."
msgstr "una specifica di canale Guix (@pxref{Replicare Guix,,, guix.it, Manuale di riferimento GNU Guix})."

msgid "Indeed, manifests alone might not be enough: different Guix versions (or different channels) can produce different outputs for a given manifest."
msgstr "Infatti, i soli manifest potrebbero non essere sufficienti: diverse versioni di Guix (o diversi canali) possono produrre output diversi per un dato manifest."

msgid "You can output the Guix channel specification with @samp{guix describe --format=channels} (@pxref{Invoking guix describe,,, guix, GNU Guix Reference Manual}).  Save this to a file, say @samp{channel-specs.scm}."
msgstr "È possibile generare la specifica del canale Guix con @samp{guix describe --format=channels} (@pxref{Invocare guix describe,,, guix, Manuale di riferimento GNU Guix}). Salva questo in un file, ad esempio @samp{channel-specs.scm}."

msgid "On another computer, you can use the channel specification file and the manifest to reproduce the exact same profile:"
msgstr "Su un altro computer, è possibile utilizzare il file di specifica del canale e il manifest per riprodurre lo stesso identico profilo:"

msgid ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"GUIX_EXTRA=$HOME/.guix-extra\n"
"\n"
msgstr ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"GUIX_EXTRA=$HOME/.guix-extra\n"
"\n"

msgid ""
"mkdir -p \"$GUIX_EXTRA\"/my-project\n"
"guix pull --channels=channel-specs.scm --profile=\"$GUIX_EXTRA/my-project/guix\"\n"
"\n"
msgstr ""
"mkdir -p \"$GUIX_EXTRA\"/my-project\n"
"guix pull --channels=channel-specs.scm --profile=\"$GUIX_EXTRA/my-project/guix\"\n"
"\n"

msgid ""
"mkdir -p \"$GUIX_EXTRA_PROFILES/my-project\"\n"
"\"$GUIX_EXTRA\"/my-project/guix/bin/guix package \\\n"
" --manifest=/path/to/guix-my-project-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"
msgstr ""
"mkdir -p \"$GUIX_EXTRA_PROFILES/my-project\"\n"
"\"$GUIX_EXTRA\"/my-project/guix/bin/guix package \\\n"
" --manifest=/percorso/a/guix-my-project-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"

msgid "It's safe to delete the Guix channel profile you've just installed with the channel specification, the project profile does not depend on it."
msgstr "È sicuro eliminare il profilo del canale Guix che hai appena installato con la specifica del canale, il profilo del progetto non dipende da esso."

msgid "development, with Guix"
msgstr "sviluppo, con Guix"

msgid "software development, with Guix"
msgstr "sviluppo software, con Guix"

msgid "Guix is a handy tool for developers; @command{guix shell}, in particular, gives a standalone development environment for your package, no matter what language(s) it's written in (@pxref{Invoking guix shell,,, guix, GNU Guix Reference Manual}).  To benefit from it, you have to initially write a package definition and have it either in Guix proper, or in a channel, or directly in your project's source tree as a @file{guix.scm} file.  This last option is appealing: all developers have to do to get set up is clone the project's repository and run @command{guix shell}, with no arguments."
msgstr "Guix è uno strumento utile per gli sviluppatori; @command{guix shell}, in particolare, fornisce un ambiente di sviluppo autonomo per il tuo pacchetto, indipendentemente dal linguaggio/i in cui è scritto (@pxref{Invocare guix shell,,, guix.it, Manuale di riferimento GNU Guix}). Per beneficiarne, devi inizialmente scrivere una definizione di pacchetto e averla in Guix stesso, o in un canale, o direttamente nell'albero sorgente del tuo progetto come file @file{guix.scm}. Quest'ultima opzione è allettante: tutto ciò che gli sviluppatori devono fare per iniziare è clonare il repository del progetto ed eseguire @command{guix shell}, senza argomenti."

msgid "Development needs go beyond development environments though.  How can developers perform continuous integration of their code in Guix build environments? How can they deliver their code straight to adventurous users? This chapter describes a set of files developers can add to their repository to set up Guix-based development environments, continuous integration, and continuous delivery---all at once@footnote{This chapter is adapted from a @uref{https://guix.gnu.org/en/blog/2023/from-development-environments-to-continuous-integrationthe-ultimate-guide-to-software-development-with-guix/, blog post} published in June 2023 on the Guix web site.}."
msgstr "Le esigenze di sviluppo vanno oltre gli ambienti di sviluppo. Come possono gli sviluppatori eseguire l'integrazione continua del loro codice negli ambienti di costruzione di Guix? Come possono consegnare il loro codice direttamente agli utenti più avventurosi? Questo capitolo descrive un insieme di file che gli sviluppatori possono aggiungere al loro repository per configurare ambienti di sviluppo basati su Guix, integrazione continua e consegna continua --- tutto in una volta sola@footnote{Questo capitolo è adattato da un @uref{https://guix.gnu.org/en/blog/2023/from-development-environments-to-continuous-integrationthe-ultimate-guide-to-software-development-with-guix/, post del blog} pubblicato a giugno 2023 sul sito web di Guix.}."

msgid "How do we go about ``Guixifying'' a repository? The first step, as we've seen, will be to add a @file{guix.scm} at the root of the repository in question. We'll take @uref{https://www.gnu.org/software/guile,Guile} as an example in this chapter: it's written in Scheme (mostly) and C, and has a number of dependencies---a C compilation tool chain, C libraries, Autoconf and its friends, LaTeX, and so on. The resulting @file{guix.scm} looks like the usual package definition (@pxref{Defining Packages,,, guix, GNU Guix Reference Manual}), just without the @code{define-public} bit:"
msgstr "Come ``Guixificare'' un repository? Il primo passo, come abbiamo visto, sarà aggiungere un file @file{guix.scm} alla radice del repository in questione. Prenderemo @uref{https://www.gnu.org/software/guile,Guile} come esempio in questo capitolo: è scritto principalmente in Scheme e C, e ha una serie di dipendenze --- una toolchain di compilazione C, librerie C, Autoconf e i suoi amici, LaTeX, e così via. Il file @file{guix.scm} risultante assomiglia alla solita definizione di pacchetto (@pxref{Definire i pacchetti,,, guix, Manuale di riferimento GNU Guix}), solo senza il pezzo @code{define-public}:"

msgid ""
";; The ‘guix.scm’ file for Guile, for use by ‘guix shell’.\n"
"\n"
msgstr ""
";; Il file «guix.scm» per Guile, da usare con «guix shell».\n"
"\n"

msgid ""
"(use-modules (guix)\n"
"             (guix build-system gnu)\n"
"             ((guix licenses) #:prefix license:)\n"
"             (gnu packages autotools)\n"
"             (gnu packages base)\n"
"             (gnu packages bash)\n"
"             (gnu packages bdw-gc)\n"
"             (gnu packages compression)\n"
"             (gnu packages flex)\n"
"             (gnu packages gdb)\n"
"             (gnu packages gettext)\n"
"             (gnu packages gperf)\n"
"             (gnu packages libffi)\n"
"             (gnu packages libunistring)\n"
"             (gnu packages linux)\n"
"             (gnu packages pkg-config)\n"
"             (gnu packages readline)\n"
"             (gnu packages tex)\n"
"             (gnu packages texinfo)\n"
"             (gnu packages version-control))\n"
"\n"
msgstr ""
"(use-modules (guix)\n"
"             (guix build-system gnu)\n"
"             ((guix licenses) #:prefix license:)\n"
"             (gnu packages autotools)\n"
"             (gnu packages base)\n"
"             (gnu packages bash)\n"
"             (gnu packages bdw-gc)\n"
"             (gnu packages compression)\n"
"             (gnu packages flex)\n"
"             (gnu packages gdb)\n"
"             (gnu packages gettext)\n"
"             (gnu packages gperf)\n"
"             (gnu packages libffi)\n"
"             (gnu packages libunistring)\n"
"             (gnu packages linux)\n"
"             (gnu packages pkg-config)\n"
"             (gnu packages readline)\n"
"             (gnu packages tex)\n"
"             (gnu packages texinfo)\n"
"             (gnu packages version-control))\n"
"\n"

msgid ""
"(package\n"
"  (name \"guile\")\n"
"  (version \"3.0.99-git\")                          ;funky version number\n"
"  (source #f)                                     ;no source\n"
"  (build-system gnu-build-system)\n"
"  (native-inputs\n"
"   (append (list autoconf\n"
"                 automake\n"
"                 libtool\n"
"                 gnu-gettext\n"
"                 flex\n"
"                 texinfo\n"
"                 texlive-base                 ;for \"make pdf\"\n"
"                 texlive-epsf\n"
"                 gperf\n"
"                 git\n"
"                 gdb\n"
"                 strace\n"
"                 readline\n"
"                 lzip\n"
"                 pkg-config)\n"
"\n"
msgstr ""
"(package\n"
"  (name \"guile\")\n"
"  (version \"3.0.99-git\")                          ;numero di versione strano\n"
"  (source #f)                                     ;nessuna fonte\n"
"  (build-system gnu-build-system)\n"
"  (native-inputs\n"
"   (append (list autoconf\n"
"                 automake\n"
"                 libtool\n"
"                 gnu-gettext\n"
"                 flex\n"
"                 texinfo\n"
"                 texlive-base                 ;per \"make pdf\"\n"
"                 texlive-epsf\n"
"                 gperf\n"
"                 git\n"
"                 gdb\n"
"                 strace\n"
"                 readline\n"
"                 lzip\n"
"                 pkg-config)\n"
"\n"

msgid ""
"           ;; When cross-compiling, a native version of Guile itself is\n"
"           ;; needed.\n"
"           (if (%current-target-system)\n"
"               (list this-package)\n"
"               '())))\n"
"  (inputs\n"
"   (list libffi bash-minimal))\n"
"  (propagated-inputs\n"
"   (list libunistring libgc))\n"
"\n"
msgstr ""
"           ;; Quando si esegue la compilazione incrociata, è necessaria una\n"
"           ;; versione nativa di Guile.\n"
"           (if (%current-target-system)\n"
"               (list this-package)\n"
"               '())))\n"
"  (inputs\n"
"   (list libffi bash-minimal))\n"
"  (propagated-inputs\n"
"   (list libunistring libgc))\n"
"\n"

msgid ""
"  (native-search-paths\n"
"   (list (search-path-specification\n"
"          (variable \"GUILE_LOAD_PATH\")\n"
"          (files '(\"share/guile/site/3.0\")))\n"
"         (search-path-specification\n"
"          (variable \"GUILE_LOAD_COMPILED_PATH\")\n"
"          (files '(\"lib/guile/3.0/site-ccache\")))))\n"
"  (synopsis \"Scheme implementation intended especially for extensions\")\n"
"  (description\n"
"   \"Guile is the GNU Ubiquitous Intelligent Language for Extensions,\n"
"and it's actually a full-blown Scheme implementation!\")\n"
"  (home-page \"https://www.gnu.org/software/guile/\")\n"
"  (license license:lgpl3+))\n"
msgstr ""
"  (native-search-paths\n"
"   (list (search-path-specification\n"
"          (variable \"GUILE_LOAD_PATH\")\n"
"          (files '(\"share/guile/site/3.0\")))\n"
"         (search-path-specification\n"
"          (variable \"GUILE_LOAD_COMPILED_PATH\")\n"
"          (files '(\"lib/guile/3.0/site-ccache\")))))\n"
"  (synopsis \"Implementazione Scheme destinata in particolare alle estensioni\")\n"
"  (description\n"
"   \"Guile è il Linguaggio Intelligente Onnipresente GNU per le Estensioni,\n"
"ed è in realtà un'implementazione Scheme completa!\")\n"
"  (home-page \"https://www.gnu.org/software/guile/\")\n"
"  (license license:lgpl3+))\n"

msgid "Quite a bit of boilerplate, but now someone who'd like to hack on Guile now only needs to run:"
msgstr "Un bel po' di codice standard, ma ora chiunque voglia mettere mano a Guile deve solo eseguire:"

msgid "guix shell\n"
msgstr "guix shell\n"

msgid "That gives them a shell containing all the dependencies of Guile: those listed above, but also @emph{implicit dependencies} such as the GCC tool chain, GNU@ Make, sed, grep, and so on.  @xref{Invoking guix shell,,, guix, GNU Guix Reference Manual}, for more info on @command{guix shell}."
msgstr "Questo fornisce loro una shell contenente tutte le dipendenze di Guile: quelle elencate sopra, ma anche @emph{dipendenze implicite} come la tool chain GCC, GNU Make, sed, grep e così via. @xref{Invocare guix shell,,, guix.it, Manuale di riferimento GNU Guix}, per maggiori informazioni su @command{guix shell}."

msgid "The chef's recommendation"
msgstr "Il consiglio dello chef"

msgid "Our suggestion is to create development environments like this:"
msgstr "Il nostro suggerimento è di creare ambienti di sviluppo come questo:"

msgid "guix shell --container --link-profile\n"
msgstr "guix shell --container --link-profile\n"

msgid "... or, for short:"
msgstr "... o, in breve:"

msgid "guix shell -CP\n"
msgstr "guix shell -CP\n"

msgid "That gives a shell in an isolated container, and all the dependencies show up in @code{$HOME/.guix-profile}, which plays well with caches such as @file{config.cache} (@pxref{Cache Files,,, autoconf, Autoconf}) and absolute file names recorded in generated @code{Makefile}s and the likes. The fact that the shell runs in a container brings peace of mind: nothing but the current directory and Guile's dependencies is visible inside the container; nothing from the system can possibly interfere with your development."
msgstr "Questo fornisce una shell in un contenitore isolato, e tutte le dipendenze appaiono in @code{$HOME/.guix-profile}, che funziona bene con le cache come @file{config.cache} (@pxref{File Cache,,, autoconf, Autoconf}) e i nomi di file assoluti registrati nei @code{Makefile} generati e simili. Il fatto che la shell venga eseguita in un contenitore porta tranquillità: nulla, tranne la directory corrente e le dipendenze di Guile, è visibile all'interno del contenitore; nulla del sistema può interferire con il tuo sviluppo."

msgid "Level 1: Building with Guix"
msgstr "Livello 1: Costruire con Guix"

msgid "Now that we have a package definition (@pxref{Getting Started}), why not also take advantage of it so we can build Guile with Guix? We had left the @code{source} field empty, because @command{guix shell} above only cares about the @emph{inputs} of our package---so it can set up the development environment---not about the package itself."
msgstr "Ora che abbiamo una definizione di pacchetto (@pxref{Getting Started}), perché non approfittarne anche per costruire Guile con Guix? Avevamo lasciato il campo @code{source} vuoto, perché @command{guix shell} si occupa solo degli @emph{inputs} del nostro pacchetto --- in modo da poter configurare l'ambiente di sviluppo --- non del pacchetto stesso."

msgid "To build the package with Guix, we'll need to fill out the @code{source} field, along these lines:"
msgstr "Per costruire il pacchetto con Guix, dovremo compilare il campo @code{source}, seguendo queste linee:"

msgid ""
"(use-modules (guix)\n"
"             (guix git-download)  ;for ‘git-predicate’\n"
"             @dots{})\n"
"\n"
msgstr ""
"(use-modules (guix)\n"
"             (guix git-download)  ;per ‘git-predicate’\n"
"             @dots{})\n"
"\n"

msgid ""
"(define vcs-file?\n"
"  ;; Return true if the given file is under version control.\n"
"  (or (git-predicate (current-source-directory))\n"
"      (const #t)))                                ;not in a Git checkout\n"
"\n"
msgstr ""
"(define vcs-file?\n"
"  ;; Restituisce vero se il file dato è sotto controllo di versione.\n"
"  (or (git-predicate (current-source-directory))\n"
"      (const #t)))                                ;non in un checkout Git\n"
"\n"

msgid ""
"(package\n"
"  (name \"guile\")\n"
"  (version \"3.0.99-git\")                          ;funky version number\n"
"  (source (local-file \".\" \"guile-checkout\"\n"
"                      #:recursive? #t\n"
"                      #:select? vcs-file?))\n"
"  @dots{})\n"
msgstr ""
"(package\n"
"  (name \"guile\")\n"
"  (version \"3.0.99-git\")                          ;numero di versione strano\n"
"  (source (local-file \".\" \"guile-checkout\"\n"
"                      #:recursive? #t\n"
"                      #:select? vcs-file?))\n"
"  @dots{})\n"

msgid "Here's what we changed compared to the previous section:"
msgstr "Ecco cosa abbiamo cambiato rispetto alla sezione precedente:"

msgid "We added @code{(guix git-download)} to our set of imported modules, so we can use its @code{git-predicate} procedure."
msgstr "Abbiamo aggiunto @code{(guix git-download)} al nostro set di moduli importati, in modo da poter utilizzare la sua procedura @code{git-predicate}."

msgid "We defined @code{vcs-file?} as a procedure that returns true when passed a file that is under version control. For good measure, we add a fallback case for when we're not in a Git checkout: always return true."
msgstr "Abbiamo definito @code{vcs-file?} come una procedura che restituisce vero quando le viene passato un file sotto controllo di versione. Per sicurezza, aggiungiamo un caso di fallback per quando non siamo in un checkout Git: restituiamo sempre vero."

msgid "We set @code{source} to a @uref{https://guix.gnu.org/manual/devel/en/html_node/G_002dExpressions.html#index-local_002dfile,@code{local-file}}---a recursive copy of the current directory (@code{\".\"}), limited to files under version control (the @code{#:select?} bit)."
msgstr "Abbiamo impostato @code{source} su un @uref{https://guix.gnu.org/manual/devel/it/html_node/G_002dexpression.html#index-local_002dfile,@code{local-file}} --- una copia ricorsiva della directory corrente (@code{\".\"}), limitata ai file sotto controllo di versione (il pezzo @code{#:select?})."

msgid "From there on, our @file{guix.scm} file serves a second purpose: it lets us build the software with Guix. The whole point of building with Guix is that it's a ``clean'' build---you can be sure nothing from your working tree or system interferes with the build result---and it lets you test a variety of things. First, you can do a plain native build:"
msgstr "Da qui in poi, il nostro file @file{guix.scm} serve a un secondo scopo: ci permette di costruire il software con Guix. Il punto principale della costruzione con Guix è che si tratta di una costruzione ``pulita'' --- puoi essere sicuro che nulla dal tuo albero di lavoro o dal sistema interferisca con il risultato della costruzione --- e ti permette di testare una varietà di cose. Innanzitutto, puoi fare una semplice costruzione nativa:"

msgid "guix build -f guix.scm\n"
msgstr "guix build -f guix.scm\n"

msgid "But you can also build for another system (possibly after setting up @pxref{Daemon Offload Setup, offloading,, guix, GNU Guix Reference Manual} or @pxref{Virtualization Services, transparent emulation,, guix, GNU Guix Reference Manual}):"
msgstr "Ma puoi anche costruire per un altro sistema (eventualmente dopo aver configurato @pxref{Configurazione dello scarico del demone, scaricamento,, guix.it, Manuale di riferimento GNU Guix} o @pxref{Servizi di virtualizzazione, emulazione trasparente,, guix.it, Manuale di riferimento GNU Guix}):"

msgid "guix build -f guix.scm -s aarch64-linux -s riscv64-linux\n"
msgstr "guix build -f guix.scm -s aarch64-linux -s riscv64-linux\n"

msgid "@dots{} or cross-compile:"
msgstr "@dots{} o compilare incrociando:"

msgid "guix build -f guix.scm --target=x86_64-w64-mingw32\n"
msgstr "guix build -f guix.scm --target=x86_64-w64-mingw32\n"

msgid "You can also use @dfn{package transformations} to test package variants (@pxref{Package Transformation Options,,, guix, GNU Guix Reference Manual}):"
msgstr "È inoltre possibile utilizzare le @dfn{trasformazioni di pacchetto} per testare le varianti di pacchetto (@pxref{Opzioni di trasformazione dei pacchetti,,, guix.it, Manuale di riferimento GNU Guix}):"

msgid ""
"# What if we built with Clang instead of GCC?\n"
"guix build -f guix.scm \\\n"
"  --with-c-toolchain=guile@@3.0.99-git=clang-toolchain\n"
"\n"
msgstr ""
"# E se costruissimo con Clang invece di GCC?\n"
"guix build -f guix.scm \\\n"
"  --with-c-toolchain=guile@@3.0.99-git=clang-toolchain\n"
"\n"

msgid ""
"# What about that under-tested configure flag?\n"
"guix build -f guix.scm \\\n"
"  --with-configure-flag=guile@@3.0.99-git=--disable-networking\n"
msgstr ""
"# E quel flag di configurazione poco testato?\n"
"guix build -f guix.scm \\\n"
"  --with-configure-flag=guile@@3.0.99-git=--disable-networking\n"

msgid "Handy!"
msgstr "Comodo!"

msgid "Level 2: The Repository as a Channel"
msgstr "Livello 2: Il Repository come Canale"

msgid "We now have a Git repository containing (among other things) a package definition (@pxref{Building with Guix}).  Can't we turn it into a @dfn{channel} (@pxref{Channels,,, guix, GNU Guix Reference Manual})? After all, channels are designed to ship package definitions to users, and that's exactly what we're doing with our @file{guix.scm}."
msgstr "Ora abbiamo un repository Git contenente (tra le altre cose) una definizione di pacchetto (@pxref{Building with Guix}). Non possiamo trasformarlo in un @dfn{channel} (@pxref{Canali,,, guix.it, Manuale di riferimento GNU Guix})? Dopotutto, i canali sono progettati per spedire le definizioni dei pacchetti agli utenti, ed è esattamente quello che stiamo facendo con il nostro @file{guix.scm}."

msgid "Turns out we can indeed turn it into a channel, but with one caveat: we must create a separate directory for the @code{.scm} file(s) of our channel so that @command{guix pull} doesn't load unrelated @code{.scm} files when someone pulls the channel---and in Guile, there are lots of them! So we'll start like this, keeping a top-level @file{guix.scm} symlink for the sake of @command{guix shell}:"
msgstr "Si scopre che possiamo effettivamente trasformarlo in un canale, ma con una cautela: dobbiamo creare una directory separata per il/i file @code{.scm} del nostro canale in modo che @command{guix pull} non carichi file @code{.scm} non correlati quando qualcuno scarica il canale --- e in Guile ce ne sono molti! Quindi inizieremo così, mantenendo un symlink @file{guix.scm} di primo livello per il bene di @command{guix shell}:"

msgid ""
"mkdir -p .guix/modules\n"
"mv guix.scm .guix/modules/guile-package.scm\n"
"ln -s .guix/modules/guile-package.scm guix.scm\n"
msgstr ""
"mkdir -p .guix/modules\n"
"mv guix.scm .guix/modules/guile-package.scm\n"
"ln -s .guix/modules/guile-package.scm guix.scm\n"

msgid "To make it usable as part of a channel, we need to turn our @file{guix.scm} file into a @dfn{package module} (@pxref{Package Modules,,, guix, GNU Guix Reference Manual}): we do that by changing the @code{use-modules} form at the top to a @code{define-module} form. We also need to actually @emph{export} a package variable, with @code{define-public}, while still returning the package value at the end of the file so we can still use @command{guix shell} and @command{guix build -f guix.scm}. The end result looks like this (not repeating things that haven't changed):"
msgstr "Per renderlo utilizzabile come parte di un canale, dobbiamo trasformare il nostro file @file{guix.scm} in un @dfn{modulo pacchetto} (@pxref{Moduli di pacchetti,,, guix.it, Manuale di riferimento GNU Guix}): lo facciamo cambiando la forma @code{use-modules} in alto in una forma @code{define-module}. Dobbiamo anche effettivamente @emph{export} una variabile pacchetto, con @code{define-public}, pur restituendo il valore del pacchetto alla fine del file in modo da poter ancora usare @command{guix shell} e @command{guix build -f guix.scm}. Il risultato finale assomiglia a questo (non ripetendo cose che non sono cambiate):"

msgid ""
"(define-module (guile-package)\n"
"  #:use-module (guix)\n"
"  #:use-module (guix git-download)   ;for ‘git-predicate’\n"
"  @dots{})\n"
"\n"
msgstr ""
"(define-module (guile-package)\n"
"  #:use-module (guix)\n"
"  #:use-module (guix git-download)   ;per ‘git-predicate’\n"
"  @dots{})\n"
"\n"

msgid ""
"(define vcs-file?\n"
"  ;; Return true if the given file is under version control.\n"
"  (or (git-predicate (dirname (dirname (current-source-directory))))\n"
"      (const #t)))                                ;not in a Git checkout\n"
"\n"
msgstr ""
"(define vcs-file?\n"
"  ;; Restituisce vero se il file dato è sotto controllo di versione.\n"
"  (or (git-predicate (dirname (dirname (current-source-directory))))\n"
"      (const #t)))                                ;non in un checkout Git\n"
"\n"

msgid ""
"(define-public guile\n"
"  (package\n"
"    (name \"guile\")\n"
"    (version \"3.0.99-git\")                          ;funky version number\n"
"    (source (local-file \"../..\" \"guile-checkout\"\n"
"                        #:recursive? #t\n"
"                        #:select? vcs-file?))\n"
"    @dots{}))\n"
"\n"
msgstr ""
"(define-public guile\n"
"  (package\n"
"    (name \"guile\")\n"
"    (version \"3.0.99-git\")                          ;numero di versione strano\n"
"    (source (local-file \"../..\" \"guile-checkout\"\n"
"                        #:recursive? #t\n"
"                        #:select? vcs-file?))\n"
"    @dots{}))\n"
"\n"

msgid ""
";; Return the package object define above at the end of the module.\n"
"guile\n"
msgstr ""
";; Restituisce l'oggetto pacchetto definito sopra alla fine del modulo.\n"
"guile\n"

msgid "We need one last thing: a @uref{https://guix.gnu.org/manual/devel/en/html_node/Package-Modules-in-a-Sub_002ddirectory.html,@code{.guix-channel} file} so Guix knows where to look for package modules in our repository:"
msgstr "Ci serve un'ultima cosa: un file @uref{https://guix.gnu.org/manual/devel/en/html_node/Package-Modules-in-a-Sub_002ddirectory.html,@code{.guix-channel}} in modo che Guix sappia dove cercare i moduli dei pacchetti nel nostro repository:"

msgid ""
";; This file lets us present this repo as a Guix channel.\n"
"\n"
msgstr ""
";; Questo file ci permette di presentare questo repository come un canale Guix.\n"
"\n"

msgid ""
"(channel\n"
"  (version 0)\n"
"  (directory \".guix/modules\"))  ;look for package modules under .guix/modules/\n"
msgstr ""
"(channel\n"
"  (version 0)\n"
"  (directory \".guix/modules\"))  ;cerca i moduli dei pacchetti sotto .guix/modules/\n"

msgid "To recap, we now have these files:"
msgstr "Per ricapitolare, ora abbiamo questi file:"

msgid ""
".\n"
"├── .guix-channel\n"
"├── guix.scm → .guix/modules/guile-package.scm\n"
"└── .guix\n"
"    └── modules\n"
"       └── guile-package.scm\n"
msgstr ""
".\n"
"├── .guix-channel\n"
"├── guix.scm → .guix/modules/guile-package.scm\n"
"└── .guix\n"
"    └── modules\n"
"       └── guile-package.scm\n"

msgid "And that's it: we have a channel! (We could do better and support @uref{https://guix.gnu.org/manual/devel/en/html_node/Specifying-Channel-Authorizations.html,@emph{channel authentication}} so users know they're pulling genuine code. We'll spare you the details here but it's worth considering!) Users can pull from this channel by @uref{https://guix.gnu.org/manual/devel/en/html_node/Specifying-Additional-Channels.html,adding it to @code{~/.config/guix/channels.scm}}, along these lines:"
msgstr "E questo è tutto: abbiamo un canale! (Potremmo fare di meglio e supportare @uref{https://guix.gnu.org/manual/devel/en/html_node/Specifying-Channel-Authorizations.html,@emph{l'autenticazione del canale}} in modo che gli utenti sappiano di scaricare codice autentico. Ti risparmiamo i dettagli qui, ma vale la pena considerarlo!) Gli utenti possono scaricare da questo canale @uref{https://guix.gnu.org/manual/devel/en/html_node/Specifying-Additional-Channels.html,aggiungendolo a @code{~/.config/guix/channels.scm}}, secondo queste linee:"

msgid ""
"(append (list (channel\n"
"                (name 'guile)\n"
"                (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                (branch \"main\")))\n"
"        %default-channels)\n"
msgstr ""
"(append (list (channel\n"
"                (name 'guile)\n"
"                (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                (branch \"main\")))\n"
"        %default-channels)\n"

msgid "After running @command{guix pull}, we can see the new package:"
msgstr "Dopo aver eseguito @command{guix pull}, possiamo vedere il nuovo pacchetto:"

msgid ""
"$ guix describe\n"
"Generation 264  May 26 2023 16:00:35    (current)\n"
"  guile 36fd2b4\n"
"    repository URL: https://git.savannah.gnu.org/git/guile.git\n"
"    branch: main\n"
"    commit: 36fd2b4920ae926c79b936c29e739e71a6dff2bc\n"
"  guix c5bc698\n"
"    repository URL: https://git.guix.gnu.org/guix.git\n"
"    commit: c5bc698e8922d78ed85989985cc2ceb034de2f23\n"
"$ guix package -A ^guile$\n"
"guile   3.0.99-git      out,debug       guile-package.scm:51:4\n"
"guile   3.0.9           out,debug       gnu/packages/guile.scm:317:2\n"
"guile   2.2.7           out,debug       gnu/packages/guile.scm:258:2\n"
"guile   2.2.4           out,debug       gnu/packages/guile.scm:304:2\n"
"guile   2.0.14          out,debug       gnu/packages/guile.scm:148:2\n"
"guile   1.8.8           out             gnu/packages/guile.scm:77:2\n"
"$ guix build guile@@3.0.99-git\n"
"[@dots{}]\n"
"/gnu/store/axnzbl89yz7ld78bmx72vpqp802dwsar-guile-3.0.99-git-debug\n"
"/gnu/store/r34gsij7f0glg2fbakcmmk0zn4v62s5w-guile-3.0.99-git\n"
msgstr ""
"$ guix describe\n"
"Generazione 264  26 maggio 2023 16:00:35    (corrente)\n"
"  guile 36fd2b4\n"
"    URL repository: https://git.savannah.gnu.org/git/guile.git\n"
"    ramo: main\n"
"    commit: 36fd2b4920ae926c79b936c29e739e71a6dff2bc\n"
"  guix c5bc698\n"
"    URL repository: https://git.guix.gnu.org/guix.git\n"
"    commit: c5bc698e8922d78ed85989985cc2ceb034de2f23\n"
"$ guix package -A ^guile$\n"
"guile   3.0.99-git      out,debug       guile-package.scm:51:4\n"
"guile   3.0.9           out,debug       gnu/packages/guile.scm:317:2\n"
"guile   2.2.7           out,debug       gnu/packages/guile.scm:258:2\n"
"guile   2.2.4           out,debug       gnu/packages/guile.scm:304:2\n"
"guile   2.0.14          out,debug       gnu/packages/guile.scm:148:2\n"
"guile   1.8.8           out             gnu/packages/guile.scm:77:2\n"
"$ guix build guile@@3.0.99-git\n"
"[@dots{}]\n"
"/gnu/store/axnzbl89yz7ld78bmx72vpqp802dwsar-guile-3.0.99-git-debug\n"
"/gnu/store/r34gsij7f0glg2fbakcmmk0zn4v62s5w-guile-3.0.99-git\n"

msgid "That's how, as a developer, you get your software delivered directly into the hands of users! No intermediaries, yet no loss of transparency and provenance tracking."
msgstr "È così che, come sviluppatore, consegni il tuo software direttamente nelle mani degli utenti! Nessun intermediario, eppure nessuna perdita di trasparenza e tracciamento della provenienza."

msgid "With that in place, it also becomes trivial for anyone to create Docker images, Deb/RPM packages, or a plain tarball with @command{guix pack} (@pxref{Invoking guix pack,,, guix, GNU Guix Reference Manual}):"
msgstr "Con questo in atto, diventa anche banale per chiunque creare immagini Docker, pacchetti Deb/RPM o un semplice tarball con @command{guix pack} (@pxref{Invocare guix pack,,, guix.it, Manuale di riferimento GNU Guix}):"

msgid ""
"# How about a Docker image of our Guile snapshot?\n"
"guix pack -f docker -S /bin=bin guile@@3.0.99-git\n"
"\n"
msgstr ""
"# Che ne dici di un'immagine Docker del nostro snapshot Guile?\n"
"guix pack -f docker -S /bin=bin guile@@3.0.99-git\n"
"\n"

msgid ""
"# And a relocatable RPM?\n"
"guix pack -f rpm -R -S /bin=bin guile@@3.0.99-git\n"
msgstr ""
"# E un RPM rilocabile?\n"
"guix pack -f rpm -R -S /bin=bin guile@@3.0.99-git\n"

msgid "Bonus: Package Variants"
msgstr "Bonus: Varianti di Pacchetto"

msgid "We now have an actual channel, but it contains only one package (@pxref{The Repository as a Channel}).  While we're at it, we can define @dfn{package variants} (@pxref{Defining Package Variants,,, guix, GNU Guix Reference Manual}) in our @file{guile-package.scm} file, variants that we want to be able to test as Guile developers---similar to what we did above with transformation options. We can add them like so:"
msgstr "Ora abbiamo un canale effettivo, ma contiene un solo pacchetto (@pxref{The Repository as a Channel}). Già che ci siamo, possiamo definire @dfn{varianti di pacchetto} (@pxref{Definire varianti di pacchetto,,, guix.it, Manuale di riferimento GNU Guix}) nel nostro file @file{guile-package.scm}, varianti che vogliamo poter testare come sviluppatori Guile --- in modo simile a quanto fatto sopra con le opzioni di trasformazione. Possiamo aggiungerle così:"

msgid ""
";; This is the ‘.guix/modules/guile-package.scm’ file.\n"
"\n"
msgstr ""
";; Questo è il file «.guix/modules/guile-package.scm».\n"
"\n"

msgid ""
"(define-module (guile-package)\n"
"  @dots{})\n"
"\n"
msgstr ""
"(define-module (guile-package)\n"
"  @dots{})\n"
"\n"

msgid ""
"(define-public guile\n"
"  @dots{})\n"
"\n"
msgstr ""
"(define-public guile\n"
"  @dots{})\n"
"\n"

msgid ""
"(define (package-with-configure-flags p flags)\n"
"  \"Return P with FLAGS as additional 'configure' flags.\"\n"
"  (package/inherit p\n"
"    (arguments\n"
"     (substitute-keyword-arguments (package-arguments p)\n"
"       ((#:configure-flags original-flags #~(list))\n"
"        #~(append #$original-flags #$flags))))))\n"
"\n"
msgstr ""
"(define (package-with-configure-flags p flags)\n"
"  \"Restituisce P con FLAGS come flag 'configure' aggiuntivi.\"\n"
"  (package/inherit p\n"
"    (arguments\n"
"     (substitute-keyword-arguments (package-arguments p)\n"
"       ((#:configure-flags original-flags #~(list))\n"
"        #~(append #$original-flags #$flags))))))\n"
"\n"

msgid ""
"(define-public guile-without-threads\n"
"  (package\n"
"    (inherit (package-with-configure-flags guile\n"
"                                           #~(list \"--without-threads\")))\n"
"    (name \"guile-without-threads\")))\n"
"\n"
msgstr ""
"(define-public guile-without-threads\n"
"  (package\n"
"    (inherit (package-with-configure-flags guile\n"
"                                           #~(list \"--without-threads\")))\n"
"    (name \"guile-without-threads\")))\n"
"\n"

msgid ""
"(define-public guile-without-networking\n"
"  (package\n"
"    (inherit (package-with-configure-flags guile\n"
"                                           #~(list \"--disable-networking\")))\n"
"    (name \"guile-without-networking\")))\n"
"\n"
msgstr ""
"(define-public guile-without-networking\n"
"  (package\n"
"    (inherit (package-with-configure-flags guile\n"
"                                           #~(list \"--disable-networking\")))\n"
"    (name \"guile-without-networking\")))\n"
"\n"

msgid ""
";; Return the package object defined above at the end of the module.\n"
"guile\n"
msgstr ""
";; Restituisce l'oggetto pacchetto definito sopra alla fine del modulo.\n"
"guile\n"

msgid "We can build these variants as regular packages once we've pulled the channel. Alternatively, from a checkout of Guile, we can run a command like this one from the top level:"
msgstr "Possiamo costruire queste varianti come pacchetti regolari una volta che abbiamo scaricato il canale. In alternativa, da un checkout di Guile, possiamo eseguire un comando come questo dal livello superiore:"

msgid "guix build -L $PWD/.guix/modules guile-without-threads\n"
msgstr "guix build -L $PWD/.guix/modules guile-without-threads\n"

msgid "Level 3: Setting Up Continuous Integration"
msgstr "Livello 3: Configurazione dell'Integrazione Continua"

msgid "continuous integration (CI)"
msgstr "integrazione continua (CI)"

msgid "The channel we defined above (@pxref{The Repository as a Channel})  becomes even more interesting once we set up @uref{https://en.wikipedia.org/wiki/Continuous_integration, @dfn{continuous integration}} (CI). There are several ways to do that."
msgstr "Il canale che abbiamo definito sopra (@pxref{The Repository as a Channel}) diventa ancora più interessante una volta che configuriamo @uref{https://it.wikipedia.org/wiki/Integrazione_continua, @dfn{l'integrazione continua}} (CI). Ci sono diversi modi per farlo."

msgid "You can use one of the mainstream continuous integration tools, such as GitLab-CI. To do that, you need to make sure you run jobs in a Docker image or virtual machine that has Guix installed. If we were to do that in the case of Guile, we'd have a job that runs a shell command like this one:"
msgstr "Puoi utilizzare uno degli strumenti di integrazione continua più diffusi, come GitLab-CI. Per farlo, devi assicurarti di eseguire i job in un'immagine Docker o in una macchina virtuale che abbia Guix installato. Se lo facessimo nel caso di Guile, avremmo un job che esegue un comando shell come questo:"

msgid "guix build -L $PWD/.guix/modules guile@@3.0.99-git\n"
msgstr "guix build -L $PWD/.guix/modules guile@@3.0.99-git\n"

msgid "Doing this works great and has the advantage of being easy to achieve on your favorite CI platform."
msgstr "Fare questo funziona alla grande e ha il vantaggio di essere facile da ottenere sulla tua piattaforma CI preferita."

msgid "That said, you'll really get the most of it by using @uref{https://guix.gnu.org/en/cuirass,Cuirass}, a CI tool designed for and tightly integrated with Guix. Using it is more work than using a hosted CI tool because you first need to set it up, but that setup phase is greatly simplified if you use its Guix System service (@pxref{Continuous Integration,,, guix, GNU Guix Reference Manual}).  Going back to our example, we give Cuirass a spec file that goes like this:"
msgstr "Detto questo, otterrai il massimo usandoti di @uref{https://guix.gnu.org/it/cuirass,Cuirass}, uno strumento di CI progettato e strettamente integrato con Guix. Usarlo richiede più lavoro rispetto all'utilizzo di uno strumento di CI ospitato perché devi prima configurarlo, ma quella fase di configurazione è notevolmente semplificata se usi il suo servizio Guix System (@pxref{Integrazione continua,,, guix.it, Manuale di riferimento GNU Guix}). Tornando al nostro esempio, diamo a Cuirass un file di specifica che assomiglia a questo:"

msgid ""
";; Cuirass spec file to build all the packages of the ‘guile’ channel.\n"
"(list (specification\n"
"        (name \"guile\")\n"
"        (build '(channels guile))\n"
"        (channels\n"
"         (append (list (channel\n"
"                         (name 'guile)\n"
"                         (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                         (branch \"main\")))\n"
"                 %default-channels))))\n"
msgstr ""
";; File di specifica Cuirass per costruire tutti i pacchetti del canale «guile».\n"
"(list (specification\n"
"        (name \"guile\")\n"
"        (build '(channels guile))\n"
"        (channels\n"
"         (append (list (channel\n"
"                         (name 'guile)\n"
"                         (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                         (branch \"main\")))\n"
"                 %default-channels))))\n"

msgid "It differs from what you'd do with other CI tools in two important ways:"
msgstr "Differisce da ciò che faresti con altri strumenti di CI in due modi importanti:"

msgid "Cuirass knows it's tracking @emph{two} channels, @code{guile} and @code{guix}. Indeed, our own @code{guile} package depends on many packages provided by the @code{guix} channel---GCC, the GNU libc, libffi, and so on. Changes to packages from the @code{guix} channel can potentially influence our @code{guile} build and this is something we'd like to see as soon as possible as Guile developers."
msgstr "Cuirass sa che sta tracciando @emph{two} canali, @code{guile} e @code{guix}. Infatti, il nostro pacchetto @code{guile} dipende da molti pacchetti forniti dal canale @code{guix} --- GCC, la GNU libc, libffi, e così via. Le modifiche ai pacchetti del canale @code{guix} possono potenzialmente influenzare la nostra build di @code{guile} e questo è qualcosa che vorremmo vedere il prima possibile come sviluppatori Guile."

msgid "Build results are not thrown away: they can be distributed as @dfn{substitutes} so that users of our @code{guile} channel transparently get pre-built binaries! (@pxref{Substitutes,,, guix, GNU Guix Reference Manual}, for background info on substitutes.)"
msgstr "I risultati della costruzione non vengono scartati: possono essere distribuiti come @dfn{sostituti} in modo che gli utenti del nostro canale @code{guile} ottengano in modo trasparente i binari precompilati! (@pxref{Sostituti,,, guix.it, Manuale di riferimento GNU Guix}, per informazioni di base sui sostituti.)"

msgid "From a developer's viewpoint, the end result is this @uref{https://ci.guix.gnu.org/jobset/guile,status page} listing @emph{evaluations}: each evaluation is a combination of commits of the @code{guix} and @code{guile} channels providing a number of @emph{jobs}---one job per package defined in @file{guile-package.scm} times the number of target architectures."
msgstr "Dal punto di vista di uno sviluppatore, il risultato finale è questa @uref{https://ci.guix.gnu.org/jobset/guile,pagina di stato} che elenca le @emph{evaluations}: ogni valutazione è una combinazione di commit dei canali @code{guix} e @code{guile} che fornisce un numero di @emph{job} --- un job per pacchetto definito in @file{guile-package.scm} moltiplicato per il numero di architetture di destinazione."

msgid "As for substitutes, they come for free! As an example, since our @code{guile} jobset is built on ci.guix.gnu.org, which runs @command{guix publish} (@pxref{Invoking guix publish,,, guix, GNU Guix Reference Manual}) in addition to Cuirass, one automatically gets substitutes for @code{guile} builds from ci.guix.gnu.org; no additional work is needed for that."
msgstr "Per quanto riguarda i sostituti, sono gratuiti! Ad esempio, poiché il nostro jobset @code{guile} è costruito su ci.guix.gnu.org, che esegue @command{guix publish} (@pxref{Invocare guix publish,,, guix.it, Manuale di riferimento GNU Guix}) oltre a Cuirass, si ottengono automaticamente i sostituti per le build di @code{guile} da ci.guix.gnu.org; non è necessario alcun lavoro aggiuntivo per questo."

msgid "Bonus: Build manifest"
msgstr "Bonus: Manifest di costruzione"

msgid "The Cuirass spec above is convenient: it builds every package in our channel, which includes a few variants (@pxref{Setting Up Continuous Integration}).  However, this might be insufficiently expressive in some cases: one might want specific cross-compilation jobs, transformations, Docker images, RPM/Deb packages, or even system tests."
msgstr "La specifica Cuirass sopra è comoda: costruisce ogni pacchetto nel nostro canale, che include alcune varianti (@pxref{Setting Up Continuous Integration}). Tuttavia, questo potrebbe essere insufficientemente espressivo in alcuni casi: si potrebbero volere specifici job di cross-compilazione, trasformazioni, immagini Docker, pacchetti RPM/Deb, o persino test di sistema."

msgid "To achieve that, you can write a @dfn{manifest} (@pxref{Writing Manifests,,, guix, GNU Guix Reference Manual}).  The one we have for Guile has entries for the package variants we defined above, as well as additional variants and cross builds:"
msgstr "Per ottenere ciò, puoi scrivere un @dfn{manifest} (@pxref{Scrivere manifesti,,, guix.it, Manuale di riferimento GNU Guix}). Quello che abbiamo per Guile ha voci per le varianti di pacchetto che abbiamo definito sopra, così come varianti aggiuntive e build incrociate:"

msgid ""
";; This is ‘.guix/manifest.scm’.\n"
"\n"
msgstr ""
";; Questo è «.guix/manifest.scm».\n"
"\n"

msgid ""
"(use-modules (guix)\n"
"             (guix profiles)\n"
"             (guile-package))   ;import our own package module\n"
"\n"
msgstr ""
"(use-modules (guix)\n"
"             (guix profiles)\n"
"             (guile-package))   ;importa il nostro modulo pacchetto\n"
"\n"

msgid ""
"(define* (package->manifest-entry* package system\n"
"                                   #:key target)\n"
"  \"Return a manifest entry for PACKAGE on SYSTEM, optionally cross-compiled to\n"
"TARGET.\"\n"
"  (manifest-entry\n"
"    (inherit (package->manifest-entry package))\n"
"    (name (string-append (package-name package) \".\" system\n"
"                         (if target\n"
"                             (string-append \".\" target)\n"
"                             \"\")))\n"
"    (item (with-parameters ((%current-system system)\n"
"                            (%current-target-system target))\n"
"            package))))\n"
"\n"
msgstr ""
"(define* (package->manifest-entry* package system\n"
"                                   #:key target)\n"
"  \"Restituisce una voce di manifest per PACKAGE su SYSTEM, opzionalmente cross-compilato su\n"
"TARGET.\"\n"
"  (manifest-entry\n"
"    (inherit (package->manifest-entry package))\n"
"    (name (string-append (package-name package) \".\" system\n"
"                         (if target\n"
"                             (string-append \".\" target)\n"
"                             \"\")))\n"
"    (item (with-parameters ((%current-system system)\n"
"                            (%current-target-system target))\n"
"            package))))\n"
"\n"

msgid ""
"(define native-builds\n"
"  (manifest\n"
"   (append (map (lambda (system)\n"
"                  (package->manifest-entry* guile system))\n"
"\n"
msgstr ""
"(define native-builds\n"
"  (manifest\n"
"   (append (map (lambda (system)\n"
"                  (package->manifest-entry* guile system))\n"
"\n"

msgid ""
"                '(\"x86_64-linux\" \"i686-linux\"\n"
"                  \"aarch64-linux\" \"armhf-linux\"\n"
"                  \"powerpc64le-linux\"))\n"
"           (map (lambda (guile)\n"
"                  (package->manifest-entry* guile \"x86_64-linux\"))\n"
"                (cons (package\n"
"                        (inherit (package-with-c-toolchain\n"
"                                  guile\n"
"                                  `((\"clang-toolchain\"\n"
"                                     ,(specification->package\n"
"                                       \"clang-toolchain\")))))\n"
"                        (name \"guile-clang\"))\n"
"                      (list guile-without-threads\n"
"                            guile-without-networking\n"
"                            guile-debug\n"
"                            guile-strict-typing))))))\n"
"\n"
msgstr ""
"                '(\"x86_64-linux\" \"i686-linux\"\n"
"                  \"aarch64-linux\" \"armhf-linux\"\n"
"                  \"powerpc64le-linux\"))\n"
"           (map (lambda (guile)\n"
"                  (package->manifest-entry* guile \"x86_64-linux\"))\n"
"                (cons (package\n"
"                        (inherit (package-with-c-toolchain\n"
"                                  guile\n"
"                                  `((\"clang-toolchain\"\n"
"                                     ,(specification->package\n"
"                                       \"clang-toolchain\")))))\n"
"                        (name \"guile-clang\"))\n"
"                      (list guile-without-threads\n"
"                            guile-without-networking\n"
"                            guile-debug\n"
"                            guile-strict-typing))))))\n"
"\n"

msgid ""
"(define cross-builds\n"
"  (manifest\n"
"   (map (lambda (target)\n"
"          (package->manifest-entry* guile \"x86_64-linux\"\n"
"                                    #:target target))\n"
"        '(\"i586-pc-gnu\"\n"
"          \"aarch64-linux-gnu\"\n"
"          \"riscv64-linux-gnu\"\n"
"          \"i686-w64-mingw32\"\n"
"          \"x86_64-linux-gnu\"))))\n"
"\n"
msgstr ""
"(define cross-builds\n"
"  (manifest\n"
"   (map (lambda (target)\n"
"          (package->manifest-entry* guile \"x86_64-linux\"\n"
"                                    #:target target))\n"
"        '(\"i586-pc-gnu\"\n"
"          \"aarch64-linux-gnu\"\n"
"          \"riscv64-linux-gnu\"\n"
"          \"i686-w64-mingw32\"\n"
"          \"x86_64-linux-gnu\"))))\n"
"\n"

msgid "(concatenate-manifests (list native-builds cross-builds))\n"
msgstr "(concatenate-manifests (list native-builds cross-builds))\n"

msgid "We won't go into the details of this manifest; suffice to say that it provides additional flexibility. We now need to tell Cuirass to build this manifest, which is done with a spec slightly different from the previous one:"
msgstr "Non entreremo nei dettagli di questo manifest; basti dire che fornisce flessibilità aggiuntiva. Ora dobbiamo dire a Cuirass di costruire questo manifest, cosa che si fa con una specifica leggermente diversa dalla precedente:"

msgid ""
";; Cuirass spec file to build all the packages of the ‘guile’ channel.\n"
"(list (specification\n"
"        (name \"guile\")\n"
"        (build '(manifest \".guix/manifest.scm\"))\n"
"        (channels\n"
"         (append (list (channel\n"
"                         (name 'guile)\n"
"                         (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                         (branch \"main\")))\n"
"                 %default-channels))))\n"
msgstr ""
";; File di specifica Cuirass per costruire tutti i pacchetti del canale «guile».\n"
"(list (specification\n"
"        (name \"guile\")\n"
"        (build '(manifest \".guix/manifest.scm\"))\n"
"        (channels\n"
"         (append (list (channel\n"
"                         (name 'guile)\n"
"                         (url \"https://git.savannah.gnu.org/git/guile.git\")\n"
"                         (branch \"main\")))\n"
"                 %default-channels))))\n"

msgid "We changed the @code{(build @dots{})} part of the spec to @code{'(manifest \".guix/manifest.scm\")} so that it would pick our manifest, and that's it!"
msgstr "Abbiamo cambiato la parte @code{(build @dots{})} della specifica in @code{'(manifest \".guix/manifest.scm\")} in modo che prelevasse il nostro manifest, e questo è tutto!"

msgid "We picked Guile as the running example in this chapter and you can see the result here:"
msgstr "Abbiamo scelto Guile come esempio in questo capitolo e puoi vedere il risultato qui:"

msgid "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix-channel?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix-channel}};"
msgstr "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix-channel?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix-channel}};"

msgid "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix/modules/guile-package.scm?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix/modules/guile-package.scm}} with the top-level @file{guix.scm} symlink;"
msgstr "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix/modules/guile-package.scm?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix/modules/guile-package.scm}} con il symlink @file{guix.scm} di primo livello;"

msgid "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix/manifest.scm?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix/manifest.scm}}."
msgstr "@uref{https://git.savannah.gnu.org/cgit/guile.git/tree/.guix/manifest.scm?id=cd57379b3df636198d8cd8e76c1bfbc523762e79,@code{.guix/manifest.scm}}."

msgid "These days, repositories are commonly peppered with dot files for various tools: @code{.envrc}, @code{.gitlab-ci.yml}, @code{.github/workflows}, @code{Dockerfile}, @code{.buildpacks}, @code{Aptfile}, @code{requirements.txt}, and whatnot. It may sound like we're proposing a bunch of @emph{additional} files, but in fact those files are expressive enough to @emph{supersede} most or all of those listed above."
msgstr "Al giorno d'oggi, i repository sono spesso cosparsi di file nascosti per vari strumenti: @code{.envrc}, @code{.gitlab-ci.yml}, @code{.github/workflows}, @code{Dockerfile}, @code{.buildpacks}, @code{Aptfile}, @code{requirements.txt}, e così via. Potrebbe sembrare che stiamo proponendo un mucchio di file @emph{additional}, ma in realtà questi file sono sufficientemente espressivi da @emph{sostituire} la maggior parte o tutti quelli elencati sopra."

msgid "With a couple of files, we get support for:"
msgstr "Con un paio di file, otteniamo il supporto per:"

msgid "development environments (@command{guix shell});"
msgstr "ambienti di sviluppo (@command{guix shell});"

msgid "pristine test builds, including for package variants and for cross-compilation (@command{guix build});"
msgstr "build di test pulite, incluse per varianti di pacchetti e per la cross-compilazione (@command{guix build});"

msgid "continuous integration (with Cuirass or with some other tool);"
msgstr "integrazione continua (con Cuirass o con qualche altro strumento);"

msgid "continuous delivery to users (@emph{via} the channel and with pre-built binaries);"
msgstr "consegna continua agli utenti (@emph{via} il canale e con binari precompilati);"

msgid "generation of derivative build artifacts such as Docker images or Deb/RPM packages (@command{guix pack})."
msgstr "generazione di artefatti di build derivati come immagini Docker o pacchetti Deb/RPM (@command{guix pack})."

msgid "This a nice (in our view!) unified tool set for reproducible software deployment, and an illustration of how you as a developer can benefit from it!"
msgstr "Questo è un bel set di strumenti unificato (a nostro avviso!) per il deployment riproducibile del software, e un'illustrazione di come tu, come sviluppatore, puoi trarne beneficio!"

msgid "Guix provides multiple tools to manage environment.  This chapter demonstrate such utilities."
msgstr "Guix fornisce numerosi strumenti per gestire l'ambiente. Questo capitolo illustra tali utilità."

msgid "Guix provides a @samp{direnv} package, which could extend shell after directory change.  This tool could be used to prepare a pure Guix environment."
msgstr "Guix fornisce un pacchetto @samp{direnv}, che potrebbe estendere la shell dopo il cambio di directory. Questo strumento potrebbe essere usato per preparare un ambiente Guix puro."

msgid "The following example provides a shell function for @file{~/.direnvrc} file, which could be used from Guix Git repository in @file{~/src/guix/.envrc} file to setup a build environment similar to described in @pxref{Building from Git,,, guix, GNU Guix Reference Manual}."
msgstr "L'esempio seguente fornisce una funzione di shell per il file @file{~/.direnvrc}, che potrebbe essere utilizzata dal repository Git di Guix nel file @file{~/src/guix/.envrc} per configurare un ambiente di build simile a quello descritto in @pxref{Costruire da Git,,, guix.it, Manuale di riferimento GNU Guix}."

msgid "Create a @file{~/.direnvrc} with a Bash code:"
msgstr "Crea un file @file{~/.direnvrc} con codice Bash:"

msgid ""
"# Thanks <https://github.com/direnv/direnv/issues/73#issuecomment-152284914>\n"
"export_function()\n"
"@{\n"
"  local name=$1\n"
"  local alias_dir=$PWD/.direnv/aliases\n"
"  mkdir -p \"$alias_dir\"\n"
"  PATH_add \"$alias_dir\"\n"
"  local target=\"$alias_dir/$name\"\n"
"  if declare -f \"$name\" >/dev/null; then\n"
"    echo \"#!$SHELL\" > \"$target\"\n"
"    declare -f \"$name\" >> \"$target\" 2>/dev/null\n"
"    # Notice that we add shell variables to the function trigger.\n"
"    echo \"$name \\$*\" >> \"$target\"\n"
"    chmod +x \"$target\"\n"
"  fi\n"
"@}\n"
"\n"
msgstr ""
"# Grazie a <https://github.com/direnv/direnv/issues/73#issuecomment-152284914>\n"
"export_function()\n"
"@{\n"
"  local name=$1\n"
"  local alias_dir=$PWD/.direnv/aliases\n"
"  mkdir -p \"$alias_dir\"\n"
"  PATH_add \"$alias_dir\"\n"
"  local target=\"$alias_dir/$name\"\n"
"  if declare -f \"$name\" >/dev/null; then\n"
"    echo \"#!$SHELL\" > \"$target\"\n"
"    declare -f \"$name\" >> \"$target\" 2>/dev/null\n"
"    # Notare che aggiungiamo variabili di shell al trigger della funzione.\n"
"    echo \"$name \\$*\" >> \"$target\"\n"
"    chmod +x \"$target\"\n"
"  fi\n"
"@}\n"
"\n"

msgid ""
"use_guix()\n"
"@{\n"
"    # Set GitHub token.\n"
"    export GUIX_GITHUB_TOKEN=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n"
"\n"
msgstr ""
"use_guix()\n"
"@{\n"
"    # Imposta il token GitHub.\n"
"    export GUIX_GITHUB_TOKEN=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n"
"\n"

msgid ""
"    # Unset 'GUIX_PACKAGE_PATH'.\n"
"    export GUIX_PACKAGE_PATH=\"\"\n"
"\n"
msgstr ""
"    # Disattiva 'GUIX_PACKAGE_PATH'.\n"
"    export GUIX_PACKAGE_PATH=\"\"\n"
"\n"

msgid ""
"    # Recreate a garbage collector root.\n"
"    gcroots=\"$HOME/.config/guix/gcroots\"\n"
"    mkdir -p \"$gcroots\"\n"
"    gcroot=\"$gcroots/guix\"\n"
"    if [ -L \"$gcroot\" ]\n"
"    then\n"
"        rm -v \"$gcroot\"\n"
"    fi\n"
"\n"
msgstr ""
"    # Ricrea una radice del garbage collector.\n"
"    gcroots=\"$HOME/.config/guix/gcroots\"\n"
"    mkdir -p \"$gcroots\"\n"
"    gcroot=\"$gcroots/guix\"\n"
"    if [ -L \"$gcroot\" ]\n"
"    then\n"
"        rm -v \"$gcroot\"\n"
"    fi\n"
"\n"

msgid ""
"    # Miscellaneous packages.\n"
"    PACKAGES_MAINTENANCE=(\n"
"        direnv\n"
"        git\n"
"        git:send-email\n"
"        git-cal\n"
"        gnupg\n"
"        guile-colorized\n"
"        guile-readline\n"
"        less\n"
"        ncurses\n"
"        openssh\n"
"        xdot\n"
"    )\n"
"\n"
msgstr ""
"    # Pacchetti vari.\n"
"    PACKAGES_MAINTENANCE=(\n"
"        direnv\n"
"        git\n"
"        git:send-email\n"
"        git-cal\n"
"        gnupg\n"
"        guile-colorized\n"
"        guile-readline\n"
"        less\n"
"        ncurses\n"
"        openssh\n"
"        xdot\n"
"    )\n"
"\n"

msgid ""
"    # Environment packages.\n"
"    PACKAGES=(help2man guile-sqlite3 guile-gcrypt)\n"
"\n"
msgstr ""
"    # Pacchetti ambiente.\n"
"    PACKAGES=(help2man guile-sqlite3 guile-gcrypt)\n"
"\n"

msgid ""
"    # Thanks <https://lists.gnu.org/archive/html/guix-devel/2016-09/msg00859.html>\n"
"    eval \"$(guix shell --search-paths --root=\"$gcroot\" --pure \\\n"
"     --development guix $@{PACKAGES[@@]@} $@{PACKAGES_MAINTENANCE[@@]@} \"$@@\")\"\n"
"\n"
msgstr ""
"    # Grazie a <https://lists.gnu.org/archive/html/guix-devel/2016-09/msg00859.html>\n"
"    eval \"$(guix shell --search-paths --root=\"$gcroot\" --pure \\\n"
"     --development guix $@{PACKAGES[@@]@} $@{PACKAGES_MAINTENANCE[@@]@} \"$@@\")\"\n"
"\n"

msgid ""
"    # Predefine configure flags.\n"
"    configure()\n"
"    @{\n"
"        ./configure\n"
"    @}\n"
"    export_function configure\n"
"\n"
msgstr ""
"    # Predefinisci i flag di configurazione.\n"
"    configure()\n"
"    @{\n"
"        ./configure\n"
"    @}\n"
"    export_function configure\n"
"\n"

msgid ""
"    # Run make and optionally build something.\n"
"    build()\n"
"    @{\n"
"        make -j 2\n"
"        if [ $# -gt 0 ]\n"
"        then\n"
"            ./pre-inst-env guix build \"$@@\"\n"
"        fi\n"
"    @}\n"
"    export_function build\n"
"\n"
msgstr ""
"    # Esegui make e opzionalmente costruisci qualcosa.\n"
"    build()\n"
"    @{\n"
"        make -j 2\n"
"        if [ $# -gt 0 ]\n"
"        then\n"
"            ./pre-inst-env guix build \"$@@\"\n"
"        fi\n"
"    @}\n"
"    export_function build\n"
"\n"

msgid ""
"    # Predefine push Git command.\n"
"    push()\n"
"    @{\n"
"        git push --set-upstream origin\n"
"    @}\n"
"    export_function push\n"
"\n"
msgstr ""
"    # Predefinisci il comando Git push.\n"
"    push()\n"
"    @{\n"
"        git push --set-upstream origin\n"
"    @}\n"
"    export_function push\n"
"\n"

msgid ""
"    clear                        # Clean up the screen.\n"
"    git-cal --author='Your Name' # Show contributions calendar.\n"
"\n"
msgstr ""
"    clear                        # Pulisci lo schermo.\n"
"    git-cal --author='Il tuo nome' # Mostra il calendario dei contributi.\n"
"\n"

msgid ""
"    # Show commands help.\n"
"    echo \"\n"
"build          build a package or just a project if no argument provided\n"
"configure      run ./configure with predefined parameters\n"
"push           push to upstream Git repository\n"
"\"\n"
"@}\n"
msgstr ""
"    # Mostra l'aiuto dei comandi.\n"
"    echo \"\n"
"build          costruisce un pacchetto o solo un progetto se non viene fornito alcun argomento\n"
"configure      esegui ./configure con parametri predefiniti\n"
"push           effettua il push al repository Git upstream\n"
"\"\n"
"@}\n"

msgid "Every project containing @file{.envrc} with a string @code{use guix} will have predefined environment variables and procedures."
msgstr "Ogni progetto contenente @file{.envrc} con la stringa @code{use guix} avrà variabili d'ambiente e procedure predefinite."

msgid "Run @command{direnv allow} to setup the environment for the first time."
msgstr "Esegui @command{direnv allow} per configurare l'ambiente per la prima volta."

msgid "cluster installation"
msgstr "installazione cluster"

msgid "high-performance computing, HPC"
msgstr "calcolo ad alte prestazioni, HPC"

msgid "HPC, high-performance computing"
msgstr "HPC, calcolo ad alte prestazioni"

msgid "Guix is appealing to scientists and @acronym{HPC, high-performance computing} practitioners: it makes it easy to deploy potentially complex software stacks, and it lets you do so in a reproducible fashion---you can redeploy the exact same software on different machines and at different points in time."
msgstr "Guix è attraente per gli scienziati e i professionisti dell'@acronym{HPC, calcolo ad alte prestazioni}: semplifica il deployment di stack software potenzialmente complessi e consente di farlo in modo riproducibile, permettendo di ridistribuire esattamente lo stesso software su macchine diverse e in momenti diversi."

msgid "In this chapter we look at how a cluster sysadmin can install Guix for system-wide use, such that it can be used on all the cluster nodes, and discuss the various tradeoffs@footnote{This chapter is adapted from a @uref{https://hpc.guix.info/blog/2017/11/installing-guix-on-a-cluster/, blog post published on the Guix-HPC web site in 2017}.}."
msgstr "In questo capitolo esaminiamo come un amministratore di sistema di un cluster può installare Guix per un uso a livello di sistema, in modo che possa essere utilizzato su tutti i nodi del cluster, e discutiamo i vari compromessi@footnote{Questo capitolo è adattato da un @uref{https://hpc.guix.info/blog/2017/11/installing-guix-on-a-cluster/, post del blog pubblicato sul sito web di Guix-HPC nel 2017}.}"

msgid "Here we assume that the cluster is running a GNU/Linux distro other than Guix System and that we are going to install Guix on top of it."
msgstr "Qui si assume che il cluster stia eseguendo una distribuzione GNU/Linux diversa da Guix System e che installeremo Guix su di essa."

msgid "The recommended approach is to set up one @emph{head node} running @command{guix-daemon} and exporting @file{/gnu/store} over NFS to compute nodes."
msgstr "L'approccio raccomandato è quello di configurare un @emph{nodo head} che esegue @command{guix-daemon} ed esporta @file{/gnu/store} tramite NFS ai nodi di calcolo."

msgid "Remember that @command{guix-daemon} is responsible for spawning build processes and downloads on behalf of clients (@pxref{Invoking guix-daemon,,, guix, GNU Guix Reference Manual}), and more generally accessing @file{/gnu/store}, which contains all the package binaries built by all the users (@pxref{The Store,,, guix, GNU Guix Reference Manual}).  ``Client'' here refers to all the Guix commands that users see, such as @code{guix install}.  On a cluster, these commands may be running on the compute nodes and we'll want them to talk to the head node's @code{guix-daemon} instance."
msgstr "Ricorda che @command{guix-daemon} è responsabile dell'avvio dei processi di costruzione e dei download per conto dei client (@pxref{Invocare guix-daemon,,, guix.it, Manuale di riferimento GNU Guix}), e più in generale dell'accesso a @file{/gnu/store}, che contiene tutti i binari dei pacchetti costruiti da tutti gli utenti (@pxref{Lo store,,, guix.it, Manuale di riferimento GNU Guix}). ``Client'' qui si riferisce a tutti i comandi Guix che gli utenti vedono, come @code{guix install}. Su un cluster, questi comandi potrebbero essere eseguiti sui nodi di calcolo e vorremo che comunicassero con l'istanza @code{guix-daemon} del nodo head."

msgid "To begin with, the head node can be installed following the usual binary installation instructions (@pxref{Binary Installation,,, guix, GNU Guix Reference Manual}).  Thanks to the installation script, this should be quick.  Once installation is complete, we need to make some adjustments."
msgstr "Per iniziare, il nodo head può essere installato seguendo le solite istruzioni di installazione binaria (@pxref{Installazione binaria,,, guix.it, Manuale di riferimento GNU Guix}). Grazie allo script di installazione, questo dovrebbe essere rapido. Una volta completata l'installazione, dobbiamo apportare alcune modifiche."

msgid "Since we want @code{guix-daemon} to be reachable not just from the head node but also from the compute nodes, we need to arrange so that it listens for connections over TCP/IP.  To do that, we'll edit the systemd startup file for @command{guix-daemon}, @file{/etc/systemd/system/guix-daemon.service}, and add a @code{--listen} argument to the @code{ExecStart} line so that it looks something like this:"
msgstr "Poiché vogliamo che @code{guix-daemon} sia raggiungibile non solo dal nodo head ma anche dai nodi di calcolo, dobbiamo fare in modo che ascolti le connessioni su TCP/IP. Per fare ciò, modificheremo il file di avvio di systemd per @command{guix-daemon}, @file{/etc/systemd/system/guix-daemon.service}, e aggiungeremo un argomento @code{--listen} alla riga @code{ExecStart} in modo che assomigli a questo:"

msgid ""
"ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon \\\n"
"    --build-users-group=guixbuild \\\n"
"    --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"
msgstr ""
"ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon \\\n"
"    --build-users-group=guixbuild \\\n"
"    --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"

msgid "ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon --build-users-group=guixbuild --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"
msgstr "ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon --build-users-group=guixbuild --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"

msgid "For these changes to take effect, the service needs to be restarted:"
msgstr "Affinché queste modifiche abbiano effetto, il servizio deve essere riavviato:"

msgid ""
"systemctl daemon-reload\n"
"systemctl restart guix-daemon\n"
msgstr ""
"systemctl daemon-reload\n"
"systemctl restart guix-daemon\n"

msgid "The @code{--listen=0.0.0.0} bit means that @code{guix-daemon} will process @emph{all} incoming TCP connections on port 44146 (@pxref{Invoking guix-daemon,,, guix, GNU Guix Reference Manual}). This is usually fine in a cluster setup where the head node is reachable exclusively from the cluster's local area network---you don't want that to be exposed to the Internet!"
msgstr "Il bit @code{--listen=0.0.0.0} significa che @code{guix-daemon} elaborerà @emph{all} le connessioni TCP in entrata sulla porta 44146 (@pxref{Invocare guix-daemon,,, guix.it, Manuale di riferimento GNU Guix}). Questo di solito va bene in una configurazione cluster in cui il nodo head è raggiungibile esclusivamente dalla rete locale del cluster --- non vuoi che sia esposto a Internet!"

msgid "The next step is to define our NFS exports in @uref{https://linux.die.net/man/5/exports,@file{/etc/exports}} by adding something along these lines:"
msgstr "Il passo successivo è definire le nostre esportazioni NFS in @uref{https://linux.die.net/man/5/exports,@file{/etc/exports}} aggiungendo qualcosa del genere:"

msgid ""
"/gnu/store    *(ro)\n"
"/var/guix     *(rw, async)\n"
"/var/log/guix *(ro)\n"
msgstr ""
"/gnu/store    *(ro)\n"
"/var/guix     *(rw, async)\n"
"/var/log/guix *(ro)\n"

msgid "The @file{/gnu/store} directory can be exported read-only since only @command{guix-daemon} on the master node will ever modify it.  @file{/var/guix} contains @emph{user profiles} as managed by @code{guix package}; thus, to allow users to install packages with @code{guix package}, this must be read-write."
msgstr "La directory @file{/gnu/store} può essere esportata in sola lettura poiché solo @command{guix-daemon} sul nodo master la modificherà. @file{/var/guix} contiene @emph{profili utente} gestiti da @code{guix package}; quindi, per consentire agli utenti di installare pacchetti con @code{guix package}, questo deve essere in lettura-scrittura."

msgid "Users can create as many profiles as they like in addition to the default profile, @file{~/.guix-profile}.  For instance, @code{guix package -p ~/dev/python-dev -i python} installs Python in a profile reachable from the @code{~/dev/python-dev} symlink.  To make sure that this profile is protected from garbage collection---i.e., that Python will not be removed from @file{/gnu/store} while this profile exists---, @emph{home directories should be mounted on the head node} as well so that @code{guix-daemon} knows about these non-standard profiles and avoids collecting software they refer to."
msgstr "Gli utenti possono creare tutti i profili che desiderano oltre al profilo predefinito, @file{~/.guix-profile}. Ad esempio, @code{guix package -p ~/dev/python-dev -i python} installa Python in un profilo raggiungibile dal symlink @code{~/dev/python-dev}. Per assicurarsi che questo profilo sia protetto dalla raccolta della spazzatura --- cioè, che Python non venga rimosso da @file{/gnu/store} finché questo profilo esiste ---, le @emph{directory home dovrebbero essere montate anche sul nodo head} in modo che @code{guix-daemon} sia a conoscenza di questi profili non standard ed eviti di raccogliere il software a cui si riferiscono."

msgid "It may be a good idea to periodically remove unused bits from @file{/gnu/store} by running @command{guix gc} (@pxref{Invoking guix gc,,, guix, GNU Guix Reference Manual}).  This can be done by adding a crontab entry on the head node:"
msgstr "Potrebbe essere una buona idea rimuovere periodicamente i bit inutilizzati da @file{/gnu/store} eseguendo @command{guix gc} (@pxref{Invocare guix gc,,, guix.it, Manuale di riferimento GNU Guix}). Questo può essere fatto aggiungendo una voce crontab sul nodo head:"

msgid "root@@master# crontab -e\n"
msgstr "root@@master# crontab -e\n"

msgid "... with something like this:"
msgstr "... con qualcosa del genere:"

msgid ""
"# Every day at 5AM, run the garbage collector to make sure\n"
"# at least 10 GB are free on /gnu/store.\n"
"0 5 * * 1  /usr/local/bin/guix gc -F10G\n"
msgstr ""
"# Ogni giorno alle 5 del mattino, esegui il garbage collector per assicurarti\n"
"# che ci siano almeno 10 GB liberi su /gnu/store.\n"
"0 5 * * 1  /usr/local/bin/guix gc -F10G\n"

msgid "We're done with the head node! Let's look at compute nodes now."
msgstr "Abbiamo finito con il nodo head! Ora passiamo ai nodi di calcolo."

msgid "First of all, we need compute nodes to mount those NFS directories that the head node exports.  This can be done by adding the following lines to @uref{https://linux.die.net/man/5/fstab,@file{/etc/fstab}}:"
msgstr "Innanzitutto, abbiamo bisogno che i nodi di calcolo montino le directory NFS che il nodo head esporta. Questo può essere fatto aggiungendo le seguenti righe a @uref{https://linux.die.net/man/5/fstab,@file{/etc/fstab}}:"

msgid ""
"@var{head-node}:/gnu/store    /gnu/store    nfs  defaults,_netdev,vers=3 0 0\n"
"@var{head-node}:/var/guix     /var/guix     nfs  defaults,_netdev,vers=3 0 0\n"
"@var{head-node}:/var/log/guix /var/log/guix nfs  defaults,_netdev,vers=3 0 0\n"
msgstr ""
"@var{head-node}:/gnu/store    /gnu/store    nfs  defaults,_netdev,vers=3 0 0\n"
"@var{head-node}:/var/guix     /var/guix     nfs  defaults,_netdev,vers=3 0 0\n"
"@var{head-node}:/var/log/guix /var/log/guix nfs  defaults,_netdev,vers=3 0 0\n"

msgid "... where @var{head-node} is the name or IP address of your head node.  From there on, assuming the mount points exist, you should be able to mount each of these on the compute nodes."
msgstr "... dove @var{head-node} è il nome o l'indirizzo IP del tuo nodo head. Da lì in poi, supponendo che i punti di montaggio esistano, dovresti essere in grado di montare ognuno di questi sui nodi di calcolo."

msgid "Next, we need to provide a default @command{guix} command that users can run when they first connect to the cluster (eventually they will invoke @command{guix pull}, which will provide them with their ``own'' @command{guix} command).  Similar to what the binary installation script did on the head node, we'll store that in @file{/usr/local/bin}:"
msgstr "Successivamente, dobbiamo fornire un comando @command{guix} predefinito che gli utenti possano eseguire quando si connettono per la prima volta al cluster (alla fine invocheranno @command{guix pull}, che fornirà loro il loro ``proprio'' comando @command{guix}). Simile a quanto fatto dallo script di installazione binaria sul nodo head, lo memorizzeremo in @file{/usr/local/bin}:"

msgid ""
"mkdir -p /usr/local/bin\n"
"ln -s /var/guix/profiles/per-user/root/current-guix/bin/guix \\\n"
"      /usr/local/bin/guix\n"
msgstr ""
"mkdir -p /usr/local/bin\n"
"ln -s /var/guix/profiles/per-user/root/current-guix/bin/guix \\\n"
"      /usr/local/bin/guix\n"

msgid "We then need to tell @code{guix} to talk to the daemon running on our master node, by adding these lines to @code{/etc/profile}:"
msgstr "Dobbiamo quindi dire a @code{guix} di comunicare con il demone in esecuzione sul nostro nodo master, aggiungendo queste righe a @code{/etc/profile}:"

msgid ""
"GUIX_DAEMON_SOCKET=\"guix://@var{head-node}\"\n"
"export GUIX_DAEMON_SOCKET\n"
msgstr ""
"GUIX_DAEMON_SOCKET=\"guix://@var{head-node}\"\n"
"export GUIX_DAEMON_SOCKET\n"

msgid "To avoid warnings and make sure @code{guix} uses the right locale, we need to tell it to use locale data provided by Guix (@pxref{Application Setup,,, guix, GNU Guix Reference Manual}):"
msgstr "Per evitare avvisi e assicurarsi che @code{guix} utilizzi la locale corretta, dobbiamo dirgli di usare i dati di locale forniti da Guix (@pxref{Configurazione dell'applicazione,,, guix.it, Manuale di riferimento GNU Guix}):"

msgid ""
"GUIX_LOCPATH=/var/guix/profiles/per-user/root/guix-profile/lib/locale\n"
"export GUIX_LOCPATH\n"
"\n"
msgstr ""
"GUIX_LOCPATH=/var/guix/profiles/per-user/root/guix-profile/lib/locale\n"
"export GUIX_LOCPATH\n"
"\n"

msgid ""
"# Here we must use a valid locale name.  Try \"ls $GUIX_LOCPATH/*\"\n"
"# to see what names can be used.\n"
"LC_ALL=fr_FR.utf8\n"
"export LC_ALL\n"
msgstr ""
"# Qui dobbiamo usare un nome di locale valido. Prova \"ls $GUIX_LOCPATH/*\"\n"
"# per vedere quali nomi possono essere usati.\n"
"LC_ALL=fr_FR.utf8\n"
"export LC_ALL\n"

msgid "For convenience, @code{guix package} automatically generates @file{~/.guix-profile/etc/profile}, which defines all the environment variables necessary to use the packages---@code{PATH}, @code{C_INCLUDE_PATH}, @code{PYTHONPATH}, etc.  Likewise, @command{guix pull} does that under @file{~/.config/guix/current}.  Thus it's a good idea to source both from @code{/etc/profile}:"
msgstr "Per comodità, @code{guix package} genera automaticamente @file{~/.guix-profile/etc/profile}, che definisce tutte le variabili d'ambiente necessarie per utilizzare i pacchetti --- @code{PATH}, @code{C_INCLUDE_PATH}, @code{PYTHONPATH}, ecc. Allo stesso modo, @command{guix pull} lo fa sotto @file{~/.config/guix/current}. Quindi è una buona idea caricare entrambi da @code{/etc/profile}:"

msgid ""
"for GUIX_PROFILE in \"$HOME/.config/guix/current\" \"$HOME/.guix-profile\"\n"
"do\n"
"  if [ -f \"$GUIX_PROFILE/etc/profile\" ]; then\n"
"    . \"$GUIX_PROFILE/etc/profile\"\n"
"  fi\n"
"done\n"
msgstr ""
"for GUIX_PROFILE in \"$HOME/.config/guix/current\" \"$HOME/.guix-profile\"\n"
"do\n"
"  if [ -f \"$GUIX_PROFILE/etc/profile\" ]; then\n"
"    . \"$GUIX_PROFILE/etc/profile\"\n"
"  fi\n"
"done\n"

msgid "Last but not least, Guix provides command-line completion notably for Bash and zsh.  In @code{/etc/bashrc}, consider adding this line:"
msgstr "Infine, Guix fornisce il completamento della riga di comando, in particolare per Bash e zsh. In @code{/etc/bashrc}, considera di aggiungere questa riga:"

msgid ". /var/guix/profiles/per-user/root/current-guix/etc/bash_completion.d/guix\n"
msgstr ". /var/guix/profiles/per-user/root/current-guix/etc/bash_completion.d/guix\n"

msgid "Voilà!"
msgstr "Ecco fatto!"

msgid "You can check that everything's in place by logging in on a compute node and running:"
msgstr "Puoi verificare che tutto sia a posto accedendo a un nodo di calcolo ed eseguendo:"

msgid "guix install hello\n"
msgstr "guix install hello\n"

msgid "The daemon on the head node should download pre-built binaries on your behalf and unpack them in @file{/gnu/store}, and @command{guix install} should create @file{~/.guix-profile} containing the @file{~/.guix-profile/bin/hello} command."
msgstr "Il demone sul nodo principale dovrebbe scaricare i binari precompilati per tuo conto e decomprimerli in @file{/gnu/store}, e @command{guix install} dovrebbe creare @file{~/.guix-profile} contenente il comando @file{~/.guix-profile/bin/hello}."

msgid "Network Access"
msgstr "Accesso alla Rete"

msgid "Guix requires network access to download source code and pre-built binaries.  The good news is that only the head node needs that since compute nodes simply delegate to it."
msgstr "Guix richiede l'accesso alla rete per scaricare il codice sorgente e i binari precompilati. La buona notizia è che solo il nodo principale ne ha bisogno, poiché i nodi di calcolo si limitano a delegare a esso."

msgid "It is customary for cluster nodes to have access at best to a @emph{white list} of hosts.  Our head node needs at least @code{ci.guix.gnu.org} in this white list since this is where it gets pre-built binaries from by default, for all the packages that are in Guix proper."
msgstr "È consuetudine che i nodi del cluster abbiano accesso, nella migliore delle ipotesi, a una @emph{white list} di host. Il nostro nodo principale ha bisogno almeno di @code{ci.guix.gnu.org} in questa white list, poiché è da qui che ottiene i binari precompilati per impostazione predefinita, per tutti i pacchetti presenti in Guix."

msgid "Incidentally, @code{ci.guix.gnu.org} also serves as a @emph{content-addressed mirror} of the source code of those packages.  Consequently, it is sufficient to have @emph{only} @code{ci.guix.gnu.org} in that white list."
msgstr "Per inciso, @code{ci.guix.gnu.org} funge anche da @emph{mirror con indirizzamento per contenuto} del codice sorgente di tali pacchetti. Di conseguenza, è sufficiente avere @emph{only} @code{ci.guix.gnu.org} in quella white list."

msgid "Software packages maintained in a separate repository such as one of the various @uref{https://hpc.guix.info/channels, HPC channels} are of course unavailable from @code{ci.guix.gnu.org}.  For these packages, you may want to extend the white list such that source and pre-built binaries (assuming this-party servers provide binaries for these packages) can be downloaded.  As a last resort, users can always download source on their workstation and add it to the cluster's @file{/gnu/store}, like this:"
msgstr "I pacchetti software mantenuti in un repository separato, come uno dei vari @uref{https://hpc.guix.info/channels, canali HPC}, non sono disponibili da @code{ci.guix.gnu.org}. Per questi pacchetti, potresti voler estendere la white list in modo che il sorgente e i binari precompilati (supponendo che i server di terze parti forniscano binari per questi pacchetti) possano essere scaricati. Come ultima risorsa, gli utenti possono sempre scaricare il sorgente sulla propria workstation e aggiungerlo a @file{/gnu/store} del cluster, in questo modo:"

msgid ""
"GUIX_DAEMON_SOCKET=ssh://compute-node.example.org \\\n"
"  guix download http://starpu.gforge.inria.fr/files/starpu-1.2.3/starpu-1.2.3.tar.gz\n"
msgstr ""
"GUIX_DAEMON_SOCKET=ssh://compute-node.example.org \\\n"
"  guix download http://starpu.gforge.inria.fr/files/starpu-1.2.3/starpu-1.2.3.tar.gz\n"

msgid "The above command downloads @code{starpu-1.2.3.tar.gz} @emph{and} sends it to the cluster's @code{guix-daemon} instance over SSH."
msgstr "Il comando sopra scarica @code{starpu-1.2.3.tar.gz} @emph{and} lo invia all'istanza @code{guix-daemon} del cluster tramite SSH."

msgid "Air-gapped clusters require more work.  At the moment, our suggestion would be to download all the necessary source code on a workstation running Guix.  For instance, using the @option{--sources} option of @command{guix build} (@pxref{Invoking guix build,,, guix, GNU Guix Reference Manual}), the example below downloads all the source code the @code{openmpi} package depends on:"
msgstr "I cluster isolati richiedono più lavoro. Al momento, il nostro suggerimento sarebbe quello di scaricare tutto il codice sorgente necessario su una workstation che esegue Guix. Ad esempio, usando l'opzione @option{--sources} di @command{guix build} (@pxref{Invocare guix build,,, guix.it, Manuale di riferimento di GNU Guix}), l'esempio seguente scarica tutto il codice sorgente da cui dipende il pacchetto @code{openmpi}:"

msgid ""
"$ guix build --sources=transitive openmpi\n"
"\n"
msgstr ""
"$ guix build --sources=transitive openmpi\n"
"\n"

msgid ""
"@dots{}\n"
"\n"
msgstr ""
"@dots{}\n"
"\n"

msgid ""
"/gnu/store/xc17sm60fb8nxadc4qy0c7rqph499z8s-openmpi-1.10.7.tar.bz2\n"
"/gnu/store/s67jx92lpipy2nfj5cz818xv430n4b7w-gcc-5.4.0.tar.xz\n"
"/gnu/store/npw9qh8a46lrxiwh9xwk0wpi3jlzmjnh-gmp-6.0.0a.tar.xz\n"
"/gnu/store/hcz0f4wkdbsvsdky3c0vdvcawhdkyldb-mpfr-3.1.5.tar.xz\n"
"/gnu/store/y9akh452n3p4w2v631nj0injx7y0d68x-mpc-1.0.3.tar.gz\n"
"/gnu/store/6g5c35q8avfnzs3v14dzl54cmrvddjm2-glibc-2.25.tar.xz\n"
"/gnu/store/p9k48dk3dvvk7gads7fk30xc2pxsd66z-hwloc-1.11.8.tar.bz2\n"
"/gnu/store/cry9lqidwfrfmgl0x389cs3syr15p13q-gcc-5.4.0.tar.xz\n"
"/gnu/store/7ak0v3rzpqm2c5q1mp3v7cj0rxz0qakf-libfabric-1.4.1.tar.bz2\n"
"/gnu/store/vh8syjrsilnbfcf582qhmvpg1v3rampf-rdma-core-14.tar.gz\n"
"…\n"
msgstr ""
"/gnu/store/xc17sm60fb8nxadc4qy0c7rqph499z8s-openmpi-1.10.7.tar.bz2\n"
"/gnu/store/s67jx92lpipy2nfj5cz818xv430n4b7w-gcc-5.4.0.tar.xz\n"
"/gnu/store/npw9qh8a46lrxiwh9xwk0wpi3jlzmjnh-gmp-6.0.0a.tar.xz\n"
"/gnu/store/hcz0f4wkdbsvsdky3c0vdvcawhdkyldb-mpfr-3.1.5.tar.xz\n"
"/gnu/store/y9akh452n3p4w2v631nj0injx7y0d68x-mpc-1.0.3.tar.gz\n"
"/gnu/store/6g5c35q8avfnzs3v14dzl54cmrvddjm2-glibc-2.25.tar.xz\n"
"/gnu/store/p9k48dk3dvvk7gads7fk30xc2pxsd66z-hwloc-1.11.8.tar.bz2\n"
"/gnu/store/cry9lqidwfrfmgl0x389cs3syr15p13q-gcc-5.4.0.tar.xz\n"
"/gnu/store/7ak0v3rzpqm2c5q1mp3v7cj0rxz0qakf-libfabric-1.4.1.tar.bz2\n"
"/gnu/store/vh8syjrsilnbfcf582qhmvpg1v3rampf-rdma-core-14.tar.gz\n"
"...\n"

msgid "(In case you're wondering, that's more than 320@ MiB of @emph{compressed} source code.)"
msgstr "(Nel caso ti stia chiedendo, si tratta di più di 320 MiB di codice sorgente @emph{compressed}.)"

msgid "We can then make a big archive containing all of this (@pxref{Invoking guix archive,,, guix, GNU Guix Reference Manual}):"
msgstr "Possiamo quindi creare un grande archivio contenente tutto questo (@pxref{Invocare guix archive,,, guix.it, Manuale di riferimento di GNU Guix}):"

msgid ""
"$ guix archive --export \\\n"
"    `guix build --sources=transitive openmpi` \\\n"
"    > openmpi-source-code.nar\n"
msgstr ""
"$ guix archive --export \\\n"
"    `guix build --sources=transitive openmpi` \\\n"
"    > openmpi-source-code.nar\n"

msgid "@dots{} and we can eventually transfer that archive to the cluster on removable storage and unpack it there:"
msgstr "@dots{} e possiamo eventualmente trasferire quell'archivio al cluster su memoria rimovibile e decomprimerlo lì:"

msgid "$ guix archive --import < openmpi-source-code.nar\n"
msgstr "$ guix archive --import < openmpi-source-code.nar\n"

msgid "This process has to be repeated every time new source code needs to be brought to the cluster."
msgstr "Questo processo deve essere ripetuto ogni volta che è necessario portare nuovo codice sorgente al cluster."

msgid "As we write this, the research institutes involved in Guix-HPC do not have air-gapped clusters though. If you have experience with such setups, we would like to hear feedback and suggestions."
msgstr "Mentre scriviamo, gli istituti di ricerca coinvolti in Guix-HPC non hanno cluster isolati. Se hai esperienza con tali configurazioni, ci piacerebbe ricevere il tuo feedback e suggerimenti."

msgid "Disk Usage"
msgstr "Utilizzo del Disco"

msgid "disk usage, on a cluster"
msgstr "utilizzo del disco, su un cluster"

msgid "A common concern of sysadmins' is whether this is all going to eat a lot of disk space.  If anything, if something is going to exhaust disk space, it's going to be scientific data sets rather than compiled software---that's our experience with almost ten years of Guix usage on HPC clusters.  Nevertheless, it's worth taking a look at how Guix contributes to disk usage."
msgstr "Una preoccupazione comune degli amministratori di sistema è se tutto questo consumerà molto spazio su disco. Semmai, se qualcosa esaurirà lo spazio su disco, saranno i set di dati scientifici piuttosto che il software compilato --- questa è la nostra esperienza con quasi dieci anni di utilizzo di Guix sui cluster HPC. Ciononostante, vale la pena dare un'occhiata a come Guix contribuisce all'utilizzo del disco."

msgid "First, having several versions or variants of a given package in @file{/gnu/store} does not necessarily cost much, because @command{guix-daemon} implements deduplication of identical files, and package variants are likely to have a number of common files."
msgstr "Innanzitutto, avere diverse versioni o varianti di un dato pacchetto in @file{/gnu/store} non costa necessariamente molto, perché @command{guix-daemon} implementa la deduplicazione di file identici, e le varianti dei pacchetti probabilmente avranno un certo numero di file comuni."

msgid "As mentioned above, we recommend having a cron job to run @code{guix gc} periodically, which removes @emph{unused} software from @file{/gnu/store}. However, there's always a possibility that users will keep lots of software in their profiles, or lots of old generations of their profiles, which is ``live'' and cannot be deleted from the viewpoint of @command{guix gc}."
msgstr "Come accennato in precedenza, consigliamo di avere un cron job per eseguire @code{guix gc} periodicamente, che rimuove il software @emph{unused} da @file{/gnu/store}. Tuttavia, c'è sempre la possibilità che gli utenti mantengano molto software nei loro profili, o molte vecchie generazioni dei loro profili, che è ``vivo'' e non può essere eliminato dal punto di vista di @command{guix gc}."

msgid "The solution to this is for users to regularly remove old generations of their profile. For instance, the following command removes generations that are more than two-month old:"
msgstr "La soluzione a questo è che gli utenti rimuovano regolarmente le vecchie generazioni del loro profilo. Ad esempio, il seguente comando rimuove le generazioni più vecchie di due mesi:"

msgid "guix package --delete-generations=2m\n"
msgstr "guix package --delete-generations=2m\n"

msgid "Likewise, it's a good idea to invite users to regularly upgrade their profile, which can reduce the number of variants of a given piece of software stored in @file{/gnu/store}:"
msgstr "Allo stesso modo, è una buona idea invitare gli utenti ad aggiornare regolarmente il proprio profilo, il che può ridurre il numero di varianti di un dato pezzo di software memorizzato in @file{/gnu/store}:"

msgid ""
"guix pull\n"
"guix upgrade\n"
msgstr ""
"guix pull\n"
"guix upgrade\n"

msgid "As a last resort, it is always possible for sysadmins to do some of this on behalf of their users. Nevertheless, one of the strengths of Guix is the freedom and control users get on their software environment, so we strongly recommend leaving users in control."
msgstr "Come ultima risorsa, è sempre possibile per gli amministratori di sistema fare parte di questo per conto dei loro utenti. Tuttavia, uno dei punti di forza di Guix è la libertà e il controllo che gli utenti ottengono sul loro ambiente software, quindi raccomandiamo vivamente di lasciare gli utenti in controllo."

msgid "Security Considerations"
msgstr "Considerazioni sulla Sicurezza"

msgid "security, on a cluster"
msgstr "sicurezza, su un cluster"

msgid "On an HPC cluster, Guix is typically used to manage scientific software.  Security-critical software such as the operating system kernel and system services such as @code{sshd} and the batch scheduler remain under control of sysadmins."
msgstr "Su un cluster HPC, Guix è tipicamente usato per gestire software scientifico. Software critici per la sicurezza come il kernel del sistema operativo e i servizi di sistema come @code{sshd} e lo scheduler di batch rimangono sotto il controllo degli amministratori di sistema."

msgid "The Guix project has a good track record delivering security updates in a timely fashion (@pxref{Security Updates,,, guix, GNU Guix Reference Manual}).  To get security updates, users have to run @code{guix pull && guix upgrade}."
msgstr "Il progetto Guix ha un buon track record nel fornire aggiornamenti di sicurezza in modo tempestivo (@pxref{Aggiornamenti di sicurezza,,, guix.it, Manuale di riferimento di GNU Guix}). Per ottenere gli aggiornamenti di sicurezza, gli utenti devono eseguire @code{guix pull && guix upgrade}."

msgid "Because Guix uniquely identifies software variants, it is easy to see if a vulnerable piece of software is in use. For instance, to check whether the glibc@ 2.25 variant without the mitigation patch against ``@uref{https://www.qualys.com/2017/06/19/stack-clash/stack-clash.txt,Stack Clash}'', one can check whether user profiles refer to it at all:"
msgstr "Poiché Guix identifica in modo univoco le varianti del software, è facile vedere se un pezzo di software vulnerabile è in uso. Ad esempio, per verificare se la variante glibc@ 2.25 senza la patch di mitigazione contro ``@uref{https://www.qualys.com/2017/06/19/stack-clash/stack-clash.txt,Stack Clash}'', si può controllare se i profili utente vi fanno riferimento in assoluto:"

msgid "guix gc --referrers /gnu/store/…-glibc-2.25\n"
msgstr "guix gc --referrers /gnu/store/…-glibc-2.25\n"

msgid "This will report whether profiles exist that refer to this specific glibc variant."
msgstr "Questo riporterà se esistono profili che fanno riferimento a questa specifica variante di glibc."

msgid "system management"
msgstr "gestione del sistema"

msgid "sysadmin"
msgstr "amministratore di sistema"

msgid "Since Guix does not handle packaging, system configuration and services the way other (more ``classical'') distributions do, some workflows tend to unfold slightly different as we are used to and need slight adjustment.  This chapter intends to help with such manners."
msgstr "Poiché Guix non gestisce il packaging, la configurazione del sistema e i servizi nel modo in cui lo fanno altre distribuzioni (più ``classiche''), alcuni flussi di lavoro tendono a svolgersi in modo leggermente diverso da come siamo abituati e necessitano di un leggero adattamento. Questo capitolo intende aiutare con tali questioni."

msgid "With the deprecation of the default value for the postgres package in postgresql-configuration (see b93434e656eba4260df82158a96c295000d3ff44), system upgrades need some manual action before they can take place.  Here's a handy guide on how to."
msgstr "Con la deprecazione del valore predefinito per il pacchetto postgres in postgresql-configuration (vedi b93434e656eba4260df82158a96c295000d3ff44), gli aggiornamenti di sistema richiedono alcune azioni manuali prima di poter aver luogo. Ecco una pratica guida su come fare."

msgid "Please note that this is a straight-forward way for smaller datasets.  For larger databases @url{https://www.postgresql.org/docs/current/pgupgrade.html, @code{pg_upgrade}} may be the better choice.  Handling the service and system upgrade as described in this guide still applies, though."
msgstr "Si prega di notare che questo è un modo diretto per dataset più piccoli. Per database più grandi @url{https://www.postgresql.org/docs/current/pgupgrade.html, @code{pg_upgrade}} potrebbe essere la scelta migliore. La gestione del servizio e l'aggiornamento del sistema come descritto in questa guida si applicano comunque."

msgid "Stop and disable cuirass."
msgstr "Ferma e disabilita cuirass."

msgid "Prevent the service from starting and failing after a reconfiguration:"
msgstr "Impedisci al servizio di avviarsi e fallire dopo una riconfigurazione:"

msgid "sudo herd stop cuirass && sudo herd disable cuirass"
msgstr "sudo herd stop cuirass && sudo herd disable cuirass"

msgid "Dump the database contents."
msgstr "Scarica il contenuto del database."

msgid "sudo su - postgres -s /bin/sh -c pg_dumpall > /tmp/pg.dump"
msgstr "sudo su - postgres -s /bin/sh -c pg_dumpall > /tmp/pg.dump"

msgid "Add or alter the postgres service."
msgstr "Aggiungi o modifica il servizio postgres."

msgid "Depending on whether your postgres service is defined implicitly (through the dependency from the cuirass service) or its own entry in your operating system's @code{(services)} property, you need to either add or alter the already existing configuration to reflect your intended version upgrade."
msgstr "A seconda che il tuo servizio postgres sia definito implicitamente (tramite la dipendenza dal servizio cuirass) o con una propria voce nella proprietà @code{(services)} del tuo sistema operativo, devi aggiungere o modificare la configurazione esistente per riflettere l'aggiornamento della versione desiderata."

msgid "Be careful not to upgrade directly to postgres-16 -- cuirass service for some reason doesn't like that.  I had to find and purge the relevant files and then re-initialize after a failed upgrade to postgres 16."
msgstr "Fai attenzione a non aggiornare direttamente a postgres-16 -- il servizio cuirass per qualche motivo non lo gradisce. Ho dovuto trovare ed eliminare i file rilevanti e poi reinizializzare dopo un aggiornamento fallito a postgres 16."

msgid ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (postgresql (@@ (gnu packages databases) postgresql-15))))\n"
msgstr ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (postgresql (@@ (gnu packages databases) postgresql-15))))\n"

msgid "Note: If you for some reason didn't read the text here but somewhat blindly followed the examples and @emph{did upgrade to 16}, here's how you reset the state:"
msgstr "Nota: Se per qualche motivo non hai letto il testo qui ma hai seguito ciecamente gli esempi e @emph{hai aggiornato alla versione 16}, ecco come reimpostare lo stato:"

msgid "Delete the database instance files."
msgstr "Elimina i file dell'istanza del database."

msgid "They default to live under @file{/var/lib/postgres/data}."
msgstr "Per impostazione predefinita si trovano in @file{/var/lib/postgres/data}."

msgid "Re-initialize postgres."
msgstr "Reinizializza postgres."

msgid "sudo su - postgres -s /bin/sh -c 'pg_ctl init -D /var/lib/postgres/data'"
msgstr "sudo su - postgres -s /bin/sh -c 'pg_ctl init -D /var/lib/postgres/data'"

msgid "Reconfigure your system."
msgstr "Riconfigura il tuo sistema."

msgid "sudo guix system reconfigure path/to/your/altered/config.scm"
msgstr "sudo guix system reconfigure path/to/your/altered/config.scm"

msgid "Restore database contents."
msgstr "Ripristina il contenuto del database."

msgid "sudo su - postgres -s /bin/sh -c 'psql -d postgres -f /tmp/pg.dump'"
msgstr "sudo su - postgres -s /bin/sh -c 'psql -d postgres -f /tmp/pg.dump'"

msgid "Enable and start the service."
msgstr "Abilita e avvia il servizio."

msgid ""
"sudo herd enable cuirass\n"
"sudo herd start cuirass\n"
msgstr ""
"sudo herd enable cuirass\n"
"sudo herd start cuirass\n"

msgid "Guix is based on the @uref{https://nixos.org/nix/, Nix package manager}, which was designed and implemented by Eelco Dolstra, with contributions from other people (see the @file{nix/AUTHORS} file in Guix.)  Nix pioneered functional package management, and promoted unprecedented features, such as transactional package upgrades and rollbacks, per-user profiles, and referentially transparent build processes.  Without this work, Guix would not exist."
msgstr "Guix è basato sul @uref{https://nixos.org/nix/, gestore di pacchetti Nix}, progettato e implementato da Eelco Dolstra, con contributi di altre persone (vedi il file @file{nix/AUTHORS} in Guix). Nix ha aperto la strada alla gestione funzionale dei pacchetti e ha promosso funzionalità senza precedenti, come gli aggiornamenti e i rollback transazionali dei pacchetti, i profili per utente e i processi di costruzione referenzialmente trasparenti. Senza questo lavoro, Guix non esisterebbe."

msgid "The Nix-based software distributions, Nixpkgs and NixOS, have also been an inspiration for Guix."
msgstr "Le distribuzioni software basate su Nix, Nixpkgs e NixOS, sono state anche un'ispirazione per Guix."

msgid "GNU@tie{}Guix itself is a collective work with contributions from a number of people.  See the @file{AUTHORS} file in Guix for more information on these fine people.  The @file{THANKS} file lists people who have helped by reporting bugs, taking care of the infrastructure, providing artwork and themes, making suggestions, and more---thank you!"
msgstr "GNU@tie{}Guix stesso è un lavoro collettivo con contributi di diverse persone. Consulta il file @file{AUTHORS} in Guix per maggiori informazioni su queste persone. Il file @file{THANKS} elenca le persone che hanno contribuito segnalando bug, curando l'infrastruttura, fornendo grafica e temi, dando suggerimenti e altro ancora --- grazie!"

msgid "This document includes adapted sections from articles that have previously been published on the Guix blog at @uref{https://guix.gnu.org/blog} and on the Guix-HPC blog at @uref{https://hpc.guix.info/blog}."
msgstr "Questo documento include sezioni adattate da articoli precedentemente pubblicati sul blog di Guix all'indirizzo @uref{https://guix.gnu.org/blog} e sul blog di Guix-HPC all'indirizzo @uref{https://hpc.guix.info/blog}."

msgid "license, GNU Free Documentation License"
msgstr "licenza, GNU Free Documentation License"

msgid "fdl-1.3.texi"
msgstr "fdl-1.3.texi"
