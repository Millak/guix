# SOME DESCRIPTIVE TITLE
# Copyright (C) 2021 the authors of Guix (msgids) and the following authors (msgstr)
# This file is distributed under the same license as the guix manual package.
# Marek Felšöci <marek@felsoci.sk>, 2021, 2022, 2023, 2024, 2025.
# Julien Lepiller <fedora-account@lepiller.eu>, 2023.
# Florian Pelz <pelzflorian@pelzflorian.de>, 2024, 2025.
# Weblate Translation Memory <noreply-mt-weblate-translation-memory@weblate.org>, 2024, 2025.
msgid ""
msgstr ""
"Project-Id-Version: guix manual checkout\n"
"Report-Msgid-Bugs-To: bug-guix@gnu.org\n"
"POT-Creation-Date: 2025-10-21 03:18+0000\n"
"PO-Revision-Date: 2025-09-12 11:50+0000\n"
"Last-Translator: pelzflorian <pelzflorian@noreply.codeberg.org>\n"
"Language-Team: Slovak <https://translate.codeberg.org/projects/guix/documentation-cookbook/sk/>\n"
"Language: sk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;\n"
"X-Generator: Weblate 5.13.2\n"

msgid "@documentencoding UTF-8"
msgstr ""
"@documentencoding UTF-8\n"
"@documentlanguage sk"

msgid "GNU Guix Cookbook"
msgstr "Receptár GNU Guix"

msgid "Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license is included in the section entitled ``GNU Free Documentation License''."
msgstr "Tento dokument môžete kopírovať, ďalej šíriť a/alebo upravovať pod podmienkami licencie GNU Free Documentation License vo verzii 1.3 alebo v akejkoľvek novšej verzii, ktorú vydáva Free Software Foundation; bez nemenných oddielov, úvodnej strany a propagačného textu.  Kópia tejto licencie je priložená v oddiele „GNU Free Documentation License“."

msgid "System administration"
msgstr "Správa systému"

msgid "Guix cookbook: (guix-cookbook)"
msgstr "Receptár Guix: (guix-cookbook.sk)"

msgid "Tutorials and examples for GNU Guix."
msgstr "Návody a príklady GNU Guix."

msgid "Tutorials and examples for using the GNU Guix Functional Package Manager"
msgstr "Návody na používanie funkcionálneho správcu balíkov GNU Guix a príklady z praxe"

msgid "The GNU Guix Developers"
msgstr "Vývojári GNU Guix"

msgid "Top"
msgstr "Top"

msgid "This document presents tutorials and detailed examples for GNU@tie{}Guix, a functional package management tool written for the GNU system.  Please @pxref{Top,,, guix, GNU Guix reference manual} for details about the system, its API, and related concepts."
msgstr "Tento dokument obsahuje návody a podrobné príklady použitia GNU@tie{}Guix, funkcionálneho správcu balíkov napísaného pre systém GNU.  Získajte viac podrobností o systéme, jeho API a súvisiacich pojmoch v @pxref{Top,,, guix, GNU Guix reference manual}."

msgid "This manual is also available in Simplified Chinese (@pxref{Top,,, guix-cookbook.zh_CN, GNU Guix 烹饪书}), French (@pxref{Top,,, guix-cookbook.fr, Livre de recettes de GNU Guix}), German (@pxref{Top,,, guix-cookbook.de, GNU-Guix-Kochbuch}), Korean (@pxref{Top,,, guix-cookbook.ko, GNU Guix 쿡북}), Spanish (@pxref{Top,,, guix-cookbook.es, Libro de recetas de GNU Guix}), Italian (@pxref{Top,,, guix-cookbook.it, Ricettario di GNU Guix}), Brazilian Portuguese (@pxref{Top,,, guix-cookbook.pt_BR, Livro de receitas do GNU Guix}), Russian (@pxref{Top,,, guix-cookbook.ru, GNU Guix Рецепты}), Slovak (@pxref{Top,,, guix-cookbook.sk, Receptár GNU Guix}), and Swedish (@pxref{Top,,, guix-cookbook.sv, Kokbok för GNU Guix}).  If you would like to translate this document in your native language, consider joining @uref{https://translate.codeberg.org/projects/guix/documentation-cookbook, Weblate} (@pxref{Translating Guix,,, guix, GNU Guix Reference Manual})."
msgstr "Táto príručka je dostupná aj v angličtine (@pxref{Top,,, guix-cookbook, GNU Guix Cookbook}), čínštine (@pxref{Top,,, guix-cookbook.zh_CN, GNU Guix 烹饪书}), francúzštine (@pxref{Top,,, guix-cookbook.fr, Livre de recettes de GNU Guix}), nemčine (@pxref{Top,,, guix-cookbook.de, GNU-Guix-Kochbuch}), kórejčine (@pxref{Top,,, guix-cookbook.ko, GNU Guix 쿡북}), španielčine (@pxref{Top,,, guix-cookbook.es, Libro de recetas de GNU Guix}), taliančine (@pxref{Top,,, guix-cookbook.it, Ricettario di GNU Guix}), brazílskej portugalčine (@pxref{Top,,, guix-cookbook.pt_BR, Livro de receitas do GNU Guix}), ruštine (@pxref{Top,,, guix-cookbook.ru, GNU Guix Рецепты}) a švédčine (@pxref{Top,,, guix-cookbook.sv, Kokbok för GNU Guix}).  Ak chcete pomôcť s prekladom tohto dokumentu do vášho rodného jazyka, pripojte sa k @uref{https://translate.codeberg.org/projects/guix/documentation-cookbook, Weblate} (@pxref{Translating Guix,,, guix, GNU Guix Reference Manual})."

msgid "Scheme tutorials"
msgstr "Návody na Scheme"

msgid "Meet your new favorite language!"
msgstr "Zoznámte sa s vašim novým najobľúbenejším jazykom!"

msgid "Packaging"
msgstr "Zadávanie balíkov"

msgid "Packaging tutorials"
msgstr "Návody na zadávanie balíkov"

msgid "System Configuration"
msgstr "Nastavenie systému"

msgid "Customizing the GNU System"
msgstr "Prispôsobenie systému GNU"

msgid "Containers"
msgstr "Kontajnery"

msgid "Isolated environments and nested systems"
msgstr "Oddelené prostredia a vnorené systémy"

msgid "Virtual Machines"
msgstr "Virtuálne stroje"

msgid "Virtual machines usage and configuration"
msgstr "Nastavenie a používanie virtuálnych strojov"

msgid "Advanced package management"
msgstr "Pokročilá správa balíkov"

msgid "Power to the users!"
msgstr "Moc pre používateľov!"

msgid "Software Development"
msgstr "Vývoj programového vybavenia"

msgid "Environments, continuous integration, etc."
msgstr "Prostredia, priebežné zaraďovanie, atď."

msgid "Environment management"
msgstr "Správa prostredí"

msgid "Control environment"
msgstr "Kontrolné prostredie"

msgid "Installing Guix on a Cluster"
msgstr "Inštalácia Guixu na zhluk počítačov"

msgid "High-performance computing."
msgstr "Vysokovýkonné počítanie."

msgid "Guix System Management"
msgstr "Správa systému Guix"

msgid "System Management specifics."
msgstr "Osobitosti správy systému."

msgid "Acknowledgments"
msgstr "Poďakovanie"

msgid "Thanks!"
msgstr "Ďakujeme!"

msgid "GNU Free Documentation License"
msgstr "Licencia GNU Free Documentation"

msgid "The license of this document."
msgstr "Licencia, ktorej podlieha tento dokument."

msgid "Concept Index"
msgstr "Zoznam pojmov"

msgid "Concepts."
msgstr "Pojmy."

msgid "--- The Detailed Node Listing ---"
msgstr "--- Podrobný zoznam uzlov ---"

msgid "A Scheme Crash Course"
msgstr "Zrýchlené školenie jazyka Scheme"

msgid "Packaging Tutorial"
msgstr "Návod na zadávanie balíkov"

msgid "A tutorial on how to add packages to Guix."
msgstr "Návod na pridávanie balíkov do Guixu."

msgid "A ``Hello World'' package"
msgstr "Balík „Vitaj svet“"

msgid "Setup"
msgstr "Nastavenie"

msgid "Extended example"
msgstr "Zložitejší príklad"

msgid "Other build systems"
msgstr "Ďalšie zostavovacie systémy"

msgid "Programmable and automated package definition"
msgstr "Programovateľné a automatické zadávanie balíkov"

msgid "Getting help"
msgstr "Získavanie pomoci"

msgid "Conclusion"
msgstr "Záver"

msgid "References"
msgstr "Odkazy"

msgid "Local file"
msgstr "Miestny súbor"

msgid "Channels"
msgstr "Kanály"

msgid "Direct checkout hacking"
msgstr "Priamy zásah do git repozitára"

msgid "Recursive importers"
msgstr "Rekurzívne nahrávače"

msgid "Automatic update"
msgstr "Automatické aktualizácie"

msgid "Inheritance"
msgstr "Dedičnosť"

msgid "Auto-Login to a Specific TTY"
msgstr "Automatické pripojenie k určitému TTY"

msgid "Automatically Login a User to a Specific TTY"
msgstr "Automaticky pripojiť používateľa k určitému TTY"

msgid "Customizing the Kernel"
msgstr "Prispôsobenie jadra"

msgid "Creating and using a custom Linux kernel on Guix System."
msgstr "Vytvorenie a používanie vlastného Linuxového jadra v systéme Guix."

msgid "Guix System Image API"
msgstr "API pre vytváranie obrazov systému Guix"

msgid "Customizing images to target specific platforms."
msgstr "Prispôsobenie obrazov nezvyčajným platformám."

msgid "Using security keys"
msgstr "Používanie bezpečnostných kľúčov"

msgid "How to use security keys with Guix System."
msgstr "Ako používať bezpečnostné kľúče so systémom Guix."

msgid "Dynamic DNS mcron job"
msgstr "mcron úloha pre dynamický DNS"

msgid "Job to update the IP address behind a DuckDNS host name."
msgstr "Úloha na aktualizovanie IP adresy v pozadí názvu hostiteľa DuckDNS."

msgid "Connecting to Wireguard VPN"
msgstr "Pripojenie k Wireguard VPN"

msgid "Connecting to a Wireguard VPN."
msgstr "Pripojenie k Wireguard VPN sieti."

msgid "Customizing a Window Manager"
msgstr "Prispôsobenie správcu okien"

msgid "Handle customization of a Window manager on Guix System."
msgstr "Spravovať prispôsobenie správcu okien v systéme Guix."

msgid "Running Guix on a Linode Server"
msgstr "Spúšťanie Guixu na serveri Linode"

msgid "Running Guix on a Linode Server."
msgstr "Spúšťanie Guixu na serveri Linode."

msgid "Running Guix on a Kimsufi Server"
msgstr "Spúšťanie Guixu na Kimsufi serveri"

msgid "Running Guix on a Kimsufi Server."
msgstr "Spúšťanie Guixu na Kimsufi serveri."

msgid "Setting up a bind mount"
msgstr "Nastavenie podvojného pripojenia"

msgid "Setting up a bind mount in the file-systems definition."
msgstr "Nastavenie podvojného pripojenia v zadaní systému súborov."

msgid "Getting substitutes from Tor"
msgstr "Získavanie náhrad prostredníctvom Tor"

msgid "Configuring Guix daemon to get substitutes through Tor."
msgstr "Nastavenie démona Guix na získavanie náhrad cez Tor."

msgid "Setting up NGINX with Lua"
msgstr "Nastavenia NGINX a Lua"

msgid "Configuring NGINX web-server to load Lua modules."
msgstr "Nastavenie web-servera NGINX na načítavanie Lua modulov."

msgid "Music Server with Bluetooth Audio"
msgstr "Hudobný server so zvukom cez Bluetooth"

msgid "Headless music player with Bluetooth output."
msgstr "Bezobrazovkový prehrávač hudby s Bluetooth výstupom."

msgid "StumpWM"
msgstr "StumpWM"

msgid "Session lock"
msgstr "Uzamykanie sedenia"

msgid "Xorg"
msgstr "Xorg"

msgid "Guix Containers"
msgstr "Kontajnery Guix"

msgid "Perfectly isolated environments"
msgstr "Dokonale oddelené prostredia"

msgid "Guix System Containers"
msgstr "Kontajnery systému Guix"

msgid "A system inside your system"
msgstr "Systém vo vašom systéme"

msgid "A Database Container"
msgstr "Databázový kontajner"

msgid "Container Networking"
msgstr "Prístup do siete vrámci kontajnera"

msgid "Network bridge for QEMU"
msgstr "Sieťový most pre QEMU"

msgid "Routed network for libvirt"
msgstr "Smerovaná sieť pre libvirt"

msgid "Guix Profiles in Practice"
msgstr "Profily Guix v praxi"

msgid "Strategies for multiple profiles and manifests."
msgstr "Postupy pre spravovanie viacerých profilov a balíkospisov."

msgid "Basic setup with manifests"
msgstr "Základné použitie balíkospisov"

msgid "Required packages"
msgstr "Požadované balíky"

msgid "Default profile"
msgstr "Predvolený profil"

msgid "The benefits of manifests"
msgstr "Výhody balíkospisov"

msgid "Reproducible profiles"
msgstr "Opakovateľné profily"

msgid "Getting Started"
msgstr "Začíname"

msgid "Step 0: using `guix shell'."
msgstr "Krok 0: použitie „guix shell“."

msgid "Building with Guix"
msgstr "Zostavovanie s Guixom"

msgid "Step 1: building your code."
msgstr "Krok 1: zostavenie vášho kódu."

msgid "The Repository as a Channel"
msgstr "Repozitár ako kanál"

msgid "Step 2: turning the repo in a channel."
msgstr "Krok 2: premena repozitára na kanál."

msgid "Package Variants"
msgstr "Obmeny balíkov"

msgid "Bonus: Defining variants."
msgstr "Prídavok: Zadávanie obmien."

msgid "Setting Up Continuous Integration"
msgstr "Nastavenie priebežného zaraďovania"

msgid "Step 3: continuous integration."
msgstr "Krok 3: priebežné zaraďovanie."

msgid "Build Manifest"
msgstr "Zostavovací balíkospis"

msgid "Bonus: Manifest."
msgstr "Prídavok: Balíkospis."

msgid "Wrapping Up"
msgstr "Zhrnutie"

msgid "Recap."
msgstr "Súhrn."

msgid "Guix environment via direnv"
msgstr "Guix prostredie cez direnv"

msgid "Setup Guix environment with direnv"
msgstr "Vytvoriť Guix prostredie pomocou direnv"

msgid "Setting Up a Head Node"
msgstr "Nastavenie hlavného uzla"

msgid "The node that runs the daemon."
msgstr "Uzol, ktorý spúšťa démona."

msgid "Setting Up Compute Nodes"
msgstr "Nastavenie výpočtových uzlov"

msgid "Client nodes."
msgstr "Klientske uzly."

msgid "Cluster Network Access"
msgstr "Prístup do siete zhluku"

msgid "Dealing with network access restrictions."
msgstr "Správa obmedzení pre vstup do siete."

msgid "Cluster Disk Usage"
msgstr "Využitie diskového priestoru zhluku"

msgid "Disk usage considerations."
msgstr "Úvahy o využití diskového priestoru."

msgid "Cluster Security Considerations"
msgstr "Úvahy o zabezpečení zhluku"

msgid "Keeping the cluster secure."
msgstr "Udržiavanie zhluku v bezpečí."

msgid "Upgrade Postgres for Cuirass"
msgstr "Aktualizovať Postgres pre Cuirass"

msgid "GNU@tie{}Guix is written in the general purpose programming language Scheme, and many of its features can be accessed and manipulated programmatically.  You can use Scheme to generate package definitions, to modify them, to build them, to deploy whole operating systems, etc."
msgstr "GNU@tie{}Guix je zapísaný v programovacom jazyku Scheme. K mnohým jeho súčastiam je možné pristupovať a upravovať ich prostredníctvom programovania.  Pomocou jazyka Scheme môžete zadávať, upravovať a zostavovať balíky, nasadzovať celé operačné systémy, atď."

msgid "Knowing the basics of how to program in Scheme will unlock many of the advanced features Guix provides --- and you don't even need to be an experienced programmer to use them!"
msgstr "Poznať základy programovania v jazyku Scheme vám otvorí dvere k množstvu pokročilých súčastí, ktoré Guix ponúka --- a to ani nemusíte byť skúseným vývojárom, aby ste ich mohli využívať!"

msgid "Let's get started!"
msgstr "Poďme na to!"

msgid "Scheme, crash course"
msgstr "Scheme, rýchlokurz"

msgid "Guix uses the Guile implementation of Scheme.  To start playing with the language, install it with @code{guix install guile} and start a @dfn{REPL}---short for @uref{https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop, @dfn{read-eval-print loop}}---by running @code{guile} from the command line."
msgstr "Guix používa Guile implementáciu jazyka Scheme. Ak si chcete tento jazyk vyskúšať, nainštalujte si Guile pomocou @code{guix install guile} a spustite @dfn{REPL}, tzv. @uref{https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop, @dfn{slučku čítaj-vykonaj-zobraz}}, zadaním @code{guile} v príkazovom riadku."

msgid "Alternatively you can also run @code{guix shell guile -- guile} if you'd rather not have Guile installed in your user profile."
msgstr "Môžete tiež použiť príkaz @code{guix shell guile -- guile} ak nechcete inštalovať Guile do vášho používateľského profilu."

msgid "In the following examples, lines show what you would type at the REPL; lines starting with ``@result{}'' show evaluation results, while lines starting with ``@print{}'' show things that get printed.  @xref{Using Guile Interactively,,, guile, GNU Guile Reference Manual}, for more details on the REPL."
msgstr "Riadky v nasledovných príkladoch znázorňujú to, čo treba zadať v rámci REPL; riadky začínajúce na „@result{}“ znázorňujú výsledok vykonania príkazu, zatiaľ čo riadky začínajúce na „@print{}“ znázorňujú to čo sa zobrazí na obrazovke. @xref{Using Guile Interactively,,, guile, GNU Guile Reference Manual}, pre viac podrobností o REPL."

msgid "Scheme syntax boils down to a tree of expressions (or @emph{s-expression} in Lisp lingo).  An expression can be a literal such as numbers and strings, or a compound which is a parenthesized list of compounds and literals.  @code{#true} and @code{#false} (abbreviated @code{#t} and @code{#f}) stand for the Booleans ``true'' and ``false'', respectively."
msgstr "Skladbu jazyka Scheme si možno predstaviť ako strom výrazov (alebo ako @emph{s-expression} v jazyku Lisp). Výrazom môže byť priama konštanta, napr. číselná hodnota či reťazec znakov, alebo môže predstavovať zoznam iných zložených prvkov a priamych konštánt ohraničený v zátvorkách. @code{#true} a @code{#false} (skrátene @code{#t} a @code{#f}) znázorňujú logické hodnoty „pravda“ a „nepravda“."

msgid "Examples of valid expressions:"
msgstr "Príklady platných výrazov:"

msgid ""
"\"Hello World!\"\n"
"@result{} \"Hello World!\"\n"
"\n"
msgstr ""
"\"Ahoj svet!\"\n"
"@result{} \"Ahoj svet!\"\n"
"\n"

msgid ""
"17\n"
"@result{} 17\n"
"\n"
msgstr ""
"17\n"
"@result{} 17\n"
"\n"

msgid ""
"(display (string-append \"Hello \" \"Guix\" \"\\n\"))\n"
"@print{} Hello Guix!\n"
"@result{} #<unspecified>\n"
msgstr ""
"(display (string-append \"Ahoj \" \"Guix\" \"\\n\"))\n"
"@print{} Ahoj Guix!\n"
"@result{} #<unspecified>\n"

msgid "This last example is a function call nested in another function call.  When a parenthesized expression is evaluated, the first term is the function and the rest are the arguments passed to the function.  Every function returns the last evaluated expression as its return value."
msgstr "Tento posledný príklad znázorňuje volanie funkcie vnorené do iného volania funkcie. Pri vykonávaní výrazu v zátvorkách predstavuje prvá položka funkciu a zvyšok sú parametre volania. Návratová hodnota každej funkcie je výsledok vykonania posledného výrazu v nej."

msgid "Anonymous functions---@dfn{procedures} in Scheme parlance---are declared with the @code{lambda} term:"
msgstr "Bezmenné funkcie, alebo @dfn{postupy}, vo výrazive jazyka Scheme, sa zadávajú pomocou člena @code{lambda}:"

msgid ""
"(lambda (x) (* x x))\n"
"@result{} #<procedure 120e348 at <unknown port>:24:0 (x)>\n"
msgstr ""
"(lambda (x) (* x x))\n"
"@result{} #<procedure 120e348 at <unknown port>:24:0 (x)>\n"

msgid "The above procedure returns the square of its argument.  Since everything is an expression, the @code{lambda} expression returns an anonymous procedure, which can in turn be applied to an argument:"
msgstr "Vyššie uvedená funkcia vracia druhú mocninu hodnoty jej parametra. Keďže všetko sa považuje za výraz, aj výraz @code{lambda} vracia bezmennú funkciu, ktorú je následne možné uplatniť na nejaký parameter:"

msgid ""
"((lambda (x) (* x x)) 3)\n"
"@result{} 9\n"
msgstr ""
"((lambda (x) (* x x)) 3)\n"
"@result{} 9\n"

msgid "Procedures are regular values just like numbers, strings, Booleans, and so on."
msgstr "Postupy sú pravidelné hodnoty, rovnako ako čísla, reťazce, logické veličiny a pod."

msgid "Anything can be assigned a global name with @code{define}:"
msgstr "Všetkému je možné prideliť globálny názov pomocou @code{define}:"

msgid ""
"(define a 3)\n"
"(define square (lambda (x) (* x x)))\n"
"(square a)\n"
"@result{} 9\n"
msgstr ""
"(define a 3)\n"
"(define druha-mocnina (lambda (x) (* x x)))\n"
"(druha-mocnina a)\n"
"@result{} 9\n"

msgid "Procedures can be defined more concisely with the following syntax:"
msgstr "Funkcie možno zadávať aj v kratšom tvare s použitím nasledovnej skladby:"

msgid "(define (square x) (* x x))\n"
msgstr "(define (druha-mocnina x) (* x x))\n"

msgid "A list structure can be created with the @code{list} procedure:"
msgstr "Zoznam je možné vytvoriť pomocou funkcie @code{list}:"

msgid ""
"(list 2 a 5 7)\n"
"@result{} (2 3 5 7)\n"
msgstr ""
"(list 2 a 5 7)\n"
"@result{} (2 3 5 7)\n"

msgid "Standard procedures are provided by the @code{(srfi srfi-1)} module to create and process lists (@pxref{SRFI-1, list processing,, guile, GNU Guile Reference Manual}).  Here are some of the most useful ones in action:"
msgstr "Modul @code{(srfi srfi-1)} ponúka obvyklé postupy na vytváranie a spracovanie zoznamov (@pxref{SRFI-1, list processing,, guile, GNU Guile Reference Manual}).  Viď príklady použitia tých najužitočnejších:"

msgid ""
"(use-modules (srfi srfi-1))  ;import list processing procedures\n"
"\n"
msgstr ""
"(use-modules (srfi srfi-1))  ;načítať postupy na spracovanie zoznamov\n"
"\n"

msgid ""
"(append (list 1 2) (list 3 4))\n"
"@result{} (1 2 3 4)\n"
"\n"
msgstr ""
"(append (list 1 2) (list 3 4))\n"
"@result{} (1 2 3 4)\n"
"\n"

msgid ""
"(map (lambda (x) (* x x)) (list 1 2 3 4))\n"
"@result{} (1 4 9 16)\n"
"\n"
msgstr ""
"(map (lambda (x) (* x x)) (list 1 2 3 4))\n"
"@result{} (1 4 9 16)\n"
"\n"

msgid ""
"(delete 3 (list 1 2 3 4))        @result{} (1 2 4)\n"
"(filter odd? (list 1 2 3 4))     @result{} (1 3)\n"
"(remove even? (list 1 2 3 4))    @result{} (1 3)\n"
"(find number? (list \"a\" 42 \"b\")) @result{} 42\n"
msgstr ""
"(delete 3 (list 1 2 3 4))        @result{} (1 2 4)\n"
"(filter odd? (list 1 2 3 4))     @result{} (1 3)\n"
"(remove even? (list 1 2 3 4))    @result{} (1 3)\n"
"(find number? (list \"a\" 42 \"b\")) @result{} 42\n"

msgid "Notice how the first argument to @code{map}, @code{filter}, @code{remove}, and @code{find} is a procedure!"
msgstr "Všimnite si, že prvým parametrom @code{map}, @code{filter}, @code{remove}, a @code{find} je postup!"

msgid "S-expression"
msgstr "S-výraz"

msgid "The @dfn{quote} disables evaluation of a parenthesized expression, also called an S-expression or ``s-exp'': the first term is not called over the other terms (@pxref{Expression Syntax, quote,, guile, GNU Guile Reference Manual}).  Thus it effectively returns a list of terms."
msgstr "@dfn{quote} (jednoduchá úvodzovka) zabraňuje vykonaniu výrazu v zátvorke, ktorému sa tiež hovorí S-výraz alebo „s-exp“: prvá položka sa nevykoná ako volanie funkcie s ostatnými položkami ako parametrami (@pxref{Expression Syntax, quote,, guile, GNU Guile Reference Manual}). Výsledkom je teda zoznam výrazov."

msgid ""
"'(display (string-append \"Hello \" \"Guix\" \"\\n\"))\n"
"@result{} (display (string-append \"Hello \" \"Guix\" \"\\n\"))\n"
"\n"
msgstr ""
"'(display (string-append \"Ahoj \" \"Guix\" \"\\n\"))\n"
"@result{} (display (string-append \"Ahoj \" \"Guix\" \"\\n\"))\n"
"\n"

msgid ""
"'(2 a 5 7)\n"
"@result{} (2 a 5 7)\n"
msgstr ""
"'(2 a 5 7)\n"
"@result{} (2 a 5 7)\n"

msgid "The @code{quasiquote} (@code{`}, a backquote) disables evaluation of a parenthesized expression until @code{unquote} (@code{,}, a comma)  re-enables it.  Thus it provides us with fine-grained control over what is evaluated and what is not."
msgstr "@code{quasiquote} (@code{`}, obrátená jednoduchá úvodzovka) zabraňuje vykonaniu výrazu v zátvorke dovtedy, kým nie je jeho vykonanie opätovne povolené pomocou @dfn{unquote} (@code{,}, čiarky). Týmto spôsobom dopodrobna rozhodujeme o tom, čo sa vykoná a čo nie."

msgid ""
"`(2 a 5 7 (2 ,a 5 ,(+ a 4)))\n"
"@result{} (2 a 5 7 (2 3 5 7))\n"
msgstr ""
"`(2 a 5 7 (2 ,a 5 ,(+ a 4)))\n"
"@result{} (2 a 5 7 (2 3 5 7))\n"

msgid "Note that the above result is a list of mixed elements: numbers, symbols (here @code{a}) and the last element is a list itself."
msgstr "Všimnite si, že hore uvedený výsledok je zoznam rôznorodých položiek: čísel, znakov (@code{a}) a posledná položka je tiež zoznam."

msgid "G-expressions, syntax"
msgstr "G-výrazy, skladba"

msgid "gexps, syntax"
msgstr "gvýrazy, skladba"

msgid "#~"
msgstr "#~"

msgid "#$"
msgstr "#$"

msgid "gexp"
msgstr "gvýraz"

msgid "ungexp"
msgstr "odgvýraziť"

msgid "Guix defines a variant of S-expressions on steroids called @dfn{G-expressions} or ``gexps'', which come with a variant of @code{quasiquote} and @code{unquote}: @code{#~} (or @code{gexp}) and @code{#$} (or @code{ungexp}).  They let you @emph{stage code for later execution}."
msgstr "Guix zavádza steroidmi napumpovanú podobu S-výrazov, takzvané @dfn{G-výrazy}, alebo „gvýrazy“ (pôvodne „gexps“), prichádzajúce s odnožou @code{quasiquote} a @code{unquote}, teda @code{#~} (alebo @code{gexp}) a @code{#$} (alebo @code{ungexp}), ktoré umožňujú @emph{zaradiť kód na neskoršie vykonanie}."

msgid "For example, you'll encounter gexps in some package definitions where they provide code to be executed during the package build process.  They look like this:"
msgstr "S gvýrazmi sa stretnete, napríklad, v zadaniach niektorých balíkov, kde poskytujú kód, ktorý sa má vykonať až pri zostavovaní balíka.  Vyzerajú takto:"

msgid ""
"(use-modules (guix gexp)           ;so we can write gexps\n"
"             (gnu packages base))  ;for 'coreutils'\n"
"\n"
msgstr ""
"(use-modules (guix gexp)           ;aby sme mohli používať gvýrazy\n"
"             (gnu packages base))  ;kvôli „coreutils“\n"
"\n"

msgid ""
";; Below is a G-expression representing staged code.\n"
"#~(begin\n"
"    ;; Invoke 'ls' from the package defined by the 'coreutils'\n"
"    ;; variable.\n"
"    (system* #$(file-append coreutils \"/bin/ls\") \"-l\")\n"
"\n"
msgstr ""
";; Nasleduje G-výraz zaradzujúci kód na neskoršie vykonanie.\n"
"#~(begin\n"
"    ;; Vykoná „ls“ z balíka určeného premennou\n"
"    ;; „coreutils“.\n"
"    (system* #$(file-append coreutils \"/bin/ls\") \"-l\")\n"
"\n"

msgid ""
"    ;; Create this package's output directory.\n"
"    (mkdir #$output))\n"
msgstr ""
"    ;; Vytvoriť výstupný priečinok tohto balíka.\n"
"    (mkdir #$output))\n"

msgid "@xref{G-Expressions,,, guix, GNU Guix Reference Manual}, for more on gexps."
msgstr "Viď @ref{G-Expressions,,, guix, GNU Guix Reference Manual}, pre viac podrobností o gvýrazoch."

msgid "Multiple variables can be named locally with @code{let} (@pxref{Local Bindings,,, guile, GNU Guile Reference Manual}):"
msgstr "Pomocou @code{let} (@pxref{Local Bindings,,, guile, GNU Guile Reference Manual}) môžeme zadať a pomenovať viacero miestnych premenných:"

msgid ""
"(define x 10)\n"
"(let ((x 2)\n"
"      (y 3))\n"
"  (list x y))\n"
"@result{} (2 3)\n"
"\n"
msgstr ""
"(define x 10)\n"
"(let ((x 2)\n"
"      (y 3))\n"
"  (list x y))\n"
"@result{} (2 3)\n"
"\n"

msgid ""
"x\n"
"@result{} 10\n"
"\n"
msgstr ""
"x\n"
"@result{} 10\n"
"\n"

msgid ""
"y\n"
"@error{} In procedure module-lookup: Unbound variable: y\n"
msgstr ""
"y\n"
"@error{} In procedure module-lookup: Unbound variable: y\n"

msgid "Use @code{let*} to allow later variable declarations to refer to earlier definitions."
msgstr "Ak chcete, aby bolo možné v neskorších zadaniach premenných odkazovať na predtým zadané premenné, použite @code{let*}."

msgid ""
"(let* ((x 2)\n"
"       (y (* x 3)))\n"
"  (list x y))\n"
"@result{} (2 6)\n"
msgstr ""
"(let* ((x 2)\n"
"       (y (* x 3)))\n"
"  (list x y))\n"
"@result{} (2 6)\n"

msgid "@dfn{Keywords} are typically used to identify the named parameters of a procedure.  They are prefixed by @code{#:} (hash, colon) followed by alphanumeric characters: @code{#:like-this}.  @xref{Keywords,,, guile, GNU Guile Reference Manual}."
msgstr "@dfn{Kľúčové slová} sa bežne používajú na stotožnenie pomenovaných parametrov funkcie. Začínajú sa @code{#:} (mriežkou a dvojbodkou), po ktorých nasledujú písmenové či číselné znaky: @code{#:takto}. @xref{Keywords,,, guile, GNU Guile Reference Manual}."

msgid "The percentage @code{%} is typically used for read-only global variables in the build stage.  Note that it is merely a convention, like @code{_} in C.  Scheme treats @code{%} exactly the same as any other letter."
msgstr "Znak percento @code{%} je bežne používaný pre globálne premenné s prístupom len na čítanie počas zostavovania. Všimnite si, že je to len všeobecným zvykom, ako napr. @code{_} v jazyku C. Scheme spracúva  @code{%} ako hocijaký iný znak."

msgid "Modules are created with @code{define-module} (@pxref{Creating Guile Modules,,, guile, GNU Guile Reference Manual}).  For instance"
msgstr "Moduly sa vytvárajú pomocou @code{define-module} (@pxref{Creating Guile Modules,,, guile, GNU Guile Reference Manual}). Napríklad"

msgid ""
"(define-module (guix build-system ruby)\n"
"  #:use-module (guix store)\n"
"  #:export (ruby-build\n"
"            ruby-build-system))\n"
msgstr ""
"(define-module (guix build-system ruby)\n"
"  #:use-module (guix store)\n"
"  #:export (ruby-build\n"
"            ruby-build-system))\n"

msgid "defines the module @code{guix build-system ruby} which must be located in @file{guix/build-system/ruby.scm} somewhere in the Guile load path.  It depends on the @code{(guix store)} module and it exports two variables, @code{ruby-build} and @code{ruby-build-system}."
msgstr "určuje modul @code{guix build-system ruby}, ktorý má byť umiestnený v @file{guix/build-system/ruby.scm} niekde vo vyhľadávacej ceste Guilu. Závisí na module @code{(guix store)} a určuje dve premenné, @code{ruby-build} a @code{ruby-build-system}."

msgid "@xref{Package Modules,,, guix, GNU Guix Reference Manual}, for info on modules that define packages."
msgstr "Viď @ref{Package Modules,,, guix, GNU Guix Reference Manual}, pre viac podrobností o moduloch zadávajúcich balíky."

msgid "Going further"
msgstr "Dozvedieť sa viac"

msgid "Scheme is a language that has been widely used to teach programming and you'll find plenty of material using it as a vehicle.  Here's a selection of documents to learn more about Scheme:"
msgstr "Scheme je jazyk, ktorý sa hojne využíva pri výuke programovania a sú na ňom založené mnohé podklady.  V nasledovných dokumentoch sa môžete o Scheme dozvedieť viac:"

msgid "@uref{https://spritely.institute/static/papers/scheme-primer.html, @i{A Scheme Primer}}, by Christine Lemmer-Webber and the Spritely Institute."
msgstr "@uref{https://spritely.institute/static/papers/scheme-primer.html, @i{A Scheme Primer}}, od Christine Lemmer-Webberovej a Spritely Institute."

msgid "@uref{http://www.troubleshooters.com/codecorn/scheme_guile/hello.htm, @i{Scheme at a Glance}}, by Steve Litt."
msgstr "@uref{http://www.troubleshooters.com/codecorn/scheme_guile/hello.htm, @i{Scheme at a Glance}}, od Steva Litta."

msgid "@uref{https://sarabander.github.io/sicp/, @i{Structure and Interpretation of Computer Programs}}, by Harold Abelson and Gerald Jay Sussman, with Julie Sussman.  Colloquially known as ``SICP'', this book is a reference."
msgstr "@uref{https://sarabander.github.io/sicp/, @i{Structure and Interpretation of Computer Programs}}, od Harolda Abelsona, Geralda Jay Sussmana a Julie Sussmanovej.  Táto knižná príručka je bežne známa ako ``SICP''."

msgid "You can also install it and read it from your computer:"
msgstr "Môžete si ju tiež stiahnuť a prečítať na vašom počítači:"

msgid "You'll find more books, tutorials and other resources at @url{https://schemers.org/}."
msgstr "Ďalšie knihy, návody ako aj iné druhy zdrojov nájdete na @url{https://schemers.org/}."

msgid "packaging"
msgstr "zadávanie balíkov"

msgid "This chapter is dedicated to teaching you how to add packages to the collection of packages that come with GNU Guix.  This involves writing package definitions in Guile Scheme, organizing them in package modules, and building them."
msgstr "Tento oddiel je zameraný na pridávanie nových balíkov do zbierky balíkov GNU Guix, čo zahŕňa zadávanie balíkov v Guile Scheme, ich usporadúvanie do modulov a zostavovanie."

msgid "GNU Guix stands out as the @emph{hackable} package manager, mostly because it uses @uref{https://www.gnu.org/software/guile/, GNU Guile}, a powerful high-level programming language, one of the @uref{https://en.wikipedia.org/wiki/Scheme_%28programming_language%29, Scheme} dialects from the @uref{https://en.wikipedia.org/wiki/Lisp_%28programming_language%29, Lisp family}."
msgstr "GNU Guix sa vyznačuje ako @emph{prispôsobiteľný} správca balíkov hlavne preto, že používa @uref{https://www.gnu.org/software/guile/, GNU Guile}, výkonný vysokoúrovňový programovací jazyk, jedno z nárečí jazyka @uref{https://en.wikipedia.org/wiki/Scheme_%28programming_language%29, Scheme} z jazykovej rodiny @uref{https://en.wikipedia.org/wiki/Lisp_%28programming_language%29, Lispu}."

msgid "Package definitions are also written in Scheme, which empowers Guix in some very unique ways, unlike most other package managers that use shell scripts or simple languages."
msgstr "Zadania balíkov sú rovnako písané v jazyku Scheme, čo dáva Guixu jedinečnú výhodu v porovnaní s ostatnými správcami balíkov, ktoré používajú skripty shellu alebo jednoduché programovacie jazyky."

msgid "Use functions, structures, macros and all of Scheme expressiveness for your package definitions."
msgstr "Vo vašich zadaniach balíkov môžete využiť funkcie, štruktúry, makrá a všetku schopnosť vyjadrovania jazyka Scheme."

msgid "Inheritance makes it easy to customize a package by inheriting from it and modifying only what is needed."
msgstr "Dedičnosť zjednodušuje prispôsobovanie balíka tým, že umožňuje zdediť vybraný jestvujúci balík a upraviť len to čo je potrebné."

msgid "Batch processing: the whole package collection can be parsed, filtered and processed.  Building a headless server with all graphical interfaces stripped out? It's possible.  Want to rebuild everything from source using specific compiler optimization flags? Pass the @code{#:make-flags \"...\"} argument to the list of packages.  It wouldn't be a stretch to think @uref{https://wiki.gentoo.org/wiki/USE_flag, Gentoo USE flags} here, but this goes even further: the changes don't have to be thought out beforehand by the packager, they can be @emph{programmed} by the user!"
msgstr "Dávkové spracovanie: celú zbierku balíkov je možné načítať, prefiltrovať a spracovať. Potrebujete zostaviť server bez grafického rozhrania? Dá sa to. Potrebujete opätovne zostaviť všetko zo zdrojových súborov s použitím odlišných optimalizačných príznakov? Pridajte parameter @code{#:make-flags \"...\"} do zoznamu balíkov. Tiež by nebolo od veci spomenúť @uref{https://wiki.gentoo.org/wiki/USE_flag, Gentoo príznak USE}, ale to je na dlhšie: tvorca balíkov nemusí vopred myslieť na tieto zmeny, pretože ich môže neskôr @emph{naprogramovať} koncový používateľ!"

msgid "The following tutorial covers all the basics around package creation with Guix.  It does not assume much knowledge of the Guix system nor of the Lisp language.  The reader is only expected to be familiar with the command line and to have some basic programming knowledge."
msgstr "Nasledovný návod vysvetľuje základy vytvárania balíkov s Guixom. Nepredpokladá žiadnu znalosť systému Guix ani jazyka Lisp. Čitateľ by však mal byť oboznámený s príkazovým riadkom a mať aspoň základnú znalosť programovania."

msgid "The ``Defining Packages'' section of the manual introduces the basics of Guix packaging (@pxref{Defining Packages,,, guix, GNU Guix Reference Manual}).  In the following section, we will partly go over those basics again."
msgstr "Oddiel „Zadávanie balíkov“ v príručke obsahuje základy tvorby balíkov s Guixom (@pxref{Defining Packages,,, guix, GNU Guix Reference Manual}). V nasledovnom oddieli si tieto základy z časti pripomenieme."

msgid "GNU@tie{}Hello is a dummy project that serves as an idiomatic example for packaging.  It uses the GNU build system (@code{./configure && make && make install}).  Guix already provides a package definition which is a perfect example to start with.  You can look up its declaration with @code{guix edit hello} from the command line.  Let's see how it looks:"
msgstr "GNU@tie{}Hello je šablóna projektu, ktorá slúži ako základný príklad zadávania balíkov. Využíva zostavovací systém GNU (@code{./configure && make && make install}). Guix už obsahuje zadanie príslušného balíka, ktoré predstavuje vhodný odrazový bod. Môžete si zadanie balíka prezrieť zadaním @code{guix edit hello} do príkazového riadku. Pozrime sa ako toto zadania balíka vyzerá:"

msgid ""
"(define-public hello\n"
"  (package\n"
"    (name \"hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Hello, GNU world: An example GNU package\")\n"
"    (description\n"
"     \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"
msgstr ""
"(define-public hello\n"
"  (package\n"
"    (name \"hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Hello, GNU world: An example GNU package\")\n"
"    (description\n"
"     \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"

msgid "As you can see, most of it is rather straightforward.  But let's review the fields together:"
msgstr "Ako môžete vidieť, tá najobsiahlejšia časť je dosť jednoduchá. Ale prejdime si spoločne jednotlivé polia:"

msgid "name"
msgstr "name"

msgid "The project name.  Using Scheme conventions, we prefer to keep it lower case, without underscore and using dash-separated words."
msgstr "Názov projektu. Podľa všeobecných zvyklostí ho zapisujeme malými písmenami, bez podčiarkovníkov a s použitím pomlčiek na oddelenie jednotlivých slov."

msgid "source"
msgstr "source"

msgid "This field contains a description of the source code origin.  The @code{origin} record contains these fields:"
msgstr "Toto pole obsahuje popis pôvodu zdrojového kódu. Záznam @code{origin} obsahuje tieto polia:"

msgid "The method, here @code{url-fetch} to download via HTTP/FTP, but other methods"
msgstr "Spôsob, v tomto prípade @code{url-fetch} pre stiahnutie prostredníctvom HTTP/FTP, ale poznáme"

msgid "exist, such as @code{git-fetch} for Git repositories."
msgstr "aj iné spôsoby, ako napr. @code{git-fetch} pre Git repozitáre."

msgid "The URI, which is typically some @code{https://} location for @code{url-fetch}.  Here"
msgstr "Prepojenie (URI), čo obyčajne predstavuje nejaké umiestnenie @code{https://} pre @code{url-fetch}. V tomto prípade"

msgid "the special `mirror://gnu` refers to a set of well known locations, all of which can be used by Guix to fetch the source, should some of them fail."
msgstr "zvláštne „mirror://gnu“ odkazuje na súbor dobre známych umiestnení, ktoré môžu byť všetky použité na získanie zdrojového kódu ak by niektoré z nich nebolo dostupné."

msgid "The @code{sha256} checksum of the requested file.  This is essential to ensure"
msgstr "Kontrolný súčet @code{sha256} požadovaného súboru. Je dôležitý pre zaistenie"

msgid "the source is not corrupted.  Note that Guix works with base32 strings, hence the call to the @code{base32} function."
msgstr "celistvosti zdroja. Všimnite si, že Guix pracuje z base32 reťazcami, čo vysvetľuje použitie funkcie @code{base32}."

msgid "build-system"
msgstr "build-system"

msgid "This is where the power of abstraction provided by the Scheme language really shines: in this case, the @code{gnu-build-system} abstracts away the famous @code{./configure && make && make install} shell invocations.  Other build systems include the @code{trivial-build-system} which does not do anything and requires from the packager to program all the build steps, the @code{python-build-system}, the @code{emacs-build-system}, and many more (@pxref{Build Systems,,, guix, GNU Guix Reference Manual})."
msgstr "Práve tu má príležitosť zažiariť sila všeobecnosti jazyka Scheme: v tomto prípade, @code{gnu-build-system} je zovšeobecnenie známych príkazov shellu @code{./configure && make && make install}. Medzi ďalšie zostavovacie systémy patrí @code{trivial-build-system}, ktorý nerobí nič a necháva na programátorovi, aby zadal všetky potrebné kroky zostavenia, @code{python-build-system}, @code{emacs-build-system} a mnohé ďalšie (@pxref{Build Systems,,, guix, GNU Guix Reference Manual})."

msgid "synopsis"
msgstr "synopsis"

msgid "It should be a concise summary of what the package does.  For many packages a tagline from the project's home page can be used as the synopsis."
msgstr "Toto by mal byť súhrnný popis toho, na čo balík slúži. Pri mnohých balíkoch je vhodné použiť slogan zo stránky príslušného projektu."

msgid "description"
msgstr "description"

msgid "Same as for the synopsis, it's fine to re-use the project description from the homepage.  Note that Guix uses Texinfo syntax."
msgstr "Podobne ako v prípade súhrnného popisu je vhodné použiť popis projektu z jeho domovskej stránky. Všimnite si, že Guix používa značkovanie Texinfo."

msgid "home-page"
msgstr "home-page"

msgid "Use HTTPS if available."
msgstr "Použitie HTTPS prepojenie, ak je dostupné."

msgid "license"
msgstr "license"

msgid "See @code{guix/licenses.scm} in the project source for a full list of available licenses."
msgstr "Viď @code{guix/licenses.scm} v zdrojovom kóde projektu pre zoznam všetkých dostupných licencií."

msgid "Time to build our first package! Nothing fancy here for now: we will stick to a dummy @code{my-hello}, a copy of the above declaration."
msgstr "Nastal čas na zostavenie nášho prvého balíka! Zatiaľ nič zvláštne: spoľahneme sa jednoducho na kópiu vyššie uvedeného zadania @code{my-hello}."

msgid "As with the ritualistic ``Hello World'' taught with most programming languages, this will possibly be the most ``manual'' approach.  We will work out an ideal setup later; for now we will go the simplest route."
msgstr "Tak ako pri rituálnom „Ahoj svet“, ktorý sa vyučuje pri väčšine programovacích jazykov, toto bude ten „najručnejší“ spôsob zadávania balíka, ktorý použijete. Neskôr si ukážeme dokonalejší postup, no zatiaľ sa vyberieme tou najjednoduchšou cestou."

msgid "Save the following to a file @file{my-hello.scm}."
msgstr "Uložte nasledujúci obsah do súboru s názvom @file{my-hello.scm}."

msgid ""
"(use-modules (guix packages)\n"
"             (guix download)\n"
"             (guix build-system gnu)\n"
"             (guix licenses))\n"
"\n"
msgstr ""
"(use-modules (guix packages)\n"
"             (guix download)\n"
"             (guix build-system gnu)\n"
"             (guix licenses))\n"
"\n"

msgid ""
"(package\n"
"  (name \"my-hello\")\n"
"  (version \"2.10\")\n"
"  (source (origin\n"
"            (method url-fetch)\n"
"            (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                \".tar.gz\"))\n"
"            (sha256\n"
"             (base32\n"
"              \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"  (build-system gnu-build-system)\n"
"  (synopsis \"Hello, Guix world: An example custom Guix package\")\n"
"  (description\n"
"   \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"  (home-page \"https://www.gnu.org/software/hello/\")\n"
"  (license gpl3+))\n"
msgstr ""
"(package\n"
"  (name \"my-hello\")\n"
"  (version \"2.10\")\n"
"  (source (origin\n"
"            (method url-fetch)\n"
"            (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                \".tar.gz\"))\n"
"            (sha256\n"
"             (base32\n"
"              \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"  (build-system gnu-build-system)\n"
"  (synopsis \"Hello, Guix world: An example custom Guix package\")\n"
"  (description\n"
"   \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"  (home-page \"https://www.gnu.org/software/hello/\")\n"
"  (license gpl3+))\n"

msgid "We will explain the extra code in a moment."
msgstr "Dodatočné príkazy si vysvetlíme o chvíľu."

msgid "Feel free to play with the different values of the various fields.  If you change the source, you'll need to update the checksum.  Indeed, Guix refuses to build anything if the given checksum does not match the computed checksum of the source code.  To obtain the correct checksum of the package declaration, we need to download the source, compute the sha256 checksum and convert it to base32."
msgstr "Neváhajte a vyskúšajte si, čo sa stane ak zmeníte hodnoty niektorých polí. Ak zmeníte zdroj balíka, budete musieť aktualizovať aj kontrolný súčet. Guix nezostaví nič ak daný kontrolný súčet neodpovedá kontrolnému súčtu zdrojového kódu. Pre získanie správneho kontrolného súčtu potrebujeme stiahnuť zdroj, vypočítať kontrolný súčet sha256 a previesť ho do base32."

msgid "Thankfully, Guix can automate this task for us; all we need is to provide the URI:"
msgstr "Našťastie, Guix to môže urobiť za nás; všetko čo budeme potrebovať je prepojenie (URI) zdroja:"

msgid ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz\n"
"\n"
msgstr ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz\n"
"\n"

msgid ""
"Starting download of /tmp/guix-file.JLYgL7\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz...\n"
"following redirection to `https://mirror.ibcp.fr/pub/gnu/hello/hello-2.10.tar.gz'...\n"
" …10.tar.gz  709KiB                                 2.5MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\n"
msgstr ""
"Starting download of /tmp/guix-file.JLYgL7\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz...\n"
"following redirection to `https://mirror.ibcp.fr/pub/gnu/hello/hello-2.10.tar.gz'...\n"
" …10.tar.gz  709KiB                                 2.5MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\n"

msgid "In this specific case the output tells us which mirror was chosen.  If the result of the above command is not the same as in the above snippet, update your @code{my-hello} declaration accordingly."
msgstr "V tomto konkrétnom prípade nám výstup hovorí, aké zrkadlo bolo vybraté. Ak výsledok tohto príkazu nie je rovnaký ako v predchádzajúcom úryvku, aktualizujte vaše zadanie @code{my-hello} podľa potreby."

msgid "Note that GNU package tarballs come with an OpenPGP signature, so you should definitely check the signature of this tarball with `gpg` to authenticate it before going further:"
msgstr "Všimnite si, že archívy GNU balíkov sú poskytované spolu s OpenPGP podpisom, takže by ste si jednoznačne mali overiť podpis tohto archívu pomocou „gpg“ predtým než budete pokračovať:"

msgid ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz.sig\n"
"\n"
msgstr ""
"$ guix download mirror://gnu/hello/hello-2.10.tar.gz.sig\n"
"\n"

msgid ""
"Starting download of /tmp/guix-file.03tFfb\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz.sig...\n"
"following redirection to `https://ftp.igh.cnrs.fr/pub/gnu/hello/hello-2.10.tar.gz.sig'...\n"
" ….tar.gz.sig  819B                                                                                                                       1.2MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig\n"
"0q0v86n3y38z17rl146gdakw9xc4mcscpk8dscs412j22glrv9jf\n"
"$ gpg --verify /gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig /gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"gpg: Signature made Sun 16 Nov 2014 01:08:37 PM CET\n"
"gpg:                using RSA key A9553245FDE9B739\n"
"gpg: Good signature from \"Sami Kerola <kerolasa@@iki.fi>\" [unknown]\n"
"gpg:                 aka \"Sami Kerola (http://www.iki.fi/kerolasa/) <kerolasa@@iki.fi>\" [unknown]\n"
"gpg: WARNING: This key is not certified with a trusted signature!\n"
"gpg:          There is no indication that the signature belongs to the owner.\n"
"Primary key fingerprint: 8ED3 96E3 7E38 D471 A005  30D3 A955 3245 FDE9 B739\n"
msgstr ""
"Starting download of /tmp/guix-file.03tFfb\n"
"From https://ftpmirror.gnu.org/gnu/hello/hello-2.10.tar.gz.sig...\n"
"following redirection to `https://ftp.igh.cnrs.fr/pub/gnu/hello/hello-2.10.tar.gz.sig'...\n"
" ….tar.gz.sig  819B                                                                                                                       1.2MiB/s 00:00 [##################] 100.0%\n"
"/gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig\n"
"0q0v86n3y38z17rl146gdakw9xc4mcscpk8dscs412j22glrv9jf\n"
"$ gpg --verify /gnu/store/rzs8wba9ka7grrmgcpfyxvs58mly0sx6-hello-2.10.tar.gz.sig /gnu/store/hbdalsf5lpf01x4dcknwx6xbn6n5km6k-hello-2.10.tar.gz\n"
"gpg: Podpis vytvorený Ne 16. november 2014, 13:08:37 CET\n"
"gpg:                pomocou RSA kľúča A9553245FDE9B739\n"
"gpg: Dobrý podpis od \"Sami Kerola <kerolasa@@iki.fi>\" neznáme\n"
"gpg:                 alias \"Sami Kerola (http://www.iki.fi/kerolasa/) <kerolasa@@iki.fi>\" neznáme\n"
"gpg: VAROVANIE: Tento kľúč nie certifikovaný dôveryhodným podpisom!\n"
"gpg:          Nič nenaznačuje tomu, že tento podpis patrí vlastníkovi kľúča.\n"
"Primárny fingerprint kľúča: 8ED3 96E3 7E38 D471 A005  30D3 A955 3245 FDE9 B739\n"

msgid "You can then happily run"
msgstr "Potom môžete spokojne spustiť"

msgid "$ guix package --install-from-file=my-hello.scm\n"
msgstr "$ guix package --install-from-file=my-hello.scm\n"

msgid "You should now have @code{my-hello} in your profile!"
msgstr "Teraz by ste už mali mať @code{my-hello} vo vašom profile!"

msgid ""
"$ guix package --list-installed=my-hello\n"
"my-hello\t2.10\tout\n"
"/gnu/store/f1db2mfm8syb8qvc357c53slbvf1g9m9-my-hello-2.10\n"
msgstr ""
"$ guix package --list-installed=my-hello\n"
"my-hello\t2.10\tout\n"
"/gnu/store/f1db2mfm8syb8qvc357c53slbvf1g9m9-my-hello-2.10\n"

msgid "We've gone as far as we could without any knowledge of Scheme.  Before moving on to more complex packages, now is the right time to brush up on your Scheme knowledge.  @xref{A Scheme Crash Course} to get up to speed."
msgstr "Dostali sme sa tak ďaleko ako sa dalo bez znalosti Scheme. Predtým než prejdeme k zložitejším balíkom si dáme rýchlokurz jazyka Scheme. Na začiatok odporúčame @pxref{A Scheme Crash Course}."

msgid "In the rest of this chapter we will rely on some basic Scheme programming knowledge.  Now let's detail the different possible setups for working on Guix packages."
msgstr "V ďalších častiach tohto oddielu sa budeme spoliehať na vašu základnú znalosť jazyka Scheme. Teraz si predstavíme rôzne možnosti práce s balíkmi Guix."

msgid "There are several ways to set up a Guix packaging environment."
msgstr "Jestvuje viacero spôsobov nastavenia prostredia pre zadávanie balíkov Guix."

msgid "We recommend you work directly on the Guix source checkout since it makes it easier for everyone to contribute to the project."
msgstr "Odporúčame vám pracovať priamo v repozitári zdrojových súborov Guixu za účelom jednoduchšieho prispievania do projektu."

msgid "But first, let's look at other possibilities."
msgstr "Ale najprv sa pozrime na ostatné možnosti."

msgid "This is what we previously did with @samp{my-hello}.  With the Scheme basics we've covered, we are now able to explain the leading chunks.  As stated in @code{guix package --help}:"
msgstr "Toto je spôsob, ktorý sme práve použili v prípade @samp{my-hello}. Vďaka základom Scheme, ktoré sme si predstavili, vám teraz môžeme vysvetliť tie najdôležitejšie časti. Ako je uvedené v @code{guix package --help}:"

msgid ""
"  -f, --install-from-file=FILE\n"
"                         install the package that the code within FILE\n"
"                         evaluates to\n"
msgstr ""
"  -f, --install-from-file=SÚBOR\n"
"                         inštalovať balíky, ktoré sú výsledkom vyhodnotenia\n"
"                         kódu v SÚBORE\n"

msgid "Thus the last expression @emph{must} return a package, which is the case in our earlier example."
msgstr "Teda, posledný výraz @emph{musí} vracať balík, čo pre náš skorší príklad aj platí."

msgid "The @code{use-modules} expression tells which of the modules we need in the file.  Modules are a collection of values and procedures.  They are commonly called ``libraries'' or ``packages'' in other programming languages."
msgstr "Výraz @code{use-modules} nám hovorí, ktoré moduly potrebujeme. Moduly predstavujú zbierky hodnôt a funkcií. V iných programovacích jazykoch sa všeobecne označujú ako „knižnice“ alebo „balíky“."

msgid "channel"
msgstr "kanál"

msgid "Guix and its package collection can be extended through @dfn{channels}.  A channel is a Git repository, public or not, containing @file{.scm} files that provide packages (@pxref{Defining Packages,,, guix, GNU Guix Reference Manual}) or services (@pxref{Defining Services,,, guix, GNU Guix Reference Manual})."
msgstr "Guix a jeho zbierku balíkov možno rozšíriť pomocou @dfn{kanálov}.  Kanál je Git repozitár, či už verejný alebo nie, obsahujúci @file{.scm} súbory poskytujúce balíky (@pxref{Defining Packages,,, guix, GNU Guix Reference Manual}) alebo služby (@pxref{Defining Services,,, guix, GNU Guix Reference Manual})."

msgid "How would you go about creating a channel? First, create a directory that will contain your @file{.scm} files, say @file{~/my-channel}:"
msgstr "Ako vytvoriť kanál? Najprv vytvorte priečinok, ktorý bude obsahovať vaše @file{.scm} súbory, napríklad @file{~/moj-kanal}:"

msgid "mkdir ~/my-channel\n"
msgstr "mkdir ~/moj-kanal\n"

msgid "Suppose you want to add the @samp{my-hello} package we saw previously; it first needs some adjustments:"
msgstr "Predpokladajme, že chcete pridať balík @samp{my-hello}, s ktorým sme sa už stretli. Bude však potrebovať niekoľko úprav:"

msgid ""
"(define-module (my-hello)\n"
"  #:use-module (guix licenses)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix build-system gnu)\n"
"  #:use-module (guix download))\n"
"\n"
msgstr ""
"(define-module (my-hello)\n"
"  #:use-module (guix licenses)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix build-system gnu)\n"
"  #:use-module (guix download))\n"
"\n"

msgid ""
"(define-public my-hello\n"
"  (package\n"
"    (name \"my-hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Hello, Guix world: An example custom Guix package\")\n"
"    (description\n"
"     \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"
msgstr ""
"(define-public my-hello\n"
"  (package\n"
"    (name \"my-hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (synopsis \"Hello, Guix world: An example custom Guix package\")\n"
"    (description\n"
"     \"GNU Hello prints the message \\\"Hello, world!\\\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it supports\n"
"command-line arguments, multiple languages, and so on.\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"

msgid "Note that we have assigned the package value to an exported variable name with @code{define-public}.  This is effectively assigning the package to the @code{my-hello} variable so that it can be referenced, among other as dependency of other packages."
msgstr "Všimnite si, že sme tentokrát zadanie balíka uložili do verejnej premennej @code{my-hello} pomocou @code{define-public}, na ktorú je možné odkazovať, medzi iným aj ako na závislosť v rámci zadania nejakého ďalšieho balíka."

msgid "If you use @code{guix package --install-from-file=my-hello.scm} on the above file, it will fail because the last expression, @code{define-public}, does not return a package.  If you want to use @code{define-public} in this use-case nonetheless, make sure the file ends with an evaluation of @code{my-hello}:"
msgstr "Ak spustíte @code{guix package --install-from-file=my-hello.scm} s použitím vyššie uvedeného súboru, tak príkaz zlyhá, pretože posledný výraz, @code{define-public}, nevracia balík. Ak aj napriek tomu chcete v tomto prípade použiť @code{define-public}, uistite sa, že súbor končí vykonaním @code{my-hello}:"

msgid ""
";; ...\n"
"(define-public my-hello\n"
"  ;; ...\n"
"  )\n"
"\n"
msgstr ""
";; ...\n"
"(define-public my-hello\n"
"  ;; ...\n"
"  )\n"
"\n"

msgid "my-hello\n"
msgstr "my-hello\n"

msgid "This last example is not very typical."
msgstr "Tento posledný príklad nie je veľmi bežný."

msgid "Now how do you make that package visible to @command{guix} commands so you can test your packages? You need to add the directory to the search path using the @option{-L} command-line option, as in these examples:"
msgstr "A teraz, ako možno tento balík zviditeľniť pre @command{guix} príkazy, aby ste ho mohli vyskúšať? Musíte pridať priečinok @file{~/moj-kanal} k prehľadávaným cestám pomocou voľby @option{-L} ako v týchto príkladoch:"

msgid ""
"guix show -L ~/my-channel my-hello\n"
"guix build -L ~/my-channel my-hello\n"
msgstr ""
"guix show -L ~/moj-kanal my-hello\n"
"guix build -L ~/moj-kanal my-hello\n"

msgid "The final step is to turn @file{~/my-channel} into an actual channel, making your package collection seamlessly available @i{via} any @command{guix} command.  To do that, you first need to make it a Git repository:"
msgstr "Posledným krokom je pretvoriť @file{~/moj-kanal} na ozajstný kanál sprístupňujúc tak vašu zbierku balíkov akémukoľvek @command{guix} príkazu.  V prvom rade musíte z tohto priečinka spraviť Git repozitár:"

msgid ""
"cd ~/my-channel\n"
"git init\n"
"git add my-hello.scm\n"
"git commit -m \"First commit of my channel.\"\n"
msgstr ""
"cd ~/moj-kanal\n"
"git init\n"
"git add my-hello.scm\n"
"git commit -m \"Prvá úprava môjho kanála.\"\n"

msgid "And that's it, you have a channel! From there on, you can add this channel to your channel configuration in @file{~/.config/guix/channels.scm} (@pxref{Specifying Additional Channels,,, guix, GNU Guix Reference Manual}); assuming you keep your channel local for now, the @file{channels.scm} would look something like this:"
msgstr "A to je všetko, práve ste vytvorili kanál! Teraz už môžete tento kanál pridať do vášho nastavenia kanálov v @file{~/.config/guix/channels.scm} (@pxref{Specifying Additional Channels,,, guix, GNU Guix Reference Manual}). Predpokladajúc, že si váš kanál nateraz ponecháte vo vašom počítači, bude súbor @file{channels.scm} vyzerať asi takto:"

msgid ""
"(append (list (channel\n"
"                (name 'my-channel)\n"
"                (url (string-append \"file://\" (getenv \"HOME\")\n"
"                                    \"/my-channel\"))))\n"
"        %default-channels)\n"
msgstr ""
"(append (list (channel\n"
"                (name 'moj-kanal)\n"
"                (url (string-append \"file://\" (getenv \"HOME\")\n"
"                                    \"/moj-kanal\"))))\n"
"        %default-channels)\n"

msgid "Next time you run @command{guix pull}, your channel will be picked up and the packages it defines will be readily available to all the @command{guix} commands, even if you do not pass @option{-L}.  The @command{guix describe} command will show that Guix is, indeed, using both the @code{my-channel} and the @code{guix} channels."
msgstr "Nabudúce, keď spustíte @command{guix pull}, sa váš kanál vyzdvihne a balíky, ktoré obsahuje sa sprístupnia pre všetky @command{guix} príkazy, a to aj bez použitia voľby @option{-L}.  Príkaz @command{guix describe} potvrdí, že Guix vskutku používa aj kanál @code{my-channel}, aj kanál @code{guix}."

msgid "@xref{Creating a Channel,,, guix, GNU Guix Reference Manual}, for details."
msgstr "Viď @ref{Creating a Channel,,, guix, GNU Guix Reference Manual}, pre viac podrobností."

msgid "Working directly on the Guix project is recommended: it reduces the friction when the time comes to submit your changes upstream to let the community benefit from your hard work!"
msgstr "Odporúčame vám pracovať priamo v rámci projektu Guix: znižuje to čas potrebný na odoslanie a zapracovanie vašich zmien do oficiálnej verzie Guixu, aby aj ostatní mali úžitok z vašej ťažkej práce!"

msgid "Unlike most software distributions, the Guix repository holds in one place both the tooling (including the package manager) and the package definitions.  This choice was made so that it would give developers the flexibility to modify the API without breakage by updating all packages at the same time.  This reduces development inertia."
msgstr "Na rozdiel od väčšiny softvérových distribúcií, repozitár Guixu obsahuje aj nástroje (vrátane správcu balíkov) aj zadania balíkov. Vývojárom je takto možné zaistiť pružnosť potrebnú pre upravovanie API bez toho, aby niečo pokazili. Všetky zadania balíkov sa po každej úprave samy aktualizujú, čím sa predíde zdržaniam vo vývoji."

msgid "Check out the official @uref{https://git-scm.com/, Git} repository:"
msgstr "Vytvorte si kópiu oficiálneho @uref{https://git-scm.com/, Git} repozitára:"

msgid "$ git clone https://git.guix.gnu.org/guix.git\n"
msgstr "$ git clone https://git.guix.gnu.org/guix.git\n"

msgid "In the rest of this article, we use @samp{$GUIX_CHECKOUT} to refer to the location of the checkout."
msgstr "Vo zvyšku tohto príspevku použijeme pri odkazovaní na túto kópiu premennú @samp{$GUIX_CHECKOUT}."

msgid "Follow the instructions in the manual (@pxref{Contributing,,, guix, GNU Guix Reference Manual}) to set up the repository environment."
msgstr "Pre nastavenie prostredia repozitára postupujte podľa pokynov v príručke (@pxref{Contributing,,, guix, GNU Guix Reference Manual})."

msgid "Once ready, you should be able to use the package definitions from the repository environment."
msgstr "Keď budete pripravení, mali by ste byť schopní použiť zadania balíkov z prostredia repozitára."

msgid "Feel free to edit package definitions found in @samp{$GUIX_CHECKOUT/gnu/packages}."
msgstr "Nebojte sa upravovať zadania balíkov v @samp{$GUIX_CHECKOUT/gnu/packages}."

msgid "The @samp{$GUIX_CHECKOUT/pre-inst-env} script lets you use @samp{guix} over the package collection of the repository (@pxref{Running Guix Before It Is Installed,,, guix, GNU Guix Reference Manual})."
msgstr "Skript @samp{$GUIX_CHECKOUT/pre-inst-env} vám umožňuje použiť @samp{guix} so zbierkou balíkov v repozitári (@pxref{Running Guix Before It Is Installed,,, guix, GNU Guix Reference Manual})."

msgid "Search packages, such as Ruby:"
msgstr "Vyhľadávajte balíky, napríklad Ruby:"

msgid ""
"  $ cd $GUIX_CHECKOUT\n"
"  $ ./pre-inst-env guix package --list-available=ruby\n"
"      ruby    1.8.7-p374      out     gnu/packages/ruby.scm:119:2\n"
"      ruby    2.1.6   out     gnu/packages/ruby.scm:91:2\n"
"      ruby    2.2.2   out     gnu/packages/ruby.scm:39:2\n"
msgstr ""
"  $ cd $GUIX_CHECKOUT\n"
"  $ ./pre-inst-env guix package --list-available=ruby\n"
"      ruby    1.8.7-p374      out     gnu/packages/ruby.scm:119:2\n"
"      ruby    2.1.6   out     gnu/packages/ruby.scm:91:2\n"
"      ruby    2.2.2   out     gnu/packages/ruby.scm:39:2\n"

msgid "Build a package, here Ruby version 2.1:"
msgstr "Zostavte balík, v tomto prípade Ruby vo verzii 2.1:"

msgid ""
"  $ ./pre-inst-env guix build --keep-failed ruby@@2.1\n"
"  /gnu/store/c13v73jxmj2nir2xjqaz5259zywsa9zi-ruby-2.1.6\n"
msgstr ""
"  $ ./pre-inst-env guix build --keep-failed ruby@@2.1\n"
"  /gnu/store/c13v73jxmj2nir2xjqaz5259zywsa9zi-ruby-2.1.6\n"

msgid "Install it to your user profile:"
msgstr "Nainštaluje ho do vášho používateľského profilu:"

msgid "  $ ./pre-inst-env guix package --install ruby@@2.1\n"
msgstr "  $ ./pre-inst-env guix package --install ruby@@2.1\n"

msgid "Check for common mistakes:"
msgstr "Overte si, či ste neurobili niektorú z častých chýb:"

msgid "  $ ./pre-inst-env guix lint ruby@@2.1\n"
msgstr "  $ ./pre-inst-env guix lint ruby@@2.1\n"

msgid "Guix strives at maintaining a high packaging standard; when contributing to the Guix project, remember to"
msgstr "Guix sa usiluje udržať vysokú úroveň zadávania balíkov; pri prispievaní do projektu Guix si zapamätajte, že je potrebné"

msgid "follow the coding style (@pxref{Coding Style,,, guix, GNU Guix Reference Manual}),"
msgstr "dodržiavať spôsob kódovania (@pxref{Coding Style,,, guix, GNU Guix Reference Manual}),"

msgid "and review the check list from the manual (@pxref{Submitting Patches,,, guix, GNU Guix Reference Manual})."
msgstr "a prejsť si kontrolný zoznam z príručky (@pxref{Submitting Patches,,, guix, GNU Guix Reference Manual})."

msgid "Once you are happy with the result, you are welcome to send your contribution to make it part of Guix.  This process is also detailed in the manual.  (@pxref{Contributing,,, guix, GNU Guix Reference Manual})"
msgstr "Keď ste spokojní s výsledkom, privítame, ak nám zašlete váš príspevok, aby sa mohol stať súčasťou Guixu. Tento postup je tiež opísaný v príručke. (@pxref{Contributing,,, guix, GNU Guix Reference Manual})"

msgid "It's a community effort so the more join in, the better Guix becomes!"
msgstr "Guix závisí od spoločného úsilia, preto čím viac ľudí prispeje, tým bude Guix lepší!"

msgid "The above ``Hello World'' example is as simple as it goes.  Packages can be more complex than that and Guix can handle more advanced scenarios.  Let's look at another, more sophisticated package (slightly modified from the source):"
msgstr "Vyššie uvedený príklad zadania balíka „Ahoj svet“ je taký jednoduchý ako sa len dá. Avšak, zadania balíkov môžu byť zložitejšie a Guix si poradí aj s omnoho náročnejšími balíkmi. Pozrime sa teda na iné, zložitejšie zadanie balíka (mierne upravené v porovnaní s pôvodným zadaním):"

msgid ""
"(define-public my-libgit2\n"
"  (let ((commit \"e98d0a37c93574d2c6107bf7f31140b548c6a7bf\")\n"
"        (revision \"1\"))\n"
"    (package\n"
"      (name \"my-libgit2\")\n"
"      (version (git-version \"0.26.6\" revision commit))\n"
"      (source (origin\n"
"                (method git-fetch)\n"
"                (uri (git-reference\n"
"                      (url \"https://github.com/libgit2/libgit2/\")\n"
"                      (commit commit)))\n"
"                (file-name (git-file-name name version))\n"
"                (sha256\n"
"                 (base32\n"
"                  \"17pjvprmdrx4h6bb1hhc98w9qi6ki7yl57f090n9kbhswxqfs7s3\"))\n"
"                (patches (search-patches \"libgit2-mtime-0.patch\"))\n"
"                (modules '((guix build utils)))\n"
"                ;; Remove bundled software.\n"
"                (snippet '(delete-file-recursively \"deps\"))))\n"
"      (build-system cmake-build-system)\n"
"      (outputs '(\"out\" \"debug\"))\n"
"      (arguments\n"
"       `(#:tests? #true                         ; Run the test suite (this is the default)\n"
"         #:configure-flags '(\"-DUSE_SHA1DC=ON\") ; SHA-1 collision detection\n"
"         #:phases\n"
"         (modify-phases %standard-phases\n"
"           (add-after 'unpack 'fix-hardcoded-paths\n"
"             (lambda _\n"
"               (substitute* \"tests/repo/init.c\"\n"
"                 ((\"#!/bin/sh\") (string-append \"#!\" (which \"sh\"))))\n"
"               (substitute* \"tests/clar/fs.h\"\n"
"                 ((\"/bin/cp\") (which \"cp\"))\n"
"                 ((\"/bin/rm\") (which \"rm\")))))\n"
"           ;; Run checks more verbosely.\n"
"           (replace 'check\n"
"             (lambda* (#:key tests? #:allow-other-keys)\n"
"               (when tests?\n"
"                 (invoke \"./libgit2_clar\" \"-v\" \"-Q\"))))\n"
"           (add-after 'unpack 'make-files-writable-for-tests\n"
"             (lambda _ (for-each make-file-writable (find-files \".\")))))))\n"
"      (inputs\n"
"       (list libssh2 http-parser python-wrapper))\n"
"      (native-inputs\n"
"       (list pkg-config))\n"
"      (propagated-inputs\n"
"       ;; These two libraries are in 'Requires.private' in libgit2.pc.\n"
"       (list openssl zlib))\n"
"      (home-page \"https://libgit2.github.com/\")\n"
"      (synopsis \"Library providing Git core methods\")\n"
"      (description\n"
"       \"Libgit2 is a portable, pure C implementation of the Git core methods\n"
"provided as a re-entrant linkable library with a solid API, allowing you to\n"
"write native speed custom Git applications in any language with bindings.\")\n"
"      ;; GPLv2 with linking exception\n"
"      (license license:gpl2))))\n"
msgstr ""
"(define-public my-libgit2\n"
"  (let ((commit \"e98d0a37c93574d2c6107bf7f31140b548c6a7bf\")\n"
"        (revision \"1\"))\n"
"    (package\n"
"      (name \"my-libgit2\")\n"
"      (version (git-version \"0.26.6\" revision commit))\n"
"      (source (origin\n"
"                (method git-fetch)\n"
"                (uri (git-reference\n"
"                      (url \"https://github.com/libgit2/libgit2/\")\n"
"                      (commit commit)))\n"
"                (file-name (git-file-name name version))\n"
"                (sha256\n"
"                 (base32\n"
"                  \"17pjvprmdrx4h6bb1hhc98w9qi6ki7yl57f090n9kbhswxqfs7s3\"))\n"
"                (patches (search-patches \"libgit2-mtime-0.patch\"))\n"
"                (modules '((guix build utils)))\n"
"                ;; Odstrániť pribalený softvér.\n"
"                (snippet '(delete-file-recursively \"deps\"))))\n"
"      (build-system cmake-build-system)\n"
"      (outputs '(\"out\" \"debug\"))\n"
"      (arguments\n"
"       `(#:tests? #true                         ; Preveriť výsledok zostavenia (predvolené).\n"
"         #:configure-flags '(\"-DUSE_SHA1DC=ON\") ; Zisťovanie rozporov v odtlačkoch SHA-1\n"
"         #:phases\n"
"         (modify-phases %standard-phases\n"
"           (add-after 'unpack 'fix-hardcoded-paths\n"
"             (lambda _\n"
"               (substitute* \"tests/repo/init.c\"\n"
"                 ((\"#!/bin/sh\") (string-append \"#!\" (which \"sh\"))))\n"
"               (substitute* \"tests/clar/fs.h\"\n"
"                 ((\"/bin/cp\") (which \"cp\"))\n"
"                 ((\"/bin/rm\") (which \"rm\")))))\n"
"           ;; Bohatší výstup pri preverovaní zostavenia\n"
"           (replace 'check\\n\"\n"
"             (lambda* (#:key tests? #:allow-other-keys)\\n\"\n"
"               (when tests?\\n\"\n"
"                 (invoke \\\"./libgit2_clar\\\" \\\"-v\\\" \\\"-Q\\\"))))\\n\"\n"
"           (add-after 'unpack 'make-files-writable-for-tests\n"
"             (lambda _ (for-each make-file-writable (find-files \".\" \".*\")))))))\n"
"      (inputs\n"
"       (list libssh2 http-parser python-wrapper))\n"
"      (native-inputs\n"
"       (list pkg-config))\n"
"      (propagated-inputs\n"
"       ;; Tieto dve knižnice sa nachádzajú v „Requires.private“ v libgit2.pc.\n"
"       (list openssl zlib))\n"
"      (home-page \"https://libgit2.github.com/\")\n"
"      (synopsis \"Library providing Git core methods\")\n"
"      (description\n"
"       \"Libgit2 is a portable, pure C implementation of the Git core methods\n"
"provided as a re-entrant linkable library with a solid API, allowing you to\n"
"write native speed custom Git applications in any language with bindings.\")\n"
"      ;; GPLv2 s odkazovou výnimkou\n"
"      (license license:gpl2))))\n"

msgid "(In those cases were you only want to tweak a few fields from a package definition, you should rely on inheritance instead of copy-pasting everything.  See below.)"
msgstr "(V prípade, že chcete zmeniť len pár polí v pôvodnom zadaní balíka by ste sa mali spoľahnúť na dedičnosť namiesto skopírovania celého zadania. Viď nižšie.)"

msgid "Let's discuss those fields in depth."
msgstr "Pozrime sa teraz na tieto polia zblízka."

msgid "@code{git-fetch} method"
msgstr "spôsob @code{git-fetch}"

msgid "Unlike the @code{url-fetch} method, @code{git-fetch} expects a @code{git-reference} which takes a Git repository and a commit.  The commit can be any Git reference such as tags, so if the @code{version} is tagged, then it can be used directly.  Sometimes the tag is prefixed with a @code{v}, in which case you'd use @code{(commit (string-append \"v\" version))}."
msgstr "Narozdiel od funkcie @code{url-fetch}, @code{git-fetch} vyžaduje @code{git-reference}, ktorú určuje Git repozitár a príslušná úprava. Úpravou sa rozumie akýkoľvek odkaz Git ako napríklad značka. Teda, ak je @code{version} označená, tak je možné použiť priamo číslo verzie. Niekedy majú značky verzií perdponu @code{v}. V tomto prípade môžete použiť @code{(commit (string-append \"v\" version))}."

msgid "To ensure that the source code from the Git repository is stored in a directory with a descriptive name, we use @code{(file-name (git-file-name name version))}."
msgstr "Aby sme sa uistili, že sa zdrojový kód z Git repozitára uloží do priečinka s výstižným názvom, použijeme @code{(file-name (git-file-name name version))}."

msgid "The @code{git-version} procedure can be used to derive the version when packaging programs for a specific commit, following the Guix contributor guidelines (@pxref{Version Numbers,,, guix, GNU Guix Reference Manual})."
msgstr "Keď zadávate balík pre program s určitým číslom úpravy, môžete pre odvodenie správneho označenia verzie použiť funkciu @code{git-version} podľa pokynov v príručke prispievateľa do Guixu (@pxref{Version Numbers,,, guix, GNU Guix Reference Manual})."

msgid "How does one obtain the @code{sha256} hash that's in there, you ask? By invoking @command{guix hash} on a checkout of the desired commit, along these lines:"
msgstr "Pýtate sa ako získať správny odtlačok @code{sha256}? Vyvolaním @command{guix hash} na miestnej kópii repozitára v požadovanej úprave, asi takto:"

msgid ""
"git clone https://github.com/libgit2/libgit2/\n"
"cd libgit2\n"
"git checkout v0.26.6\n"
"guix hash -rx .\n"
msgstr ""
"git clone https://github.com/libgit2/libgit2/\n"
"cd libgit2\n"
"git checkout v0.26.6\n"
"guix hash -rx .\n"

msgid "@command{guix hash -rx} computes a SHA256 hash over the whole directory, excluding the @file{.git} sub-directory (@pxref{Invoking guix hash,,, guix, GNU Guix Reference Manual})."
msgstr "@command{guix hash -rx} vypočíta odtlačok SHA256 celého priečinka nezahŕňajúc pod-priečinok @file{.git} (@pxref{Invoking guix hash,,, guix, GNU Guix Reference Manual})."

msgid "In the future, @command{guix download} will hopefully be able to do these steps for you, just like it does for regular downloads."
msgstr "Do budúcna bude snáď @command{guix download} schopný vykonávať tieto kroky za vás, tak ako je tomu pri bežných sťahovaniach súborov."

msgid "Snippets"
msgstr "Kusy kódu"

msgid "Snippets are quoted (i.e. non-evaluated) Scheme code that are a means of patching the source.  They are a Guix-y alternative to the traditional @file{.patch} files.  Because of the quote, the code in only evaluated when passed to the Guix daemon for building.  There can be as many snippets as needed."
msgstr "Kusy kódu predstavujú malé časti Scheme kódu v úvodzovkách, t.j. bežne nevykonávané, ktoré sa používajú na plátanie zdrojových súborov. Je to taká Guixová náhrada za dobre známe @file{.patch} súbory. Vďaka úvodzovkám sa daný kód vykoná len vtedy, keď sa odošle démonovi Guixu na zostavenie. V praxi môžeme použiť toľko kusov kódu, koľko potrebujeme."

msgid "Snippets might need additional Guile modules which can be imported from the @code{modules} field."
msgstr "Kusy kódu môžu vyžadovať prídavné moduly Guilu, ktoré je možné načítať pomocou poľa @code{modules}."

msgid "Inputs"
msgstr "Vstupy"

msgid "There are 3 different input types.  In short:"
msgstr "Jestvujú tri rôzne druhy vstupov. V skratke:"

msgid "native-inputs"
msgstr "native-inputs"

msgid "Required for building but not runtime -- installing a package through a substitute won't install these inputs."
msgstr "Vyžadované pri zostavovaní ale nie pri spúšťaní. V prípade inštalácie balíka prostredníctvom náhrady sa tieto vstupy nebudú inštalovať."

msgid "inputs"
msgstr "inputs"

msgid "Installed in the store but not in the profile, as well as being present at build time."
msgstr "Inštalované do úložiska ale nie do profilu a prítomné pri zostavovaní."

msgid "propagated-inputs"
msgstr "propagated-inputs"

msgid "Installed in the store and in the profile, as well as being present at build time."
msgstr "Inštalované do úložiska aj do profilu a prítomné pri zostavovaní."

msgid "@xref{package Reference,,, guix, GNU Guix Reference Manual} for more details."
msgstr "@xref{package Reference,,, guix, GNU Guix Reference Manual} pre viac podrobností."

msgid "The distinction between the various inputs is important: if a dependency can be handled as an @emph{input} instead of a @emph{propagated input}, it should be done so, or else it ``pollutes'' the user profile for no good reason."
msgstr "Správne rozlišovanie medzi jednotlivými druhmi vstupov je dôležité: ak je možné závislosť zaradiť ako @emph{input} namiesto @emph{propagated input}, tak by sa to tak malo urobiť. Inak bezdôvodne „znečistí“ používateľský profil."

msgid "For instance, a user installing a graphical program that depends on a command line tool might only be interested in the graphical part, so there is no need to force the command line tool into the user profile.  The dependency is a concern to the package, not to the user.  @emph{Inputs} make it possible to handle dependencies without bugging the user by adding undesired executable files (or libraries) to their profile."
msgstr "Napríklad, ak inštalujete grafický program, ktorý závisí na nejakom nástroji spúšťanom v príkazovom riadku, tak vám pravdepodobne ide len o tú grafickú časť. Nie je teda potrebné siliť inštaláciu nástroja spúšťaného v príkazovom riadku do používateľského profilu. Závislosti sú spravované balíkmi a nie používateľmi. @emph{Vstupy} umožňujú spravovať závislosti bez toho, aby to nejako zaťažovalo používateľov pridávaním neužitočných programov či knižníc do ich profilu."

msgid "Same goes for @emph{native-inputs}: once the program is installed, build-time dependencies can be safely garbage-collected.  It also matters when a substitute is available, in which case only the @emph{inputs} and @emph{propagated inputs} will be fetched: the @emph{native inputs} are not required to install a package from a substitute."
msgstr "Rovnako to platí aj pre @emph{native-inputs}: po inštalácii programu môžu byť závislosti vyžadované pri zostavovaní bezpečne odstránené zberačom odpadkov. Okrem toho, ak je dostupná binárna náhrada, stiahnu sa len @emph{inputs} a @emph{propagated inputs}: @emph{native inputs} nie sú pri inštalácii balíka prostredníctvom náhrady potrebné."

msgid "Note"
msgstr "Poznámka"

msgid "You may see here and there snippets where package inputs are written quite differently, like so:"
msgstr "Tu a tam nájdete úryvky, v ktorých sú vstupy zapísané pomerne odlišne, teda asi takto:"

msgid ""
";; The \"old style\" for inputs.\n"
"(inputs\n"
" `((\"libssh2\" ,libssh2)\n"
"   (\"http-parser\" ,http-parser)\n"
"   (\"python\" ,python-wrapper)))\n"
msgstr ""
";; „Pôvodný tvar“ zápisu vstupov\n"
"(inputs\n"
" `((\"libssh2\" ,libssh2)\n"
"   (\"http-parser\" ,http-parser)\n"
"   (\"python\" ,python-wrapper)))\n"

msgid "This is the ``old style'', where each input in the list is explicitly given a label (a string).  It is still supported but we recommend using the style above instead.  @xref{package Reference,,, guix, GNU Guix Reference Manual}, for more info."
msgstr "Toto je „pôvodný tvar“, v ktorom má každá položka zoznamu vstupov pridelenú menovku (reťazec).  Tento tvar je stále podporovaný ale odporúčame vám používať už len vyššie uvedený tvar.  Viď @ref{package Reference,,, guix, GNU Guix Reference Manual} pre viac podrobností."

msgid "Outputs"
msgstr "Výstupy"

msgid "Just like how a package can have multiple inputs, it can also produce multiple outputs."
msgstr "Tak ako môže mať balík viacero vstupov, môže mať aj viacero výstupov."

msgid "Each output corresponds to a separate directory in the store."
msgstr "Každý výstup má osobitný priečinok v úložisku."

msgid "The user can choose which output to install; this is useful to save space or to avoid polluting the user profile with unwanted executables or libraries."
msgstr "Používateľ si môže vybrať, ktorý výstup nainštaluje; pomáha to šetriť úložné miesto a predchádzať znečisteniu používateľského profilu nechcenými programami či knižnicami."

msgid "Output separation is optional.  When the @code{outputs} field is left out, the default and only output (the complete package) is referred to as @code{\"out\"}."
msgstr "Oddeľovanie výstupov je voliteľné. Ak sa pole @code{outputs} vynechá, predvoleným a jediným výstupom (celý balík) bude @code{\"out\"}."

msgid "Typical separate output names include @code{debug} and @code{doc}."
msgstr "Často vidíme oddelené výstupy s názvom @code{debug} alebo @code{doc}."

msgid "It's advised to separate outputs only when you've shown it's worth it: if the output size is significant (compare with @code{guix size}) or in case the package is modular."
msgstr "Oddelené výstupy by ste mali používať len vtedy, keď sa to oplatí: ak je výstup značne veľký (možno porovnať pomocou @code{guix size}), alebo ak je balík modulárny."

msgid "Build system arguments"
msgstr "Argumenty zostavovacieho systému"

msgid "The @code{arguments} is a keyword-value list used to configure the build process."
msgstr "Pole @code{arguments} obsahuje páry kľúč-hodnota používané pri nastavovaní postupu zostavenia."

msgid "The simplest argument @code{#:tests?} can be used to disable the test suite when building the package.  This is mostly useful when the package does not feature any test suite.  It's strongly recommended to keep the test suite on if there is one."
msgstr "Ten najjednoduchší argument @code{#:tests?} možno použiť na vynechanie testov po zostavení balíka. Je to užitočné najmä v prípade, keď balík neobsahuje žiadnu testovaciu súpravu. Je dôrazne odporúčané ponechať testovaciu súpravu povolenú, ak je nejaká dostupná."

msgid "Another common argument is @code{:make-flags}, which specifies a list of flags to append when running make, as you would from the command line.  For instance, the following flags"
msgstr "Ďalším bežným argumentom je @code{:make-flags} určujúci zoznam dodatočných príznakov, ktoré sa majú použiť pri spúšťaní nástroja make ako keby ste pridali priamo do príkazového riadku. Napríklad, nasledovné príznaky"

msgid ""
"#:make-flags (list (string-append \"prefix=\" (assoc-ref %outputs \"out\"))\n"
"                   \"CC=gcc\")\n"
msgstr ""
"#:make-flags (list (string-append \"prefix=\" (assoc-ref %outputs \"out\"))\n"
"                   \"CC=gcc\")\n"

msgid "translate into"
msgstr "sú chápané ako"

msgid "$ make CC=gcc prefix=/gnu/store/...-<out>\n"
msgstr "$ make CC=gcc prefix=/gnu/store/...-<out>\n"

msgid "This sets the C compiler to @code{gcc} and the @code{prefix} variable (the installation directory in Make parlance) to @code{(assoc-ref %outputs \"out\")}, which is a build-stage global variable pointing to the destination directory in the store (something like @file{/gnu/store/...-my-libgit2-20180408})."
msgstr "Toto nastaví prekladač jazyka C na @code{gcc} a premennú @code{prefix} (cieľový priečinok inštalácie v prípade nástroja Make) na @code{(assoc-ref %outputs \"out\")}, čo predstavuje globálnu premennú prítomnú pri zostavovaní, ktorá udáva cestu k cieľovému priečinku v úložisku (niečo ako @file{/gnu/store/...-my-libgit2-20180408})."

msgid "Similarly, it's possible to set the configure flags:"
msgstr "Podobným spôsobom môžete nastaviť aj príznaky nastavenia:"

msgid "#:configure-flags '(\"-DUSE_SHA1DC=ON\")\n"
msgstr "#:configure-flags '(\"-DUSE_SHA1DC=ON\")\n"

msgid "The @code{%build-inputs} variable is also generated in scope.  It's an association table that maps the input names to their store directories."
msgstr "Dostupná je aj premenná @code{%build-inputs}. Predstavuje tabuľku, ktorá priraďuje názvy vstupov k ich priečinkom v úložisku."

msgid "The @code{phases} keyword lists the sequential steps of the build system.  Typically phases include @code{unpack}, @code{configure}, @code{build}, @code{install} and @code{check}.  To know more about those phases, you need to work out the appropriate build system definition in @samp{$GUIX_CHECKOUT/guix/build/gnu-build-system.scm}:"
msgstr "Kľúčové slovo @code{phases} predstavuje postupnosť krokov zostavovacieho systému. Medzi bežné kroky patria @code{unpack}, @code{configure}, @code{build}, @code{install} a @code{check}. Ak chcete o týchto krokoch zistiť viac, musíte nájsť to správne zadanie zostavovacieho systému v @samp{$GUIX_CHECKOUT/guix/build/gnu-build-system.scm}:"

msgid "Or from the REPL:"
msgstr "Alebo cez REPL:"

msgid "If you want to know more about what happens during those phases, consult the associated procedures."
msgstr "Ak chcete vedieť čo sa počas jednotlivých krokov odohráva, preštudujte si príslušné funkcie."

msgid "For instance, as of this writing the definition of @code{unpack} for the GNU build system is:"
msgstr "Napríklad, v čase písania týchto riadkov, bolo zadanie kroku @code{unpack} v zostavovacom systéme GNU nasledovné:"

msgid ""
"(define* (unpack #:key source #:allow-other-keys)\n"
"  \"Unpack SOURCE in the working directory, and change directory within the\n"
"source.  When SOURCE is a directory, copy it in a sub-directory of the current\n"
"working directory.\"\n"
"  (if (file-is-directory? source)\n"
"      (begin\n"
"        (mkdir \"source\")\n"
"        (chdir \"source\")\n"
"\n"
msgstr ""
"(define* (unpack #:key source #:allow-other-keys)\n"
"  \"Unpack SOURCE in the working directory, and change directory within the\n"
"source.  When SOURCE is a directory, copy it in a sub-directory of the current\n"
"working directory.\"\n"
"  (if (file-is-directory? source)\n"
"      (begin\n"
"        (mkdir \"source\")\n"
"        (chdir \"source\")\n"
"\n"

msgid "Note the @code{chdir} call: it changes the working directory to where the source was unpacked.  Thus every phase following the @code{unpack} will use the source as a working directory, which is why we can directly work on the source files.  That is to say, unless a later phase changes the working directory to something else."
msgstr "Všimnite si volanie @code{chdir}: zmení súčasný priečinok na umiestnenie, kde boli rozbalené zdrojové súbory. To znamená, že kroky nasledujúce po @code{unpack} použijú priečinok so zdrojovými súbormi ako ich pracovný priečinok. Preto môžeme priamo narábať so zdrojovými súbormi. Teda aspoň dovtedy, kým niektorý ďalší krok nezmení pracovný priečinok na iný."

msgid "We modify the list of @code{%standard-phases} of the build system with the @code{modify-phases} macro as per the list of specified modifications, which may have the following forms:"
msgstr "Zoznam krokov @code{%standard-phases} zostavovacieho systému upravujeme pomocou makra @code{modify-phases} určujúceho aké úpravy sa majú vykonať, čo môže vyzerať asi takto:"

msgid "@code{(add-before @var{phase} @var{new-phase} @var{procedure})}: Run @var{procedure} named @var{new-phase} before @var{phase}."
msgstr "@code{(add-before @var{krok} @var{novy-krok} @var{funkcia})}: Spustiť @var{funkcia} s názvom @var{novy-krok} pred @var{krok}."

msgid "@code{(add-after @var{phase} @var{new-phase} @var{procedure})}: Same, but afterwards."
msgstr "@code{(add-after @var{krok} @var{novy-krok} @var{funkcia})}: Tak isto, ale za @var{krok}."

msgid "@code{(replace @var{phase} @var{procedure})}."
msgstr "@code{(replace @var{krok} @var{funkcia})}."

msgid "@code{(delete @var{phase})}."
msgstr "@code{(delete @var{krok})}."

msgid "The @var{procedure} supports the keyword arguments @code{inputs} and @code{outputs}.  Each input (whether @emph{native}, @emph{propagated} or not) and output directory is referenced by their name in those variables.  Thus @code{(assoc-ref outputs \"out\")} is the store directory of the main output of the package.  A phase procedure may look like this:"
msgstr "@var{Funkcia} prijíma parametre @code{inputs} a @code{outputs} v tvare kľúčových slov.  Každý vstup (či už @emph{pôvodný}, @emph{rozšírený} alebo nie) a výstupný priečinok je označený svojim názvom v týchto premenných.  Takže @code{(assoc-ref outputs \"out\")} predstavuje priečinok úložiska hlavného výstupu balíka.  Funkcia kroku vyzerá nasledovne:"

msgid "Code staging"
msgstr "Oddialené vykonanie"

msgid "The astute reader may have noticed the quasi-quote and comma syntax in the argument field.  Indeed, the build code in the package declaration should not be evaluated on the client side, but only when passed to the Guix daemon.  This mechanism of passing code around two running processes is called @uref{https://arxiv.org/abs/1709.00833, code staging}."
msgstr "Ak ste boli pozorní, mohli ste si všimnúť obrátenú úvodzovku a čiarku v poli parametrov.  Vskutku, zdrojový kód zostavenia v zadaní balíka by sa nemal vykonávať na strane klienta, ale až vtedy, keď sa odovzdá démonovi Guixu.  Toto odovzdávanie zdrojového kódu medzi dvoma procesmi nazývame @uref{https://arxiv.org/abs/1709.00833, oddialené vykonanie}."

msgid "Utility functions"
msgstr "Pomocné funkcie"

msgid "When customizing @code{phases}, we often need to write code that mimics the equivalent system invocations (@code{make}, @code{mkdir}, @code{cp}, etc.)@: commonly used during regular ``Unix-style'' installations."
msgstr "Pri prispôsobovaní @code{phases} budete často potrebovať funkcie zodpovedajúce systémovým volaniam (@code{make}, @code{mkdir}, @code{cp}, atď.), ktoré sú zvyčajne dostupné na Unixových systémoch."

msgid "Some like @code{chmod} are native to Guile.  @xref{,,, guile, Guile reference manual} for a complete list."
msgstr "Niektoré z nich, ako napríklad @code{chmod}, sú priamo dostupné v jazyku Guile.  Viď úplný zoznam v @ref{,,, guile, Guile reference manual}."

msgid "Guix provides additional helper functions which prove especially handy in the context of package management."
msgstr "Guix poskytuje ďalšie pomocné funkcie, užitočné najmä v súvislosti so správou balíkov."

msgid "Some of those functions can be found in @samp{$GUIX_CHECKOUT/guix/guix/build/utils.scm}.  Most of them mirror the behaviour of the traditional Unix system commands:"
msgstr "Niektoré z týchto funkcií sa nachádzajú v @samp{$GUIX_CHECKOUT/guix/guix/build/utils.scm}.  Väčšinou napodobňujú správanie pôvodných Unixových systémových príkazov:"

msgid "which"
msgstr "which"

msgid "Like the @samp{which} system command."
msgstr "Rovnaká ako systémový príkaz @samp{which}."

msgid "find-files"
msgstr "find-files"

msgid "Akin to the @samp{find} system command."
msgstr "Podobná príkazu @samp{find}."

msgid "mkdir-p"
msgstr "mkdir-p"

msgid "Like @samp{mkdir -p}, which creates all parents as needed."
msgstr "Rovnaká ako príkaz @samp{mkdir -p}, ktorý v prípade potreby vytvorí aj všetky nadradené priečinky."

msgid "install-file"
msgstr "install-file"

msgid "Similar to @samp{install} when installing a file to a (possibly non-existing) directory.  Guile has @code{copy-file} which works like @samp{cp}."
msgstr "Podobná ako príkaz @samp{install} na inštaláciu súboru do priečinka (aj nejestvujúceho). Guile má funkciu @code{copy-file}, ktorá funguje ako príkaz @samp{cp}."

msgid "copy-recursively"
msgstr "copy-recursively"

msgid "Like @samp{cp -r}."
msgstr "Ako @samp{cp -r}."

msgid "delete-file-recursively"
msgstr "delete-file-recursively"

msgid "Like @samp{rm -rf}."
msgstr "Ako @samp{rm -rf}."

msgid "invoke"
msgstr "invoke"

msgid "Run an executable.  This should be used instead of @code{system*}."
msgstr "Vyvolať spustiteľný súbor.  Toto by ste mali používať namiesto @code{system*}."

msgid "with-directory-excursion"
msgstr "with-directory-excursion"

msgid "Run the body in a different working directory, then restore the previous working directory."
msgstr "Vykoná telo funkcie v odlišnom pracovnom priečinku a následne obnoví pôvodný pracovný priečinok."

msgid "substitute*"
msgstr "substitute*"

msgid "A ``@command{sed}-like'' function."
msgstr "Funkcia podobná príkazu @command{sed}."

msgid "@xref{Build Utilities,,, guix, GNU Guix Reference Manual}, for more information on these utilities."
msgstr "Viď @ref{Build Utilities,,, guix, GNU Guix Reference Manual} pre viac podrobností o pomocných funkciách."

msgid "Module prefix"
msgstr "Predpony modulov"

msgid "The license in our last example needs a prefix: this is because of how the @code{license} module was imported in the package, as @code{#:use-module ((guix licenses)  #:prefix license:)}.  The Guile module import mechanism (@pxref{Using Guile Modules,,, guile, Guile reference manual})  gives the user full control over namespacing: this is needed to avoid clashes between, say, the @samp{zlib} variable from @samp{licenses.scm} (a @emph{license} value) and the @samp{zlib} variable from @samp{compression.scm} (a @emph{package} value)."
msgstr "Licencia v našom predošlom príklade je uvedená s predponou vzhľadom na spôsob akým bol načítaný modul @code{licenses} v tomto balíku: @code{#:use-module ((guix licenses) #:prefix license:)}.  Spôsob načítavania modulov v Guile (@pxref{Using Guile Modules,,, guile, Guile reference manual}) používateľovi dáva úplnú kontrolu nad menným priestorom.  Môže sa tak predísť rozporom, povedzme, medzi premennou @samp{zlib} zo súboru @samp{licenses.scm} (názov @emph{licencie}) a premennou @samp{zlib} zo súboru @samp{compression.scm} (názov @emph{balíka})."

msgid "What we've seen so far covers the majority of packages using a build system other than the @code{trivial-build-system}.  The latter does not automate anything and leaves you to build everything manually.  This can be more demanding and we won't cover it here for now, but thankfully it is rarely necessary to fall back on this system."
msgstr "To čo sme doteraz videli pokrýva väčšinu balíkov využívajúcich iný zostavovací systém ako je @code{trivial-build-system}, ktorý nič neautomatizuje a nechá vás všetko zostaviť ručne.  Tento postup môže byť náročnejší a zatiaľ sa tu ním nebudeme zaoberať.  Našťastie je nutné uchýliť sa k nemu len zriedkavo."

msgid "For the other build systems, such as ASDF, Emacs, Perl, Ruby and many more, the process is very similar to the GNU build system except for a few specialized arguments."
msgstr "Pri ostatných zostavovacích systémoch, ako sú ASDF, Emacs, Perl, Ruby a mnoho ďalších, je postup, okrem niekoľkých zvláštnych parametrov, veľmi podobný zostavovaciemu systému GNU."

msgid "@xref{Build Systems,,, guix, GNU Guix Reference Manual}, for more information on build systems, or check the source code in the @samp{$GUIX_CHECKOUT/guix/build} and @samp{$GUIX_CHECKOUT/guix/build-system} directories."
msgstr "Viď @ref{Build Systems,,, guix, GNU Guix Reference Manual} alebo zdrojový kód v priečinkoch @samp{$GUIX_CHECKOUT/guix/build} a @samp{$GUIX_CHECKOUT/guix/build-system} pre viac podrobností o zostavovacích systémoch."

msgid "We can't repeat it enough: having a full-fledged programming language at hand empowers us in ways that reach far beyond traditional package management."
msgstr "Nemôžme to nezdôrazniť: mať po ruke plnohodnotný programovací jazyk nám umožňuje oveľa viac než len bežnú správu balíkov."

msgid "Let's illustrate this with some awesome features of Guix!"
msgstr "Ukážme si to na príklade niekoľkých úžasných súčastí Guixu!"

msgid "You might find some build systems good enough that there is little to do at all to write a package, to the point that it becomes repetitive and tedious after a while.  A @emph{raison d'être} of computers is to replace human beings at those boring tasks.  So let's tell Guix to do this for us and create the package definition of an R package from CRAN (the output is trimmed for conciseness):"
msgstr "Niektoré zostavovacie systémy sú natoľko dobré, že toho na zadanie balíka ani veľa netreba, a to až do takej miery, že sa vám zadávanie balíkov rýchlo zunuje.  Jedným z dôvodov bytia počítačov je nahradiť ľudí pri vykonávaní týchto nudných činností.  Nechajme teda Guix urobiť to za nás a vytvoriť zadanie nejakého balíka R pochádzajúceho z CRANu (výstup bol skrátený pre ušetrenie miesta):"

msgid ""
"$ guix import cran --recursive walrus\n"
"\n"
msgstr ""
"$ guix import cran --recursive walrus\n"
"\n"

msgid ""
"(define-public r-mc2d\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"
msgstr ""
"(define-public r-mc2d\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"

msgid ""
"(define-public r-jmvcore\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"
msgstr ""
"(define-public r-jmvcore\n"
"    ; ...\n"
"    (license gpl2+)))\n"
"\n"

msgid ""
"(define-public r-wrs2\n"
"    ; ...\n"
"    (license gpl3)))\n"
"\n"
msgstr ""
"(define-public r-wrs2\n"
"    ; ...\n"
"    (license gpl3)))\n"
"\n"

msgid ""
"(define-public r-walrus\n"
"  (package\n"
"    (name \"r-walrus\")\n"
"    (version \"1.0.3\")\n"
"    (source\n"
"      (origin\n"
"        (method url-fetch)\n"
"        (uri (cran-uri \"walrus\" version))\n"
"        (sha256\n"
"          (base32\n"
"            \"1nk2glcvy4hyksl5ipq2mz8jy4fss90hx6cq98m3w96kzjni6jjj\"))))\n"
"    (build-system r-build-system)\n"
"    (propagated-inputs\n"
"      (list r-ggplot2 r-jmvcore r-r6 r-wrs2))\n"
"    (home-page \"https://github.com/jamovi/walrus\")\n"
"    (synopsis \"Robust Statistical Methods\")\n"
"    (description\n"
"      \"This package provides a toolbox of common robust statistical\n"
"tests, including robust descriptives, robust t-tests, and robust ANOVA.\n"
"It is also available as a module for 'jamovi' (see\n"
"<https://www.jamovi.org> for more information).  Walrus is based on the\n"
"WRS2 package by Patrick Mair, which is in turn based on the scripts and\n"
"work of Rand Wilcox.  These analyses are described in depth in the book\n"
"'Introduction to Robust Estimation & Hypothesis Testing'.\")\n"
"    (license gpl3)))\n"
msgstr ""
"(define-public r-walrus\n"
"  (package\n"
"    (name \"r-walrus\")\n"
"    (version \"1.0.3\")\n"
"    (source\n"
"      (origin\n"
"        (method url-fetch)\n"
"        (uri (cran-uri \"walrus\" version))\n"
"        (sha256\n"
"          (base32\n"
"            \"1nk2glcvy4hyksl5ipq2mz8jy4fss90hx6cq98m3w96kzjni6jjj\"))))\n"
"    (build-system r-build-system)\n"
"    (propagated-inputs\n"
"      (list r-ggplot2 r-jmvcore r-r6 r-wrs2))\n"
"    (home-page \"https://github.com/jamovi/walrus\")\n"
"    (synopsis \"Robust Statistical Methods\")\n"
"    (description\n"
"      \"This package provides a toolbox of common robust statistical\n"
"tests, including robust descriptives, robust t-tests, and robust ANOVA.\n"
"It is also available as a module for 'jamovi' (see\n"
"<https://www.jamovi.org> for more information).  Walrus is based on the\n"
"WRS2 package by Patrick Mair, which is in turn based on the scripts and\n"
"work of Rand Wilcox.  These analyses are described in depth in the book\n"
"'Introduction to Robust Estimation & Hypothesis Testing'.\")\n"
"    (license gpl3)))\n"

msgid "The recursive importer won't import packages for which Guix already has package definitions, except for the very first."
msgstr "Rekurzívny nahrávač nahrá len balíky, pre ktoré Guix ešte nemá zadanie, okrem úplne prvého."

msgid "Not all applications can be packaged this way, only those relying on a select number of supported systems.  Read about the full list of importers in the guix import section of the manual (@pxref{Invoking guix import,,, guix, GNU Guix Reference Manual})."
msgstr "Takto vytvoriť zadania balíkov nie je možné pre všetky aplikácie, iba pre tie, ktoré sa opierajú o vybraný počet podporovaných systémov.  Viď úplný zoznam nahrávačov v príslušnom oddiele príručky (@pxref{Invoking guix import,,, guix, GNU Guix Reference Manual})."

msgid "Guix can be smart enough to check for updates on systems it knows.  It can report outdated package definitions with"
msgstr "Guix môže byť dostatočne múdry na to, aby vyhľadal aktualizácie v systémoch, ktoré pozná.  To, ktoré balíky sú zastarané možno zistiť pomocou"

msgid "$ guix refresh hello\n"
msgstr "$ guix refresh hello\n"

msgid "In most cases, updating a package to a newer version requires little more than changing the version number and the checksum.  Guix can do that automatically as well:"
msgstr "Vo väčšine prípadov vyžaduje aktualizácia balíka na novšiu verziu len o niečo viac ako zmeniť číslo verzie a kontrolný súčet.  Aj toto môže Guix vykonať automaticky:"

msgid "$ guix refresh hello --update\n"
msgstr "$ guix refresh hello --update\n"

msgid "If you've started browsing the existing package definitions, you might have noticed that a significant number of them have a @code{inherit} field:"
msgstr "Ak ste si už začali prezerať zadania jestvujúcich balíkov, možno ste si všimli, že niektoré z nich obsahujú pole @code{inherit}:"

msgid ""
"(define-public adwaita-icon-theme\n"
"  (package (inherit gnome-icon-theme)\n"
"    (name \"adwaita-icon-theme\")\n"
"    (version \"3.26.1\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnome/sources/\" name \"/\"\n"
"                                  (version-major+minor version) \"/\"\n"
"                                  name \"-\" version \".tar.xz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"17fpahgh5dyckgz7rwqvzgnhx53cx9kr2xw0szprc6bnqy977fi8\"))))\n"
"    (native-inputs (list `(,gtk+ \"bin\")))))\n"
msgstr ""
"(define-public adwaita-icon-theme\n"
"  (package (inherit gnome-icon-theme)\n"
"    (name \"adwaita-icon-theme\")\n"
"    (version \"3.26.1\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnome/sources/\" name \"/\"\n"
"                                  (version-major+minor version) \"/\"\n"
"                                  name \"-\" version \".tar.xz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"17fpahgh5dyckgz7rwqvzgnhx53cx9kr2xw0szprc6bnqy977fi8\"))))\n"
"    (native-inputs (list `(,gtk+ \"bin\")))))\n"

msgid "All unspecified fields are inherited from the parent package.  This is very convenient to create alternative packages, for instance with different source, version or compilation options."
msgstr "Všetky neupresnené polia sú zdedené z nadradeného balíka.  Je to veľmi užitočné na vytváranie obmien balíkov, napr. s odlišným zdrojom, verziou alebo voľbami zostavenia."

msgid "Sadly, some applications can be tough to package.  Sometimes they need a patch to work with the non-standard file system hierarchy enforced by the store.  Sometimes the tests won't run properly.  (They can be skipped but this is not recommended.)  Other times the resulting package won't be reproducible."
msgstr "Nanešťastie, zadanie balíka môže byť pre niektoré aplikácie veľmi zložité.  Niekedy je potrebná záplata, aby mohla aplikácia fungovať v neobyčajnom systéme súborov úložiska. Niekedy sa zase sústava testov nespúšťa správne (môžete ich preskočiť ale neodporúča sa to).  Inokedy nie je výsledný balík opakovateľný."

msgid "Should you be stuck, unable to figure out how to fix any sort of packaging issue, don't hesitate to ask the community for help."
msgstr "Keď už neviete ako ďalej a nie ste schopní prísť na to, ako vyriešiť nejakú ťažkosť so zadávaním balíka, neváhajte požiadať o pomoc spoločenstvo."

msgid "See the @uref{https://guix.gnu.org/contact/, Guix homepage} for information on the mailing lists, IRC, etc."
msgstr "Viď @uref{https://guix.gnu.org/contact/, Guix homepage} pre podrobnosti o elektronických konferenciách, IRC, atď."

msgid "This tutorial was a showcase of the sophisticated package management that Guix boasts.  At this point we have mostly restricted this introduction to the @code{gnu-build-system} which is a core abstraction layer on which more advanced abstractions are based."
msgstr "Tento návod vám predviedol vyumelkovanú správu balíkov, ktorou sa Guix chváli.  V tejto chvíli sme tento úvod zúžili na @code{gnu-build-system} predstavujúci ústrednú abstrakčnú vrstvu, na ktorej sú založené pokročilejšie abstrakčné vrstvy."

msgid "Where do we go from here? Next we ought to dissect the innards of the build system by removing all abstractions, using the @code{trivial-build-system}: this should give us a thorough understanding of the process before investigating some more advanced packaging techniques and edge cases."
msgstr "Kam teraz? Ďalej by sme si mali posvietiť na vnútorné fungovanie zostavovacích systémov vynechajúc všetky abstrakčné vrstvy prostredníctvom @code{trivial-build-system}. Malo by nám to umožniť lepšie porozumieť postupu zostavenia, skôr ako sa dostaneme k pokročilejším postupom a výnimkám."

msgid "Other features worth exploring are the interactive editing and debugging capabilities of Guix provided by the Guile REPL@."
msgstr "Ďalšie funkcie, ktoré sa oplatí preskúmať, sú interaktívna úprava a možnosti ladenia Guixu poskytované cez Guile REPL@."

msgid "Those fancy features are completely optional and can wait; now is a good time to take a well-deserved break.  With what we've introduced here you should be well armed to package lots of programs.  You can get started right away and hopefully we will see your contributions soon!"
msgstr "Tieto pokročilé funkcie sú len doplnkové a môžu počkať. Teraz je ten správny čas na zaslúženú prestávku.  S tým, čo sme si ukázali, by ste si mali vystačiť pri zadávaní balíkov pre mnoho programov.  Môžete sa do toho hneď pustiť a dúfame, že nás vašim príspevkom potešíte už čoskoro!"

msgid "The @uref{https://guix.gnu.org/manual/en/html_node/Defining-Packages.html, package reference in the manual}"
msgstr "@uref{https://guix.gnu.org/manual/en/html_node/Defining-Packages.html, odvolávka na „package“ v príručke}"

msgid "@uref{https://gitlab.com/pjotrp/guix-notes/blob/master/HACKING.org, Pjotr’s hacking guide to GNU Guix}"
msgstr "@uref{https://gitlab.com/pjotrp/guix-notes/blob/master/HACKING.org, Pjotrova príručka na prispôsobenie GNU Guix}"

msgid "@uref{https://guix.gnu.org/guix-ghm-andreas-20130823.pdf, ``GNU Guix: Package without a scheme!''}, by Andreas Enge"
msgstr "@uref{https://guix.gnu.org/guix-ghm-andreas-20130823.pdf, „GNU Guix: Package without a scheme!“}, od Andreasa Engeho"

msgid "Guix offers a flexible language for declaratively configuring your Guix System.  This flexibility can at times be overwhelming.  The purpose of this chapter is to demonstrate some advanced configuration concepts."
msgstr "Guix ponúka všestranný jazyk na deklaratívne nastavenie vášho systému Guix.  Táto všestrannosť sa môže niekedy zdať nadmerná.  Účelom tohto oddielu je predstaviť niektoré pokročilé spôsoby nastavenia."

msgid "@pxref{System Configuration,,, guix, GNU Guix Reference Manual} for a complete reference."
msgstr "Viď úplnú odvolávku v @pxref{System Configuration,,, guix, GNU Guix Reference Manual}."

msgid "While the Guix manual explains auto-login one user to @emph{all} TTYs (@pxref{auto-login to TTY,,, guix, GNU Guix Reference Manual}), some might prefer a situation, in which one user is logged into one TTY with the other TTYs either configured to login different users or no one at all.  Note that one can auto-login one user to any TTY, but it is usually advisable to avoid @code{tty1}, which, by default, is used to log warnings and errors."
msgstr "Zatiaľ čo príručka pre Guix popisuje automatické prihlásenie jedného používateľa ku @emph{všetkým} TTY (@pxref{auto-login to TTY,,, guix, GNU Guix Reference Manual}), mohol by vám viac vyhovovať stav, keď je jeden používateľ pripojený k jednému TTY a ostatné TTY sú nastavené na prihlasovanie ďalších používateľov alebo nikoho.  Všimnite si, že jedného používateľa je možné automaticky prihlásiť k akémukoľvek TTY. Avšak, je lepšie vynechať @code{tty1}, ktorý je predvolene využívaný na zobrazovanie varovaných a chybových hlásení."

msgid "Here is how one might set up auto login for one user to one tty:"
msgstr "Takto je možné nastaviť automatické prihlásenie jedného používateľa k jednému TTY:"

msgid ""
"(define (auto-login-to-tty config tty user)\n"
"  (if (string=? tty (mingetty-configuration-tty config))\n"
"        (mingetty-configuration\n"
"         (inherit config)\n"
"         (auto-login user))\n"
"        config))\n"
"\n"
msgstr ""
"(define (auto-login-to-tty config tty user)\n"
"  (if (string=? tty (mingetty-configuration-tty config))\n"
"        (mingetty-configuration\n"
"         (inherit config)\n"
"         (auto-login user))\n"
"        config))\n"
"\n"

msgid ""
"(define %my-services\n"
"  (modify-services %base-services\n"
"    ;; @dots{}\n"
"    (mingetty-service-type config =>\n"
"                           (auto-login-to-tty\n"
"                            config \"tty3\" \"alice\"))))\n"
"\n"
msgstr ""
"(define %my-services\n"
"  (modify-services %base-services\n"
"    ;; @dots{}\n"
"    (mingetty-service-type config =>\n"
"                           (auto-login-to-tty\n"
"                            config \"tty3\" \"alice\"))))\n"
"\n"

msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services %my-services))\n"
msgstr ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services %my-services))\n"

msgid "One could also @code{compose} (@pxref{Higher-Order Functions,,, guile, The Guile Reference Manual}) @code{auto-login-to-tty} to login multiple users to multiple ttys."
msgstr "Tiež je možné použiť @code{compose} (@pxref{Higher-Order Functions,,, guile, The Guile Reference Manual}) s @code{auto-login-to-tty} pre prihlásenie viacerých používateľov k viacerým TTY."

msgid "Finally, here is a note of caution.  Setting up auto login to a TTY, means that anyone can turn on your computer and run commands as your regular user.  However, if you have an encrypted root partition, and thus already need to enter a passphrase when the system boots, auto-login might be a convenient option."
msgstr "Varovanie na koniec.  Nastavenie automatického prihlásenia k TTY znamená, že ktokoľvek môže zapnúť váš počítač a spúšťať príkazy ako zvyčajný používateľ.  Hoci, ak používate zašifrovaný koreňový systém a pri spustení systému je nutné zadať heslo, automatické prihlásenie predstavuje praktickú možnosť."

msgid "Guix is, at its core, a source based distribution with substitutes (@pxref{Substitutes,,, guix, GNU Guix Reference Manual}), and as such building packages from their source code is an expected part of regular package installations and upgrades.  Given this starting point, it makes sense that efforts are made to reduce the amount of time spent compiling packages, and recent changes and upgrades to the building and distribution of substitutes continues to be a topic of discussion within Guix."
msgstr "Guix je, vo svojom jadre, distribúcia založená na zdrojových súboroch a náhradách (@pxref{Substitutes,,, guix, GNU Guix Reference Manual}).  Zostavovanie balíkov z ich zdrojových súborov je teda prirodzenou súčasťou inštalácie a aktualizácie balíkov.  Vzhľadom na túto skutočnosť dáva zmysel snaha o zníženie množstva času potrebného na zostavenie balíkov a nedávne zmeny v zostavovaní a šírení náhrad sú aj naďalej súčasťou rozhovorov vrámci projektu Guix."

msgid "The kernel, while not requiring an overabundance of RAM to build, does take a rather long time on an average machine.  The official kernel configuration, as is the case with many GNU/Linux distributions, errs on the side of inclusiveness, and this is really what causes the build to take such a long time when the kernel is built from source."
msgstr "Aj keď nevyžaduje veľké množstvo pamäte RAM, zostavenie jadra na priemerných počítačoch môže trvať veľmi dlho.  Oficiálne nastavenie jadra, tak ako je to v prípade mnohých iných distribúcií GNU/Linuxu, sa prikláňa k širšej ponuke súčastí a to je to, čo spôsobuje, že zostavenie jadra zo zdrojových súborov trvá tak dlho."

msgid "The Linux kernel, however, can also just be described as a regular old package, and as such can be customized just like any other package.  The procedure is a little bit different, although this is primarily due to the nature of how the package definition is written."
msgstr "Avšak, aj samotné jadro Linuxu možno opísať ako balík a teda prispôsobiť ho rovnako ako hociktorý iný balík.  Postup je mierne odlišný, aj keď hlavne kvôli tomu ako je zadanie balíka napísané."

msgid "The @code{linux-libre} kernel package definition is actually a procedure which creates a package."
msgstr "Balík jadra @code{linux-libre} je vlastne funkcia tvoriaca balík."

msgid ""
"(define* (make-linux-libre* version gnu-revision source supported-systems\n"
"                            #:key\n"
"                            (extra-version #f)\n"
"                            ;; A function that takes an arch and a variant.\n"
"                            ;; See kernel-config for an example.\n"
"                            (configuration-file #f)\n"
"                            (defconfig \"defconfig\")\n"
"                            (extra-options (default-extra-linux-options version)))\n"
"  ...)\n"
msgstr ""
"(define* (make-linux-libre* version gnu-revision source supported-systems\n"
"                            #:key\n"
"                            (extra-version #f)\n"
"                            ;; Funkcia vyžadujúca označenie a druh architektúry.\n"
"                            ;; Viď príklad v kernel-config.\n"
"                            (configuration-file #f)\n"
"                            (defconfig \"defconfig\")\n"
"                            (extra-options (default-extra-linux-options version)))\n"
"  ...)\n"

msgid "The current @code{linux-libre} package is for the 5.15.x series, and is declared like this:"
msgstr "Terajší balík @code{linux-libre} pre vydania 5.15.x je zadaný nasledovne:"

msgid ""
"(define-public linux-libre-5.15\n"
"  (make-linux-libre* linux-libre-5.15-version\n"
"                     linux-libre-5.15-gnu-revision\n"
"                     linux-libre-5.15-source\n"
"                     '(\"x86_64-linux\" \"i686-linux\" \"armhf-linux\"\n"
"                       \"aarch64-linux\" \"riscv64-linux\")\n"
"                     #:configuration-file kernel-config))\n"
msgstr ""
"(define-public linux-libre-5.15\n"
"  (make-linux-libre* linux-libre-5.15-version\n"
"                     linux-libre-5.15-gnu-revision\n"
"                     linux-libre-5.15-source\n"
"                     '(\"x86_64-linux\" \"i686-linux\" \"armhf-linux\"\n"
"                       \"aarch64-linux\" \"riscv64-linux\")\n"
"                     #:configuration-file kernel-config))\n"

msgid "Any keys which are not assigned values inherit their default value from the @code{make-linux-libre} definition.  When comparing the two snippets above, notice the code comment that refers to @code{#:configuration-file}.  Because of this, it is not actually easy to include a custom kernel configuration from the definition, but don't worry, there are other ways to work with what we do have."
msgstr "Kľúče, ktoré nemajú pridelenú hodnotu dedia ich predvolenú hodnotu zo zadania @code{make-linux-libre}.  Pri porovnávaní vyššie uvedených úryvkov zdrojového kódu si všimnite komentár odvolávajúci sa na @code{#:configuration-file}.  Kvôli tomu vlastne nie je jednoduché zahrnúť do zadania svoje vlastné nastavenie jadra, ale nezúfajte, pretože jestvujú ďalšie spôsoby ako pracovať s tým čo máme."

msgid "The second way to create a custom kernel is to pass a new value to the @code{extra-options} keyword of the @code{make-linux-libre} procedure.  The @code{extra-options} keyword works with another function defined right below it:"
msgstr "Druhý spôsob ako vytvoriť vlastné jadro je dať novú hodnotu kľúčovému slovu @code{extra-options} funkcie @code{make-linux-libre}.  Kľúčové slovo @code{extra-options} funguje s inou funkciou zadanou nižšie:"

msgid ""
"(define (default-extra-linux-options version)\n"
"  `(;; https://lists.gnu.org/archive/html/guix-devel/2014-04/msg00039.html\n"
"   (\"CONFIG_DEVPTS_MULTIPLE_INSTANCES\" . #true)\n"
"   ;; Modules required for initrd:\n"
"   (\"CONFIG_NET_9P\" . m)\n"
"   (\"CONFIG_NET_9P_VIRTIO\" . m)\n"
"   (\"CONFIG_VIRTIO_BLK\" . m)\n"
"   (\"CONFIG_VIRTIO_NET\" . m)\n"
"   (\"CONFIG_VIRTIO_PCI\" . m)\n"
"   (\"CONFIG_VIRTIO_BALLOON\" . m)\n"
"   (\"CONFIG_VIRTIO_MMIO\" . m)\n"
"   (\"CONFIG_FUSE_FS\" . m)\n"
"   (\"CONFIG_CIFS\" . m)\n"
"   (\"CONFIG_9P_FS\" . m)))\n"
"\n"
msgstr ""
"(define (default-extra-linux-options version)\n"
"  `(;; https://lists.gnu.org/archive/html/guix-devel/2014-04/msg00039.html\n"
"   (\"CONFIG_DEVPTS_MULTIPLE_INSTANCES\" . #true)\n"
"   ;; Moduly potrebné pre initrd:\n"
"   (\"CONFIG_NET_9P\" . m)\n"
"   (\"CONFIG_NET_9P_VIRTIO\" . m)\n"
"   (\"CONFIG_VIRTIO_BLK\" . m)\n"
"   (\"CONFIG_VIRTIO_NET\" . m)\n"
"   (\"CONFIG_VIRTIO_PCI\" . m)\n"
"   (\"CONFIG_VIRTIO_BALLOON\" . m)\n"
"   (\"CONFIG_VIRTIO_MMIO\" . m)\n"
"   (\"CONFIG_FUSE_FS\" . m)\n"
"   (\"CONFIG_CIFS\" . m)\n"
"   (\"CONFIG_9P_FS\" . m)))\n"
"\n"

msgid ""
"(define (config->string options)\n"
"  (string-join (map (match-lambda\n"
"                      ((option . 'm)\n"
"                       (string-append option \"=m\"))\n"
"                      ((option . #true)\n"
"                       (string-append option \"=y\"))\n"
"                      ((option . #false)\n"
"                       (string-append option \"=n\")))\n"
"                    options)\n"
"               \"\\n\"))\n"
msgstr ""
"(define (config->string options)\n"
"  (string-join (map (match-lambda\n"
"                      ((option . 'm)\n"
"                       (string-append option \"=m\"))\n"
"                      ((option . #true)\n"
"                       (string-append option \"=y\"))\n"
"                      ((option . #false)\n"
"                       (string-append option \"=n\")))\n"
"                    options)\n"
"               \"\\n\"))\n"

msgid "And in the custom configure script from the `make-linux-libre` package:"
msgstr "A vo vlastnom „configure“ skripte balíka „make-linux-libre“:"

msgid ""
";; Appending works even when the option wasn't in the\n"
";; file.  The last one prevails if duplicated.\n"
"(let ((port (open-file \".config\" \"a\"))\n"
"      (extra-configuration ,(config->string extra-options)))\n"
"  (display extra-configuration port)\n"
"  (close-port port))\n"
"\n"
msgstr ""
";; Vkladanie na koniec funguje aj keď voľba v súbore nebola.\n"
";; Pri viacnásobnom uvedení prevažuje to posledné.\n"
"(let ((port (open-file \".config\" \"a\"))\n"
"      (extra-configuration ,(config->string extra-options)))\n"
"  (display extra-configuration port)\n"
"  (close-port port))\n"
"\n"

msgid "(invoke \"make\" \"oldconfig\")\n"
msgstr "(invoke \"make\" \"oldconfig\")\n"

msgid "So by not providing a configuration-file the @file{.config} starts blank, and then we write into it the collection of flags that we want.  Here's another custom kernel:"
msgstr "Takže, neposkytnutie súboru nastavenia spôsobí, že je súbor @file{.config} spočiatku prázdny. Potom doň zapíšeme voľby, ktoré chceme.  Viď ďalšie vlastné zadanie jadra:"

msgid ""
"(define %macbook41-full-config\n"
"  (append %macbook41-config-options\n"
"          %file-systems\n"
"          %efi-support\n"
"          %emulation\n"
"          ((@@@@ (gnu packages linux) default-extra-linux-options) version)))\n"
"\n"
msgstr ""
"(define %macbook41-full-config\n"
"  (append %macbook41-config-options\n"
"          %file-systems\n"
"          %efi-support\n"
"          %emulation\n"
"          ((@@@@ (gnu packages linux) default-extra-linux-options) version)))\n"
"\n"

msgid ""
"(define-public linux-libre-macbook41\n"
"  ;; XXX: Access the internal 'make-linux-libre*' procedure, which is\n"
"  ;; private and unexported, and is liable to change in the future.\n"
"  ((@@@@ (gnu packages linux) make-linux-libre*)\n"
"   (@@@@ (gnu packages linux) linux-libre-version)\n"
"   (@@@@ (gnu packages linux) linux-libre-gnu-revision)\n"
"   (@@@@ (gnu packages linux) linux-libre-source)\n"
"   '(\"x86_64-linux\")\n"
"   #:extra-version \"macbook41\"\n"
"   #:extra-options %macbook41-config-options))\n"
msgstr ""
"(define-public linux-libre-macbook41\n"
"  ;; XXX: Prístup k funkcii „make-linux-libre*“, ktorá je súkromná,\n"
"  ;; neexportuje sa a v budúcnosti by sa mohla zmeniť.\n"
"  ((@@@@ (gnu packages linux) make-linux-libre*)\n"
"   (@@@@ (gnu packages linux) linux-libre-version)\n"
"   (@@@@ (gnu packages linux) linux-libre-gnu-revision)\n"
"   (@@@@ (gnu packages linux) linux-libre-source)\n"
"   '(\"x86_64-linux\")\n"
"   #:extra-version \"macbook41\"\n"
"   #:extra-options %macbook41-config-options))\n"

msgid "In the above example @code{%file-systems} is a collection of flags enabling different file system support, @code{%efi-support} enables EFI support and @code{%emulation} enables a x86_64-linux machine to act in 32-bit mode also.  The @code{default-extra-linux-options} procedure is the one defined above, which had to be used to avoid losing the default configuration options of the @code{extra-options} keyword."
msgstr "V hore uvedenom príklade je @code{%file-systems} zbierkou volieb povoľujúcich podporu rôznych súborových systémov, @code{%efi-support} povoľuje podporu EFI a @code{%emulation} povoľuje strojom x86_64-linux pracovať v 32-bitovom režime.  Postup @code{default-extra-linux-options} je ten, ktorý sme zadali už predtým, aby sme zabránili strate prednastavených volieb kľúčového slova @code{extra-options}."

msgid "This all sounds like it should be doable, but how does one even know which modules are required for a particular system? Two places that can be helpful in trying to answer this question is the @uref{https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Kernel, Gentoo Handbook} and the @uref{https://www.kernel.org/doc/html/latest/admin-guide/README.html?highlight=localmodconfig, documentation from the kernel itself}.  From the kernel documentation, it seems that @code{make localmodconfig} is the command we want."
msgstr "Všetko toto znie veľmi dobre, ale ako zistiť, ktoré moduly vyžaduje určitý systém? Na túto otázku nám môžu pomôcť odpovedať dva zdroje: @uref{https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Kernel, Príručka Gentoo} a @uref{https://www.kernel.org/doc/html/latest/admin-guide/README.html?highlight=localmodconfig, dokumentácia samotného jadra}.  Podľa dokumentácie jadra sa zdá, že @code{make localmodconfig} je príkaz, ktorý hľadáme."

msgid "In order to actually run @code{make localmodconfig} we first need to get and unpack the kernel source code:"
msgstr "Skôr ako budeme môcť spustiť @code{make localmodconfig}, musíme stiahnuť a rozbaliť zdrojové súbory jadra:"

msgid "tar xf $(guix build linux-libre --source)\n"
msgstr "tar xf $(guix build linux-libre --source)\n"

msgid "Once inside the directory containing the source code run @code{touch .config} to create an initial, empty @file{.config} to start with.  @code{make localmodconfig} works by seeing what you already have in @file{.config} and letting you know what you're missing.  If the file is blank then you're missing everything.  The next step is to run:"
msgstr "V priečinku obsahujúcom zdrojové súbory spustite @code{touch .config} pre vytvorenie počiatočného prázdneho @file{.config} súboru.  @code{make localmodconfig} funguje tak, že zistí, čo ste už zadali do @file{.config} a povie vám, čo vám ešte chýba.  Ak je súbor prázdny, tak vám chýba všetko.  Ďalším krokom je spustiť:"

msgid "guix shell -D linux-libre -- make localmodconfig\n"
msgstr "guix shell -D linux-libre -- make localmodconfig\n"

msgid "and note the output.  Do note that the @file{.config} file is still empty.  The output generally contains two types of warnings.  The first start with \"WARNING\" and can actually be ignored in our case.  The second read:"
msgstr "a pozrite si výstup.  Všimnite si, že súbor @file{.config} je stále prázdny.  Výstup obvykle obsahuje dva druhy varovných správ.  Prvá začína slovom „WARNING“ a v našom prípade si ju nemusíme všímať.  Druhá správa nám hovorí, že:"

msgid "module pcspkr did not have configs CONFIG_INPUT_PCSPKR\n"
msgstr "module pcspkr did not have configs CONFIG_INPUT_PCSPKR\n"

msgid "For each of these lines, copy the @code{CONFIG_XXXX_XXXX} portion into the @file{.config} in the directory, and append @code{=m}, so in the end it looks like this:"
msgstr "Pre každý z týchto riadkov skopírujte časť @code{CONFIG_XXXX_XXXX} do @file{.config} súboru priečinka a pridajte @code{=m} tak, aby nakoniec vyzeral takto:"

msgid ""
"CONFIG_INPUT_PCSPKR=m\n"
"CONFIG_VIRTIO=m\n"
msgstr ""
"CONFIG_INPUT_PCSPKR=m\n"
"CONFIG_VIRTIO=m\n"

msgid "After copying all the configuration options, run @code{make localmodconfig} again to make sure that you don't have any output starting with ``module''.  After all of these machine specific modules there are a couple more left that are also needed.  @code{CONFIG_MODULES} is necessary so that you can build and load modules separately and not have everything built into the kernel.  @code{CONFIG_BLK_DEV_SD} is required for reading from hard drives.  It is possible that there are other modules which you will need."
msgstr "Po skopírovaní všetkých volieb nastavenia znova spustite @code{make localmodconfig}, aby ste sa uistili, že výstup už neobsahuje žiadne správy začínajúce slovom „module“.  Okrem všetkých týchto modulov vzťahujúcich sa k stroju nám ostáva ešte niekoľko ďalších dôležitých modulov.  @code{CONFIG_MODULES} umožňuje zostavovať a načítavať moduly oddelene, aby nemuseli byť zabudované do jadra.  @code{CONFIG_BLK_DEV_SD} umožňuje čítať pevné disky.  Je tiež možné, že budete potrebovať aj iné moduly."

msgid "This post does not aim to be a guide to configuring your own kernel however, so if you do decide to build a custom kernel you'll have to seek out other guides to create a kernel which is just right for your needs."
msgstr "Tento príspevok nemá za úlohu vás previesť nastavením vášho vlastného jadra. Ak sa rozhodnete zostaviť si vlastné jadro, budete si musieť nájsť iné návody na vytvorenie jadra, ktoré vám bude vyhovovať."

msgid "The second way to setup the kernel configuration makes more use of Guix's features and allows you to share configuration segments between different kernels.  For example, all machines using EFI to boot have a number of EFI configuration flags that they need.  It is likely that all the kernels will share a list of file systems to support.  By using variables it is easier to see at a glance what features are enabled and to make sure you don't have features in one kernel but missing in another."
msgstr "Druhý spôsob nastavenia jadra využíva funkcie Guixu vo väčšej miere a umožňuje vám zdieľať časti nastavenia medzi rôznymi jadrami.  Napríklad, všetky stroje používajúce na zavádzanie EFI vyžadujú určitý počet volieb nastavenia EFI.  Je tiež pravdepodobné, že viaceré jadrá budú zdieľať podporu niekoľkých súborových systémov.  Použitím premenných je jednoduchšie spozorovať, ktoré súčasti sú povolené a uistiť sa, či nie sú niektoré z nich prítomné v jednom jadre ale v druhom chýbajú."

msgid "Left undiscussed however, is Guix's initrd and its customization.  It is likely that you'll need to modify the initrd on a machine using a custom kernel, since certain modules which are expected to be built may not be available for inclusion into the initrd."
msgstr "Nepozreli sme sa však na initrd a jeho prispôsobenie.  Je pravdepodobné, že budete potrebovať prispôsobiť initrd na stroji s vlastným jadrom, keďže niektoré moduly nemusia byť dostupné pre zahrnutie do initrd."

msgid "Historically, Guix System is centered around an @code{operating-system} structure.  This structure contains various fields ranging from the bootloader and kernel declaration to the services to install."
msgstr "Z dejinného pohľadu je systém Guix sústredený okolo štruktúry @code{operating-system}.  Táto štruktúra obsahuje rôzne polia počínajúc zadaním zavádzača a jadra až k službám, ktoré sa majú nainštalovať."

msgid "Depending on the target machine, that can go from a standard @code{x86_64} machine to a small ARM single board computer such as the Pine64, the image constraints can vary a lot.  The hardware manufacturers will impose different image formats with various partition sizes and offsets."
msgstr "Požiadavky na obraz sa môžu značne líšiť v závislosti na cieľovom stroji, čo môže byť obvyklý @code{x86_64} alebo malý jednodoskový počítač ako Pine64. Výrobcovia technického vybavenia presadzujú rôzne formáty obrazov s rôznymi veľkosťami a umiestneniami oddielov."

msgid "To create images suitable for all those machines, a new abstraction is necessary: that's the goal of the @code{image} record.  This record contains all the required information to be transformed into a standalone image, that can be directly booted on any target machine."
msgstr "Na vytváranie obrazov vhodných pre všetky tieto stroje je nevyhnutné ďalšie zovšeobecnenie, čo je cieľom záznamu @code{image}.  Tento záznam obsahuje všetky potrebné údaje k premene na samostatný obraz, ktorý je možno priamo zaviesť na hocijakom cieľovom stroji."

msgid ""
"(define-record-type* <image>\n"
"  image make-image\n"
"  image?\n"
"  (name               image-name ;symbol\n"
"                      (default #f))\n"
"  (format             image-format) ;symbol\n"
"  (target             image-target\n"
"                      (default #f))\n"
"  (size               image-size  ;size in bytes as integer\n"
"                      (default 'guess))\n"
"  (operating-system   image-operating-system  ;<operating-system>\n"
"                      (default #f))\n"
"  (partitions         image-partitions ;list of <partition>\n"
"                      (default '()))\n"
"  (compression?       image-compression? ;boolean\n"
"                      (default #t))\n"
"  (volatile-root?     image-volatile-root? ;boolean\n"
"                      (default #t))\n"
"  (substitutable?     image-substitutable? ;boolean\n"
"                      (default #t)))\n"
msgstr ""
"(define-record-type* <image>\n"
"  image make-image\n"
"  image?\n"
"  (name               image-name ;symbol\n"
"                      (default #f))\n"
"  (format             image-format) ;symbol\n"
"  (target             image-target\n"
"                      (default #f))\n"
"  (size               image-size  ;size in bytes as integer\n"
"                      (default 'guess))\n"
"  (operating-system   image-operating-system  ;<operating-system>\n"
"                      (default #f))\n"
"  (partitions         image-partitions ;list of <partition>\n"
"                      (default '()))\n"
"  (compression?       image-compression? ;boolean\n"
"                      (default #t))\n"
"  (volatile-root?     image-volatile-root? ;boolean\n"
"                      (default #t))\n"
"  (substitutable?     image-substitutable? ;boolean\n"
"                      (default #t)))\n"

msgid "This record contains the operating-system to instantiate. The @code{format} field defines the image type and can be @code{efi-raw}, @code{qcow2} or @code{iso9660} for instance. In the future, it could be extended to @code{docker} or other image types."
msgstr "Tento záznam obsahuje operačný systém na zostavenie. Pole @code{format} určuje druh obrazu a medzi jeho platné hodnoty patria @code{efi-raw}, @code{qcow2} alebo @code{iso9660}. V budúcnosti by sa mohli rozšíriť o @code{docker} a ďalšie druhy obrazov."

msgid "A new directory in the Guix sources is dedicated to images definition. For now there are four files:"
msgstr "Na zadávanie obrazov bol spomedzi zdrojových súborov Guixu vyhradený nový priečinok. Zatiaľ sa v ňom nachádzajú štyri súbory:"

msgid "gnu/system/images/hurd.scm"
msgstr "gnu/system/images/hurd.scm"

msgid "gnu/system/images/pine64.scm"
msgstr "gnu/system/images/pine64.scm"

msgid "gnu/system/images/novena.scm"
msgstr "gnu/system/images/novena.scm"

msgid "gnu/system/images/pinebook-pro.scm"
msgstr "gnu/system/images/pinebook-pro.scm"

msgid "Let's have a look to @file{pine64.scm}. It contains the @code{pine64-barebones-os} variable which is a minimal definition of an operating-system dedicated to the @b{Pine A64 LTS} board."
msgstr "Pozrime sa na @file{pine64.scm}. Obsahuje premennú @code{pine64-barebones-os} predstavujúcu najmenšie možné zadanie operačného systému určeného pre dosku @b{Pine A64 LTS}."

msgid ""
"(define pine64-barebones-os\n"
"  (operating-system\n"
"   (host-name \"vignemale\")\n"
"   (timezone \"Europe/Paris\")\n"
"   (locale \"en_US.utf8\")\n"
"   (bootloader (bootloader-configuration\n"
"                (bootloader u-boot-pine64-lts-bootloader)\n"
"                (targets '(\"/dev/vda\"))))\n"
"   (initrd-modules '())\n"
"   (kernel linux-libre-arm64-generic)\n"
"   (file-systems (cons (file-system\n"
"                        (device (file-system-label \"my-root\"))\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                       %base-file-systems))\n"
"   (services (cons (service agetty-service-type\n"
"                            (agetty-configuration\n"
"                             (extra-options '(\"-L\")) ; no carrier detect\n"
"                             (baud-rate \"115200\")\n"
"                             (term \"vt100\")\n"
"                             (tty \"ttyS0\")))\n"
"                   %base-services))))\n"
msgstr ""
"(define pine64-barebones-os\n"
"  (operating-system\n"
"   (host-name \"vignemale\")\n"
"   (timezone \"Europe/Bratislava\")\n"
"   (locale \"sk_SK.utf8\")\n"
"   (bootloader (bootloader-configuration\n"
"                (bootloader u-boot-pine64-lts-bootloader)\n"
"                (targets '(\"/dev/vda\"))))\n"
"   (initrd-modules '())\n"
"   (kernel linux-libre-arm64-generic)\n"
"   (file-systems (cons (file-system\n"
"                        (device (file-system-label \"moj-korenovy-system\"))\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                       %base-file-systems))\n"
"   (services (cons (service agetty-service-type\n"
"                            (agetty-configuration\n"
"                             (extra-options '(\"-L\")) ; bez zisťovania nosného signálu\n"
"                             (baud-rate \"115200\")\n"
"                             (term \"vt100\")\n"
"                             (tty \"ttyS0\")))\n"
"                   %base-services))))\n"

msgid "The @code{kernel} and @code{bootloader} fields are pointing to packages dedicated to this board."
msgstr "Polia @code{kernel} a @code{bootloader} odkazujú na balíky určené pre túto dosku."

msgid "Right below, the @code{pine64-image-type} variable is also defined."
msgstr "Tesne pod nimi je zadaná aj premenná @code{pine64-image-type}."

msgid ""
"(define pine64-image-type\n"
"  (image-type\n"
"   (name 'pine64-raw)\n"
"   (constructor (cut image-with-os arm64-disk-image <>))))\n"
msgstr ""
"(define pine64-image-type\n"
"  (image-type\n"
"   (name 'pine64-raw)\n"
"   (constructor (cut image-with-os arm64-disk-image <>))))\n"

msgid "It's using a record we haven't talked about yet, the @code{image-type} record, defined this way:"
msgstr "Využíva záznam, o ktorom sme ešte nehovorili, a teda @code{image-type}, zadaný nasledovne:"

msgid ""
"(define-record-type* <image-type>\n"
"  image-type make-image-type\n"
"  image-type?\n"
"  (name           image-type-name) ;symbol\n"
"  (constructor    image-type-constructor)) ;<operating-system> -> <image>\n"
msgstr ""
"(define-record-type* <image-type>\n"
"  image-type make-image-type\n"
"  image-type?\n"
"  (name           image-type-name) ; znak\n"
"  (constructor    image-type-constructor)) ; <operating-system> -> <image>\n"

msgid "The main purpose of this record is to associate a name to a procedure transforming an @code{operating-system} to an image.  To understand why it is necessary, let's have a look to the command producing an image from an @code{operating-system} configuration file:"
msgstr "Hlavným účelom tohto záznamu je priradiť názov funkcii pretvárajúcej @code{operating-system} na obraz.  Aby sme pochopili, prečo je to dôležité, pozrime sa na príkaz vytvárajúci obraz zo súboru nastavení @code{operating-system}:"

msgid "guix system image my-os.scm\n"
msgstr "guix system image moj-os.scm\n"

msgid "This command expects an @code{operating-system} configuration but how should we indicate that we want an image targeting a Pine64 board? We need to provide an extra information, the @code{image-type}, by passing the @code{--image-type} or @code{-t} flag, this way:"
msgstr "Tento príkaz očakáva nastavenie druhu @code{operating-system}, ale ako by sme mali určiť, že chceme obraz pre dosku Pine64? Musíme poskytnúť doplňujúci údaj, @code{image-type}, pomocou voľby @code{--image-type} alebo @code{-t} a to takto:"

msgid "guix system image --image-type=pine64-raw my-os.scm\n"
msgstr "guix system image --image-type=pine64-raw moj-os.scm\n"

msgid "This @code{image-type} parameter points to the @code{pine64-image-type} defined above. Hence, the @code{operating-system} declared in @code{my-os.scm} will be applied the @code{(cut image-with-os arm64-disk-image <>)} procedure to turn it into an image."
msgstr "Tento @code{image-type} parameter odkazuje na @code{pine64-image-type} uvedený vyššie. Na @code{operating-system} zadaný v @code{moj-os.scm} sa teda použije funkcia @code{(cut image-with-os arm64-disk-image <>)} pre vytvorenie obrazu."

msgid "The resulting image looks like:"
msgstr "Výsledný obraz vyzerá asi takto:"

msgid ""
"(image\n"
" (format 'disk-image)\n"
" (target \"aarch64-linux-gnu\")\n"
" (operating-system my-os)\n"
" (partitions\n"
"  (list (partition\n"
"         (inherit root-partition)\n"
"         (offset root-offset)))))\n"
msgstr ""
"(image\n"
" (format 'disk-image)\n"
" (target \"aarch64-linux-gnu\")\n"
" (operating-system moj-os)\n"
" (partitions\n"
"  (list (partition\n"
"         (inherit root-partition)\n"
"         (offset root-offset)))))\n"

msgid "which is the aggregation of the @code{operating-system} defined in @code{my-os.scm} to the @code{arm64-disk-image} record."
msgstr "čo je združenie člena @code{operating-system} zadaného v @code{moj-os.scm} so záznamom @code{arm64-disk-image}."

msgid "But enough Scheme madness. What does this image API bring to the Guix user?"
msgstr "Stačilo už tohto Scheme šialenstva. Čo toto API prináša používateľom Guixu?"

msgid "One can run:"
msgstr "Môžete spustiť:"

msgid ""
"mathieu@@cervin:~$ guix system --list-image-types\n"
"The available image types are:\n"
"\n"
msgstr ""
"mathieu@@cervin:~$ guix system --list-image-types\n"
"Dostupné druhy obrazov sú:\n"
"\n"

msgid ""
"   - unmatched-raw\n"
"   - rock64-raw\n"
"   - pinebook-pro-raw\n"
"   - pine64-raw\n"
"   - novena-raw\n"
"   - hurd-raw\n"
"   - hurd-qcow2\n"
"   - qcow2\n"
"   - iso9660\n"
"   - uncompressed-iso9660\n"
"   - tarball\n"
"   - efi-raw\n"
"   - mbr-raw\n"
"   - docker\n"
"   - wsl2\n"
"   - raw-with-offset\n"
"   - efi32-raw\n"
msgstr ""
"   - unmatched-raw\n"
"   - rock64-raw\n"
"   - pinebook-pro-raw\n"
"   - pine64-raw\n"
"   - novena-raw\n"
"   - hurd-raw\n"
"   - hurd-qcow2\n"
"   - qcow2\n"
"   - iso9660\n"
"   - uncompressed-iso9660\n"
"   - tarball\n"
"   - efi-raw\n"
"   - mbr-raw\n"
"   - docker\n"
"   - wsl2\n"
"   - raw-with-offset\n"
"   - efi32-raw\n"

msgid "and by writing an @code{operating-system} file based on @code{pine64-barebones-os}, you can customize your image to your preferences in a file (@file{my-pine-os.scm}) like this:"
msgstr "a vytvorením súboru druhu @code{operating-system}, založenom na @code{pine64-barebones-os}, si môžete váš obraz prispôsobiť v súbore (@file{moj-pine-os.scm}) asi takto:"

msgid ""
"(use-modules (gnu services linux)\n"
"             (gnu system images pine64))\n"
"\n"
msgstr ""
"(use-modules (gnu services linux)\n"
"             (gnu system images pine64))\n"
"\n"

msgid ""
"(let ((base-os pine64-barebones-os))\n"
"  (operating-system\n"
"    (inherit base-os)\n"
"    (timezone \"America/Indiana/Indianapolis\")\n"
"    (services\n"
"     (cons\n"
"      (service earlyoom-service-type\n"
"               (earlyoom-configuration\n"
"                (prefer-regexp \"icecat|chromium\")))\n"
"      (operating-system-user-services base-os)))))\n"
msgstr ""
"(let ((base-os pine64-barebones-os))\n"
"  (operating-system\n"
"    (inherit base-os)\n"
"    (timezone \"Europe/Bratislava\")\n"
"    (services\n"
"     (cons\n"
"      (service earlyoom-service-type\n"
"               (earlyoom-configuration\n"
"                (prefer-regexp \"icecat|chromium\")))\n"
"      (operating-system-user-services base-os)))))\n"

msgid "run:"
msgstr "spustite:"

msgid "guix system image --image-type=pine64-raw my-pine-os.scm\n"
msgstr "guix system image --image-type=pine64-raw moj-os.scm\n"

msgid "or,"
msgstr "alebo"

msgid "guix system image --image-type=hurd-raw my-hurd-os.scm\n"
msgstr "guix system image --image-type=hurd-raw moj-hurd-os.scm\n"

msgid "to get an image that can be written directly to a hard drive and booted from."
msgstr "pre získanie obrazu, ktorý možno zapísať priamo na pevný disk a zaviesť."

msgid "Without changing anything to @code{my-hurd-os.scm}, calling:"
msgstr "Bezo zmeny v @code{moj-hurd-os.scm}, volanie:"

msgid "guix system image --image-type=hurd-qcow2 my-hurd-os.scm\n"
msgstr "guix system image --image-type=hurd-qcow2 moj-hurd-os.scm\n"

msgid "will instead produce a Hurd QEMU image."
msgstr "namiesto toho vytvorí Hurd QEMU obraz."

msgid "2FA, two-factor authentication"
msgstr "2FA, dvojstupňové overenie"

msgid "U2F, Universal 2nd Factor"
msgstr "U2F, všeobecný druhý stupeň"

msgid "security key, configuration"
msgstr "bezpečnostný kľúč, nastavenie"

msgid "The use of security keys can improve your security by providing a second authentication source that cannot be easily stolen or copied, at least for a remote adversary (something that you have), to the main secret (a passphrase -- something that you know), reducing the risk of impersonation."
msgstr "Používanie bezpečnostných kľúčov môže zvýšiť vašu bezpečnosť tým, že hlavnému predmetu utajenia (heslo - niečo, čo poznáte) poskytne podružný zdroj overenia, ktorý nemožno jednoducho ukradnúť alebo skopírovať (niečo, čo vlastníte), aspoň v prípade vzdialených protivníkov, čo znižuje riziko krádeže totožnosti."

msgid "The example configuration detailed below showcases what minimal configuration needs to be made on your Guix System to allow the use of a Yubico security key.  It is hoped the configuration can be useful for other security keys as well, with minor adjustments."
msgstr "Nižšie uvedený podrobný príklad znázorňuje najstručnejšie možné nastavenie potrebné pre umožnenie používania bezpečnostného kľúča Yubico v systéme Guix.  Dúfame, že toto nastavenie bude, s menšími úpravami, možné použiť aj pre iné bezpečnostné kľúče."

msgid "Configuration for use as a two-factor authenticator (2FA)"
msgstr "Nastavenie pre použitie v rámci dvojstupňového overenia (2FA)"

msgid "To be usable, the udev rules of the system should be extended with key-specific rules.  The following shows how to extend your udev rules with the @file{lib/udev/rules.d/70-u2f.rules} udev rule file provided by the @code{libfido2} package from the @code{(gnu packages security-token)} module and add your user to the @samp{\"plugdev\"} group it uses:"
msgstr "Aby sa kľúč dal použiť, je nutné rozšíriť udev pravidlá systému o pravidlá príznačné pre daný kľúč.  Nasledovný postup popisuje kroky pre rozšírenie udev pravidiel prostredníctvom súboru udev pravidiel @file{lib/udev/rules.d/70-u2f.rules} poskytovaného balíkom @code{libfido2} z modulu @code{(gnu packages security-token)} a pre pridanie vášho používateľského účtu do skupiny @samp{\"plugdev\"}, ktorú využíva:"

msgid ""
"(use-package-modules ... security-token ...)\n"
"...\n"
"(operating-system\n"
" ...\n"
" (users (cons* (user-account\n"
"               (name \"your-user\")\n"
"               (group \"users\")\n"
"               (supplementary-groups\n"
"\t\t'(\"wheel\" \"netdev\" \"audio\" \"video\"\n"
"                  \"plugdev\"))           ;<- added system group\n"
"               (home-directory \"/home/your-user\"))\n"
"              %base-user-accounts))\n"
" ...\n"
" (services\n"
"  (cons*\n"
"   ...\n"
"   (udev-rules-service 'fido2 libfido2 #:groups '(\"plugdev\")))))\n"
msgstr ""
"(use-package-modules ... security-token ...)\n"
"...\n"
"(operating-system\n"
" ...\n"
" (users (cons* (user-account\n"
"               (name \"vas-pouzivatelsky-ucet\")\n"
"               (group \"users\")\n"
"               (supplementary-groups\n"
"\t\t'(\"wheel\" \"netdev\" \"audio\" \"video\"\n"
"                  \"plugdev\"))           ;<- pridaná systémová skupina\n"
"               (home-directory \"/home/vas-pouzivatelsky-ucet\"))\n"
"              %base-user-accounts))\n"
" ...\n"
" (services\n"
"  (cons*\n"
"   ...\n"
"   (udev-rules-service 'fido2 libfido2 #:groups '(\"plugdev\")))))\n"

msgid "After re-configuring your system and re-logging in your graphical session so that the new group is in effect for your user, you can verify that your key is usable by launching:"
msgstr "Znovunastavením systému a opätovným prihlásením do vášho grafického sedenia uplatníte členstvo vášho používateľského účtu v novej skupine. Potom môžete overiť použiteľnosť vášho kľúča spustením:"

msgid "guix shell ungoogled-chromium -- chromium chrome://settings/securityKeys\n"
msgstr "guix shell ungoogled-chromium -- chromium chrome://settings/securityKeys\n"

msgid "and validating that the security key can be reset via the ``Reset your security key'' menu.  If it works, congratulations, your security key is ready to be used with applications supporting two-factor authentication (2FA)."
msgstr "a potvrdením, že bezpečnostný kľúč sa dá vynulovať v ponuke „Vynulovať váš bezpečnostný kľúč“.  Ak to funguje, blahoželáme! Váš bezpečnostný kľúč je pripravený na použitie v aplikáciách podporujúcich dvojstupňové overenie (2FA)."

msgid "Disabling OTP code generation for a Yubikey"
msgstr "Vypnúť vytváranie OTP kódov pre Yubikey"

msgid "disabling yubikey OTP"
msgstr "vypnutie OTP pre yubikey"

msgid "If you use a Yubikey security key and are irritated by the spurious OTP codes it generates when inadvertently touching the key (e.g. causing you to become a spammer in the @samp{#guix} channel when discussing from your favorite IRC client!), you can disable it via the following @command{ykman} command:"
msgstr "Ak používate bezpečnostný kľúč Yubikey a otravujú vás nesprávne OTP kódy, ktoré vytvára, keď nedopatrením kľúč zmeníte (napr. z vás spraví odosielateľa nevyžiadaných správ v kanáli @samp{#guix} zatiaľčo sa zhovárate vo vašom obľúbenom IRC klientovi!), môžete to vypnúť nasledovným @command{ykman} príkazom:"

msgid "guix shell python-yubikey-manager -- ykman config usb --force --disable OTP\n"
msgstr "guix shell python-yubikey-manager -- ykman config usb --force --disable OTP\n"

msgid "Alternatively, you could use the @command{ykman-gui} command provided by the @code{yubikey-manager-qt} package and either wholly disable the @samp{OTP} application for the USB interface or, from the @samp{Applications -> OTP} view, delete the slot 1 configuration, which comes pre-configured with the Yubico OTP application."
msgstr "Ďalšou možnosťou je použiť príkaz @command{ykman-gui} z balíka @code{yubikey-manager-qt} a buď úplne vypnúť @samp{OTP} aplikáciu pre rozhranie USB, alebo z @samp{Applications -> OTP} vymazať nastavenie zásuvky 1, prednastavenej aplikáciou Yubico OTP."

msgid "Requiring a Yubikey to open a KeePassXC database"
msgstr "Požiadať o Yubikey na otvorenie KeePassXC databázy"

msgid "yubikey, keepassxc integration"
msgstr "yubikey, prepojenie s keepassxc"

msgid "The KeePassXC password manager application has support for Yubikeys, but it requires installing a udev rules for your Guix System and some configuration of the Yubico OTP application on the key."
msgstr "Správca hesiel KeePassXC podporuje kľúče Yubikeys, ale táto podpora si vyžaduje inštaláciu udev pravidiel pre váš systém Guix a nastavenie aplikácie Yubico OTP na vybraný kľúč."

msgid "The necessary udev rules file comes from the @code{yubikey-personalization} package, and can be installed like:"
msgstr "Potrebný súbor udev pravidiel pochádza z balíka @code{yubikey-personalization} a možno ho nainštalovať nasledovne:"

msgid ""
"(use-package-modules ... security-token ...)\n"
"...\n"
"(operating-system\n"
" ...\n"
" (services\n"
"  (cons*\n"
"   ...\n"
"   (udev-rules-service 'yubikey yubikey-personalization))))\n"
msgstr ""
"(use-package-modules ... security-token ...)\n"
"...\n"
"(operating-system\n"
" ...\n"
" (services\n"
"  (cons*\n"
"   ...\n"
"   (udev-rules-service 'yubikey yubikey-personalization))))\n"

msgid "To connect to a Wireguard VPN server you need the kernel module to be loaded in memory and a package providing networking tools that support it (e.g.  @code{wireguard-tools} or @code{network-manager})."
msgstr "Pre pripojenie k serveru Wireguard VPN je potrebné načítať príslušný modul jadra ako aj balík poskytujúci sieťové nástroje, ktoré ho podporujú (napr.  @code{wireguard-tools} alebo @code{network-manager})."

msgid "Here is a configuration example for Linux-Libre < 5.6, where the module is out of tree and need to be loaded manually---following revisions of the kernel have it built-in and so don't need such configuration:"
msgstr "Nasleduje príklad nastavenia pre jadrá Linux-Libre < 5.6, ktoré príslušný modul nezahŕňajú a vyžadujú jeho ručné načítanie. V novších vydaniach jadra je modul už zabudovaný a takéto nastavenie nie je potrebné:"

msgid ""
"(use-modules (gnu))\n"
"(use-service-modules desktop)\n"
"(use-package-modules vpn)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-service-modules desktop)\n"
"(use-package-modules vpn)\n"
"\n"

msgid ""
"(operating-system\n"
"  ;; …\n"
"  (services (cons (simple-service 'wireguard-module\n"
"                                  kernel-module-loader-service-type\n"
"                                  '(\"wireguard\"))\n"
"                  %desktop-services))\n"
"  (packages (cons wireguard-tools %base-packages))\n"
"  (kernel-loadable-modules (list wireguard-linux-compat)))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (services (cons (simple-service 'wireguard-module\n"
"                                  kernel-module-loader-service-type\n"
"                                  '(\"wireguard\"))\n"
"                  %desktop-services))\n"
"  (packages (cons wireguard-tools %base-packages))\n"
"  (kernel-loadable-modules (list wireguard-linux-compat)))\n"

msgid "After reconfiguring and restarting your system you can either use Wireguard tools or NetworkManager to connect to a VPN server."
msgstr "Po znovunastavení a opätovnom spustení systému môžete použiť buď nástroje Wireguard alebo NetworkManager pre pripojenie k VPN serveru."

msgid "Using Wireguard tools"
msgstr "Použitie nástrojov Wireguard"

msgid "To test your Wireguard setup it is convenient to use @command{wg-quick}.  Just give it a configuration file @command{wg-quick up ./wg0.conf}; or put that file in @file{/etc/wireguard} and run @command{wg-quick up wg0} instead."
msgstr "Pre vyskúšanie nastavenia Wireguard je vhodné použiť @command{wg-quick}.  Stačí mu poskytnúť súbor nastavení @command{wg-quick up ./wg0.conf}. Súbor tiež môžete umiestniť do @file{/etc/wireguard} a namiesto predošlého príkazu vykonať @command{wg-quick up wg0}."

msgid "Be warned that the author described this command as a: “[…] very quick and dirty bash script […]”."
msgstr "Vedzte však, že autor tento príkaz opísal ako „[…] veľmi narýchlo napísaný bash skript […]“."

msgid "Using NetworkManager"
msgstr "Použitie nástroja NetworkManager"

msgid "Thanks to NetworkManager support for Wireguard we can connect to our VPN using @command{nmcli} command.  Up to this point this guide assumes that you're using Network Manager service provided by @code{%desktop-services}.  Ortherwise you need to adjust your services list to load @code{network-manager-service-type} and reconfigure your Guix system."
msgstr "Vďaka podpore nástroja NetworkManager pre Wireguard sa môžeme k našej VPN sieti pripojiť pomocou príkazu @command{nmcli}.  Tento návod predpokladá, že používate službu NetworkManager, ktorú poskytujú @code{%desktop-services}.  V opačnom prípade budete musieť rozšíriť váš zoznam služieb o @code{network-manager-service-type} a znovunastaviť váš systém Guix."

msgid "To import your VPN configuration execute nmcli import command:"
msgstr "Pre načítanie vášho nastavenia VPN vykonajte nasledovný nmcli príkaz:"

msgid ""
"# nmcli connection import type wireguard file wg0.conf\n"
"Connection 'wg0' (edbee261-aa5a-42db-b032-6c7757c60fde) successfully added\n"
msgstr ""
"# nmcli connection import type wireguard file wg0.conf\n"
"Connection 'wg0' (edbee261-aa5a-42db-b032-6c7757c60fde) successfully added\n"

msgid "This will create a configuration file in @file{/etc/NetworkManager/wg0.nmconnection}.  Next connect to the Wireguard server:"
msgstr "Týmto sa vytvorí súbor nastavení @file{/etc/NetworkManager/wg0.nmconnection}.  Potom sa pripojte k serveru Wireguard:"

msgid ""
"$ nmcli connection up wg0\n"
"Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/6)\n"
msgstr ""
"$ nmcli connection up wg0\n"
"Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/6)\n"

msgid "By default NetworkManager will connect automatically on system boot.  To change that behaviour you need to edit your config:"
msgstr "Predvolene sa NetworkManager sám pripojí pri spustení systému.  Toto správanie môžete zmeniť v nastaveniach:"

msgid "# nmcli connection modify wg0 connection.autoconnect no\n"
msgstr "# nmcli connection modify wg0 connection.autoconnect no\n"

msgid "For more specific information about NetworkManager and wireguard @uref{https://blogs.gnome.org/thaller/2019/03/15/wireguard-in-networkmanager/,see this post by thaller}."
msgstr "Podrobnejšie poznatky o nástroji NetworkManager a wireguard získate v @uref{https://blogs.gnome.org/thaller/2019/03/15/wireguard-in-networkmanager/,tomto príspevku od thallera}."

msgid "wm"
msgstr "wm"

msgid "stumpwm"
msgstr "stumpwm"

msgid "You could install StumpWM with a Guix system by adding @code{stumpwm} and optionally @code{`(,stumpwm \"lib\")} packages to a system configuration file, e.g.@: @file{/etc/config.scm}."
msgstr "StumpWM so systémom Guix môžete nainštalovať pridaním @code{stumpwm} a nepovinne aj @code{`(,stumpwm \"lib\")} balíkov do súboru nastavení systému, napr.@: @file{/etc/config.scm}."

msgid "An example configuration can look like this:"
msgstr "Príklad nastavenia:"

msgid ""
"(use-modules (gnu))\n"
"(use-package-modules wm)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-package-modules wm)\n"
"\n"

msgid ""
"(operating-system\n"
"  ;; …\n"
"  (packages (append (list sbcl stumpwm `(,stumpwm \"lib\"))\n"
"                    %base-packages)))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (packages (append (list sbcl stumpwm `(,stumpwm \"lib\"))\n"
"                    %base-packages)))\n"

msgid "stumpwm fonts"
msgstr "písma stumpwm"

msgid "By default StumpWM uses X11 fonts, which could be small or pixelated on your system.  You could fix this by installing StumpWM contrib Lisp module @code{sbcl-ttf-fonts}, adding it to Guix system packages:"
msgstr "StumpWM predvolene používa písma X11, ktoré môžu byť primalé alebo nedostatočne ostré.  Lepšie zobrazenie môžete docieliť nainštalovaním Lisp modulu @code{sbcl-ttf-fonts} pre StumpWM, teda jeho pridaním k balíkom systému Guix:"

msgid ""
"(use-modules (gnu))\n"
"(use-package-modules fonts wm)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-package-modules fonts wm)\n"
"\n"

msgid ""
"(operating-system\n"
"  ;; …\n"
"  (packages (append (list sbcl stumpwm `(,stumpwm \"lib\"))\n"
"                    sbcl-ttf-fonts font-dejavu %base-packages)))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (packages (append (list sbcl stumpwm `(,stumpwm \"lib\"))\n"
"                    sbcl-ttf-fonts font-dejavu %base-packages)))\n"

msgid "Then you need to add the following code to a StumpWM configuration file @file{~/.stumpwm.d/init.lisp}:"
msgstr "Potom musíte pridať nasledovný kód do súboru nastavení StumpWM @file{~/.stumpwm.d/init.lisp}:"

msgid ""
"(require :ttf-fonts)\n"
"(setf xft:*font-dirs* '(\"/run/current-system/profile/share/fonts/\"))\n"
"(setf clx-truetype:+font-cache-filename+ (concat (getenv \"HOME\")\n"
"                                                 \"/.fonts/font-cache.sexp\"))\n"
"(xft:cache-fonts)\n"
"(set-font (make-instance 'xft:font :family \"DejaVu Sans Mono\"\n"
"                                   :subfamily \"Book\" :size 11))\n"
msgstr ""
"(require :ttf-fonts)\n"
"(setf xft:*font-dirs* '(\"/run/current-system/profile/share/fonts/\"))\n"
"(setf clx-truetype:+font-cache-filename+ (concat (getenv \"HOME\")\n"
"                                                 \"/.fonts/font-cache.sexp\"))\n"
"(xft:cache-fonts)\n"
"(set-font (make-instance 'xft:font :family \"DejaVu Sans Mono\"\n"
"                                   :subfamily \"Book\" :size 11))\n"

msgid "sessionlock"
msgstr "uzamykanie sedenia"

msgid "Depending on your environment, locking the screen of your session might come built in or it might be something you have to set up yourself. If you use a desktop environment like GNOME or KDE, it's usually built in. If you use a plain window manager like StumpWM or EXWM, you might have to set it up yourself."
msgstr "V závislosti na vašom prostredí, uzamykanie obrazovky môže byť zabudované alebo ho je potrebné nastaviť ručne. Ak používate prostredie pracovnej plochy ako GNOME alebo KDE, uzamykanie je v ňom pravdepodobne zabudované. Ak používate správcu okien ako StumpWM alebo EXWM, budete ho musieť nastaviť ručne."

msgid "If you use Xorg, you can use the utility @uref{https://www.mankier.com/1/xss-lock, xss-lock} to lock the screen of your session.  xss-lock is triggered by DPMS which since Xorg 1.8 is auto-detected and enabled if ACPI is also enabled at kernel runtime."
msgstr "Ak používate Xorg, môžete využiť nástroj @uref{https://www.mankier.com/1/xss-lock, xss-lock} pre uzamykanie vášho sedenia.  xss-lock je vyvolaný DPMS, ktoré sa od Xorg 1.8 zisťuje a zapína samo, ak je pri spúšťaní jadra povolené aj ACPI."

msgid "To use xss-lock, you can simple execute it and put it into the background before you start your window manager from e.g. your @file{~/.xsession}:"
msgstr "Použiť xss-lock môžete tak, že ho jednoducho spustíte na pozadí ešte pred spustením vášho správcu okien, napríklad z vášho @file{~/.xsession}:"

msgid ""
"xss-lock -- slock &\n"
"exec stumpwm\n"
msgstr ""
"xss-lock -- slock &\n"
"exec stumpwm\n"

msgid "In this example, xss-lock uses @code{slock} to do the actual locking of the screen when it determines it's appropriate, like when you suspend your device."
msgstr "V tomto príklade sa xss-lock spolieha na @code{slock} pre uzamknutie obrazovky, keď je to vhodné, napríklad, pri uspaní zariadenia."

msgid "For slock to be allowed to be a screen locker for the graphical session, it needs to be made setuid-root so it can authenticate users, and it needs a PAM service. This can be achieved by adding the following service to your @file{config.scm}:"
msgstr "Aby mohol slock uzamknúť obrazovku grafického sedenia, musí mať nastavený setuid-root príznak pre potreby overenia totožnosti používateľov. slock tiež vyžaduje službu PAM. Toto je možné zabezpečiť pridaním nasledovnej služby do vášho @file{config.scm}:"

msgid "If you manually lock your screen, e.g. by directly calling slock when you want to lock your screen but not suspend it, it's a good idea to notify xss-lock about this so no confusion occurs. This can be done by executing @code{xset s activate} immediately before you execute slock."
msgstr "Pri ručnom uzamknutí obrazovky, napr. pri priamom vyvolaní slocku, keď chcete uzamknúť obrazovku ale nechcete uspať počítač, je dobré o tom oboznámiť aj xss-lock, aby nedošlo k omylu. Môžete tak urobiť vyvolaním @code{xset s activate} tesne pred spustením slocku."

msgid "linode, Linode"
msgstr "linode, Linode"

msgid "To run Guix on a server hosted by @uref{https://www.linode.com, Linode}, start with a recommended Debian server.  We recommend using the default distro as a way to bootstrap Guix. Create your SSH keys."
msgstr "Ak chcete spustiť Guix na serveri hosťovanom na @uref{https://www.linode.com, Linode}, začnite s odporúčaným Debianovým serverom.  Na zavedenie Guixu vám odporúčame použiť predvolenú distribúciu.  Vytvorte si kľúče SSH."

msgid "ssh-keygen\n"
msgstr "ssh-keygen\n"

msgid "Be sure to add your SSH key for easy login to the remote server.  This is trivially done via Linode's graphical interface for adding SSH keys.  Go to your profile and click add SSH Key.  Copy into it the output of:"
msgstr "Pridajte si SSH kľúč pre rýchle prihlasovanie na vzdialený server.  Vďaka grafickému rozhraniu Linode je pridávanie SSH kľúčov veľmi jednoduché.  Choďte do vášho profilu a kliknite na Pridať SSH kľúč.  Tam potom skopírujte výstup príkazu:"

msgid "cat ~/.ssh/<username>_rsa.pub\n"
msgstr "cat ~/.ssh/<pouzivatel>_rsa.pub\n"

msgid "Power the Linode down."
msgstr "Vypnite Linode."

msgid "In the Linode's Storage tab, resize the Debian disk to be smaller.  30 GB free space is recommended.  Then click \"Add a disk\", and fill out the form with the following:"
msgstr "Na karte „Storage“ (úložisko) v Linode zmenšite disk s Debianom.  Odporúča sa 30 GB voľného priestoru.  Potom kliknite na „Add a disk“ (pridať disk) a vyplňte formulár nasledujúcimi údajmi:"

msgid "Label: \"Guix\""
msgstr "Label (menovka): \"Guix\""

msgid "Filesystem: ext4"
msgstr "Filesystem (súborový systém): ext4"

msgid "Set it to the remaining size"
msgstr "Využite zvyšné voľné miesto"

msgid "In the Configurations tab, press \"Edit\" on the default Debian profile.  Under \"Block Device Assignment\" click \"Add a Device\". It should be @file{/dev/sdc} and you can select the \"Guix\" disk. Save Changes."
msgstr "Na karte „Configurations“ (nastavenia) kliknite na „Edit“ (upraviť) pri predvolenom profile Debianu.  Pod „Block Device Assignment“ (pridelenie diskových zariadení) kliknite na „Add a Device“ (pridať zariadenie). Malo by to byť @file{/dev/sdc} a môžete pridať disk „Guix“. Uložte zmeny."

msgid "Now \"Add a Configuration\", with the following:"
msgstr "Teraz „Add a Configuration“ (pridať nastavenie) s nasledovným:"

msgid "Label: Guix"
msgstr "Label (menovka): Guix"

msgid "Kernel:GRUB 2 (it's at the bottom! This step is @b{IMPORTANT!})"
msgstr "Kernel (jadro): GRUB 2 (je to naspodku! Tento krok je @b{DÔLEŽITÝ!})"

msgid "Block device assignment:"
msgstr "Block device assignment (pridelenie diskových zariadení):"

msgid "@file{/dev/sda}: Guix"
msgstr "@file{/dev/sda}: Guix"

msgid "@file{/dev/sdb}: swap"
msgstr "@file{/dev/sdb}: swap (odkladací priestor)"

msgid "Root device: @file{/dev/sda}"
msgstr "Root device (koreňové zariadenie): @file{/dev/sda}"

msgid "Turn off all the filesystem/boot helpers"
msgstr "Vypnite všetky pomocné programy pre systém súborov a zavádzanie"

msgid "Now power it back up, booting with the Debian configuration.  Once it's running, ssh to your server via @code{ssh root@@@var{<your-server-IP-here>}}. (You can find your server IP address in your Linode Summary section.) Now you can run the \"install guix from @pxref{Binary Installation,,, guix, GNU Guix}\" steps:"
msgstr "Teraz opätovne spustite server s nastavením Debianu.  Po spustení sa k vášmu serveru pripojte cez SSH pomocou @code{ssh root@@@var{<IP-adresa-vasho-servera-tu>}} (IP adresu vášho servera môžete nájsť v odseku „Summary“, t.j. zhrnutie, na Linode). Teraz môžete vykonať inštalačné kroky z @pxref{Binary Installation,,, guix, GNU Guix}:"

msgid ""
"sudo apt-get install gpg\n"
"wget https://sv.gnu.org/people/viewgpg.php?user_id=15145 -qO - | gpg --import -\n"
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"
msgstr ""
"sudo apt-get install gpg\n"
"wget https://sv.gnu.org/people/viewgpg.php?user_id=15145 -qO - | gpg --import -\n"
"wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"chmod +x guix-install.sh\n"
"./guix-install.sh\n"
"guix pull\n"

msgid "Now it's time to write out a config for the server.  The key information is below. Save the resulting file as @file{guix-config.scm}."
msgstr "Teraz je čas dať dohromady nastavenia servera.  Kľúčové poznatky sú uvedené nižšie.  Uložte výsledný súbor ako @file{guix-config.scm}."

msgid ""
"(operating-system\n"
"  (host-name \"my-server\")\n"
"  (timezone \"America/New_York\")\n"
"  (locale \"en_US.UTF-8\")\n"
"  ;; This goofy code will generate the grub.cfg\n"
"  ;; without installing the grub bootloader on disk.\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader\n"
"                (bootloader\n"
"                 (inherit grub-bootloader)\n"
"                 (installer #~(const #true))))))\n"
"  (file-systems (cons (file-system\n"
"                        (device \"/dev/sda\")\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                      %base-file-systems))\n"
"\n"
msgstr ""
"(operating-system\n"
"  (host-name \"moj-server\")\n"
"  (timezone \"Europe/Bratislava\")\n"
"  (locale \"sk_SK.UTF-8\")\n"
"  ;; Tento kód vytvorí grub.cfg\n"
"  ;; bez inštalácie grubu na disk.\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader\n"
"                (bootloader\n"
"                 (inherit grub-bootloader)\n"
"                 (installer #~(const #true))))))\n"
"  (file-systems (cons (file-system\n"
"                        (device \"/dev/sda\")\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                      %base-file-systems))\n"
"\n"

msgid ""
"  (swap-devices (list \"/dev/sdb\"))\n"
"\n"
msgstr ""
"  (swap-devices (list \"/dev/sdb\"))\n"
"\n"

msgid ""
"  (initrd-modules (cons \"virtio_scsi\"    ; Needed to find the disk\n"
"                        %base-initrd-modules))\n"
"\n"
msgstr ""
"  (initrd-modules (cons \"virtio_scsi\"    ; Potrebné pre nájdenie disku\n"
"                        %base-initrd-modules))\n"
"\n"

msgid ""
"  (users (cons (user-account\n"
"                (name \"janedoe\")\n"
"                (group \"users\")\n"
"                ;; Adding the account to the \"wheel\" group\n"
"                ;; makes it a sudoer.\n"
"                (supplementary-groups '(\"wheel\"))\n"
"                (home-directory \"/home/janedoe\"))\n"
"               %base-user-accounts))\n"
"\n"
msgstr ""
"  (users (cons (user-account\n"
"                (name \"jozkomrkvicka\")\n"
"                (group \"users\")\n"
"                ;; Pridá účet do skupiny „wheel“,\n"
"                ;; aby sa z neho stal sudoer.\n"
"                (supplementary-groups '(\"wheel\"))\n"
"                (home-directory \"/home/jozkomrkvicka\"))\n"
"               %base-user-accounts))\n"
"\n"

msgid ""
"  (services (cons*\n"
"             (service dhcp-client-service-type)\n"
"             (service openssh-service-type\n"
"                      (openssh-configuration\n"
"                       (openssh openssh-sans-x)\n"
"                       (password-authentication? #false)\n"
"                       (authorized-keys\n"
"                        `((\"janedoe\" ,(local-file \"janedoe_rsa.pub\"))\n"
"                          (\"root\" ,(local-file \"janedoe_rsa.pub\"))))))\n"
"             %base-services)))\n"
msgstr ""
"  (services (cons*\n"
"             (service dhcp-client-service-type)\n"
"             (service openssh-service-type\n"
"                      (openssh-configuration\n"
"                       (openssh openssh-sans-x)\n"
"                       (password-authentication? #false)\n"
"                       (authorized-keys\n"
"                        `((\"jozkomrkvicka\" ,(local-file \"jozkomrkvicka_rsa.pub\"))\n"
"                          (\"root\" ,(local-file \"jozkomrkvicka_rsa.pub\"))))))\n"
"             %base-services)))\n"

msgid "Replace the following fields in the above configuration:"
msgstr "Nahraďte nasledovné polia vo vyššie uvedenom nastavení:"

msgid ""
"(host-name \"my-server\")       ; replace with your server name\n"
"; if you chose a linode server outside the U.S., then\n"
"; use tzselect to find a correct timezone string\n"
"(timezone \"America/New_York\") ; if needed replace timezone\n"
"(name \"janedoe\")              ; replace with your username\n"
"(\"janedoe\" ,(local-file \"janedoe_rsa.pub\")) ; replace with your ssh key\n"
"(\"root\" ,(local-file \"janedoe_rsa.pub\")) ; replace with your ssh key\n"
msgstr ""
"(host-name \"moj-server\")       ; nahraďte názvom vášho servera\n"
"; ak si vyberiete Linode server mimo Slovenska, tak pomocou\n"
"; tzselect vyhľadajte správne nastavenie časového pásma\n"
"(timezone \"Europe/Bratislava\") ; v prípade potreby, nahraďte časové pásmo\n"
"(name \"jozkomrkvicka\")              ; nahraďte vašim používateľským menom\n"
"(\"jozkomrkvicka\" ,(local-file \"jozkomrkvicka_rsa.pub\")) ; nahraďte vašim používateľským menom a SSH kľúčom\n"
"(\"root\" ,(local-file \"jozkomrkvicka_rsa.pub\")) ; nahraďte vašim SSH kľúčom\n"

msgid "The last line in the above example lets you log into the server as root and set the initial root password (see the note at the end of this recipe about root login).  After you have done this, you may delete that line from your configuration and reconfigure to prevent root login."
msgstr "Posledný riadok vo vyššie uvedenom príklade vám umožňuje prihlásiť sa na server ako root a nastaviť prvotné heslo používateľa root (viď poznámku o prihlasovaní používateľa root na konci receptu).  Po tomto môžete daný riadok z nastavenia vymazať a znovunastaviť, aby ste zabránili prihlasovaniu ako root."

msgid "Copy your ssh public key (eg: @file{~/.ssh/id_rsa.pub}) as @file{@var{<your-username-here>}_rsa.pub} and put @file{guix-config.scm} in the same directory.  In a new terminal run these commands."
msgstr "Skopírujte váš verejný SSH kľúč (napr. @file{~/.ssh/id_rsa.pub}) do @file{@var{<vase-pouzivatelske-meno-tu>}_rsa.pub} a premiestnite @file{guix-config.scm} do rovnakého priečinka.  V novom príkazovom riadku vykonajte nasledovné príkazy."

msgid ""
"sftp root@@<remote server ip address>\n"
"put /path/to/files/<username>_rsa.pub .\n"
"put /path/to/files/guix-config.scm .\n"
msgstr ""
"sftp root@@<ip adresa vzdialeného servera>\n"
"put /cesta/k/súborom/<používateľ>_rsa.pub .\n"
"put /cesta/k/súborom/guix-config.scm .\n"

msgid "In your first terminal, mount the guix drive:"
msgstr "Vo vašom prvom príkazovom riadku pripojte disk guix:"

msgid ""
"mkdir /mnt/guix\n"
"mount /dev/sdc /mnt/guix\n"
msgstr ""
"mkdir /mnt/guix\n"
"mount /dev/sdc /mnt/guix\n"

msgid "Due to the way we set up the bootloader section of the guix-config.scm, only the grub configuration file will be installed.  So, we need to copy over some of the other GRUB stuff already installed on the Debian system:"
msgstr "Kvôli spôsobu akým sme nastavili zavádzač v príslušnom oddieli guix-config.scm sa nainštaluje iba súbor nastavení grubu.  Musíme, teda, prekopírovať nejaké súbory zavádzača GRUB, ktoré už sú nainštalované v systéme Debian:"

msgid ""
"mkdir -p /mnt/guix/boot/grub\n"
"cp -r /boot/grub/* /mnt/guix/boot/grub/\n"
msgstr ""
"mkdir -p /mnt/guix/boot/grub\n"
"cp -r /boot/grub/* /mnt/guix/boot/grub/\n"

msgid "Now initialize the Guix installation:"
msgstr "Teraz nastavte inštaláciu Guixu do východzieho stavu:"

msgid "guix system init guix-config.scm /mnt/guix\n"
msgstr "guix system init guix-config.scm /mnt/guix\n"

msgid "Ok, power it down! Now from the Linode console, select boot and select \"Guix\"."
msgstr "Dobre, vypnite server! Cez príkazový riadok Linode spustite server a vyberte „Guix“."

msgid "Once it boots, you should be able to log in via SSH! (The server config will have changed though.)  You may encounter an error like:"
msgstr "Po spustení by ste mali byť schopní prihlásiť sa cez SSH! (Nastavenie servera ale bude zmenené.)  Môžete sa stretnúť s chybou ako je táto:"

msgid ""
"$ ssh root@@<server ip address>\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
"Someone could be eavesdropping on you right now (man-in-the-middle attack)!\n"
"It is also possible that a host key has just been changed.\n"
"The fingerprint for the ECDSA key sent by the remote host is\n"
"SHA256:0B+wp33w57AnKQuHCvQP0+ZdKaqYrI/kyU7CfVbS7R4.\n"
"Please contact your system administrator.\n"
"Add correct host key in /home/joshua/.ssh/known_hosts to get rid of this message.\n"
"Offending ECDSA key in /home/joshua/.ssh/known_hosts:3\n"
"ECDSA host key for 198.58.98.76 has changed and you have requested strict checking.\n"
"Host key verification failed.\n"
msgstr ""
"$ ssh root@@<ip adresa servera>\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
"IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
"Someone could be eavesdropping on you right now (man-in-the-middle attack)!\n"
"It is also possible that a host key has just been changed.\n"
"The fingerprint for the ECDSA key sent by the remote host is\n"
"SHA256:0B+wp33w57AnKQuHCvQP0+ZdKaqYrI/kyU7CfVbS7R4.\n"
"Please contact your system administrator.\n"
"Add correct host key in /home/jozkomrkvicka/.ssh/known_hosts to get rid of this message.\n"
"Offending ECDSA key in /home/jozkomrkvicka/.ssh/known_hosts:3\n"
"ECDSA host key for 198.58.98.76 has changed and you have requested strict checking.\n"
"Host key verification failed.\n"

msgid "Either delete @file{~/.ssh/known_hosts} file, or delete the offending line starting with your server IP address."
msgstr "Buď odstráňte súbor @file{~/.ssh/known_hosts}, alebo vymažte dotknutý riadok začínajúci IP adresou vášho servera."

msgid "Be sure to set your password and root's password."
msgstr "Nezabudnite si nastaviť vaše heslo ako aj heslo používateľa root."

msgid ""
"ssh root@@<remote ip address>\n"
"passwd  ; for the root password\n"
"passwd <username> ; for the user password\n"
msgstr ""
"ssh root@@<vzdialená ip adresa>\n"
"passwd  ; pre nastavenie hesla používateľa root\n"
"passwd <používateľ> ; pre nastavenie hesla daného používateľa\n"

msgid "You may not be able to run the above commands at this point.  If you have issues remotely logging into your linode box via SSH, then you may still need to set your root and user password initially by clicking on the ``Launch Console'' option in your linode.  Choose the ``Glish'' instead of ``Weblish''.  Now you should be able to ssh into the machine."
msgstr "V tomto bode možno nebudete môcť vyššie uvedené príkazy vykonať.  Ak máte ťažkosti so vzdialeným prihlásením cez SSH, tak možno budete musieť používateľské heslá nastaviť kliknutím na možnosť „Launch Console“ (spustiť príkazový riadok) vo vašom Linode.  Vyberte „Glish“ namiesto „Weblish“.  Teraz by ste už mali byť schopní prihlásiť sa do stroja."

msgid "Hooray! At this point you can shut down the server, delete the Debian disk, and resize the Guix to the rest of the size.  Congratulations!"
msgstr "Sláva! Teraz môžete server vypnúť, odstrániť disk s Debianom a rozšíriť disk Guixom.  Blahoželáme!"

msgid "By the way, if you save it as a disk image right at this point, you'll have an easy time spinning up new Guix images! You may need to down-size the Guix image to 6144MB, to save it as an image.  Then you can resize it again to the max size."
msgstr "Inak, ak teraz výsledok uložíte ako obraz disku, uľahčíte si tým spúšťanie nových obrazov s Guixom! Pre uloženie ako obraz disku možno budete musieť disk s Guixom zmenšiť na 6144 MB, ale potom ho môžete znovu rozšíriť na pôvodnú veľkosť."

msgid "To bind mount a file system, one must first set up some definitions before the @code{operating-system} section of the system definition.  In this example we will bind mount a folder from a spinning disk drive to @file{/tmp}, to save wear and tear on the primary SSD, without dedicating an entire partition to be mounted as @file{/tmp}."
msgstr "Pre vytvorenie podvojného pripojenia systému súborov je najskôr nutné pridať niekoľko zadaní do oddielu @code{operating-system} v zadaní systému.  Aby sme nevyčerpávali hlavný SSD disk, v tomto príklade vytvoríme podvojné pripojenie pre priečinok z pevného disku k @file{/tmp} bez nutnosti vyhradenia celého jedného oddielu pre @file{/tmp}."

msgid "First, the source drive that hosts the folder we wish to bind mount should be defined, so that the bind mount can depend on it."
msgstr "Po prvé, zdrojové zariadenie s priečinkom, pre ktorý chceme vytvoriť podvojné pripojenie, musí byť dané, aby na ňom mohlo podvojné pripojenie závisieť."

msgid ""
"(define source-drive ;; \"source-drive\" can be named anything you want.\n"
"   (file-system\n"
"    (device (uuid \"UUID goes here\"))\n"
"    (mount-point \"/path-to-spinning-disk-goes-here\")\n"
"    (type \"ext4\"))) ;Make sure to set this to the appropriate type for your drive.\n"
msgstr ""
"(define zdrojove-zariadenie ;; „zdrojove-zariadenie“ môžete ľubovoľne nahradiť\n"
"   (file-system\n"
"    (device (uuid \"sem príde UUID\"))\n"
"    (mount-point \"/sem-príde-cesta-k-pevnému-disku\")\n"
"    (type \"ext4\"))) ;Uistite sa, že druh systému súborov zodpovedá tomu, čo je na disku.\n"

msgid "The source folder must also be defined, so that guix will know it's not a regular block device, but a folder."
msgstr "Zdrojový priečinok musí byť taktiež určený, aby Guix vedel, že sa jedná o priečinok, a nie o diskovú jednotku."

msgid ""
";; \"source-directory\" can be named any valid variable name.\n"
"(define (%source-directory) \"/path-to-spinning-disk-goes-here/tmp\")\n"
msgstr ""
";; „zdrojovy-priecinok“ môžete nahradiť ľubovoľným platným názvom premennej.\n"
"(define (%zdrojovy-priecinok) \"/sem-príde-cesta-k-pevnému-disku/tmp\")\n"

msgid "Finally, inside the @code{file-systems} definition, we must add the mount itself."
msgstr "Nakoniec musíme samotné pripojenie pridať do zadania @code{file-systems}."

msgid ""
"(file-systems (cons*\n"
"\n"
msgstr ""
"(file-systems (cons*\n"
"\n"

msgid ""
"                ...<other drives omitted for clarity>...\n"
"\n"
msgstr ""
"                ...<ostatné pripojenia sme vynechali>...\n"
"\n"

msgid ""
"                ;; Must match the name you gave the source drive in the earlier definition.\n"
"                source-drive\n"
"\n"
msgstr ""
"                ;; Musí sa zhodovať s názvom, ktorý ste pridelili zdrojovému\n"
"                ;; zariadeniu vyššie.\n"
"                zdrojove-zariadenie\n"
"\n"

msgid ""
"                (file-system\n"
"                 ;; Make sure \"source-directory\" matches your earlier definition.\n"
"                 (device (%source-directory))\n"
"                 (mount-point \"/tmp\")\n"
"                 ;; We are mounting a folder, not a partition, so this type needs to be \"none\"\n"
"                 (type \"none\")\n"
"                 (flags '(bind-mount))\n"
"                 ;; Ensure \"source-drive\" matches what you've named the variable for the drive.\n"
"                 (dependencies (list source-drive))\n"
"                 )\n"
"\n"
msgstr ""
"                (file-system\n"
"                 ;; „zdrojovy-priecinok“ sa musí zhodovať s predošlým zadaním.\n"
"                 (device (%zdrojovy-priecinok))\n"
"                 (mount-point \"/tmp\")\n"
"                 ;; Pripájame priečinok, nie zväzok, takže tento druh\n"
"                 ;; musí byť „none“ (žiadny)\n"
"                 (type \"none\")\n"
"                 (flags '(bind-mount))\n"
"                 ;; „zdrojove-zariadenie“ sa musí zhodovať s predošlým zadaním.\n"
"                 (dependencies (list zdrojove-zariadenie))\n"
"                 )\n"
"\n"

msgid ""
"                 ...<other drives omitted for clarity>...\n"
"\n"
msgstr ""
"                 ...<ostatné pripojenia sme vynechali>...\n"
"\n"

msgid "                ))\n"
msgstr "                ))\n"

msgid "Guix daemon can use a HTTP proxy to get substitutes, here we are configuring it to get them via Tor."
msgstr "Démon Guixu môže na získavanie náhrad využívať HTTP proxy server. V tomto prípade ho nastavíme tak, aby ich získaval cez Tor."

msgid "Warning"
msgstr "Upozornenie"

msgid "@emph{Not all} Guix daemon's traffic will go through Tor! Only HTTP/HTTPS will get proxied; FTP, Git protocol, SSH, etc connections will still go through the clearnet.  Again, this configuration isn't foolproof some of your traffic won't get routed by Tor at all.  Use it at your own risk."
msgstr "@emph{Nie všetka} sieťová prevádzka démona Guixu bude prechádzať cez Tor! Presmerované bude len HTTP/HTTPS; protokol Git, SSH, atď. pôjdu aj naďalej cez otvorenú sieť.  Znova, toto nastavenie nie je dokonalé a časť vašej prevádzky poputuje aj naďalej mimo siete Tor.  Použite ho na vlastné riziko."

msgid "Also note that the procedure described here applies only to package substitution. When you update your guix distribution with @command{guix pull}, you still need to use @command{torsocks} if you want to route the connection to guix's git repository servers through Tor."
msgstr "Vedzte tiež, že opísaný postup sa vzťahuje len na náhrady balíkov. Ak chcete pri aktualizovaní vašej distribúcie pomocou @command{guix pull} presmerovať pripojenie ku git repozitáru Guixu cez Tor , budete musieť použiť @command{torsocks}."

msgid "Guix's substitute server is available as a Onion service, if you want to use it to get your substitutes through Tor configure your system as follow:"
msgstr "Server náhrad Guixu je dostupný ako Onion služba. Ak chcete náhrady získavať cez Tor, nastavte váš systém nasledovne:"

msgid ""
"(use-modules (gnu))\n"
"(use-service-module base networking)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-service-module base networking)\n"
"\n"

msgid ""
"(operating-system\n"
"  …\n"
"  (services\n"
"    (cons\n"
"      (service tor-service-type\n"
"              (tor-configuration\n"
"                (config-file (plain-file \"tor-config\"\n"
"                                         \"HTTPTunnelPort 127.0.0.1:9250\"))))\n"
"      (modify-services %base-services\n"
"        (guix-service-type\n"
"          config => (guix-configuration\n"
"                      (inherit config)\n"
"                      ;; ci.guix.gnu.org's Onion service\n"
"                      (substitute-urls \"\\\n"
"@value{SUBSTITUTE-TOR-URL}\")\n"
"                      (http-proxy \"http://localhost:9250\")))))))\n"
msgstr ""
"(operating-system\n"
"  …\n"
"  (services\n"
"    (cons\n"
"      (service tor-service-type\n"
"              (tor-configuration\n"
"                (config-file (plain-file \"tor-config\"\n"
"                                         \"HTTPTunnelPort 127.0.0.1:9250\"))))\n"
"      (modify-services %base-services\n"
"        (guix-service-type\n"
"          config => (guix-configuration\n"
"                      (inherit config)\n"
"                      ;; Onion služba na ci.guix.gnu.org\n"
"                      (substitute-urls \"\\\n"
"@value{SUBSTITUTE-TOR-URL}\")\n"
"                      (http-proxy \"http://localhost:9250\")))))))\n"

msgid "This will keep a tor process running that provides a HTTP CONNECT tunnel which will be used by @command{guix-daemon}.  The daemon can use other protocols than HTTP(S) to get remote resources, request using those protocols won't go through Tor since we are only setting a HTTP tunnel here.  Note that @code{substitutes-urls} is using HTTPS and not HTTP or it won't work, that's a limitation of Tor's tunnel; you may want to use @command{privoxy} instead to avoid such limitations."
msgstr "Toto udrží spustený proces tor poskytujúci tunel HTTP CONNECT, ktorý použije @command{guix-daemon}.  Démon môže využívať aj iné protokoly ako HTTP(S) pre získavanie vzdialených zdrojov. Avšak požiadavky spoliehajúce sa na iné protokoly nebudú prechádzať cez Tor, keďže tu nastavujeme len HTTP tunel.  Vedzte, že @code{substitutes-urls} využíva HTTPS. Kvôli obmedzeniu spojenému s Tor tunelom by to cez HTTP nefungovalo. Takýmto obmedzeniam sa môžete vyhnúť použitím @command{privoxy}."

msgid "If you don't want to always get substitutes through Tor but using it just some of the times, then skip the @code{guix-configuration}.  When you want to get a substitute from the Tor tunnel run:"
msgstr "Ak nechcete pre získavanie náhrad prechádzať cez Tor neustále ale iba niekedy, preskočte @code{guix-configuration}. Keď budete chcieť získať náhradu cez tunel Tor, spustite:"

msgid ""
"sudo herd set-http-proxy guix-daemon http://localhost:9250\n"
"guix build \\\n"
"  --substitute-urls=@value{SUBSTITUTE-TOR-URL} @dots{}\n"
msgstr ""
"sudo herd set-http-proxy guix-daemon http://localhost:9250\n"
"guix build \\\n"
"  --substitute-urls=@value{SUBSTITUTE-TOR-URL} @dots{}\n"

msgid "nginx, lua, openresty, resty"
msgstr "nginx, lua, openresty, resty"

msgid "NGINX could be extended with Lua scripts."
msgstr "NGINX možno rozšíriť pomocou Lua skriptov."

msgid "Guix provides NGINX service with ability to load Lua module and specific Lua packages, and reply to requests by evaluating Lua scripts."
msgstr "Guix poskytuje NGINX službu so schopnosťou načítať Lua moduly a určité Lua balíky ako aj odpovedať na požiadavky vyhodnocovaním Lua skriptov."

msgid "The following example demonstrates system definition with configuration to evaluate @file{index.lua} Lua script on HTTP request to @uref{http://localhost/hello} endpoint:"
msgstr "Nasledovný príklad znázorňuje zadanie systému s nastavením, ktoré vyhodnotí Lua skript @file{index.lua} pri HTTP požiadavke na koncový bod @uref{http://localhost/ahoj}:"

msgid ""
"local shell = require \"resty.shell\"\n"
"\n"
msgstr ""
"local shell = require \"resty.shell\"\n"
"\n"

msgid ""
"local stdin = \"\"\n"
"local timeout = 1000  -- ms\n"
"local max_size = 4096  -- byte\n"
"\n"
msgstr ""
"local stdin = \"\"\n"
"local timeout = 1000  -- ms\n"
"local max_size = 4096  -- byte\n"
"\n"

msgid ""
"local ok, stdout, stderr, reason, status =\n"
"   shell.run([[/run/current-system/profile/bin/ls /tmp]], stdin, timeout, max_size)\n"
"\n"
msgstr ""
"local ok, stdout, stderr, reason, status =\n"
"   shell.run([[/run/current-system/profile/bin/ls /tmp]], stdin, timeout, max_size)\n"
"\n"

msgid "ngx.say(stdout)\n"
msgstr "ngx.say(stdout)\n"

msgid ""
"(use-modules (gnu))\n"
"(use-service-modules #;… web)\n"
"(use-package-modules #;… lua)\n"
"(operating-system\n"
"  ;; …\n"
"  (services\n"
"   ;; …\n"
"   (service nginx-service-type\n"
"            (nginx-configuration\n"
"             (modules\n"
"              (list\n"
"               (file-append nginx-lua-module \"/etc/nginx/modules/ngx_http_lua_module.so\")))\n"
"             (lua-package-path (list lua-resty-core\n"
"                                     lua-resty-lrucache\n"
"                                     lua-resty-signal\n"
"                                     lua-tablepool\n"
"                                     lua-resty-shell))\n"
"             (lua-package-cpath (list lua-resty-signal))\n"
"             (server-blocks\n"
"              (list (nginx-server-configuration\n"
"                     (server-name '(\"localhost\"))\n"
"                     (listen '(\"80\"))\n"
"                     (root \"/etc\")\n"
"                     (locations (list\n"
"                                 (nginx-location-configuration\n"
"                                  (uri \"/hello\")\n"
"                                  (body (list #~(format #f \"content_by_lua_file ~s;\"\n"
"                                                        #$(local-file \"index.lua\"))))))))))))))\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-service-modules #;… web)\n"
"(use-package-modules #;… lua)\n"
"(operating-system\n"
"  ;; …\n"
"  (services\n"
"   ;; …\n"
"   (service nginx-service-type\n"
"            (nginx-configuration\n"
"             (modules\n"
"              (list\n"
"               (file-append nginx-lua-module \"/etc/nginx/modules/ngx_http_lua_module.so\")))\n"
"             (lua-package-path (list lua-resty-core\n"
"                                     lua-resty-lrucache\n"
"                                     lua-resty-signal\n"
"                                     lua-tablepool\n"
"                                     lua-resty-shell))\n"
"             (lua-package-cpath (list lua-resty-signal))\n"
"             (server-blocks\n"
"              (list (nginx-server-configuration\n"
"                     (server-name '(\"localhost\"))\n"
"                     (listen '(\"80\"))\n"
"                     (root \"/etc\")\n"
"                     (locations (list\n"
"                                 (nginx-location-configuration\n"
"                                  (uri \"/ahoj\")\n"
"                                  (body (list #~(format #f \"content_by_lua_file ~s;\"\n"
"                                                        #$(local-file \"index.lua\"))))))))))))))\n"

msgid "mpd"
msgstr "mpd"

msgid "music server, headless"
msgstr "hudobný server, bezobrazovkový"

msgid "bluetooth, ALSA configuration"
msgstr "bluetooth, nastavenie ALSA"

msgid "MPD, the Music Player Daemon, is a flexible server-side application for playing music.  Client programs on different machines on the network --- a mobile phone, a laptop, a desktop workstation --- can connect to it to control the playback of audio files from your local music collection.  MPD decodes the audio files and plays them back on one or many outputs."
msgstr "MPD, démon hudobného prehrávača, je pružná serverová aplikácia na prehrávanie hudby.  Klientske programy na rôznych strojoch na sieti --- mobilný telefón, prenosný počítač, stolný počítač --- sa k nej môžu pripojiť a ovládať prehrávanie zvukových súborov z vašej miestnej hudobnej zbierky.  MPD číta zvukové súbory a prehráva ich na jednom alebo viacerých výstupoch."

msgid "By default MPD will play to the default audio device.  In the example below we make things a little more interesting by setting up a headless music server.  There will be no graphical user interface, no Pulseaudio daemon, and no local audio output.  Instead we will configure MPD with two outputs: a bluetooth speaker and a web server to serve audio streams to any streaming media player."
msgstr "Ak nie je nastavené inak, MPD prehráva na predvolenom zvukovom zariadení.  V nižšie uvedenom príklade to spravíme trochu zaujímavejšie a nastavíme si bezobrazovkový hudobný server.  Nepoužijeme grafické používateľské rozhranie, démona Pulseaudio ani miestny zvukový výstup.  Namiesto toho nastavíme MPD s dvomi výstupmi: s bluetooth reproduktorom a webovým serverom poskytujúcim zvukové toky ľubovoľnému prehrávaču hudby."

msgid "Bluetooth is often rather frustrating to set up.  You will have to pair your Bluetooth device and make sure that the device is automatically connected as soon as it powers on.  The Bluetooth system service returned by the @code{bluetooth-service} procedure provides the infrastructure needed to set this up."
msgstr "Nastavenie Bluetooth býva otravné.  Budete musieť spárovať vaše Bluetooth zariadenie a zabezpečiť, aby sa po zapnutí samo pripájalo.  Systémová Bluetooth služba vrátená funkciou @code{bluetooth-service} poskytuje podklady potrebné pre toto nastavenie."

msgid "Reconfigure your system with at least the following services and packages:"
msgstr "Znovunastavte váš systém s aspoň týmito službami a balíkmi:"

msgid ""
"(operating-system\n"
"  ;; …\n"
"  (packages (cons* bluez bluez-alsa\n"
"                   %base-packages))\n"
"  (services\n"
"   ;; …\n"
"   (dbus-service #:services (list bluez-alsa))\n"
"   (bluetooth-service #:auto-enable? #t)))\n"
msgstr ""
"(operating-system\n"
"  ;; …\n"
"  (packages (cons* bluez bluez-alsa\n"
"                   %base-packages))\n"
"  (services\n"
"   ;; …\n"
"   (dbus-service #:services (list bluez-alsa))\n"
"   (bluetooth-service #:auto-enable? #t)))\n"

msgid "Start the @code{bluetooth} service and then use @command{bluetoothctl} to scan for Bluetooth devices.  Try to identify your Bluetooth speaker and pick out its device ID from the resulting list of devices that is indubitably dominated by a baffling smorgasbord of your neighbors' home automation gizmos.  This only needs to be done once:"
msgstr "Spustite službu @code{bluetooth} a zistite Bluetooth zariadenia pomocou @command{bluetoothctl}.  Pokúste sa stotožniť váš Bluetooth reproduktor a vyberte jeho označenie z výsledného zoznamu zariadení, ktorý je nepochybne plný rôznych hračičiek vašich susedov.  Toto je potrebné urobiť iba raz:"

msgid ""
"$ bluetoothctl \n"
"[NEW] Controller 00:11:22:33:95:7F BlueZ 5.40 [default]\n"
"\n"
msgstr ""
"$ bluetoothctl \n"
"[NEW] Controller 00:11:22:33:95:7F BlueZ 5.40 [default]\n"
"\n"

msgid ""
"[bluetooth]# power on\n"
"[bluetooth]# Changing power on succeeded\n"
"\n"
msgstr ""
"[bluetooth]# power on\n"
"[bluetooth]# Changing power on succeeded\n"
"\n"

msgid ""
"[bluetooth]# agent on\n"
"[bluetooth]# Agent registered\n"
"\n"
msgstr ""
"[bluetooth]# agent on\n"
"[bluetooth]# Agent registered\n"
"\n"

msgid ""
"[bluetooth]# default-agent\n"
"[bluetooth]# Default agent request successful\n"
"\n"
msgstr ""
"[bluetooth]# default-agent\n"
"[bluetooth]# Default agent request successful\n"
"\n"

msgid ""
"[bluetooth]# scan on\n"
"[bluetooth]# Discovery started\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: yes\n"
"[NEW] Device AA:BB:CC:A4:AA:CD My Bluetooth Speaker\n"
"[NEW] Device 44:44:FF:2A:20:DC My Neighbor's TV\n"
"@dots{}\n"
"\n"
msgstr ""
"[bluetooth]# scan on\n"
"[bluetooth]# Discovery started\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: yes\n"
"[NEW] Device AA:BB:CC:A4:AA:CD Môj Bluetooth reproduktor\n"
"[NEW] Device 44:44:FF:2A:20:DC TV môjho suseda\n"
"@dots{}\n"
"\n"

msgid ""
"[bluetooth]# pair AA:BB:CC:A4:AA:CD\n"
"Attempting to pair with AA:BB:CC:A4:AA:CD\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"\n"
msgstr ""
"[bluetooth]# pair AA:BB:CC:A4:AA:CD\n"
"Attempting to pair with AA:BB:CC:A4:AA:CD\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"\n"

msgid ""
"[My Bluetooth Speaker]# [CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110b-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110c-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110e-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Paired: yes\n"
"Pairing successful\n"
"\n"
msgstr ""
"[My Bluetooth Speaker]# [CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110b-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110c-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD UUIDs: 0000110e-0000-1000-8000-00xxxxxxxxxx\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Paired: yes\n"
"Pairing successful\n"
"\n"

msgid ""
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: no\n"
"\n"
msgstr ""
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: no\n"
"\n"

msgid ""
"[bluetooth]# \n"
"[bluetooth]# trust AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD Trusted: yes\n"
"Changing AA:BB:CC:A4:AA:CD trust succeeded\n"
"\n"
msgstr ""
"[bluetooth]# \n"
"[bluetooth]# trust AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD Trusted: yes\n"
"Changing AA:BB:CC:A4:AA:CD trust succeeded\n"
"\n"

msgid ""
"[bluetooth]# \n"
"[bluetooth]# connect AA:BB:CC:A4:AA:CD\n"
"Attempting to connect to AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD RSSI: -63\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"Connection successful\n"
"\n"
msgstr ""
"[bluetooth]# \n"
"[bluetooth]# connect AA:BB:CC:A4:AA:CD\n"
"Attempting to connect to AA:BB:CC:A4:AA:CD\n"
"[bluetooth]# [CHG] Device AA:BB:CC:A4:AA:CD RSSI: -63\n"
"[CHG] Device AA:BB:CC:A4:AA:CD Connected: yes\n"
"Connection successful\n"
"\n"

msgid ""
"[My Bluetooth Speaker]# scan off\n"
"[CHG] Device AA:BB:CC:A4:AA:CD RSSI is nil\n"
"Discovery stopped\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: no\n"
msgstr ""
"[My Bluetooth Speaker]# scan off\n"
"[CHG] Device AA:BB:CC:A4:AA:CD RSSI is nil\n"
"Discovery stopped\n"
"[CHG] Controller 00:11:22:33:95:7F Discovering: no\n"

msgid "Congratulations, you can now automatically connect to your Bluetooth speaker!"
msgstr "Blahoželáme, už sa môžete samočinne pripojiť k vášmu Bluetooth reproduktoru!"

msgid "It is now time to configure ALSA to use the @emph{bluealsa} Bluetooth module, so that you can define an ALSA pcm device corresponding to your Bluetooth speaker.  For a headless server using @emph{bluealsa} with a fixed Bluetooth device is likely simpler than configuring Pulseaudio and its stream switching behavior.  We configure ALSA by crafting a custom @code{alsa-configuration} for the @code{alsa-service-type}.  The configuration will declare a @code{pcm} type @code{bluealsa} from the @code{bluealsa} module provided by the @code{bluez-alsa} package, and then define a @code{pcm} device of that type for your Bluetooth speaker."
msgstr "Teraz je čas nastaviť ALSA na používanie Bluetooth modulu @emph{bluealsa}, aby ste mohli určiť ALSA pcm zariadenie zodpovedajúce vášmu Bluetooth reproduktoru.  Pre bezobrazovkový server je použitie @emph{bluealsa} s pevne určeným Bluetooth zariadením pravdepodobne jednoduchšie ako nastavenie Pulseaudia a prepínania tokov.  ALSA nastavíme vytvorením vlastného nastavenia @code{alsa-configuration} pre druh @code{alsa-service-type}.  Nastavenie zadá @code{bluealsa} @code{pcm} druhu z modulu @code{bluealsa} poskytovaného balíkom @code{bluez-alsa} a potom určí @code{pcm} zariadenie daného druhu pre váš Bluetooth reproduktor."

msgid "All that is left then is to make MPD send audio data to this ALSA device.  We also add a secondary MPD output that makes the currently played audio files available as a stream through a web server on port 8080.  When enabled a device on the network could listen to the audio stream by connecting any capable media player to the HTTP server on port 8080, independent of the status of the Bluetooth speaker."
msgstr "Už zostáva len nastaviť MPD tak, aby odosielal zvukové údaje na toto ALSA zariadenie.  Pridáme tiež podvojný MPD výstup, ktorý sprístupní práve prehrávané zvukové súbory ako tok cez webový server na koncovom bode 8080.  Ak je zvukový tok dostupný, zariadenia na sieti ho môžu počúvať pripojením ľubovoľného hudobného prehrávača ku koncovému bodu 8080 HTTP servera nezávisle od stavu Bluetooth reproduktora."

msgid "What follows is the outline of an @code{operating-system} declaration that should accomplish the above-mentioned tasks:"
msgstr "Nasleduje náčrt zadania @code{operating-system}, ktoré by malo umožniť vyššie uvedené úlohy:"

msgid ""
"(use-modules (gnu))\n"
"(use-service-modules audio dbus sound #;… etc)\n"
"(use-package-modules audio linux #;… etc)\n"
"(operating-system\n"
"  ;; …\n"
"  (packages (cons* bluez bluez-alsa\n"
"                   %base-packages))\n"
"  (services\n"
"   ;; …\n"
"   (service mpd-service-type\n"
"            (mpd-configuration\n"
"             (user \"your-username\")\n"
"             (music-dir \"/path/to/your/music\")\n"
"             (address \"192.168.178.20\")\n"
"             (outputs (list (mpd-output\n"
"                             (type \"alsa\")\n"
"                             (name \"MPD\")\n"
"                             (extra-options\n"
"                              ;; Use the same name as in the ALSA\n"
"                              ;; configuration below.\n"
"                              '((device . \"pcm.btspeaker\"))))\n"
"                            (mpd-output\n"
"                             (type \"httpd\")\n"
"                             (name \"streaming\")\n"
"                             (enabled? #false)\n"
"                             (always-on? #true)\n"
"                             (tags? #true)\n"
"                             (mixer-type 'null)\n"
"                             (extra-options\n"
"                              '((encoder . \"vorbis\")\n"
"                                (port    . \"8080\")\n"
"                                (bind-to-address . \"192.168.178.20\")\n"
"                                (max-clients . \"0\") ;no limit\n"
"                                (quality . \"5.0\")\n"
"                                (format  . \"44100:16:1\"))))))))\n"
"   (dbus-service #:services (list bluez-alsa))\n"
"   (bluetooth-service #:auto-enable? #t)\n"
"   (service alsa-service-type\n"
"            (alsa-configuration\n"
"             (pulseaudio? #false) ;we don't need it\n"
"             (extra-options\n"
"              #~(string-append \"\\\n"
"# Declare Bluetooth audio device type \\\"bluealsa\\\" from bluealsa module\n"
"pcm_type.bluealsa @{\n"
"    lib \\\"\"\n"
"#$(file-append bluez-alsa \"/lib/alsa-lib/libasound_module_pcm_bluealsa.so\") \"\\\"\n"
"@}\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-service-modules audio dbus sound #;… etc)\n"
"(use-package-modules audio linux #;… etc)\n"
"(operating-system\n"
"  ;; …\n"
"  (packages (cons* bluez bluez-alsa\n"
"                   %base-packages))\n"
"  (services\n"
"   ;; …\n"
"   (service mpd-service-type\n"
"            (mpd-configuration\n"
"             (user \"vase-pouzivatelske-meno\")\n"
"             (music-dir \"/cesta/k/vašej/hudbe\")\n"
"             (address \"192.168.178.20\")\n"
"             (outputs (list (mpd-output\n"
"                             (type \"alsa\")\n"
"                             (name \"MPD\")\n"
"                             (extra-options\n"
"                              ;; Použite rovnaký názov ako\n"
"                              ;; v nižšie uvedenom nastavení ALSA.\n"
"                              '((device . \"pcm.btspeaker\"))))\n"
"                            (mpd-output\n"
"                             (type \"httpd\")\n"
"                             (name \"streaming\")\n"
"                             (enabled? #false)\n"
"                             (always-on? #true)\n"
"                             (tags? #true)\n"
"                             (mixer-type 'null)\n"
"                             (extra-options\n"
"                              '((encoder . \"vorbis\")\n"
"                                (port    . \"8080\")\n"
"                                (bind-to-address . \"192.168.178.20\")\n"
"                                (max-clients . \"0\") ; bez obmedzení\n"
"                                (quality . \"5.0\")\n"
"                                (format  . \"44100:16:1\"))))))))\n"
"   (dbus-service #:services (list bluez-alsa))\n"
"   (bluetooth-service #:auto-enable? #t)\n"
"   (service alsa-service-type\n"
"            (alsa-configuration\n"
"             (pulseaudio? #false) ; nepotrebujeme ho!\n"
"             (extra-options\n"
"              #~(string-append \"\\\n"
"# Zadáva zvukové Bluetooth zariadenie druhu \\\"bluealsa\\\" z modulu bluealsa\n"
"pcm_type.bluealsa @{\n"
"    lib \\\"\"\n"
"#$(file-append bluez-alsa \"/lib/alsa-lib/libasound_module_pcm_bluealsa.so\") \"\\\"\n"
"@}\n"
"\n"

msgid ""
"# Declare control device type \\\"bluealsa\\\" from the same module\n"
"ctl_type.bluealsa @{\n"
"    lib \\\"\"\n"
"#$(file-append bluez-alsa \"/lib/alsa-lib/libasound_module_ctl_bluealsa.so\") \"\\\"\n"
"@}\n"
"\n"
msgstr ""
"# Zadáva overovacie zariadenie druhu \\\"bluealsa\\\" z rovnakého modulu\n"
"ctl_type.bluealsa @{\n"
"    lib \\\"\"\n"
"#$(file-append bluez-alsa \"/lib/alsa-lib/libasound_module_ctl_bluealsa.so\") \"\\\"\n"
"@}\n"
"\n"

msgid ""
"# Define the actual Bluetooth audio device.\n"
"pcm.btspeaker @{\n"
"    type bluealsa\n"
"    device \\\"AA:BB:CC:A4:AA:CD\\\" # unique device identifier\n"
"    profile \\\"a2dp\\\"\n"
"@}\n"
"\n"
msgstr ""
"# Určuje zvukové Bluetooth zariadenie.\n"
"pcm.btspeaker @{\n"
"    type bluealsa\n"
"    device \\\"AA:BB:CC:A4:AA:CD\\\" # jedinečné označenie zariadenia\n"
"    profile \\\"a2dp\\\"\n"
"@}\n"
"\n"

msgid ""
"# Define an associated controller.\n"
"ctl.btspeaker @{\n"
"    type bluealsa\n"
"@}\n"
"\"))))))\n"
msgstr ""
"# Určuje súvisiaci overovač.\n"
"ctl.btspeaker @{\n"
"    type bluealsa\n"
"@}\n"
"\"))))))\n"

msgid "Enjoy the music with the MPD client of your choice or a media player capable of streaming via HTTP!"
msgstr "Užite si hudbu s MPD klientom podľa vlastného výberu alebo s hudobným prehrávačom schopným prijímať zvukové toky cez HTTP!"

msgid "The kernel Linux provides a number of shared facilities that are available to processes in the system.  These facilities include a shared view on the file system, other processes, network devices, user and group identities, and a few others.  Since Linux 3.19 a user can choose to @emph{unshare} some of these shared facilities for selected processes, providing them (and their child processes) with a different view on the system."
msgstr "Linuxové jadro poskytuje určitý počet zdieľaných prostriedkov dostupných pre systémové procesy.  Tieto prostriedky zahŕňajú zdieľaný pohľad na systém súborov, ostatné procesy, sieťové zariadenia, používateľov, skupinové totožnosti, a niekoľko ďalších.  Počínajúc Linuxom 3.19 sa môže používateľ rozhodnúť prestať zdieľať niektoré z týchto zdieľaných prostriedkov pre vybrané procesy poskytujúc im (a ich podprocesom) odlišný pohľad na systém."

msgid "A process with an unshared @code{mount} namespace, for example, has its own view on the file system --- it will only be able to see directories that have been explicitly bound in its mount namespace.  A process with its own @code{proc} namespace will consider itself to be the only process running on the system, running as PID 1."
msgstr "Napríklad, proces s nezdieľanou oblasťou mien pripojení (@code{mount}) má oddelený pohľad na súborový systém --- môže vidieť len priečinky, ktoré boli výslovne pripojené k jeho oblasti mien pripojení.  Proces so svojou vlastnou oblasťou mien procesov (@code{proc}) vidí seba samého ako jediný proces v systéme, bežiaci pod PID 1."

msgid "Guix uses these kernel features to provide fully isolated environments and even complete Guix System containers, lightweight virtual machines that share the host system's kernel.  This feature comes in especially handy when using Guix on a foreign distribution to prevent interference from foreign libraries or configuration files that are available system-wide."
msgstr "Guix tieto schopnosti jadra využíva pre poskytovanie úplne oddelených prostredí a tiež kontajnerov s plným systémom Guix, teda odľahčených virtuálnych strojov zdieľajúcich jadro s hostiteľským systémom. Táto vlastnosť je užitočná predovšetkým pri používaní Guixu na cudzích distribúciách pre zabránenie vplyvu cudzích knižníc a súborov nastavení, ktoré sú dostupné celosystémovo."

msgid "The easiest way to get started is to use @command{guix shell} with the @option{--container} option.  @xref{Invoking guix shell,,, guix, GNU Guix Reference Manual} for a reference of valid options."
msgstr "Najľahším spôsobom ako začať je použitie príkazu @code{proc} s voľbou @option{--container}.  @xref{Invoking guix shell,,, guix, GNU Guix Reference Manual} pre popis dostupných volieb."

msgid "The following snippet spawns a minimal shell process with most namespaces unshared from the system.  The current working directory is visible to the process, but anything else on the file system is unavailable.  This extreme isolation can be very useful when you want to rule out any sort of interference from environment variables, globally installed libraries, or configuration files."
msgstr "Nasledovný úryvok kódu spúšťa jednoduchý proces shellu s väčšinou oblastí mien nezdieľaných so systémom.  Proces vidí súčasný pracovný priečinok, ale zvyšok súborového systému je mu nedostupný.  Toto mimoriadne oddelenie sa môže hodiť keď sa chcete zbaviť všetkých nechcených zásahov premenných prostredia, celosystémovo nainštalovaných knižníc alebo súborov nastavení."

msgid "guix shell --container\n"
msgstr "guix shell --container\n"

msgid "It is a bleak environment, barren, desolate.  You will find that not even the GNU coreutils are available here, so to explore this deserted wasteland you need to use built-in shell commands.  Even the usually gigantic @file{/gnu/store} directory is reduced to a faint shadow of itself."
msgstr "Je to čisté, holé a vyprahnuté prostredie.  Zistíte, že neobsahuje ani GNU coreutils, takže pre prebádanie tejto pustiny musíte použiť vstavané príkazy shellu.  Aj z obvykle obrovského priečinka @file{/gnu/store} zostal iba tieň."

msgid ""
"$ echo /gnu/store/*\n"
"/gnu/store/@dots{}-gcc-10.3.0-lib\n"
"/gnu/store/@dots{}-glibc-2.33\n"
"/gnu/store/@dots{}-bash-static-5.1.8\n"
"/gnu/store/@dots{}-ncurses-6.2.20210619\n"
"/gnu/store/@dots{}-bash-5.1.8\n"
"/gnu/store/@dots{}-profile\n"
"/gnu/store/@dots{}-readline-8.1.1\n"
msgstr ""
"$ echo /gnu/store/*\n"
"/gnu/store/@dots{}-gcc-10.3.0-lib\n"
"/gnu/store/@dots{}-glibc-2.33\n"
"/gnu/store/@dots{}-bash-static-5.1.8\n"
"/gnu/store/@dots{}-ncurses-6.2.20210619\n"
"/gnu/store/@dots{}-bash-5.1.8\n"
"/gnu/store/@dots{}-profile\n"
"/gnu/store/@dots{}-readline-8.1.1\n"

msgid "exiting a container"
msgstr "opúšťanie kontajnera"

msgid "There isn't much you can do in an environment like this other than exiting it.  You can use @key{^D} or @command{exit} to terminate this limited shell environment."
msgstr "V podobnom prostredí sa toho veľa urobiť nedá okrem toho, že ho opustíte.  Na to vám poslúži klávesová skratka @key{^D} alebo príkaz @command{exit}."

msgid "exposing directories, container"
msgstr "sprístupnenie priečinkov, kontajner"

msgid "sharing directories, container"
msgstr "zdieľanie priečinkov, kontajner"

msgid "mapping locations, container"
msgstr "mapovanie umiestnení, kontajner"

msgid "You can make other directories available inside of the container environment; use @option{--expose=DIRECTORY} to bind-mount the given directory as a read-only location inside the container, or use @option{--share=DIRECTORY} to make the location writable.  With an additional mapping argument after the directory name you can control the name of the directory inside the container.  In the following example we map @file{/etc} on the host system to @file{/the/host/etc} inside a container in which the GNU coreutils are installed."
msgstr "V kontajneri môžete sprístupniť aj iné priečinky. Použite @option{--expose=PRIEČINOK} pre podvojné pripojenie daného priečinka ku kontajneru len na čítanie, alebo použite @option{--share=PRIEČINOK}, aby sa do daného priečinka dalo aj zapisovať. Pridaním dodatočného parametra za cestou k priečinku môžete ovládať názov priečinka vrámci kontajnera. V nasledovnom príklade mapujeme @file{/etc} hostiteľského systému ako @file{/hosť/etc} v kontajneri obsahujúcom GNU coreutils."

msgid ""
"$ guix shell --container --share=/etc=/the/host/etc coreutils\n"
"$ ls /the/host/etc\n"
msgstr ""
"$ guix shell --container --share=/etc=/hosť/etc coreutils\n"
"$ ls /hosť/etc\n"

msgid "Similarly, you can prevent the current working directory from being mapped into the container with the @option{--no-cwd} option.  Another good idea is to create a dedicated directory that will serve as the container's home directory, and spawn the container shell from that directory."
msgstr "Tiež je možné zabrániť mapovaniu súčasného pracovného priečinka v kontajneri pomocou voľby @option{--no-cwd}.  Ďalším dobrým nápadom je vytvorenie vyhradeného priečinka, ktorý kontajneru poslúži ako domovský priečinok, v ktorom sa spustí shell kontajnera."

msgid "hide system libraries, container"
msgstr "skryť systémové knižnice, kontajner"

msgid "avoid ABI mismatch, container"
msgstr "vyhnúť sa rozporom v ABI, kontajner"

msgid "On a foreign system a container environment can be used to compile software that cannot possibly be linked with system libraries or with the system's compiler toolchain.  A common use-case in a research context is to install packages from within an R session.  Outside of a container environment there is a good chance that the foreign compiler toolchain and incompatible system libraries are found first, resulting in incompatible binaries that cannot be used by R.  In a container shell this problem disappears, as system libraries and executables simply aren't available due to the unshared @code{mount} namespace."
msgstr "Na cudzom systéme možno kontajnerové prostredie využiť na preklad programov, ktoré nemožno spojiť so systémovými knižnicami alebo so systémovým vývojovým reťazcom.  Obvyklým príkladom je oblasť výskumu, kde používatelia často inštalujú balíky vrámci sedenia R.  Mimo kontajnerového prostredia je pravdepodobné, že cudzí vývojový reťazec či nevhodné systémové knižnice budú nájdené ako prvé. Výsledkom sú potom nevyhovujúce binárne súbory, ktoré R nemôže využiť.  V kontajneri tento problém zaniká, keďže systémové knižnice a spustiteľné súbory jednoducho nie sú prístupné kvôli nezdieľanej oblasti mien pripojení @code{mount}."

msgid "Let's take a comprehensive manifest providing a comfortable development environment for use with R:"
msgstr "Vezmime si zrozumiteľný balíkospis poskytujúci pohodlné vývojové prostredie pre použitie s R:"

msgid ""
"(specifications->manifest\n"
"  (list \"r-minimal\"\n"
"\n"
msgstr ""
"(specifications->manifest\n"
"  (list \"r-minimal\"\n"
"\n"

msgid ""
"        ;; base packages\n"
"        \"bash-minimal\"\n"
"        \"glibc-locales\"\n"
"        \"nss-certs\"\n"
"\n"
msgstr ""
"        ;; základné balíky\n"
"        \"bash-minimal\"\n"
"        \"glibc-locales\"\n"
"        \"nss-certs\"\n"
"\n"

msgid ""
"        ;; Common command line tools lest the container is too empty.\n"
"        \"coreutils\"\n"
"        \"grep\"\n"
"        \"which\"\n"
"        \"wget\"\n"
"        \"sed\"\n"
"\n"
msgstr ""
"        ;; Všeobecné nástroje príkazového riadka, bez ktorých by bol kontajner pripustý.\n"
"        \"coreutils\"\n"
"        \"grep\"\n"
"        \"which\"\n"
"        \"wget\"\n"
"        \"sed\"\n"
"\n"

msgid ""
"        ;; R markdown tools\n"
"        \"pandoc\"\n"
"\n"
msgstr ""
"        ;; Nástroje značkovacieho jazyka R\n"
"        \"pandoc\"\n"
"\n"

msgid ""
"        ;; Toolchain and common libraries for \"install.packages\"\n"
"        \"gcc-toolchain@@10\"\n"
"        \"gfortran-toolchain\"\n"
"        \"gawk\"\n"
"        \"tar\"\n"
"        \"gzip\"\n"
"        \"unzip\"\n"
"        \"make\"\n"
"        \"cmake\"\n"
"        \"pkg-config\"\n"
"        \"cairo\"\n"
"        \"libxt\"\n"
"        \"openssl\"\n"
"        \"curl\"\n"
"        \"zlib\"))\n"
msgstr ""
"        ;; Vývojový reťazec a všeobecné knižnice pre „install.packages“\n"
"        \"gcc-toolchain@@10\"\n"
"        \"gfortran-toolchain\"\n"
"        \"gawk\"\n"
"        \"tar\"\n"
"        \"gzip\"\n"
"        \"unzip\"\n"
"        \"make\"\n"
"        \"cmake\"\n"
"        \"pkg-config\"\n"
"        \"cairo\"\n"
"        \"libxt\"\n"
"        \"openssl\"\n"
"        \"curl\"\n"
"        \"zlib\"))\n"

msgid "Let's use this to run R inside a container environment.  For convenience we share the @code{net} namespace to use the host system's network interfaces.  Now we can build R packages from source the traditional way without having to worry about ABI mismatch or incompatibilities."
msgstr "Použime tento balíkospis pre spustenie R v kontajnerovom prostredí.  Pre zjednodušenie zdieľame sieťovú oblasť mien @code{net} pre prístup k sieťovým rozhraniam hostiteľského systému.  Teraz môžeme zostavovať balíky R zo zdrojového kódu obvyklým spôsobom bez obáv o rozpory týkajúce sa ABI alebo o iné ťažkosti."

msgid ""
"$ guix shell --container --network --manifest=manifest.scm -- R\n"
"\n"
msgstr ""
"$ guix shell --container --network --manifest=balikospis.scm -- R\n"
"\n"

msgid ""
"R version 4.2.1 (2022-06-23) -- \"Funny-Looking Kid\"\n"
"Copyright (C) 2022 The R Foundation for Statistical Computing\n"
"@dots{}\n"
"> e <- Sys.getenv(\"GUIX_ENVIRONMENT\")\n"
"> Sys.setenv(GIT_SSL_CAINFO=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_FILE=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_DIR=paste0(e, \"/etc/ssl/certs\"))\n"
"> install.packages(\"Cairo\", lib=paste0(getwd()))\n"
"@dots{}\n"
"* installing *source* package 'Cairo' ...\n"
"@dots{}\n"
"* DONE (Cairo)\n"
"\n"
msgstr ""
"R version 4.2.1 (2022-06-23) -- \"Funny-Looking Kid\"\n"
"Copyright (C) 2022 The R Foundation for Statistical Computing\n"
"@dots{}\n"
"> e <- Sys.getenv(\"GUIX_ENVIRONMENT\")\n"
"> Sys.setenv(GIT_SSL_CAINFO=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_FILE=paste0(e, \"/etc/ssl/certs/ca-certificates.crt\"))\n"
"> Sys.setenv(SSL_CERT_DIR=paste0(e, \"/etc/ssl/certs\"))\n"
"> install.packages(\"Cairo\", lib=paste0(getwd()))\n"
"@dots{}\n"
"* installing *source* package 'Cairo' ...\n"
"@dots{}\n"
"* DONE (Cairo)\n"
"\n"

msgid ""
"The downloaded source packages are in\n"
"\t'/tmp/RtmpCuwdwM/downloaded_packages'\n"
"> library(\"Cairo\", lib=getwd())\n"
"> # success!\n"
msgstr ""
"The downloaded source packages are in\n"
"\t'/tmp/RtmpCuwdwM/downloaded_packages'\n"
"> library(\"Cairo\", lib=getwd())\n"
"> # success!\n"

msgid "Using container shells is fun, but they can become a little cumbersome when you want to go beyond just a single interactive process.  Some tasks become a lot easier when they sit on the rock solid foundation of a proper Guix System and its rich set of system services.  The next section shows you how to launch a complete Guix System inside of a container."
msgstr "Používanie kontajnerov je zábavné, ale pri viac ako jednom interaktívnom procese sa môžu zdať ťažkopádne.  Niektoré úlohy sú oveľa ľahšie zvládnuteľné ak sú založené na skalopevnom základe plného systému Guix a jeho bohatej množine systémových služieb.  V ďalšom oddieli si ukážeme ako spustiť plný systém Guix v kontajneri."

msgid "The Guix System provides a wide array of interconnected system services that are configured declaratively to form a dependable stateless GNU System foundation for whatever tasks you throw at it.  Even when using Guix on a foreign distribution you can benefit from the design of Guix System by running a system instance as a container.  Using the same kernel features of unshared namespaces mentioned in the previous section, the resulting Guix System instance is isolated from the host system and only shares file system locations that you explicitly declare."
msgstr "Systém Guix poskytuje široké pole systémových služieb s deklaratívnym nastavením vzájomne prepojených tak, aby vytvárali spoľahlivý a bezstavový základ GNU systému pre akékoľvek úlohy.  Aj pri použití Guixu na cudzej distribúcií môžete využiť výhody systému Guix spustením systémovej inštancie v podobe kontajnera.  Vďaka vlastnostiam nezdieľaných oblastí mien spomínaných v predošlom oddieli je výsledná inštancia systému Guix oddelená od hostiteľského systému a zdieľa s ním len tie umiestnenia súborového systému, ktoré ste si výslovne zvolili."

msgid "A Guix System container differs from the shell process created by @command{guix shell --container} in a number of important ways.  While in a container shell the containerized process is a Bash shell process, a Guix System container runs the Shepherd as PID 1.  In a system container all system services (@pxref{Services,,, guix, GNU Guix Reference Manual}) are set up just as they would be on a Guix System in a virtual machine or on bare metal---this includes daemons managed by the GNU@tie{}Shepherd (@pxref{Shepherd Services,,, guix, GNU Guix Reference Manual}) as well as other kinds of extensions to the operating system (@pxref{Service Composition,,, guix, GNU Guix Reference Manual})."
msgstr "Kontajner systému Guix sa od procesu shell vytvoreného pomocou @command{guix shell --container} v mnohých ohľadoch líši.  Zatiaľčo v kontajnerovom shelle je hlavným oddeleným procesom Bash, v kontajneri so systémom Guix beží pod PID 1 Shepherd.  V tomto prípade sú tiež všetky systémové služby (@pxref{Services,,, guix, GNU Guix Reference Manual}) nastavené tak, ako by boli v systéme Guix vrámci virtuálneho stroja alebo na skutočnom vybavení. To zahŕňa démonov spravovaných GNU@tie{}Shepherdom (@pxref{Shepherd Services,,, guix, GNU Guix Reference Manual}) ako aj ďalšie druhy rozšírení operačného systému (@pxref{Service Composition,,, guix, GNU Guix Reference Manual})."

msgid "The perceived increase in complexity of running a Guix System container is easily justified when dealing with more complex applications that have higher or just more rigid requirements on their execution contexts---configuration files, dedicated user accounts, directories for caches or log files, etc.  In Guix System the demands of this kind of software are satisfied through the deployment of system services."
msgstr "Pozorovanú zvýšenú zložitosť v používaní kontajnerov so systémom Guix možno jednoducho zdôvodniť keď sa musíte vysporiadať so zložitými aplikáciami, ktoré majú vyššie či len prísnejšie požiadavky na prostredie, v ktorom sú spúšťané, napr. súbory nastavení, vyhradené používateľské účty, priečinky vyrovnávacej pamäte, súbory záznamov a pod.  Systém Guix tento druh požiadaviek spĺňa nasadením systémových služieb."

msgid "A good example might be a PostgreSQL database server.  Much of the complexity of setting up such a database server is encapsulated in this deceptively short service declaration:"
msgstr "Dobrým príkladom by mohol byť databázový server PostgreSQL.  Väčšina zložitosti nastavenia takéhoto databázového servera je zhrnutá do nezvyčajne krátkeho zadania príslušnej služby:"

msgid ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (postgresql postgresql-14)))\n"
msgstr ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (postgresql postgresql-14)))\n"

msgid "A complete operating system declaration for use with a Guix System container would look something like this:"
msgstr "Úplné zadanie operačného systému pre použitie s kontajnerom systému Guix by vyzeralo asi takto:"

msgid ""
"(use-modules (gnu))\n"
"(use-package-modules databases)\n"
"(use-service-modules databases)\n"
"\n"
msgstr ""
"(use-modules (gnu))\n"
"(use-package-modules databases)\n"
"(use-service-modules databases)\n"
"\n"

msgid ""
"(operating-system\n"
"  (host-name \"container\")\n"
"  (timezone \"Europe/Berlin\")\n"
"  (file-systems (cons (file-system\n"
"                        (device (file-system-label \"does-not-matter\"))\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                      %base-file-systems))\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader grub-bootloader)\n"
"               (targets '(\"/dev/sdX\"))))\n"
"  (services\n"
"   (cons* (service postgresql-service-type\n"
"                   (postgresql-configuration\n"
"                    (postgresql postgresql-14)\n"
"                    (config-file\n"
"                     (postgresql-config-file\n"
"                      (log-destination \"stderr\")\n"
"                      (hba-file\n"
"                       (plain-file \"pg_hba.conf\"\n"
"                                   \"\\\n"
"local\tall\tall\t\t\ttrust\n"
"host\tall\tall\t10.0.0.1/32 \ttrust\"))\n"
"                      (extra-config\n"
"                       '((\"listen_addresses\" \"*\")\n"
"                         (\"log_directory\"    \"/var/log/postgresql\")))))))\n"
"          (service postgresql-role-service-type\n"
"                   (postgresql-role-configuration\n"
"                    (roles\n"
"                     (list (postgresql-role\n"
"                            (name \"test\")\n"
"                            (create-database? #t))))))\n"
"          %base-services)))\n"
msgstr ""
"(operating-system\n"
"  (host-name \"container\")\n"
"  (timezone \"Europe/Bratislava\")\n"
"  (file-systems (cons (file-system\n"
"                        (device (file-system-label \"co-ma-po-tom\"))\n"
"                        (mount-point \"/\")\n"
"                        (type \"ext4\"))\n"
"                      %base-file-systems))\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader grub-bootloader)\n"
"               (targets '(\"/dev/sdX\"))))\n"
"  (services\n"
"   (cons* (service postgresql-service-type\n"
"                   (postgresql-configuration\n"
"                    (postgresql postgresql-14)\n"
"                    (config-file\n"
"                     (postgresql-config-file\n"
"                      (log-destination \"stderr\")\n"
"                      (hba-file\n"
"                       (plain-file \"pg_hba.conf\"\n"
"                                   \"\\\n"
"local\tall\tall\t\t\ttrust\n"
"host\tall\tall\t10.0.0.1/32 \ttrust\"))\n"
"                      (extra-config\n"
"                       '((\"listen_addresses\" \"*\")\n"
"                         (\"log_directory\"    \"/var/log/postgresql\")))))))\n"
"          (service postgresql-role-service-type\n"
"                   (postgresql-role-configuration\n"
"                    (roles\n"
"                     (list (postgresql-role\n"
"                            (name \"skuska\")\n"
"                            (create-database? #t))))))\n"
"          %base-services)))\n"

msgid "With @code{postgresql-role-service-type} we define a role ``test'' and create a matching database, so that we can test right away without any further manual setup.  The @code{postgresql-config-file} settings allow a client from IP address 10.0.0.1 to connect without requiring authentication---a bad idea in production systems, but convenient for this example."
msgstr "Pomocou @code{postgresql-role-service-type} zadáme úlohu „skuska“ a vytvoríme príslušnú databázu tak, aby sme všetko mohli priamo vyskúšať bez ďalšieho ručného zasahovania.  Nastavenia v @code{postgresql-config-file} umožňujú klientom pripájať sa z IP adresy 10.0.0.1 bez overenia --- zlý nápad pre systémy vo výrobnom nasadení ale vhodný pre tento príklad."

msgid "Let's build a script that will launch an instance of this Guix System as a container.  Write the @code{operating-system} declaration above to a file @file{os.scm} and then use @command{guix system container} to build the launcher.  (@pxref{Invoking guix system,,, guix, GNU Guix Reference Manual})."
msgstr "Zostavme skript, ktorý spustí inštanciu systému Guix v podobe kontajnera. Uložte horeuvedené zadanie pre @code{operating-system} do súboru @file{os.scm} a potom použite @command{guix system container} pre zostavenie spúšťača.  (@pxref{Invoking guix system,,, guix, GNU Guix Reference Manual})."

msgid ""
"$ guix system container os.scm\n"
"The following derivations will be built:\n"
"  /gnu/store/@dots{}-run-container.drv\n"
"  @dots{}\n"
"building /gnu/store/@dots{}-run-container.drv...\n"
"/gnu/store/@dots{}-run-container\n"
msgstr ""
"$ guix system container os.scm\n"
"Zostavia sa nasledovné odvodeniny:\n"
"  /gnu/store/@dots{}-run-container.drv\n"
"  @dots{}\n"
"building /gnu/store/@dots{}-run-container.drv...\n"
"/gnu/store/@dots{}-run-container\n"

msgid "Now that we have a launcher script we can run it to spawn the new system with a running PostgreSQL service.  Note that due to some as yet unresolved limitations we need to run the launcher as the root user, for example with @command{sudo}."
msgstr "Teraz, keď už máme skript spúšťača, môžeme ho použiť pre spustenie nového systému s bežiacou PostgreSQL službou.  Vedzte, že kvôli doposiaľ neodstráneným obmedzeniam, musíme spúšťač spustiť ako root, napr. pomocou @command{sudo}."

msgid ""
"$ sudo /gnu/store/@dots{}-run-container\n"
"system container is running as PID 5983\n"
"@dots{}\n"
msgstr ""
"$ sudo /gnu/store/@dots{}-run-container\n"
"systémový kontajner beží pod PID 5983\n"
"@dots{}\n"

msgid "Background the process with @key{Ctrl-z} followed by @command{bg}.  Note the process ID in the output; we will need it to connect to the container later.  You know what? Let's try attaching to the container right now.  We will use @command{nsenter}, a tool provided by the @code{util-linux} package:"
msgstr "Presuňte proces do pozadia pomocou @key{Ctrl-z} nasledovaným @command{bg}.  Zaznamenajte si označenie procesu na výstupe; neskôr ho budeme potrebovať pre pripojenie ku kontajneru.  Viete čo? Skúsme sa pripojiť ku kontajneru už teraz.  Použijeme @command{nsenter}, nástroj poskytovaný balíkom @code{util-linux}:"

msgid ""
"$ guix shell util-linux\n"
"$ sudo nsenter -a -t 5983\n"
"root@@container /# pgrep -a postgres\n"
"49 /gnu/store/@dots{}-postgresql-14.4/bin/postgres -D /var/lib/postgresql/data --config-file=/gnu/store/@dots{}-postgresql.conf -p 5432\n"
"51 postgres: checkpointer\n"
"52 postgres: background writer\n"
"53 postgres: walwriter\n"
"54 postgres: autovacuum launcher\n"
"55 postgres: stats collector\n"
"56 postgres: logical replication launcher\n"
"root@@container /# exit\n"
msgstr ""
"$ guix shell util-linux\n"
"$ sudo nsenter -a -t 5983\n"
"root@@container /# pgrep -a postgres\n"
"49 /gnu/store/@dots{}-postgresql-14.4/bin/postgres -D /var/lib/postgresql/data --config-file=/gnu/store/@dots{}-postgresql.conf -p 5432\n"
"51 postgres: checkpointer\n"
"52 postgres: background writer\n"
"53 postgres: walwriter\n"
"54 postgres: autovacuum launcher\n"
"55 postgres: stats collector\n"
"56 postgres: logical replication launcher\n"
"root@@container /# exit\n"

msgid "The PostgreSQL service is running in the container!"
msgstr "Služba PostgreSQL beží v kontajneri!"

msgid "container networking"
msgstr "nastavenie siete v kontajneri"

msgid "What good is a Guix System running a PostgreSQL database service as a container when we can only talk to it with processes originating in the container? It would be much better if we could talk to the database over the network."
msgstr "Na čo nám je systém Guix, na ktorom v kontajneri beží databázová služba PostgreSQL, ku ktorej môžeme pristupovať len prostredníctvom procesov spustených v kontajneri? Bolo by oveľa lepšie, keby sme k databáze mohli pristupovať cez sieť."

msgid "The easiest way to do this is to create a pair of connected virtual Ethernet devices (known as @code{veth}).  We move one of the devices (@code{ceth-test}) into the @code{net} namespace of the container and leave the other end (@code{veth-test}) of the connection on the host system."
msgstr "Najjednoduchším spôsobom ako to dosiahnuť, je vytvoriť pár spojených virtuálnych Ethernet zariadení (známych ako @code{veth}).  Jedno zo zariadení (@code{ceth-skuska}) presunieme do oblasti názvov @code{net} nášho kontajnera a to druhý koniec (@code{veth-skuska}) pripojenia ponecháme na hostiteľskom systéme."

msgid ""
"pid=5983\n"
"ns=\"guix-test\"\n"
"host=\"veth-test\"\n"
"client=\"ceth-test\"\n"
"\n"
msgstr ""
"pid=5983\n"
"ns=\"guix-skuska\"\n"
"host=\"veth-skuska\"\n"
"client=\"ceth-skuska\"\n"
"\n"

msgid ""
"# Attach the new net namespace \"guix-test\" to the container PID.\n"
"sudo ip netns attach $ns $pid\n"
"\n"
msgstr ""
"# Pripojiť novú oblasť mien „guix-skuska“ k PID kontajnera.\n"
"sudo ip netns attach $ns $pid\n"
"\n"

msgid ""
"# Create the pair of devices\n"
"sudo ip link add $host type veth peer name $client\n"
"\n"
msgstr ""
"# Vytvoriť pár zariadení.\n"
"sudo ip link add $host type veth peer name $client\n"
"\n"

msgid ""
"# Move the client device into the container's net namespace\n"
"sudo ip link set $client netns $ns\n"
msgstr ""
"# Presunúť klientske zariadenie do oblasti mien kontajnera.\n"
"sudo ip link set $client netns $ns\n"

msgid "Then we configure the host side:"
msgstr "Potom nastavíme hostiteľa:"

msgid ""
"sudo ip link set $host up\n"
"sudo ip addr add 10.0.0.1/24 dev $host\n"
msgstr ""
"sudo ip link set $host up\n"
"sudo ip addr add 10.0.0.1/24 dev $host\n"

msgid "@dots{}and then we configure the client side:"
msgstr "@dots{}a klienta:"

msgid ""
"sudo ip netns exec $ns  ip link set lo up\n"
"sudo ip netns exec $ns  ip link set $client up\n"
"sudo ip netns exec $ns  ip addr add 10.0.0.2/24 dev $client\n"
msgstr ""
"sudo ip netns exec $ns  ip link set lo up\n"
"sudo ip netns exec $ns  ip link set $client up\n"
"sudo ip netns exec $ns  ip addr add 10.0.0.2/24 dev $client\n"

msgid "At this point the host can reach the container at IP address 10.0.0.2, and the container can reach the host at IP 10.0.0.1.  This is all we need to talk to the database server inside the container from the host system on the outside."
msgstr "V tomto bode má hostiteľ dosah na klienta cez IP adresu 10.0.0.2 a kontajner má dosah na hostiteľa cez IP 10.0.0.1.  To je všetko čo potrebujeme pre spojenie sa s databázovým serverom v kontajneri z vonkajšieho prostredia hostiteľského systému."

msgid ""
"$ psql -h 10.0.0.2 -U test\n"
"psql (14.4)\n"
"Type \"help\" for help.\n"
"\n"
msgstr ""
"$ psql -h 10.0.0.2 -U skuska\n"
"psql (14.4)\n"
"Type \"help\" for help.\n"
"\n"

msgid ""
"test=> CREATE TABLE hello (who TEXT NOT NULL);\n"
"CREATE TABLE\n"
"test=> INSERT INTO hello (who) VALUES ('world');\n"
"INSERT 0 1\n"
"test=> SELECT * FROM hello;\n"
"  who\n"
"-------\n"
" world\n"
"(1 row)\n"
msgstr ""
"skuska=> CREATE TABLE ahoj (kto TEXT NOT NULL);\n"
"CREATE TABLE\n"
"skuska=> INSERT INTO ahoj (kto) VALUES ('svet');\n"
"INSERT 0 1\n"
"skuska=> SELECT * FROM ahoj;\n"
"  kto\n"
"-------\n"
" svet\n"
"(1 row)\n"

msgid "Now that we're done with this little demonstration let's clean up:"
msgstr "Keď už sme skončili s týmto krátkym príkladom, trochu upracme:"

msgid ""
"sudo kill $pid\n"
"sudo ip netns del $ns\n"
"sudo ip link del $host\n"
msgstr ""
"sudo kill $pid\n"
"sudo ip netns del $ns\n"
"sudo ip link del $host\n"

msgid "Guix is a functional package manager that offers many features beyond what more traditional package managers can do.  To the uninitiated, those features might not have obvious use cases at first.  The purpose of this chapter is to demonstrate some advanced package management concepts."
msgstr "Guix je funkcionálny správca balíkov, ktorý ponúka omnoho viac možností než tradiční správcovia balíkov.  Tieto možnosti nemusia mať pre nezasvätených zdanlivé využitie.  Účelom tohto oddielu je predstaviť niekoľko pokročilých pojmov správy balíkov."

msgid "@pxref{Package Management,,, guix, GNU Guix Reference Manual} for a complete reference."
msgstr "@pxref{Package Management,,, guix, GNU Guix Reference Manual}."

msgid "Guix provides a very useful feature that may be quite foreign to newcomers: @dfn{profiles}.  They are a way to group package installations together and all users on the same system are free to use as many profiles as they want."
msgstr "Guix má veľmi užitočnú schopnosť, o ktorej noví používatelia málokedy vedia: @dfn{profily}.  Sú spôsobom ako zoskupiť inštalácie balíkov a všetci používatelia rovnakého systému môžu používať toľko rôznych profil, koľko len chcú."

msgid "Whether you're a developer or not, you may find that multiple profiles bring you great power and flexibility.  While they shift the paradigm somewhat compared to @emph{traditional package managers}, they are very convenient to use once you've understood how to set them up."
msgstr "Či už ste vývojár alebo nie, profily vám môžu poskytnúť veľa možností.  Napriek tomu, že sa od @emph{tradičných správcov balíkov} myšlienkovo líšia, môžu byť veľmi užitočné, keď sa s nimi naučíte pracovať."

msgid "If you are familiar with Python's @samp{virtualenv}, you can think of a profile as a kind of universal @samp{virtualenv} that can hold any kind of software whatsoever, not just Python software.  Furthermore, profiles are self-sufficient: they capture all the runtime dependencies which guarantees that all programs within a profile will always work at any point in time."
msgstr "Ak ste oboznámení s @samp{virtualenv} v Pythone, môžete si profily predstaviť ako všeobecné @samp{virtualenv}, ktoré môžu obsahovať ľubovoľné programové vybavenie, a nie len to založené na Pythone.  Okrem toho, profily sú sebestačné: zachytávajú všetky závislosti potrebné pre beh programov, čo zaručuje, že všetky programy v profile budú fungovať vždy a v každom čase."

msgid "Multiple profiles have many benefits:"
msgstr "Viacero profilov má mnoho výhod:"

msgid "Clean semantic separation of the various packages a user needs for different contexts."
msgstr "Jasné významové oddelenie rozličných balíkov, ktoré využívate v rôznych súvislostiach."

msgid "Multiple profiles can be made available into the environment either on login or within a dedicated shell."
msgstr "Viacero profilov možno v prostredí sprístupniť buď pri prihlásení, alebo vrámci vyhradeného shellu."

msgid "Profiles can be loaded on demand.  For instance, the user can use multiple shells, each of them running different profiles."
msgstr "Profily možno načítať na požiadanie.  Napríklad, môžete používať viacero shellov a v každom z nich môže bežať iný profil."

msgid "Isolation: Programs from one profile will not use programs from the other, and the user can even install different versions of the same programs to the two profiles without conflict."
msgstr "Oddelenie: Programy z jedného profilu nebudú používať programy z druhého. Môžete tiež nainštalovať rôzne vydania rovnakých programov do dvoch rôznych profilov bez vzájomných rozporov."

msgid "Deduplication: Profiles share dependencies that happens to be the exact same.  This makes multiple profiles storage-efficient."
msgstr "Znásobenie: Profily môžu zdieľať rovnaké závislosti, čo umožňuje ušetriť úložné miesto."

msgid "Reproducible: when used with declarative manifests, a profile can be fully specified by the Guix commit that was active when it was set up.  This means that the exact same profile can be @uref{https://guix.gnu.org/blog/2018/multi-dimensional-transactions-and-rollbacks-oh-my/, set up anywhere and anytime}, with just the commit information.  See the section on @ref{Reproducible profiles}."
msgstr "Opakovateľné: pri použití so zadaným balíkospisom môže byť profil jasne určený úpravou Guixu, ktorá bola použitá pri jeho spustení.  To znamená, že ten istý profil možno @uref{https://guix.gnu.org/blog/2018/multi-dimensional-transactions-and-rollbacks-oh-my/, napodobniť kdekoľvek a kedykoľvek} iba na základe údaju o použitej úprave.  Viď oddiel @ref{Reproducible profiles}."

msgid "Easier upgrades and maintenance: Multiple profiles make it easy to keep package listings at hand and make upgrades completely frictionless."
msgstr "Jednoduchšie aktualizácie a spravovanie: Pri viacerých profiloch je jednoduché udržiavať zoznamy balíkov poruke a zaistiť ich bezstarostné aktualizovanie."

msgid "Concretely, here follows some typical profiles:"
msgstr "Niekoľko príznačných a často používaných profilov:"

msgid "The dependencies of a project you are working on."
msgstr "Závislosti projektu, na ktorom pracujete."

msgid "Your favourite programming language libraries."
msgstr "Knižnice vášho obľúbeného programovacieho jazyka."

msgid "Laptop-specific programs (like @samp{powertop}) that you don't need on a desktop."
msgstr "Programy príznačné pre prenosný počítač (ako @samp{powertop}), ktoré nepotrebujete na stolnom počítači."

msgid "@TeX{}live (this one can be really useful when you need to install just one package for this one document you've just received over email)."
msgstr "@TeX{}live (tento sa môže zvlášť hodiť, keď potrebujete nainštalovať len jeden balík pre dokument, ktorý vám práve prišiel elektronickou poštou)."

msgid "Games."
msgstr "Hry."

msgid "Let's dive in the set up!"
msgstr "Ponorme sa do toho!"

msgid "A Guix profile can be set up @i{via} a @dfn{manifest}.  A manifest is a snippet of Scheme code that specifies the set of packages you want to have in your profile; it looks like this:"
msgstr "Guixovský profil možno nastaviť pomocou @dfn{balíkospisu}. Balíkospis je kúsok kódu určujúci množinu balíkov, ktorú chcete zahrnúť do vášho profilu; vyzerá takto:"

msgid ""
"(specifications->manifest\n"
"  '(\"package-1\"\n"
"    ;; Version 1.3 of package-2.\n"
"    \"package-2@@1.3\"\n"
"    ;; The \"lib\" output of package-3.\n"
"    \"package-3:lib\"\n"
"    ; ...\n"
"    \"package-N\"))\n"
msgstr ""
"(specifications->manifest\n"
"  '(\"balik-1\"\n"
"    ;; Vydanie 1.3 balíka balik-2.\n"
"    \"balik-2@@1.3\"\n"
"    ;; Výstup „lib“ balíka balik-3.\n"
"    \"balik-3:lib\"\n"
"    ; ...\n"
"    \"balik-N\"))\n"

msgid "@xref{Writing Manifests,,, guix, GNU Guix Reference Manual}, for more information about the syntax."
msgstr "@xref{Writing Manifests,,, guix, GNU Guix Reference Manual} pre viac podrobností o skladbe."

msgid "We can create a manifest specification per profile and install them this way:"
msgstr "Môžeme si vytvoriť balíkospis pre každý profil a nainštalovať ich nasledovne:"

msgid ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"mkdir -p \"$GUIX_EXTRA_PROFILES\"/my-project # if it does not exist yet\n"
"guix package --manifest=/path/to/guix-my-project-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"
msgstr ""
"GUIX_DOPLNKOVE_PROFILY=$HOME/.guix-extra-profiles\n"
"mkdir -p \"$GUIX_DOPLNKOVE_PROFILY\"/moj-projekt # ak ešte nejestvuje\n"
"guix package --manifest=/cesta/ku/guix-balikospis-mojho-projektu.scm \\\n"
" --profile=\"$GUIX_DOPLNKOVE_PROFILY\"/moj-projekt/moj-projekt\n"

msgid "Here we set an arbitrary variable @samp{GUIX_EXTRA_PROFILES} to point to the directory where we will store our profiles in the rest of this article."
msgstr "Tu sme si nastavili premennú s ľubovoľne zvoleným názvom @samp{GUIX_DOPLNKOVE_PROFILY} odkazujúcu na priečinok, do ktorého si uložíme naše profily vrámci tohto článku."

msgid "Placing all your profiles in a single directory, with each profile getting its own sub-directory, is somewhat cleaner.  This way, each sub-directory will contain all the symlinks for precisely one profile.  Besides, ``looping over profiles'' becomes obvious from any programming language (e.g.@: a shell script) by simply looping over the sub-directories of @samp{$GUIX_EXTRA_PROFILES}."
msgstr "Dáva zmysel uložiť si všetky svoje profily do jedného priečinka, v ktorom má každý z nich pridelený osobitný podpriečinok.  Takto bude každý podpriečinok obsahovať symbolické odkazy presne jedného profilu.  Okrem toho, bude ľahké získať zoznam profilov v hociktorom programovacom jazyku (napr.@: skript shellu) pomocou jednoduchej slučky prechádzajúcej podpriečinkami v @samp{GUIX_DOPLNKOVE_PROFILY}."

msgid "Note that it's also possible to loop over the output of"
msgstr "Všimnite si, že slučkou tiež možno prechádzať výstup"

msgid "guix package --list-profiles\n"
msgstr "guix package --list-profiles\n"

msgid "although you'll probably have to filter out @file{~/.config/guix/current}."
msgstr "aj keď budete pravdepodobne musieť vynechať @file{~/.config/guix/current}."

msgid "To enable all profiles on login, add this to your @file{~/.bash_profile} (or similar):"
msgstr "Pre nastavenie všetkých profilov po prihlásení, pridajte toto do vášho @file{~/.bash_profile} (alebo podobného súboru):"

msgid ""
"for i in $GUIX_EXTRA_PROFILES/*; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"
msgstr ""
"for i in $GUIX_DOPLNKOVE_PROFILY/*; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"

msgid "Note to Guix System users: the above reflects how your default profile @file{~/.guix-profile} is activated from @file{/etc/profile}, that latter being loaded by @file{~/.bashrc} by default."
msgstr "Poznámka pre používateľov systému Guix: horeuvedené odráža to, ako sa váš predvolený profil @file{~/.guix-profile} nastavuje z @file{/etc/profile}, ktorý je predvolene načítaný vrámci @file{~/.bashrc}."

msgid "You can obviously choose to only enable a subset of them:"
msgstr "Môžete sa samozrejme rozhodnúť, že z nich načítate len niektoré:"

msgid ""
"for i in \"$GUIX_EXTRA_PROFILES\"/my-project-1 \"$GUIX_EXTRA_PROFILES\"/my-project-2; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"
msgstr ""
"for i in \"$GUIX_DOPLNKOVE_PROFILY\"/moj-projekt-1 \"$GUIX_DOPLNKOVE_PROFILY\"/moj-projekt-2; do\n"
"  profile=$i/$(basename \"$i\")\n"
"  if [ -f \"$profile\"/etc/profile ]; then\n"
"    GUIX_PROFILE=\"$profile\"\n"
"    . \"$GUIX_PROFILE\"/etc/profile\n"
"  fi\n"
"  unset profile\n"
"done\n"

msgid "When a profile is off, it's straightforward to enable it for an individual shell without \"polluting\" the rest of the user session:"
msgstr "Keď je profil vypnutý, je jednoduché ho zapnúť vo vyhradenom shelle bez „znečistenia“ zvyšku sedenia:"

msgid "GUIX_PROFILE=\"path/to/my-project\" ; . \"$GUIX_PROFILE\"/etc/profile\n"
msgstr "GUIX_PROFILE=\"cesta/k/moj-projekt\" ; . \"$GUIX_PROFILE\"/etc/profile\n"

msgid "The key to enabling a profile is to @emph{source} its @samp{etc/profile} file.  This file contains shell code that exports the right environment variables necessary to activate the software contained in the profile.  It is built automatically by Guix and meant to be sourced.  It contains the same variables you would get if you ran:"
msgstr "Kľúčovým krok pri zapnutí profilu je @emph{načítanie} jeho súboru @samp{etc/profile}. Tento súbor obsahuje kód shellu, ktorý nastaví tie správne premenné prostredia potrebné pre spojazdnenie programov v profile.  Je vytvoreným samotným Guixom a určený na načítanie pomocou príkazu @code{source}.  Obsahuje rovnaké premenné ako tie, ktoré by ste získali vykonaním:"

msgid "guix package --search-paths=prefix --profile=$my_profile\"\n"
msgstr "guix package --search-paths=prefix --profile=$moj_profil\"\n"

msgid "Once again, see @ref{Invoking guix package,,, guix, GNU Guix Reference Manual} for the command line options."
msgstr "Viď voľby príkazu v @ref{Invoking guix package,,, guix, GNU Guix Reference Manual}."

msgid "To upgrade a profile, simply install the manifest again:"
msgstr "Profil môžete aktualizovať opätovnou inštaláciou balíkospisu:"

msgid ""
"guix package -m /path/to/guix-my-project-manifest.scm \\\n"
" -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"
msgstr ""
"guix package -m /cesta/ku/guix-balikospis-mojho-projektu.scm \\\n"
" -p \"$GUIX_DOPLNKOVE_PROFILY\"/moj-projekt/moj-projekt\n"

msgid "To upgrade all profiles, it's easy enough to loop over them.  For instance, assuming your manifest specifications are stored in @file{~/.guix-manifests/guix-$profile-manifest.scm}, with @samp{$profile} being the name of the profile (e.g.@: \"project1\"), you could do the following in Bourne shell:"
msgstr "Ak chcete aktualizovať všetky profily, môžete ich jednoducho prechádzať slučkou.  Napríklad, predpokladajúc, že váš balíkospis je uložený v @file{~/.guix-manifests/guix-$profil-balikospis.scm}, kde @samp{$profil} je názov profilu (napr.@: „projekt1“), pomocou shellu môžete vykonať nasledovné:"

msgid ""
"for profile in \"$GUIX_EXTRA_PROFILES\"/*; do\n"
"  guix package --profile=\"$profile\" \\\n"
"   --manifest=\"$HOME/.guix-manifests/guix-$profile-manifest.scm\"\n"
"done\n"
msgstr ""
"for profile in \"$GUIX_DOPLNKOVE_PROFILY\"/*; do\n"
"  guix package --profile=\"$profil\" \\\n"
"   --manifest=\"$HOME/.guix-manifests/guix-$profil-balikospis.scm\"\n"
"done\n"

msgid "Each profile has its own generations:"
msgstr "Každý profil má svoje vlastné pokolenia:"

msgid "guix package -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project --list-generations\n"
msgstr "guix package -p \"$GUIX_DOPLNKOVE_PROFILY\"/moj-projekt/moj-projekt --list-generations\n"

msgid "You can roll-back to any generation of a given profile:"
msgstr "Môžete sa vrátiť ku ktorémukoľvek pokoleniu daného profilu:"

msgid "guix package -p \"$GUIX_EXTRA_PROFILES\"/my-project/my-project --switch-generations=17\n"
msgstr "guix package -p \"$GUIX_DOPLNKOVE_PROFILY\"/moj-projekt/moj-projekt --switch-generations=17\n"

msgid "Finally, if you want to switch to a profile without inheriting from the current environment, you can activate it from an empty shell:"
msgstr "Konečne, ak chcete prepnúť na iný profil bez zdedenia súčasné prostredia, môžete ho zapnúť v prázdnom shelle:"

msgid ""
"env -i $(which bash) --login --noprofile --norc\n"
". my-project/etc/profile\n"
msgstr ""
"env -i $(which bash) --login --noprofile --norc\n"
". moj-projekt/etc/profile\n"

msgid "Activating a profile essentially boils down to exporting a bunch of environmental variables.  This is the role of the @samp{etc/profile} within the profile."
msgstr "Zapnutie profilu znamená hlavne nastavenie množstva premenných prostredia.  Toto je úloha pre @samp{etc/profile} vrámci profilu."

msgid "Note: Only the environmental variables of the packages that consume them will be set."
msgstr "Poznámka: Nastavujú sa len premenné prostredia balíkov, ktoré ich používajú."

msgid "For instance, @samp{MANPATH} won't be set if there is no consumer application for man pages within the profile.  So if you need to transparently access man pages once the profile is loaded, you've got two options:"
msgstr "Napríklad, @samp{MANPATH} nebude nastavená ak profil neobsahuje aplikáciu, ktorá túto premennú priamo využíva.  Takže, ak chcete po zapnutí profilu jednoducho pristupovať k stránkam pomocníka, máte dve možnosti:"

msgid "Either export the variable manually, e.g."
msgstr "Buď nastavíte túto premennú prostredia ručne, napr."

msgid "export MANPATH=/path/to/profile$@{MANPATH:+:@}$MANPATH\n"
msgstr "export MANPATH=/cesta/ku/profilu$@{MANPATH:+:@}$MANPATH\n"

msgid "Or include @samp{man-db} to the profile manifest."
msgstr "Alebo pridajte @samp{man-db} do balíkospisu profilu."

msgid "The same is true for @samp{INFOPATH} (you can install @samp{info-reader}), @samp{PKG_CONFIG_PATH} (install @samp{pkg-config}), etc."
msgstr "To isté platí aj pre @samp{INFOPATH} (môžete nainštalovať @samp{info-reader}), @samp{PKG_CONFIG_PATH} (nainštalujte @samp{pkg-config}), atď."

msgid "What about the default profile that Guix keeps in @file{~/.guix-profile}?"
msgstr "A čo s predvoleným profilom, ktorý Guix uchováva v @file{~/.guix-profile}?"

msgid "You can assign it the role you want.  Typically you would install the manifest of the packages you want to use all the time."
msgstr "Môžete mu prideliť ľubovoľnú úlohu.  Mohli by ste doň nainštalovať balíkospis balíkov, ktoré chcete mať stále poruke."

msgid "Alternatively, you could keep it ``manifest-less'' for throw-away packages that you would just use for a couple of days.  This way makes it convenient to run"
msgstr "Ďalšia možnosť je, že doň nebudete inštalovať žiaden balíkospis a profil vám poslúži len pre dočasné balíky. V tomto prípade môžete jednoducho vykonať"

msgid ""
"guix install package-foo\n"
"guix upgrade package-bar\n"
msgstr ""
"guix install balik-jablko\n"
"guix upgrade balik-hruska\n"

msgid "without having to specify the path to a profile."
msgstr "bez nutnosti uvádzať cestu k profilu."

msgid "A common complaint about manifests is that they can be slow to install when they contain large number of packages.  This is especially cumbersome when you just want get an upgrade for one package within a big manifest."
msgstr "Medzi časté sťažnosti používateľov patrí, že inštalácia balíkospisov obsahujúcich veľké množstvo balíkov môže trvať veľmi dlho.  Je to otravné hlavne vtedy, keď potrebujete aktualizovať iba jeden balík vrámci dlhého balíkospisu."

msgid "This is one more reason to use multiple profiles, which happen to be just perfect to break down manifests into multiple sets of semantically connected packages.  Using multiple, small profiles provides more flexibility and usability."
msgstr "Je to ďalší dôvod pre používanie viacerých profilov, čo umožňuje rozdelenie balíkospisov do viacerých množín významovo prepojených balíkov.  Používanie viacerých, menších profilov tiež vedie k väčšej prispôsobiteľnosti a pohodlnejšej práci."

msgid "Manifests come with multiple benefits.  In particular, they ease maintenance:"
msgstr "Balíkospisy prinášajú mnoho výhod.  Predovšetkým, zjednodušujú údržbu:"

msgid "When a profile is set up from a manifest, the manifest itself is self-sufficient to keep a ``package listing'' around and reinstall the profile later or on a different system.  For ad-hoc profiles, we would need to generate a manifest specification manually and maintain the package versions for the packages that don't use the default version."
msgstr "Pri nastavení profilu z balíkospisu, on samotný stačí na uschovanie zoznamu balíkov poruke a na opätovnú inštaláciu profilu niekedy inokedy alebo na inom systéme.  V prípade dočasných účelových profilov by sme museli vytvoriť zadanie balíkospisu ručne a udržiavať správne verzie tých balíkov, pri ktorých nebola použitá ich predvolená verzia."

msgid "@code{guix package --upgrade} always tries to update the packages that have propagated inputs, even if there is nothing to do.  Guix manifests remove this problem."
msgstr "@code{guix package --upgrade} sa pokúša o aktualizáciu balíkov s rozšírenými vstupmi aj vtedy, keď to nie je potrebné.  Guixové balíkospisy touto nevýhodou netrpia."

msgid "When partially upgrading a profile, conflicts may arise (due to diverging dependencies between the updated and the non-updated packages) and they can be annoying to resolve manually.  Manifests remove this problem altogether since all packages are always upgraded at once."
msgstr "Pri čiastočnej aktualizácii profilu sa môžu vyskytnúť rozpory (kvôli rozličným závislostiam medzi aktualizovanými a neaktualizovanými balíkmi), ktoré je obvykle náročné vyriešiť ručne.  Pri balíkospisoch k tomu nedochádza, keďže všetky balíky sa aktualizujú súčasne."

msgid "As mentioned above, manifests allow for reproducible profiles, while the imperative @code{guix install}, @code{guix upgrade}, etc. do not, since they produce different profiles every time even when they hold the same packages.  See @uref{https://issues.guix.gnu.org/issue/33285, the related discussion on the matter}."
msgstr "Ako už bolo spomenuté, balíkospisy umožňujú napodobniteľné profily, zatiaľčo príkazy @code{guix install}, @code{guix upgrade}, a pod. nie, pretože zakaždým vytvárajú nové profily, aj keď obsahujú rovnaké balíky.  Viď @uref{https://issues.guix.gnu.org/issue/33285, súvisiacu rozpravu}."

msgid "Manifest specifications are usable by other @samp{guix} commands.  For example, you can run @code{guix weather -m manifest.scm} to see how many substitutes are available, which can help you decide whether you want to try upgrading today or wait a while.  Another example: you can run @code{guix pack -m manifest.scm} to create a pack containing all the packages in the manifest (and their transitive references)."
msgstr "Zadania balíkospisov môžu využiť aj iné príkazy @samp{guix}.  Napríklad, pomocou @code{guix weather -m balikospis.scm} môžete zistiť dostupné množstvo náhrad a lepšie sa rozhodnúť, či chcete vykonať aktualizáciu už dnes, alebo chvíľu počkáte.  Ďalší príklad: @code{guix pack -m balikospis.scm} vám umožní vytvoriť súpravu obsahujúcu všetky balíky balíkospisu (a ich závislosti)."

msgid "Finally, manifests have a Scheme representation, the @samp{<manifest>} record type.  They can be manipulated in Scheme and passed to the various Guix @uref{https://en.wikipedia.org/wiki/Api, APIs}."
msgstr "Nakoniec, balíkospisy sú zapísané v jazyku Scheme, ako záznamy druhu @samp{<manifest>}.  Možno s nimi, teda, v Scheme aj narábať a používať ich s rozličnými @uref{https://sk.wikipedia.org/wiki/Application_programming_interface, API} Guixu."

msgid "@emph{Security warning:} While keeping old profiles around can be convenient, keep in mind that outdated packages may not have received the latest security fixes."
msgstr "@emph{Bezpečnostné upozornenie:} Napriek tomu, že je uchovávanie starých profilov šikovné, zapamätajte si, že zastarané balíky nemusia obsahovať najnovšie bezpečnostné záplaty."

msgid "To reproduce a profile bit-for-bit, we need two pieces of information:"
msgstr "Napodobnenie profilu bit-po-bite vyžaduje dva údaje:"

msgid "Indeed, manifests alone might not be enough: different Guix versions (or different channels) can produce different outputs for a given manifest."
msgstr "Vskutku, samotný balíkospis nestačí: rozdielne verzie Guixu (alebo rozdielne kanály) môžu viesť k odlišných výsledkom pre daný balíkospis."

msgid "On another computer, you can use the channel specification file and the manifest to reproduce the exact same profile:"
msgstr "Na inom počítači môžete toto určenie kanálov spolu s balíkospisom použiť na napodobnenie presne toho istého profilu:"

msgid ""
"GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles\n"
"GUIX_EXTRA=$HOME/.guix-extra\n"
"\n"
msgstr ""
"GUIX_DOPLNKOVE_PROFILY=$HOME/.guix-doplnkove-profily\n"
"GUIX_DOPLNKY=$HOME/.guix-doplnky\n"
"\n"

msgid ""
"mkdir -p \"$GUIX_EXTRA\"/my-project\n"
"guix pull --channels=channel-specs.scm --profile=\"$GUIX_EXTRA/my-project/guix\"\n"
"\n"
msgstr ""
"mkdir -p \"$GUIX_DOPLNKY\"/moj-projekt\n"
"guix pull --channels=urcenie-kanalov.scm --profile=\"$GUIX_DOPLNKY/moj-projekt/guix\"\n"
"\n"

msgid ""
"mkdir -p \"$GUIX_EXTRA_PROFILES/my-project\"\n"
"\"$GUIX_EXTRA\"/my-project/guix/bin/guix package \\\n"
" --manifest=/path/to/guix-my-project-manifest.scm \\\n"
" --profile=\"$GUIX_EXTRA_PROFILES\"/my-project/my-project\n"
msgstr ""
"mkdir -p \"$GUIX_DOPLNKOVE_PROFILY/moj-projekt\"\n"
"\"$GUIX_DOPLNKY\"/moj-projekt/guix/bin/guix package \\\n"
" --manifest=/cesta/ku/guix-balikospis-mojho-projektu.scm \\\n"
" --profile=\"$GUIX_DOPLNKOVE_PROFILY\"/moj-projekt/moj-projekt\n"

msgid "It's safe to delete the Guix channel profile you've just installed with the channel specification, the project profile does not depend on it."
msgstr "Profil kanálu Guix, ktorý ste práve nainštalovali môžete bezpečne odstrániť, profil projektu na ňom nezávisí."

msgid "Guix provides multiple tools to manage environment.  This chapter demonstrate such utilities."
msgstr "Guix poskytuje viacero nástrojov na správu prostredí.  Táto kapitola ich predstavuje."

msgid "Guix provides a @samp{direnv} package, which could extend shell after directory change.  This tool could be used to prepare a pure Guix environment."
msgstr "Guix poskytuje balík @samp{direnv}, ktorým možno rozšíriť prostredie shellu po zmene priečinka.  Tento nástroj sa dá využiť na prípravu čistého prostredia Guix."

msgid "The following example provides a shell function for @file{~/.direnvrc} file, which could be used from Guix Git repository in @file{~/src/guix/.envrc} file to setup a build environment similar to described in @pxref{Building from Git,,, guix, GNU Guix Reference Manual}."
msgstr "Nasledovný príklad poskytuje shellovskú funkciu pre súbor @file{~/.direnvrc}, ktorú možno použiť z Git repozitára Guixu v súbore @file{~/src/guix/.envrc} na nastavenie vývojového prostredia podobnému tomu, ktoré je opísané v @pxref{Building from Git,,, guix, GNU Guix Reference Manual}."

msgid "Create a @file{~/.direnvrc} with a Bash code:"
msgstr "Vytvorte súbor @file{~/.direnvrc} obsahujúci nasledovný kód Bash:"

msgid ""
"# Thanks <https://github.com/direnv/direnv/issues/73#issuecomment-152284914>\n"
"export_function()\n"
"@{\n"
"  local name=$1\n"
"  local alias_dir=$PWD/.direnv/aliases\n"
"  mkdir -p \"$alias_dir\"\n"
"  PATH_add \"$alias_dir\"\n"
"  local target=\"$alias_dir/$name\"\n"
"  if declare -f \"$name\" >/dev/null; then\n"
"    echo \"#!$SHELL\" > \"$target\"\n"
"    declare -f \"$name\" >> \"$target\" 2>/dev/null\n"
"    # Notice that we add shell variables to the function trigger.\n"
"    echo \"$name \\$*\" >> \"$target\"\n"
"    chmod +x \"$target\"\n"
"  fi\n"
"@}\n"
"\n"
msgstr ""
"# Vďaka <https://github.com/direnv/direnv/issues/73#issuecomment-152284914>\n"
"export_function()\n"
"@{\n"
"  local name=$1\n"
"  local alias_dir=$PWD/.direnv/aliases\n"
"  mkdir -p \"$alias_dir\"\n"
"  PATH_add \"$alias_dir\"\n"
"  local target=\"$alias_dir/$name\"\n"
"  if declare -f \"$name\" >/dev/null; then\n"
"    echo \"#!$SHELL\" > \"$target\"\n"
"    declare -f \"$name\" >> \"$target\" 2>/dev/null\n"
"    # Všimnite si, že pridávame premenné shellu do spúšťača funkcie.\n"
"    echo \"$name \\$*\" >> \"$target\"\n"
"    chmod +x \"$target\"\n"
"  fi\n"
"@}\n"
"\n"

msgid ""
"use_guix()\n"
"@{\n"
"    # Set GitHub token.\n"
"    export GUIX_GITHUB_TOKEN=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n"
"\n"
msgstr ""
"use_guix()\n"
"@{\n"
"    # Nastaviť žetón pre GitHub.\n"
"    export GUIX_GITHUB_TOKEN=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n"
"\n"

msgid ""
"    # Unset 'GUIX_PACKAGE_PATH'.\n"
"    export GUIX_PACKAGE_PATH=\"\"\n"
"\n"
msgstr ""
"    # Vyčistiť „GUIX_PACKAGE_PATH“.\n"
"    export GUIX_PACKAGE_PATH=\"\"\n"
"\n"

msgid ""
"    # Recreate a garbage collector root.\n"
"    gcroots=\"$HOME/.config/guix/gcroots\"\n"
"    mkdir -p \"$gcroots\"\n"
"    gcroot=\"$gcroots/guix\"\n"
"    if [ -L \"$gcroot\" ]\n"
"    then\n"
"        rm -v \"$gcroot\"\n"
"    fi\n"
"\n"
msgstr ""
"    # Opätovne vytvoriť koreň zberača odpadkov.\n"
"    gcroots=\"$HOME/.config/guix/gcroots\"\n"
"    mkdir -p \"$gcroots\"\n"
"    gcroot=\"$gcroots/guix\"\n"
"    if [ -L \"$gcroot\" ]\n"
"    then\n"
"        rm -v \"$gcroot\"\n"
"    fi\n"
"\n"

msgid ""
"    # Miscellaneous packages.\n"
"    PACKAGES_MAINTENANCE=(\n"
"        direnv\n"
"        git\n"
"        git:send-email\n"
"        git-cal\n"
"        gnupg\n"
"        guile-colorized\n"
"        guile-readline\n"
"        less\n"
"        ncurses\n"
"        openssh\n"
"        xdot\n"
"    )\n"
"\n"
msgstr ""
"    # Doplnkové balíky.\n"
"    PACKAGES_MAINTENANCE=(\n"
"        direnv\n"
"        git\n"
"        git:send-email\n"
"        git-cal\n"
"        gnupg\n"
"        guile-colorized\n"
"        guile-readline\n"
"        less\n"
"        ncurses\n"
"        openssh\n"
"        xdot\n"
"    )\n"
"\n"

msgid ""
"    # Environment packages.\n"
"    PACKAGES=(help2man guile-sqlite3 guile-gcrypt)\n"
"\n"
msgstr ""
"    # Balíky prostredia.\n"
"    PACKAGES=(help2man guile-sqlite3 guile-gcrypt)\n"
"\n"

msgid ""
"    # Thanks <https://lists.gnu.org/archive/html/guix-devel/2016-09/msg00859.html>\n"
"    eval \"$(guix shell --search-paths --root=\"$gcroot\" --pure \\\n"
"     --development guix $@{PACKAGES[@@]@} $@{PACKAGES_MAINTENANCE[@@]@} \"$@@\")\"\n"
"\n"
msgstr ""
"    # Vďaka <https://lists.gnu.org/archive/html/guix-devel/2016-09/msg00859.html>\n"
"    eval \"$(guix shell --search-paths --root=\"$gcroot\" --pure \\\n"
"     --development guix $@{PACKAGES[@@]@} $@{PACKAGES_MAINTENANCE[@@]@} \"$@@\")\"\n"
"\n"

msgid ""
"    # Predefine configure flags.\n"
"    configure()\n"
"    @{\n"
"        ./configure\n"
"    @}\n"
"    export_function configure\n"
"\n"
msgstr ""
"    # Vopred zadať voľby nastavenia.\n"
"    configure()\n"
"    @{\n"
"        ./configure\n"
"    @}\n"
"    export_function configure\n"
"\n"

msgid ""
"    # Run make and optionally build something.\n"
"    build()\n"
"    @{\n"
"        make -j 2\n"
"        if [ $# -gt 0 ]\n"
"        then\n"
"            ./pre-inst-env guix build \"$@@\"\n"
"        fi\n"
"    @}\n"
"    export_function build\n"
"\n"
msgstr ""
"    # Spustiť „make“ a možno niečo zostaviť.\n"
"    build()\n"
"    @{\n"
"        make -j 2\n"
"        if [ $# -gt 0 ]\n"
"        then\n"
"            ./pre-inst-env guix build \"$@@\"\n"
"        fi\n"
"    @}\n"
"    export_function build\n"
"\n"

msgid ""
"    # Predefine push Git command.\n"
"    push()\n"
"    @{\n"
"        git push --set-upstream origin\n"
"    @}\n"
"    export_function push\n"
"\n"
msgstr ""
"    # Vopred zadať Git príkaz pre odoslanie zmien.\n"
"    push()\n"
"    @{\n"
"        git push --set-upstream origin\n"
"    @}\n"
"    export_function push\n"
"\n"

msgid ""
"    clear                        # Clean up the screen.\n"
"    git-cal --author='Your Name' # Show contributions calendar.\n"
"\n"
msgstr ""
"    clear                        # Vyčistiť obrazovku.\n"
"    git-cal --author='Vaše meno' # Zobraziť kalendár zmien.\n"
"\n"

msgid ""
"    # Show commands help.\n"
"    echo \"\n"
"build          build a package or just a project if no argument provided\n"
"configure      run ./configure with predefined parameters\n"
"push           push to upstream Git repository\n"
"\"\n"
"@}\n"
msgstr ""
"    # Zobraziť pomocníka príkazov.\n"
"    echo \"\n"
"build          zostaviť balík alebo iba projekt ak nebol poskytnutý žiaden parameter\n"
"configure      vykonať ./configure s predvolenými voľbami\n"
"push           odoslať zmeny do vzdialeného repozitára Git\n"
"\"\n"
"@}\n"

msgid "Every project containing @file{.envrc} with a string @code{use guix} will have predefined environment variables and procedures."
msgstr "Každý projekt obsahujúci @file{.envrc} s reťazcom @code{use guix} bude mať vopred pripravené premenné prostredia a funkcie."

msgid "Run @command{direnv allow} to setup the environment for the first time."
msgstr "Vykonajte @command{direnv allow} pre prvé nastavenie prostredia."

msgid "cluster installation"
msgstr "inštalácia na zhluk počítačov"

msgid "high-performance computing, HPC"
msgstr "vysokovýkonné počítanie, HPC"

msgid "HPC, high-performance computing"
msgstr "HPC, vysokovýkonné počítanie"

msgid "Guix is appealing to scientists and @acronym{HPC, high-performance computing} practitioners: it makes it easy to deploy potentially complex software stacks, and it lets you do so in a reproducible fashion---you can redeploy the exact same software on different machines and at different points in time."
msgstr "Guix môže zaujať vedcov a odborníkov na @acronym{HPC, vysokovýkonné počítanie}: umožňuje jednoduchšie a opakovateľné nasadenie zložitých sústav programov---môžete opätovne nasadiť to isté programové vybavenie na rôzne stroje a v rôznych časových odstupoch."

msgid "In this chapter we look at how a cluster sysadmin can install Guix for system-wide use, such that it can be used on all the cluster nodes, and discuss the various tradeoffs@footnote{This chapter is adapted from a @uref{https://hpc.guix.info/blog/2017/11/installing-guix-on-a-cluster/, blog post published on the Guix-HPC web site in 2017}.}."
msgstr "V tejto kapitole sa pozrieme na to, ako môže systémový správca zhluku počítačov nainštalovať Guix na celosystémovej úrovni tak, aby ho bolo možné využiť na všetkých uzloch zhluku, a povieme si aj rôznych ústupkoch@footnote{Táto kapitola je založená na @uref{https://hpc.guix.info/blog/2017/11/installing-guix-on-a-cluster/, príspevku zverejnenom na stránke Guix-HPC v roku 2017}.}."

msgid "Here we assume that the cluster is running a GNU/Linux distro other than Guix System and that we are going to install Guix on top of it."
msgstr "V tomto prípade predpokladáme, že na zhluku počítačov beží distribúcia GNU/Linuxu iná než systém Guix, a že budeme Guix inštalovať na ňu."

msgid "The recommended approach is to set up one @emph{head node} running @command{guix-daemon} and exporting @file{/gnu/store} over NFS to compute nodes."
msgstr "Odporúčaný postup je nastaviť jeden @emph{hlavný uzol}, kde bude bežať @command{guix-daemon}, a @file{/gnu/store} uzlom sprístupniť cez NFS."

msgid "Remember that @command{guix-daemon} is responsible for spawning build processes and downloads on behalf of clients (@pxref{Invoking guix-daemon,,, guix, GNU Guix Reference Manual}), and more generally accessing @file{/gnu/store}, which contains all the package binaries built by all the users (@pxref{The Store,,, guix, GNU Guix Reference Manual}).  ``Client'' here refers to all the Guix commands that users see, such as @code{guix install}.  On a cluster, these commands may be running on the compute nodes and we'll want them to talk to the head node's @code{guix-daemon} instance."
msgstr "Zapamätajte si, že @command{guix-daemon} je zodpovedný za spúšťanie zostavovacích procesov a sťahovaní v mene klientov (@pxref{Invoking guix-daemon,,, guix, GNU Guix Reference Manual}), a v širšom ohľade za prístup ku @file{/gnu/store}, ktoré obsahuje binárne súbory všetkých balíkov zostavené každým z používateľov.  „Klient“ tu odkazuje na všetky Guix príkazy prístupné pre používateľov, ako @code{guix install}.  Na zhluku počítačov môžu tieto príkazy bežať na výpočtových uzloch a musia byť v spojení s @code{guix-daemon} na hlavnom uzle."

msgid "To begin with, the head node can be installed following the usual binary installation instructions (@pxref{Binary Installation,,, guix, GNU Guix Reference Manual}).  Thanks to the installation script, this should be quick.  Once installation is complete, we need to make some adjustments."
msgstr "Na začiatok, inštaláciu na hlavný uzol možno vykonať podľa obvyklého postupu (@pxref{Binary Installation,,, guix, GNU Guix Reference Manual}).  Vďaka inštalačnému skriptu by to malo byť rýchle.  Po dokončení inštalácie musíme vykonať niekoľko prispôsobení."

msgid "Since we want @code{guix-daemon} to be reachable not just from the head node but also from the compute nodes, we need to arrange so that it listens for connections over TCP/IP.  To do that, we'll edit the systemd startup file for @command{guix-daemon}, @file{/etc/systemd/system/guix-daemon.service}, and add a @code{--listen} argument to the @code{ExecStart} line so that it looks something like this:"
msgstr "Pretože chceme, aby bol @code{guix-daemon} dostupný nie len z hlavného uzla, ale aj z výpočtových uzlov, musíme to zariadiť tak, aby zisťoval prichádzajúce pripojenia cez TCP/IP.  Upravíme, teda, spúšťací súbor systemd @file{/etc/systemd/system/guix-daemon.service} pre @code{guix-daemon} a pridáme voľbu @code{--listen} na riadok s @code{ExecStart} asi takto:"

msgid ""
"ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon \\\n"
"    --build-users-group=guixbuild \\\n"
"    --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"
msgstr ""
"ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon \\\n"
"    --build-users-group=guixbuild \\\n"
"    --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"

msgid "ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon --build-users-group=guixbuild --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"
msgstr "ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon --build-users-group=guixbuild --listen=/var/guix/daemon-socket/socket --listen=0.0.0.0\n"

msgid "For these changes to take effect, the service needs to be restarted:"
msgstr "Pre uplatnenie zmien musíme službu opätovne spustiť:"

msgid ""
"systemctl daemon-reload\n"
"systemctl restart guix-daemon\n"
msgstr ""
"systemctl daemon-reload\n"
"systemctl restart guix-daemon\n"

msgid "The @code{--listen=0.0.0.0} bit means that @code{guix-daemon} will process @emph{all} incoming TCP connections on port 44146 (@pxref{Invoking guix-daemon,,, guix, GNU Guix Reference Manual}). This is usually fine in a cluster setup where the head node is reachable exclusively from the cluster's local area network---you don't want that to be exposed to the Internet!"
msgstr "@code{--listen=0.0.0.0} znamená, že @code{guix-daemon} spracuje @emph{všetky} TCP pripojenia prichádzajúce cez koncový bod 44146 (@pxref{Invoking guix-daemon,,, guix, GNU Guix Reference Manual}). V prípade zhluku počítačov, kde je hlavný uzol prístupný výhradne z miestnej, je to vyhovujúce. Nechcete, predsa, aby bol @code{guix-daemon} prístupný aj z internetu!"

msgid "The next step is to define our NFS exports in @uref{https://linux.die.net/man/5/exports,@file{/etc/exports}} by adding something along these lines:"
msgstr "Ďalším krokom je sprístupnenie úložiska cez NFS v @uref{https://linux.die.net/man/5/exports,@file{/etc/exports}} asi takto:"

msgid ""
"/gnu/store    *(ro)\n"
"/var/guix     *(rw, async)\n"
"/var/log/guix *(ro)\n"
msgstr ""
"/gnu/store    *(ro)\n"
"/var/guix     *(rw, async)\n"
"/var/log/guix *(ro)\n"

msgid "The @file{/gnu/store} directory can be exported read-only since only @command{guix-daemon} on the master node will ever modify it.  @file{/var/guix} contains @emph{user profiles} as managed by @code{guix package}; thus, to allow users to install packages with @code{guix package}, this must be read-write."
msgstr "Priečinok @file{/gnu/store} môže byť sprístupnený len na čítanie, keďže @command{guix-daemon} na hlavnom uzle ho nikdy nebude upravovať.  @file{/var/guix} obsahuje @emph{profily používateľov}, ktoré spravuje @code{guix package}. Aby mohli používatelia inštalovať s @code{guix package}, toto umiestnenie musí zostať prístupné aj na čítanie, aj na zápis."

msgid "Users can create as many profiles as they like in addition to the default profile, @file{~/.guix-profile}.  For instance, @code{guix package -p ~/dev/python-dev -i python} installs Python in a profile reachable from the @code{~/dev/python-dev} symlink.  To make sure that this profile is protected from garbage collection---i.e., that Python will not be removed from @file{/gnu/store} while this profile exists---, @emph{home directories should be mounted on the head node} as well so that @code{guix-daemon} knows about these non-standard profiles and avoids collecting software they refer to."
msgstr "Používatelia si môžu okrem predvoleného profilu @file{~/.guix-profile} vytvoriť toľko profilov, koľko len chcú.  Napríklad, @code{guix package -p ~/dev/python-dev -i python} nainštaluje Python do profilu prístupného cez symbolický odkaz @code{~/dev/python-dev}.  Aby sme sa uistili, že sa zberač odpadkov tomuto profilu vyhne---t.j., že Python nebude z @file{/gnu/store} odstránený pokiaľ sa profil používa---@emph{domovské priečinky by tiež mali byť pripojené k rovnakému uzlu}. @code{guix-daemon} tak bude vedieť o týchto neobvyklých profiloch a zabráni vyčisteniu programového vybavenia, na ktoré odkazujú."

msgid "It may be a good idea to periodically remove unused bits from @file{/gnu/store} by running @command{guix gc} (@pxref{Invoking guix gc,,, guix, GNU Guix Reference Manual}).  This can be done by adding a crontab entry on the head node:"
msgstr "Môže byť užitočné pravidelne odstraňovať nepoužívané súbory z @file{/gnu/store} pomocou @command{guix gc} (@pxref{Invoking guix gc,,, guix, GNU Guix Reference Manual}). Nastavíte to pridaním vstupu contrab na hlavný uzol:"

msgid "root@@master# crontab -e\n"
msgstr "root@@master# crontab -e\n"

msgid "... with something like this:"
msgstr "… s niečím takýmto:"

msgid ""
"# Every day at 5AM, run the garbage collector to make sure\n"
"# at least 10 GB are free on /gnu/store.\n"
"0 5 * * 1  /usr/local/bin/guix gc -F10G\n"
msgstr ""
"# Každé ráno o 5:00 spustiť zberač odpadkov a zabezpečiť,\n"
"# že v /gnu/store je aspoň 10 GB voľného miesta.\n"
"0 5 * * 1  /usr/local/bin/guix gc -F10G\n"

msgid "We're done with the head node! Let's look at compute nodes now."
msgstr "S hlavným uzlom sme hotoví! Pozrime sa teraz na výpočtové uzly."

msgid "First of all, we need compute nodes to mount those NFS directories that the head node exports.  This can be done by adding the following lines to @uref{https://linux.die.net/man/5/fstab,@file{/etc/fstab}}:"
msgstr "Predovšetkým musíme na výpočtových uzloch pripojiť NFS priečinky sprístupnené hlavným uzlom.  Môžeme tak urobiť pridaním nasledovných riadkov do @uref{https://linux.die.net/man/5/fstab,@file{/etc/fstab}}:"

msgid ""
"@var{head-node}:/gnu/store    /gnu/store    nfs  defaults,_netdev,vers=3 0 0\n"
"@var{head-node}:/var/guix     /var/guix     nfs  defaults,_netdev,vers=3 0 0\n"
"@var{head-node}:/var/log/guix /var/log/guix nfs  defaults,_netdev,vers=3 0 0\n"
msgstr ""
"@var{hlavny-uzol}:/gnu/store    /gnu/store    nfs  defaults,_netdev,vers=3 0 0\n"
"@var{hlavny-uzol}:/var/guix     /var/guix     nfs  defaults,_netdev,vers=3 0 0\n"
"@var{hlavny-uzol}:/var/log/guix /var/log/guix nfs  defaults,_netdev,vers=3 0 0\n"

msgid "... where @var{head-node} is the name or IP address of your head node.  From there on, assuming the mount points exist, you should be able to mount each of these on the compute nodes."
msgstr "… kde @var{hlavny-uzol} je názov alebo IP adresa vášho hlavného uzla.  Potom, predpokladajúc, že prípojné body sú prítomné, by ste mali byť schopní pripojiť každý z nich ku výpočtovým uzlom."

msgid "Next, we need to provide a default @command{guix} command that users can run when they first connect to the cluster (eventually they will invoke @command{guix pull}, which will provide them with their ``own'' @command{guix} command).  Similar to what the binary installation script did on the head node, we'll store that in @file{/usr/local/bin}:"
msgstr "Ďalej musíme používateľom poskytnúť predvolený @command{guix} príkaz, ktorý môžu spustiť po prvom prihlásení k zhluku počítačov (nakoniec si spustením @command{guix pull} vytvoria „vlastný“ @command{guix} príkaz).  Podobne ako to inštalačný skript zariadil na hlavnom uzle, uložíme ho do @file{/usr/local/bin}:"

msgid ""
"mkdir -p /usr/local/bin\n"
"ln -s /var/guix/profiles/per-user/root/current-guix/bin/guix \\\n"
"      /usr/local/bin/guix\n"
msgstr ""
"mkdir -p /usr/local/bin\n"
"ln -s /var/guix/profiles/per-user/root/current-guix/bin/guix \\\n"
"      /usr/local/bin/guix\n"

msgid "We then need to tell @code{guix} to talk to the daemon running on our master node, by adding these lines to @code{/etc/profile}:"
msgstr "Potom musíme @code{guixu} povedať, aby bol v spojení s démonom bežiacim na hlavnom uzle, pridaním týchto riadkov do @code{/etc/profile}:"

msgid ""
"GUIX_DAEMON_SOCKET=\"guix://@var{head-node}\"\n"
"export GUIX_DAEMON_SOCKET\n"
msgstr ""
"GUIX_DAEMON_SOCKET=\"guix://@var{hlavny-uzol}\"\n"
"export GUIX_DAEMON_SOCKET\n"

msgid "To avoid warnings and make sure @code{guix} uses the right locale, we need to tell it to use locale data provided by Guix (@pxref{Application Setup,,, guix, GNU Guix Reference Manual}):"
msgstr "Aby sme predišli varovným správam a uistili sa, že @code{guix} používa správne miestne jazykové nastavenie, musíme ho nastaviť na používanie údajov poskytovaných Guixom (@pxref{Application Setup,,, guix, GNU Guix Reference Manual}):"

msgid ""
"GUIX_LOCPATH=/var/guix/profiles/per-user/root/guix-profile/lib/locale\n"
"export GUIX_LOCPATH\n"
"\n"
msgstr ""
"GUIX_LOCPATH=/var/guix/profiles/per-user/root/guix-profile/lib/locale\n"
"export GUIX_LOCPATH\n"
"\n"

msgid ""
"# Here we must use a valid locale name.  Try \"ls $GUIX_LOCPATH/*\"\n"
"# to see what names can be used.\n"
"LC_ALL=fr_FR.utf8\n"
"export LC_ALL\n"
msgstr ""
"# Tu musíme použiť platný názov miestneho jazykového nastavenia.\n"
"# Dostupné nastavenia môžete zobraziť pomocou „ls $GUIX_LOCPATH/*“.\n"
"LC_ALL=sk_SK.utf8\n"
"export LC_ALL\n"

msgid "Last but not least, Guix provides command-line completion notably for Bash and zsh.  In @code{/etc/bashrc}, consider adding this line:"
msgstr "Konečne, Guix poskytuje dopĺňanie príkazov hlavne pre Bash a zsh.  Zvážte pridanie nasledovného riadka do @code{/etc/bashrc}:"

msgid ". /var/guix/profiles/per-user/root/current-guix/etc/bash_completion.d/guix\n"
msgstr ". /var/guix/profiles/per-user/root/current-guix/etc/bash_completion.d/guix\n"

msgid "Voilà!"
msgstr "A je to!"

msgid "You can check that everything's in place by logging in on a compute node and running:"
msgstr "Prihláste sa na jeden z výpočtových uzlov a overte či všetko pracuje správne spustením:"

msgid "guix install hello\n"
msgstr "guix install hello\n"

msgid "The daemon on the head node should download pre-built binaries on your behalf and unpack them in @file{/gnu/store}, and @command{guix install} should create @file{~/.guix-profile} containing the @file{~/.guix-profile/bin/hello} command."
msgstr "Démon na hlavnom uzle by mal vašim menom stiahnuť pred-zostavené binárne súbory a rozbaliť ich v @file{/gnu/store}. @command{guix install} by mal vytvoriť @file{~/.guix-profile} obsahujúci príkaz @file{~/.guix-profile/bin/hello}."

msgid "Network Access"
msgstr "Prístup do siete"

msgid "Guix requires network access to download source code and pre-built binaries.  The good news is that only the head node needs that since compute nodes simply delegate to it."
msgstr "Guix vyžaduje prístup do siete pre sťahovanie zdrojových kódov a pred-zostavených binárnych súborov.  Dobrá správa je, že táto podmienka platí len pre hlavný uzol, keďže koná aj v mene výpočtových uzlov."

msgid "It is customary for cluster nodes to have access at best to a @emph{white list} of hosts.  Our head node needs at least @code{ci.guix.gnu.org} in this white list since this is where it gets pre-built binaries from by default, for all the packages that are in Guix proper."
msgstr "Uzly v zhluku počítačov majú obvykle prístup len k hostiteľom zaradeným na @emph{bielej listine}.  Pre náš hlavný uzol je dôležité na túto bielu listinu zaradiť aspoň @code{ci.guix.gnu.org}, odkiaľ predvolene získava pred-zostavené náhrady pre všetky balíky prítomné v samotnom Guixe."

msgid "Incidentally, @code{ci.guix.gnu.org} also serves as a @emph{content-addressed mirror} of the source code of those packages.  Consequently, it is sufficient to have @emph{only} @code{ci.guix.gnu.org} in that white list."
msgstr "@code{ci.guix.gnu.org} naschvál slúži aj ako @emph{zrkadlo s asociatívnym prístupom} pre získavanie zdrojových kódov balíkov.  Preto stačí na bielu listinu pridať @emph{len} @code{ci.guix.gnu.org}."

msgid "Software packages maintained in a separate repository such as one of the various @uref{https://hpc.guix.info/channels, HPC channels} are of course unavailable from @code{ci.guix.gnu.org}.  For these packages, you may want to extend the white list such that source and pre-built binaries (assuming this-party servers provide binaries for these packages) can be downloaded.  As a last resort, users can always download source on their workstation and add it to the cluster's @file{/gnu/store}, like this:"
msgstr "Balíky spravované vrámci iných repozitárov, napr. v rozličných @uref{https://hpc.guix.info/channels, HPC kanáloch}, samozrejme nie sú na @code{ci.guix.gnu.org} dostupné.  Pre zahrnutie týchto balíkov môžete bielu listinu rozšíriť tak, aby bolo možné sťahovať príslušné zdrojové kódy a pred-zostavené binárne súbory (predpokladajúc, že tieto servery tretej strany pred-zostavené binárne súbory pre dotknuté balíky poskytujú).  Ako poslednú možnosť si používatelia môžu zdrojový kód stiahnuť na svojom počítači a potom ho takto pridať do @file{/gnu/store} na zhluku počítačov:"

msgid ""
"GUIX_DAEMON_SOCKET=ssh://compute-node.example.org \\\n"
"  guix download http://starpu.gforge.inria.fr/files/starpu-1.2.3/starpu-1.2.3.tar.gz\n"
msgstr ""
"GUIX_DAEMON_SOCKET=ssh://vypoctovy-uzol.priklad.sk \\\n"
"  guix download http://starpu.gforge.inria.fr/files/starpu-1.2.3/starpu-1.2.3.tar.gz\n"

msgid "The above command downloads @code{starpu-1.2.3.tar.gz} @emph{and} sends it to the cluster's @code{guix-daemon} instance over SSH."
msgstr "Horeuvedený príkaz stiahne @code{starpu-1.2.3.tar.gz} @emph{a} cez SSH ho odošle démonovi @code{guix-daemon} na zhluku počítačov."

msgid "Air-gapped clusters require more work.  At the moment, our suggestion would be to download all the necessary source code on a workstation running Guix.  For instance, using the @option{--sources} option of @command{guix build} (@pxref{Invoking guix build,,, guix, GNU Guix Reference Manual}), the example below downloads all the source code the @code{openmpi} package depends on:"
msgstr "Zhluky počítačov odpojené od vonkajšej siete vyžadujú väčšie úsilie.  V tejto chvíli vám odporúčame stiahnuť všetok potrebný zdrojový kód na pracovnej stanici s Guixom.  V nižšie uvedenom príklade uvádzame ako sa dá stiahnuť všetok zdrojový kód, na ktorom závisí balík @code{openmpi} pomocou voľby @option{--sources} príkazu @command{guix build} (@pxref{Invoking guix build,,, guix, GNU Guix Reference Manual}):"

msgid ""
"$ guix build --sources=transitive openmpi\n"
"\n"
msgstr ""
"$ guix build --sources=transitive openmpi\n"
"\n"

msgid ""
"@dots{}\n"
"\n"
msgstr ""
"@dots{}\n"
"\n"

msgid ""
"/gnu/store/xc17sm60fb8nxadc4qy0c7rqph499z8s-openmpi-1.10.7.tar.bz2\n"
"/gnu/store/s67jx92lpipy2nfj5cz818xv430n4b7w-gcc-5.4.0.tar.xz\n"
"/gnu/store/npw9qh8a46lrxiwh9xwk0wpi3jlzmjnh-gmp-6.0.0a.tar.xz\n"
"/gnu/store/hcz0f4wkdbsvsdky3c0vdvcawhdkyldb-mpfr-3.1.5.tar.xz\n"
"/gnu/store/y9akh452n3p4w2v631nj0injx7y0d68x-mpc-1.0.3.tar.gz\n"
"/gnu/store/6g5c35q8avfnzs3v14dzl54cmrvddjm2-glibc-2.25.tar.xz\n"
"/gnu/store/p9k48dk3dvvk7gads7fk30xc2pxsd66z-hwloc-1.11.8.tar.bz2\n"
"/gnu/store/cry9lqidwfrfmgl0x389cs3syr15p13q-gcc-5.4.0.tar.xz\n"
"/gnu/store/7ak0v3rzpqm2c5q1mp3v7cj0rxz0qakf-libfabric-1.4.1.tar.bz2\n"
"/gnu/store/vh8syjrsilnbfcf582qhmvpg1v3rampf-rdma-core-14.tar.gz\n"
"…\n"
msgstr ""
"/gnu/store/xc17sm60fb8nxadc4qy0c7rqph499z8s-openmpi-1.10.7.tar.bz2\n"
"/gnu/store/s67jx92lpipy2nfj5cz818xv430n4b7w-gcc-5.4.0.tar.xz\n"
"/gnu/store/npw9qh8a46lrxiwh9xwk0wpi3jlzmjnh-gmp-6.0.0a.tar.xz\n"
"/gnu/store/hcz0f4wkdbsvsdky3c0vdvcawhdkyldb-mpfr-3.1.5.tar.xz\n"
"/gnu/store/y9akh452n3p4w2v631nj0injx7y0d68x-mpc-1.0.3.tar.gz\n"
"/gnu/store/6g5c35q8avfnzs3v14dzl54cmrvddjm2-glibc-2.25.tar.xz\n"
"/gnu/store/p9k48dk3dvvk7gads7fk30xc2pxsd66z-hwloc-1.11.8.tar.bz2\n"
"/gnu/store/cry9lqidwfrfmgl0x389cs3syr15p13q-gcc-5.4.0.tar.xz\n"
"/gnu/store/7ak0v3rzpqm2c5q1mp3v7cj0rxz0qakf-libfabric-1.4.1.tar.bz2\n"
"/gnu/store/vh8syjrsilnbfcf582qhmvpg1v3rampf-rdma-core-14.tar.gz\n"
"…\n"

msgid "(In case you're wondering, that's more than 320@ MiB of @emph{compressed} source code.)"
msgstr "(Pre lepšiu predstavu, jedná sa o približne 320@ MiB @emph{stlačeného} zdrojového kódu.)"

msgid "We can then make a big archive containing all of this (@pxref{Invoking guix archive,,, guix, GNU Guix Reference Manual}):"
msgstr "Všetko to potom môžme zbaliť do jedného veľkého stlačeného súboru (@pxref{Invoking guix archive,,, guix, GNU Guix Reference Manual}):"

msgid ""
"$ guix archive --export \\\n"
"    `guix build --sources=transitive openmpi` \\\n"
"    > openmpi-source-code.nar\n"
msgstr ""
"$ guix archive --export \\\n"
"    `guix build --sources=transitive openmpi` \\\n"
"    > openmpi-zdrojovy-kod.nar\n"

msgid "@dots{} and we can eventually transfer that archive to the cluster on removable storage and unpack it there:"
msgstr "@dots{} presunúť na zhluk počítačov na vymeniteľnom zariadení a rozbaliť:"

msgid "$ guix archive --import < openmpi-source-code.nar\n"
msgstr "$ guix archive --import < openmpi-zdrojovy-kod.nar\n"

msgid "This process has to be repeated every time new source code needs to be brought to the cluster."
msgstr "Tento postup je potrebné zopakovať zakaždým, keď potrebujeme na zhluk počítačov preniesť ďalší zdrojový kód."

msgid "As we write this, the research institutes involved in Guix-HPC do not have air-gapped clusters though. If you have experience with such setups, we would like to hear feedback and suggestions."
msgstr "V čase keď bolo toto napísané, nemali vedecké zariadenia zapojené do Guix-HPC zhluky počítačov neprístupné z vonkajšej siete. Ak s takýmto nastavením máte skúsenosti, radi by sme si vypočuli vašu spätnú väzbu a návrhy."

msgid "Disk Usage"
msgstr "Využitie úložného priestoru"

msgid "disk usage, on a cluster"
msgstr "využitie úložného priestoru, na zhluku počítačov"

msgid "A common concern of sysadmins' is whether this is all going to eat a lot of disk space.  If anything, if something is going to exhaust disk space, it's going to be scientific data sets rather than compiled software---that's our experience with almost ten years of Guix usage on HPC clusters.  Nevertheless, it's worth taking a look at how Guix contributes to disk usage."
msgstr "Spoločnou otázkou systémových správcov je, či to všetko zožerie veľa úložného priestoru.  Ak má niečo vyčerpať miesto na disku, tak to budú skôr vedecké údaje ako zostavené programové vybavenie---to je naša viac ako desaťročná skúsenosť s používaním Guixu na vysokovýkonných zhlukoch počítačov.  Avšak, stojí za to pozrieť sa na to, ako Guix vplýva na využitie úložného priestoru."

msgid "First, having several versions or variants of a given package in @file{/gnu/store} does not necessarily cost much, because @command{guix-daemon} implements deduplication of identical files, and package variants are likely to have a number of common files."
msgstr "V prvom rade, uchovávanie viacerých verzií daného balíka v @file{/gnu/store} nutne nestojí veľa, pretože @command{guix-daemon} si dokáže účinne poradiť s ukladaním podvojných súborov a spomínané verzie balíkov pravdepodobne zdieľajú veľké množstvo rovnakých súborov."

msgid "As mentioned above, we recommend having a cron job to run @code{guix gc} periodically, which removes @emph{unused} software from @file{/gnu/store}. However, there's always a possibility that users will keep lots of software in their profiles, or lots of old generations of their profiles, which is ``live'' and cannot be deleted from the viewpoint of @command{guix gc}."
msgstr "Ako sme už spomínali, odporúčame nastaviť si cron úlohu, ktorá by pravidelne spúšťala @code{guix gc}, čo odstráni @emph{nepotrebné} programové vybavenie z @file{/gnu/store}. Avšak, používatelia si aj tak môžu vo svojich profiloch uchovávať veľké množstvo programov a predošlých pokolení profilov, ktoré sa z pohľadu @command{guix gc} nedajú odstrániť."

msgid "The solution to this is for users to regularly remove old generations of their profile. For instance, the following command removes generations that are more than two-month old:"
msgstr "Riešením pre používateľov je pravidelne odstraňovať staré pokolenia profilov. Napríklad, nasledovný príkaz odstráni pokolenia, ktoré sú staršie ako dva mesiace:"

msgid "guix package --delete-generations=2m\n"
msgstr "guix package --delete-generations=2m\n"

msgid "Likewise, it's a good idea to invite users to regularly upgrade their profile, which can reduce the number of variants of a given piece of software stored in @file{/gnu/store}:"
msgstr "Podobne je dobré nabádať používateľov, aby si pravidelne aktualizovali profil, čo zníži počet verzií daných balíkov uložených v @file{/gnu/store}:"

msgid ""
"guix pull\n"
"guix upgrade\n"
msgstr ""
"guix pull\n"
"guix upgrade\n"

msgid "As a last resort, it is always possible for sysadmins to do some of this on behalf of their users. Nevertheless, one of the strengths of Guix is the freedom and control users get on their software environment, so we strongly recommend leaving users in control."
msgstr "V krajnom prípade môžu systémoví správcovia niektoré z týchto úkonov vykonať aj v mene používateľov. Napriek tomu, jednou z myšlienok Guixu je slobodné zaobchádzanie a úplný dohľad nad prostrediami s programovým vybavením, takže dôrazne odporúčame nechať používateľom voľnú ruku."

msgid "Security Considerations"
msgstr "Úvahy o zabezpečení"

msgid "security, on a cluster"
msgstr "bezpečnosť, na zhluku počítačov"

msgid "On an HPC cluster, Guix is typically used to manage scientific software.  Security-critical software such as the operating system kernel and system services such as @code{sshd} and the batch scheduler remain under control of sysadmins."
msgstr "Vrámci vysokovýkonného zhluku počítačov sa Guix obvykle využíva na správu vedecky zameraného programového vybavenia.  Pre bezpečnosť nevyhnutné vybavenie ako je jadro operačného systému a služby ako @code{sshd} a plánovač dávkových úloh zostávajú pod dohľadom systémových správcov."

msgid "The Guix project has a good track record delivering security updates in a timely fashion (@pxref{Security Updates,,, guix, GNU Guix Reference Manual}).  To get security updates, users have to run @code{guix pull && guix upgrade}."
msgstr "Projekt Guix má dobré výsledky v oblasti včasného poskytovania aktualizácií zabezpečenia (@pxref{Security Updates,,, guix, GNU Guix Reference Manual}).  Aktualizácie sa získavajú vykonaním @code{guix pull && guix upgrade}."

msgid "Because Guix uniquely identifies software variants, it is easy to see if a vulnerable piece of software is in use. For instance, to check whether the glibc@ 2.25 variant without the mitigation patch against ``@uref{https://www.qualys.com/2017/06/19/stack-clash/stack-clash.txt,Stack Clash}'', one can check whether user profiles refer to it at all:"
msgstr "Vďaka tomu, že Guix osobitne označuje rozličné verzie programov, je jednoduché zistiť, či sa používa nejaký zraniteľný program. Napríklad, pomocou nasledovného príkazu môžeme zistiť, či niektorý z používateľských profilov odkazuje na glibc@ 2.25 bez zaplátanej zraniteľnosti „@uref{https://www.qualys.com/2017/06/19/stack-clash/stack-clash.txt,Stack Clash}“:"

msgid "guix gc --referrers /gnu/store/…-glibc-2.25\n"
msgstr "guix gc --referrers /gnu/store/…-glibc-2.25\n"

msgid "This will report whether profiles exist that refer to this specific glibc variant."
msgstr "Takto sa dozvieme, či jestvujú profily, ktoré odkazujú na presne túto verziu glibc."

msgid "Guix is based on the @uref{https://nixos.org/nix/, Nix package manager}, which was designed and implemented by Eelco Dolstra, with contributions from other people (see the @file{nix/AUTHORS} file in Guix.)  Nix pioneered functional package management, and promoted unprecedented features, such as transactional package upgrades and rollbacks, per-user profiles, and referentially transparent build processes.  Without this work, Guix would not exist."
msgstr "Guix je založený na @uref{https://nixos.org/nix/, správcovi balíkov Nix}, ktorý navrhol a vytvoril Eelco Dolstra v spolupráci s ďalšími ľudmi (viď súbor @file{nix/AUTHORS} v Guixe).  Nix je pionierom vo funkcionálnej správe balíkov a predstavil nebývalé možnosti akými sú nedeliteľne vykonávané aktualizácie a návraty do pôvodného stavu, profily pre každého používateľa zvlášť, jasné a pochopiteľné zostavovacie postupy.  Bez tejto práce by Guix nevznikol."

msgid "The Nix-based software distributions, Nixpkgs and NixOS, have also been an inspiration for Guix."
msgstr "Guix čerpá aj z na Nixe založených riešení, Nixpkgs a NixOS."

msgid "GNU@tie{}Guix itself is a collective work with contributions from a number of people.  See the @file{AUTHORS} file in Guix for more information on these fine people.  The @file{THANKS} file lists people who have helped by reporting bugs, taking care of the infrastructure, providing artwork and themes, making suggestions, and more---thank you!"
msgstr "Samotný GNU@tie{}Guix je spoločným úsilím, ku ktorému prispieva množstvo ľudí.  Viď súbor @file{AUTHORS} v Guixe pre viac podrobností o týchto skvelých ľuďoch.  Súbor @file{THANKS} obsahuje zoznam ľudí, ktorí pomohli nahlásením chýb, obstaraním technického vybavenia, vytvorením výtvarných prvkov a motívov, zaslaním návrhov, atď. Ďakujeme!"

msgid "This document includes adapted sections from articles that have previously been published on the Guix blog at @uref{https://guix.gnu.org/blog} and on the Guix-HPC blog at @uref{https://hpc.guix.info/blog}."
msgstr "Tento receptár zahŕňa časti prevzaté z článkov zverejnených vrámci blogu Guix na @uref{https://guix.gnu.org/blog} a blogu Guix-HPC na @uref{https://hpc.guix.info/blog}."

msgid "license, GNU Free Documentation License"
msgstr "licencia, GNU Free Documentation License"

msgid "fdl-1.3.texi"
msgstr "fdl-1.3.texi"
