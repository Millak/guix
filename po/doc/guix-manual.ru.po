# guix manual Russian translation.
# Copyright (C) 2012-2020 the authors of Guix (msgids) and the following authors (msgstr)
# This file is distributed under the same license as the guix manual package.
# Znavko <znavko@tutanota.com>, 2019.
# Pavlo Marianov <acid@jack.kiev.ua>, 2019, 2020.
# Adam Kandur <rndd@tuta.io>, 2020, 2021.
# Oleg Pykhalov <go.wigust@gmail.com>, 2020.
# Iosilevitch Mihail <yosik@cock.li>, 2021.
# Eugene Klimov <lipklim@mailbox.org>, 2021.
# Anton Ryzhkin <torm84@gmail.com>, 2021.
# Helge Kim <helge@keemail.me>, 2021.
# Julien Lepiller <fedora-account@lepiller.eu>, 2021, 2023.
# Nikolay Korotkiy <sikmir@disroot.org>, 2021.
# A D <drozdov@portalenergy.tech>, 2022.
# Illia Demianchuk <illialoo99@gmail.com>, 2022.
# Egor Vlasov <egor-vlasov-86@mail.ru>, 2022, 2023, 2024.
# Michael Stolovitzsky <emestee@catnarok.net>, 2023.
# Alex Matkovsky <matkovsky88@protonmail.ch>, 2023.
# Florian Pelz <pelzflorian@pelzflorian.de>, 2023, 2024, 2025.
# Aleksei Chepugov <a.chepugov@gmail.com>, 2024.
# Weblate Translation Memory <noreply-mt-weblate-translation-memory@weblate.org>, 2024, 2025.
# Tobias Geerinckx-Rice <fedora@tobias.gr>, 2024.
# Andrey Kulenko <ankubel904@gmail.com>, 2024.
msgid ""
msgstr ""
"Project-Id-Version: guix-manual 1.2.0-pre2\n"
"Report-Msgid-Bugs-To: bug-guix@gnu.org\n"
"POT-Creation-Date: 2025-10-24 03:18+0000\n"
"PO-Revision-Date: 2025-10-04 00:09+0000\n"
"Last-Translator: pelzflorian <pelzflorian@noreply.codeberg.org>\n"
"Language-Team: Russian <https://translate.codeberg.org/projects/guix/documentation-manual/ru/>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;\n"
"X-Generator: Weblate 5.13.2\n"
"X-Bugs: Report translation errors to the Language-Team address.\n"

msgid "Contributing"
msgstr "Содействие"

msgid "This project is a cooperative effort, and we need your help to make it grow! Please get in touch with us on @email{guix-devel@@gnu.org} and @code{#guix} on the Libera Chat IRC network.  We welcome ideas, bug reports, patches, and anything that may be helpful to the project.  We particularly welcome help on packaging (@pxref{Packaging Guidelines})."
msgstr "Этот проект - совместная работа, и нам нужна ваша помощь, чтобы он развивался! Пожалуйста, свяжитесь с нами по @email{guix-devel@@gnu.org} и @code{#guix} в IRC-сети Libera Chat.  Мы приветствуем идеи, сообщения об ошибках, патчи и все, что может быть полезно для проекта.  Мы особенно приветствуем помощь в упаковке (@pxref{Packaging Guidelines})."

msgid "code of conduct, of contributors"
msgstr "кодекс поведения участников"

msgid "contributor covenant"
msgstr "соглашение для соавторов"

msgid "We want to provide a warm, friendly, and harassment-free environment, so that anyone can contribute to the best of their abilities.  To this end our project uses a ``Contributor Covenant'', which was adapted from @url{https://contributor-covenant.org/}.  You can find a local version in the @file{CODE-OF-CONDUCT} file in the source tree."
msgstr "Мы хотим создать теплую, дружелюбную среду, свободную от оскорблений, чтобы каждый мог внести свой вклад в меру своих возможностей. Для этого в нашем проекте используется ``Соглашение для авторов'',  основанное на @url {https://contributor-covenant.org/}. Вы можете найти локальную версию в файле @file{CODE-OF-CONDUCT} в исходном репозитории."

msgid "Contributors are not required to use their legal name in patches and on-line communication; they can use any name or pseudonym of their choice."
msgstr "Соавторы не обязаны указывать реальные имена в патчах и в общении онлайн. Они могут пользоваться любым именем или псеводнимом по своему выбору."

msgid "Requirements"
msgstr "Требования"

msgid "Software needed to build and run Guix."
msgstr "Программное обеспечение, необходимое для запуска Guix."

msgid "Building from Git"
msgstr "Сборка из Git"

msgid "The latest and greatest."
msgstr "Новейший и величайший."

msgid "Running the Test Suite"
msgstr "Запуск набора тестов"

msgid "Testing Guix."
msgstr "Тестирование Guix."

msgid "Running Guix Before It Is Installed"
msgstr "Запуск Guix перед его установкой"

msgid "Hacker tricks."
msgstr "Хакерские трюки."

msgid "The Perfect Setup"
msgstr "Совершенная установка"

msgid "The right tools."
msgstr "Правильные инструменты."

msgid "Alternative Setups"
msgstr "Альтернативные настройки"

msgid "Other possible tools that do the job."
msgstr "Другие возможные подходящие инструменты."

msgid "Source Tree Structure"
msgstr "Структура исходного кода"

msgid "Source code guided tour."
msgstr "Обзор исходного кода."

msgid "Packaging Guidelines"
msgstr "Руководство по упаковке"

msgid "Growing the distribution."
msgstr "Разрастание дистрибутива."

msgid "Coding Style"
msgstr "Стиль написания кода"

msgid "Hygiene of the contributor."
msgstr "Гигиена соавтора."

msgid "Submitting Patches"
msgstr "Отправка исправлений"

msgid "Share your work."
msgstr "Поделитесь своей работой."

msgid "Tracking Bugs and Changes"
msgstr "Отслеживание ошибок и изменений"

msgid "Keeping it all organized."
msgstr "Хранение всего этого в надлежащем порядке."

msgid "Commit Access"
msgstr "Доступ к коммитам"

msgid "Pushing to the official repository."
msgstr "Внесение изменений в официальный репозиторий."

msgid "Reviewing the Work of Others"
msgstr "Обзор работы других"

msgid "Some guidelines for sharing reviews."
msgstr "Правила по публикации отзывов."

msgid "Updating the Guix Package"
msgstr "Обновление пакета Guix"

msgid "Updating the Guix package definition."
msgstr "Обновление описания пакета в Guix."

msgid "Writing Documentation"
msgstr "Написание документации"

msgid "Improving documentation in GNU Guix."
msgstr "Улучшение документации GNU Guix."

msgid "Translating Guix"
msgstr "Перевод Guix на другие языки"

msgid "Make Guix speak your native language."
msgstr "Заставьте Guix говорить на вашем родном языке."

msgid "You can easily hack on Guix itself using Guix and Git, which we use for version control (@pxref{Building from Git})."
msgstr "Вы можете легко настроить Guix, используя сам Guix и Git, который мы используем для контроля версий (@pxref{Building from Git})."

msgid "But when packaging Guix for foreign distros or when bootstrapping on systems without Guix, and if you decide to not just trust and install our readily made binary (@pxref{Binary Installation}), you can download a release version of our reproducible source tarball and read on."
msgstr "Однако, если вы пакетируете Guix на внешние дистрибутивы или раскручиваете его на системах без Guix, а также если вы не доверяете предкомпилированным нами сборкам (@pxref{Binary Installation}), вы можете скачать релизную версию нашего воспроизводимого tar-архива с исходниками и продолжать дальше."

msgid "This section lists requirements when building Guix from source.  The build procedure for Guix is the same as for other GNU software, and is not covered here.  Please see the files @file{README} and @file{INSTALL} in the Guix source tree for additional details."
msgstr "Этот раздел содержит требования для сборки Guix из исходников. Пожалуйста, смотрите файлы @file{README} и @file{INSTALL} в дереве исходников Guix для подробной информации."

msgid "official website"
msgstr "официальный веб-сайт"

msgid "GNU Guix is available for download from its website at @url{https://guix.gnu.org}."
msgstr "GNU Guix доступен для скачивания на сайте @url{https://guix.gnu.org}."

msgid "GNU Guix depends on the following packages:"
msgstr "GNU Guix зависит от следующих пакетов:"

msgid "@url{https://gnu.org/software/guile/, GNU Guile}, version 3.0.x,"
msgstr "@url{https://gnu.org/software/guile/, GNU Guile} версии 3.0.x;"

msgid "version 3.0.3 or later;"
msgstr "3.0.3 или более поздней;"

msgid "@url{https://notabug.org/cwebber/guile-gcrypt, Guile-Gcrypt}, version"
msgstr "@url{https://notabug.org/cwebber/guile-gcrypt, Guile-Gcrypt} версии"

msgid "0.1.0 or later;"
msgstr "0.1.0 или более поздней;"

msgid "@uref{https://notabug.org/guile-sqlite3/guile-sqlite3, Guile-SQLite3}, version 0.1.0 or later;"
msgstr "@uref{https://notabug.org/guile-sqlite3/guile-sqlite3, Guile-SQLite3} версии 0.1.0 или новее;"

msgid "@uref{https://notabug.org/guile-zlib/guile-zlib, Guile-zlib},"
msgstr "@uref{https://notabug.org/guile-zlib/guile-zlib, Guile-zlib},"

msgid "version 0.1.0 or later;"
msgstr "0.1.0 или более поздней;"

msgid "@uref{https://notabug.org/guile-lzlib/guile-lzlib, Guile-lzlib};"
msgstr "@uref{https://notabug.org/guile-lzlib/guile-lzlib, Guile-lzlib};"

msgid "@uref{https://www.nongnu.org/guile-avahi/, Guile-Avahi};"
msgstr "@uref{https://www.nongnu.org/guile-avahi/, Guile-Avahi};"

msgid "@uref{https://git-scm.com, Git} (yes, both!);"
msgstr "@uref{https://git-scm.com, Git} (да, оба!);"

msgid "@uref{https://github.com/aconchillo/guile-json, Guile-JSON}"
msgstr "@uref{https://github.com/aconchillo/guile-json, Guile-JSON}"

msgid "4.3.0 or later;"
msgstr "4.3.0 или более поздней;"

msgid "@url{https://www.gnu.org/software/make/, GNU Make}."
msgstr "@url{https://www.gnu.org/software/make/, GNU Make}."

msgid "The following dependencies are optional:"
msgstr "Следующие зависимости необязательны:"

msgid "Support for build offloading (@pxref{Daemon Offload Setup}) and @command{guix copy} (@pxref{Invoking guix copy}) depends on @uref{https://github.com/artyom-poptsov/guile-ssh, Guile-SSH}, version 0.13.0 or later."
msgstr "Поддержка разгрузки сборки (@pxref{Daemon Offload Setup}) и @command{guix copy} (@pxref{Invoking guix copy}) зависят от @uref{https://github.com/artyom-poptsov/guile-ssh, Guile-SSH} версии 0.10.2 или новее."

msgid "@uref{https://notabug.org/guile-zstd/guile-zstd, Guile-zstd}, for zstd compression and decompression in @command{guix publish} and for substitutes (@pxref{Invoking guix publish})."
msgstr "@uref{https://notabug.org/guile-zstd/guile-zstd, Guile-zstd}, для zstd сжатия и распаковки в @command{guix publish} и для заменителей (@pxref{Invoking guix publish})."

msgid "@uref{https://ngyro.com/software/guile-semver.html, Guile-Semver} for the @code{crate} importer (@pxref{Invoking guix import})."
msgstr "@uref{https://ngyro.com/software/guile-semver.html, Guile-Semver} для @code{crate} импортера (@pxref{Invoking guix import})."

msgid "@uref{https://www.nongnu.org/guile-lib/doc/ref/htmlprag/, Guile-Lib} for the @code{go} importer (@pxref{Invoking guix import}) and for some of the ``updaters'' (@pxref{Invoking guix refresh})."
msgstr "@uref{https://ngyro.com/software/guile-semver.html, Guile-Semver} для @code{crate} импортера (@pxref{Invoking guix import})."

msgid "When @url{http://www.bzip.org, libbz2} is available, @command{guix-daemon} can use it to compress build logs."
msgstr "Если доступна @url{http://www.bzip.org, libbz2}, @command{guix-daemon} может использовать её для сжатия логов сборки."

msgid "Unless @option{--disable-daemon} was passed to @command{configure}, the following packages are also needed:"
msgstr "Если строка @code{--disable-daemon} не использовалась в @command{configure}, тогда необходимы также следующие пакеты:"

msgid "@url{https://gnupg.org/, GNU libgcrypt};"
msgstr "@url{https://gnupg.org/, GNU libgcrypt};"

msgid "@url{https://sqlite.org, SQLite 3};"
msgstr "@url{https://sqlite.org, SQLite 3};"

msgid "@url{https://gcc.gnu.org, GCC's g++}, with support for the"
msgstr "@url{https://gcc.gnu.org, GCC's g++} с поддержкой"

msgid "C++11 standard."
msgstr "стандарта C++11."

msgid "If you want to hack Guix itself, it is recommended to use the latest version from the Git repository:"
msgstr "Если вы собираетесь хакать сам Guix, рекомендуется использовать последнюю версию из репозитория Git:"

msgid "git clone https://git.guix.gnu.org/guix.git\n"
msgstr "git clone https://git.guix.gnu.org/guix.git\n"

msgid "authentication, of a Guix checkout"
msgstr "аутентификация рабочего каталога Guix"

msgid "How do you ensure that you obtained a genuine copy of the repository? To do that, run @command{guix git authenticate}, passing it the commit and OpenPGP fingerprint of the @dfn{channel introduction} (@pxref{Invoking guix git authenticate}):"
msgstr "Как убедиться, что вы получили подлинную копию репозитория? Для этого запустите @command{guix git authenticate}, передав ему коммит и отпечаток ключа OpenPGP @dfn{channel introduction} (@pxref{Invoking guix git authenticate}):"

msgid ""
"git fetch origin keyring:keyring\n"
"guix git authenticate 9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"  \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"
msgstr ""
"git fetch origin keyring:keyring\n"
"guix git authenticate 9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"  \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"

msgid "This command completes with exit code zero on success; it prints an error message and exits with a non-zero code otherwise."
msgstr "Эта команда возвращает нуль в случае успеха; в противном случае будет напечатано сообщение об ошибке и команда завершит работу, вернув ненулевой код."

msgid "As you can see, there is a chicken-and-egg problem: you first need to have Guix installed.  Typically you would install Guix System (@pxref{System Installation}) or Guix on top of another distro (@pxref{Binary Installation}); in either case, you would verify the OpenPGP signature on the installation medium.  This ``bootstraps'' the trust chain."
msgstr "Как видите, здесь возникает проблема курицы и яйца: сначала вам нужно установить Guix. Обычно вы устанавливаете Guix System (@pxref{System Installation}) или Guix поверх другого дистрибутива (@pxref{Binary Installation}); в любом случае вы должны проверить подпись OpenPGP на установочном носителе.  Это ``запускает''  цепочку доверия."

msgid "The easiest way to set up a development environment for Guix is, of course, by using Guix! The following command starts a new shell where all the dependencies and appropriate environment variables are set up to hack on Guix:"
msgstr "Самый простой способ установить среду разработки для Guix — это, конечно, использовать Guix! Следующая команда запустит новую оболочку со всеми зависимостями и необходимыми переменными окружения:"

msgid "guix shell -D guix -CPW\n"
msgstr "guix shell -D guix -CPW\n"

msgid "or even, from within a Git worktree for Guix:"
msgstr "или даже из-под рабочей ветки Git для Guix:"

msgid "guix shell -CPW\n"
msgstr "guix shell -CPW\n"

msgid "If @option{-C} (short for @option{--container}) is not supported on your system, try @command{--pure} instead of @option{-CPW}.  @xref{Invoking guix shell}, for more information on that command."
msgstr "Если @option{-C} (сокр. от @option{--container}) не поддерживается на вашей системе, попробуйте @command{--pure} вместо @option{-CPW}. см. @xref{Invoking guix shell}, чтобы получить информацию по данной команде."

msgid "If you are unable to use Guix when building Guix from a checkout, the following are the required packages in addition to those mentioned in the installation instructions (@pxref{Requirements})."
msgstr "Если вам Guix не удаётся использовать при сборке из рабочего каталога, установите следующие пакеты в дополнение к тем, что были указаны в инструкции по установке (@pxref{Требования})."

msgid "@url{https://gnu.org/software/autoconf/, GNU Autoconf};"
msgstr "@url{https://gnu.org/software/autoconf/, GNU Autoconf};"

msgid "@url{https://gnu.org/software/automake/, GNU Automake};"
msgstr "@url{https://gnu.org/software/automake/, GNU Automake};"

msgid "@url{https://gnu.org/software/gettext/, GNU Gettext};"
msgstr "@url{https://gnu.org/software/gettext/, GNU Gettext};"

msgid "@url{https://gnu.org/software/texinfo/, GNU Texinfo};"
msgstr "@url{https://gnu.org/software/texinfo/, GNU Texinfo};"

msgid "@url{https://www.graphviz.org/, Graphviz};"
msgstr "@url{https://www.graphviz.org/, Graphviz};"

msgid "@url{https://www.gnu.org/software/help2man/, GNU Help2man (optional)}."
msgstr "@url{https://www.gnu.org/software/help2man/, GNU Help2man (optional)}."

msgid "On Guix, extra dependencies can be added by instead running @command{guix shell}:"
msgstr "В Guix дополнительные зависимости можно добавить, запустив @command{guix shell}:"

msgid "guix shell -D guix help2man git strace --pure\n"
msgstr "guix shell -D guix help2man git strace --pure\n"

msgid "From there you can generate the build system infrastructure using Autoconf and Automake:"
msgstr "Вы можете инициировать инфраструктуру сборки системы, используя Autoconf и Automake:"

msgid "./bootstrap\n"
msgstr "./bootstrap\n"

msgid "If you get an error like this one:"
msgstr "Если вы получили ошибку, похожую на эту:"

msgid "configure.ac:46: error: possibly undefined macro: PKG_CHECK_MODULES\n"
msgstr "configure.ac:46: error: possibly undefined macro: PKG_CHECK_MODULES\n"

msgid "it probably means that Autoconf couldn’t find @file{pkg.m4}, which is provided by pkg-config.  Make sure that @file{pkg.m4} is available.  The same holds for the @file{guile.m4} set of macros provided by Guile.  For instance, if you installed Automake in @file{/usr/local}, it wouldn’t look for @file{.m4} files in @file{/usr/share}.  In that case, you have to invoke the following command:"
msgstr "это означает, скорее всего, что Autoconf не смог найти файл @file{pkg.m4}, который предоставляется pkg-config. Убедитесь, что файл @file{pkg.m4} доступен. То же относится к @file{guile.m4}, набору макросов, предоставляемых Guile. Например, если вы установили Automake в @file{/usr/local}, он не будет искать файлы @file{.m4} в @file{/usr/share}. Тогда нужно выполнить следующую команду:"

msgid "export ACLOCAL_PATH=/usr/share/aclocal\n"
msgstr "export ACLOCAL_PATH=/usr/share/aclocal\n"

msgid "@xref{Macro Search Path,,, automake, The GNU Automake Manual}, for more information."
msgstr "см. @xref{Macro Search Path,,, automake, The GNU Automake Manual}, чтобы получить больше информации."

msgid "state directory"
msgstr "главный каталог"

msgid "localstatedir"
msgstr "localstatedir"

msgid "system configuration directory"
msgstr "директория конфигурации системы"

msgid "sysconfdir"
msgstr "sysconfdir"

msgid "Then, run:"
msgstr "Затем, выполните:"

msgid "./configure\n"
msgstr "./configure\n"

msgid "Optionally, @code{--localstatedir} and @code{--sysconfdir} can also be provided as arguments.  By default, @code{localstatedir} is @file{/var} (@pxref{The Store}, for information about this) and @code{sysconfdir} is @file{/etc}.  Note that you will probably not run @command{make install} at the end (you don't have to) but it's still important to pass the right @code{localstatedir} and @code{sysconfdir} values, which get recorded in the @code{(guix config)} Guile module."
msgstr "По желанию, @code{--localstatedir} и @code{--sysconfigdir} могут быть переданы как аргументы.  По умолчанию, @code{localstatedir} является @file{/var} (@pxref{The Store}, для получения информации об этом), а @code{sysconfdir} является @file{/etc}. Обратите внимание, что вы, скорее всего, не будете выполнять @command{make install} в конце (это не обязательно), но все равно важно передать правильные значения @code{localstatedir} и @code{sysconfdir}, которые записываются в модуль @code{(guix config)} Guile."

msgid "Finally, you can build Guix and, if you feel so inclined, run the tests (@pxref{Running the Test Suite}):"
msgstr "Наконец, вы можете собрать Guix и, если сочтёте нужным, запустите тесты (@pxref{Running the Test Suite}):"

msgid ""
"make\n"
"make check\n"
msgstr ""
"make\n"
"make check\n"

msgid "If anything fails, take a look at installation instructions (@pxref{Installation}) or send a message to the @email{guix-devel@@gnu.org, mailing list}."
msgstr "Если что-то не получится, изучите инструкции установки (@pxref{Installation}) или отправьте сообщение в рассылку @email{guix-devel@@gnu.org}."

msgid "From there on, you can authenticate all the commits included in your checkout by running:"
msgstr "После этого вы можете аутентифицировать все проверенные коммиты, запустив:"

msgid ""
"guix git authenticate \\\n"
"  9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"  \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"
msgstr ""
"guix git authenticate \\\n"
"9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"\"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"

msgid "The first run takes a couple of minutes, but subsequent runs are faster.  On subsequent runs, you can run the command without any arguments since the @dfn{introduction} (the commit ID and OpenPGP fingerprints above)  will have been recorded@footnote{This requires a recent version of Guix, from May 2024 or more recent.}:"
msgstr "Первый запуск занимает несколько минут, но последующие работают быстрее. На каждый не первый запуск вы можете выполнять эту команду без каких-либо аргументов, поскольку @dfn{introduction} (ID коммита и отпечаток ключа OpenPGP выше) запоминаются@footnote{Это требует свежую версию Guix мая 2024 или позднее.}:"

msgid "guix git authenticate\n"
msgstr "guix git authenticate\n"

msgid "When your configuration for your local Git repository doesn't match the default one, you can provide the reference for the @code{keyring} branch @i{via} the @option{-k} option.  The following example assumes that you have a Git remote called @samp{myremote} pointing to the official repository:"
msgstr "Если ваша конфигурация для локального git репозитория не соответствует конфигурации по умолчанию, вы можете указать ссылку для ветки @code{keyring} с помощью ключа @option{-k}. В следующем примере предполагается, что вы вызывали git remote @samp{myremote}, указывающий на официальный репозиторий:"

msgid ""
"guix git authenticate \\\n"
"  -k myremote/keyring \\\n"
"  9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"  \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"
msgstr ""
"guix git authenticate \\\n"
"-k myremote/keyring \\\n"
"9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"\"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"

msgid "@xref{Invoking guix git authenticate}, for more information on this command."
msgstr "Подробные сведения об этой команде см. в @xref{Invoking guix git authenticate}."

msgid "Note"
msgstr "Примечание"

msgid "After updating the repository, @command{make} might fail with an error similar to the following example:"
msgstr "После обновления репозитория команда @command{make} может выдать ошибку, подобную нижеприведенной:"

msgid ""
"error: failed to load 'gnu/packages/linux.scm':\n"
"ice-9/eval.scm:293:34: In procedure abi-check: #<record-type <origin>>: record ABI mismatch; recompilation needed\n"
msgstr ""
"error: failed to load 'gnu/packages/linux.scm':\n"
"ice-9/eval.scm:293:34: In procedure abi-check: #<record-type <origin>>: record ABI mismatch; recompilation needed\n"

msgid "This means that one of the record types that Guix defines (in this example, the @code{origin} record) has changed, and all of guix needs to be recompiled to take that change into account.  To do so, run @command{make clean-go} followed by @command{make}."
msgstr "Это значит, что один из типов записей, которые определяет Guix (в данном примере, запись @code{origin}) была изменена, и весь guix надо перекомпилировать, чтобы учесть это изменение.\tДля этого запустите @command{make clean-go}, а затем @command{make}."

msgid "test suite"
msgstr "набор тестов"

msgid "After a successful @command{configure} and @code{make} run, it is a good idea to run the test suite.  It can help catch issues with the setup or environment, or bugs in Guix itself---and really, reporting test failures is a good way to help improve the software.  To run the test suite, type:"
msgstr "После успешного завершения @command{configure} и @code{make} хорошо бы выполнить набор тестов. Это поможет выявить проблемы установки или в окружении, как и баги самого Guix (на самом деле, отчёты об ошибках тестов помогают улучшить ПО). Чтобы запустить тесты, напечатайте:"

msgid "make check\n"
msgstr "make check\n"

msgid "Test cases can run in parallel: you can use the @code{-j} option of GNU@tie{}make to speed things up.  The first run may take a few minutes on a recent machine; subsequent runs will be faster because the store that is created for test purposes will already have various things in cache."
msgstr "Тесты можно выполнять параллельно при включении опции @code{-j} в GNU@tie{}make, так быстрее. Первый запуск может длиться несколько минут на топовой машине, последующие запуски будут быстрее, так как склад, который создаётся для тестов, уже закеширует различные вещи."

msgid "It is also possible to run a subset of the tests by defining the @code{TESTS} makefile variable as in this example:"
msgstr "Также можно запустить отдельные наборы тестов, используя переменную @code{TESTS}, как в примере:"

msgid "make check TESTS=\"tests/store.scm tests/cpio.scm\"\n"
msgstr "make check TESTS=\"tests/store.scm tests/cpio.scm\"\n"

msgid "By default, tests results are displayed at a file level.  In order to see the details of every individual test cases, it is possible to define the @code{SCM_LOG_DRIVER_FLAGS} makefile variable as in this example:"
msgstr "По умолчанию результаты тестов выводятся в файл. Чтобы просмотреть результаты каждого отдельного теста, нужно задать переменную makifile @code{SCM_LOG_DRIVER_FLAGS}, как в примере:"

msgid "make check TESTS=\"tests/base64.scm\" SCM_LOG_DRIVER_FLAGS=\"--brief=no\"\n"
msgstr "make check TESTS=\"tests/base64.scm\" SCM_LOG_DRIVER_FLAGS=\"--brief=no\"\n"

msgid "The underlying SRFI 64 custom Automake test driver used for the 'check' test suite (located at @file{build-aux/test-driver.scm}) also allows selecting which test cases to run at a finer level, via its @option{--select} and @option{--exclude} options.  Here's an example, to run all the test cases from the @file{tests/packages.scm} test file whose names start with ``transaction-upgrade-entry'':"
msgstr "Лежащий в основе кастомный SRFI 64 Automake тестовый драйвер, используемый для 'проверки' набора тестов (расположенный в @file{build-aux/test-driver.scm}) также позволяет выбрать, какие тестовые случаи запускать на более высоком уровне, при помощи опций @option{--select} и @option{--exclude}.  Вот пример для запуска всех тестовых случаев из файла @file{tests/packages.scm}, чьи имена начинаются с ``transaction-upgrade-entry'':"

msgid ""
"export SCM_LOG_DRIVER_FLAGS=\"--select=^transaction-upgrade-entry\"\n"
"make check TESTS=\"tests/packages.scm\"\n"
msgstr ""
"export SCM_LOG_DRIVER_FLAGS=\"--select=^transaction-upgrade-entry\"\n"
"make check TESTS=\"tests/packages.scm\"\n"

msgid "Those wishing to inspect the results of failed tests directly from the command line can add the @option{--errors-only=yes} option to the @code{SCM_LOG_DRIVER_FLAGS} makefile variable and set the @code{VERBOSE} Automake makefile variable, as in:"
msgstr "Желающие проверить результаты неудачных тестов прямо из командной строки могут добавить @option{--errors-only=yes} к makefile переменной@code{SCM_LOG_DRIVER_FLAGS} и задать Automake makefile переменную @code{VERBOSE}, как в:"

msgid "make check SCM_LOG_DRIVER_FLAGS=\"--brief=no --errors-only=yes\" VERBOSE=1\n"
msgstr "make check TESTS=\"tests/base64.scm\" SCM_LOG_DRIVER_FLAGS=\"--brief=no\"\n"

msgid "The @option{--show-duration=yes} option can be used to print the duration of the individual test cases, when used in combination with @option{--brief=no}:"
msgstr "Опция @option{--show-duration=yes} может быть использована чтобы отобразить продолжительность отдельных тестовых случаев, когда использована вместе с @option{--brief=no}:"

msgid "make check SCM_LOG_DRIVER_FLAGS=\"--brief=no --show-duration=yes\"\n"
msgstr "make check TESTS=\"tests/base64.scm\" SCM_LOG_DRIVER_FLAGS=\"--brief=no\"\n"

msgid "@xref{Parallel Test Harness,,,automake,GNU Automake} for more information about the Automake Parallel Test Harness."
msgstr "@xref{Parallel Test Harness,,,automake,GNU Automake} для получения дополнительной информации о Automake Parallel Test Harness."

msgid "Upon failure, please email @email{bug-guix@@gnu.org} and attach the @file{test-suite.log} file.  Please specify the Guix version being used as well as version numbers of the dependencies (@pxref{Requirements}) in your message."
msgstr "В случае ошибки, пожалуйста, отправьте сообщение на  @email{bug-guix@@gnu.org} и присоедините файл @file{test-suite.log}.  Пожалуйста, обозначьте в сообщении используемую версию Guix, а также номера версий зависимостей (@pxref{Requirements})."

msgid "Guix also comes with a whole-system test suite that tests complete Guix System instances.  It can only run on systems where Guix is already installed, using:"
msgstr "Guix также идёт с набором тестов для всей системы, который проверяет нстранцию системы Guix. Их можно запустить только в системах, где Guix уже установлен, так:"

msgid "make check-system\n"
msgstr "make check-system\n"

msgid "or, again, by defining @code{TESTS} to select a subset of tests to run:"
msgstr "или, опять же, задав @code{TESTS}, чтобы выбрать список тестов для запуска:"

msgid "make check-system TESTS=\"basic mcron\"\n"
msgstr "make check-system TESTS=\"basic mcron\"\n"

msgid "These system tests are defined in the @code{(gnu tests @dots{})} modules.  They work by running the operating systems under test with lightweight instrumentation in a virtual machine (VM).  They can be computationally intensive or rather cheap, depending on whether substitutes are available for their dependencies (@pxref{Substitutes}).  Some of them require a lot of storage space to hold VM images."
msgstr "Тесты системы определены в модулях @code{(gnu tests @dots{})}. При работе они запускают операционную систему под легковесным инструментарием в виртуальной машине. Они могут выполнять тяжёлые вычисления или довольно простые в зависимости от наличия подстановок их зависимостей (@pxref{Substitutes}). Некоторые из них требуют много места для работы с образами виртуальной машины."

msgid "If you encounter an error like:"
msgstr "Если вы столкнулись с ошибкой, похожей на эту:"

msgid "Again in case of test failures, please send @email{bug-guix@@gnu.org} all the details."
msgstr "Конечно, в случае неудачных тестов, пожалуйста, направьте детали на @email{bug-guix@@gnu.org}."

msgid "In order to keep a sane working environment, you will find it useful to test the changes made in your local source tree checkout without actually installing them.  So that you can distinguish between your ``end-user'' hat and your ``motley'' costume."
msgstr "Чтобы держать в порядке рабочее окружение, удобно тестировать изменения, сделанные в вашем локальном дереве исходников, без их установки. Так вы сможете отличить шляпу вашего ``конечного пользователя'' от вашего ``пёстрого'' наряда."

msgid "To that end, all the command-line tools can be used even if you have not run @code{make install}.  To do that, you first need to have an environment with all the dependencies available (@pxref{Building from Git}), and then simply prefix each command with @command{./pre-inst-env} (the @file{pre-inst-env} script lives in the top build tree of Guix; @pxref{Building from Git} to generate it).  As an example, here is how you would build the @code{hello} package as defined in your working tree (this assumes @command{guix-daemon} is already running on your system; it's OK if it's a different version):"
msgstr "С этой целью можно использовать все инструменты командной строки, даже если вы не запускали @code{make install}.  Для этого вам сначала нужно создать окружение со всеми доступными зависимостями (@pxref{Building from Git}), и затем просто начните каждую команду с @command{./pre-inst-env} (скрипт @file{pre-inst-env} находится на верху дерева сборки Guix; он создаётся запуском @command{./bootstrap}, за которым следует @command{./configure}).  В качестве примера, вот как вы собрали бы пакет @code{hello} как определено в вашем рабочем дереве (подразумевается, что @command{guix-daemon} уже запущена на вашей системе; ничего страшного, если это другая версия):"

msgid "$ ./pre-inst-env guix build hello\n"
msgstr "$ ./pre-inst-env guix build hello\n"

msgid "Similarly, an example for a Guile session using the Guix modules:"
msgstr "Аналогично, пример для Guile сессии с использованием модулей Guix:"

msgid ""
"$ ./pre-inst-env guile -c '(use-modules (guix utils)) (pk (%current-system))'\n"
"\n"
msgstr ""
"$ ./pre-inst-env guile -c '(use-modules (guix utils)) (pk (%current-system))'\n"
"\n"

msgid ";;; (\"x86_64-linux\")\n"
msgstr ";;; (\"x86_64-linux\")\n"

msgid "REPL"
msgstr "REPL"

msgid "read-eval-print loop"
msgstr "цикл чтение-вычисление-вывод"

msgid "@dots{} and for a REPL (@pxref{Using Guix Interactively}):"
msgstr "@dots{} и для REPL (@pxref{Using Guix Interactively}):"

msgid ""
"$ ./pre-inst-env guile\n"
"scheme@@(guile-user)> ,use(guix)\n"
"scheme@@(guile-user)> ,use(gnu)\n"
"scheme@@(guile-user)> (define snakes\n"
"                       (fold-packages\n"
"                         (lambda (package lst)\n"
"                           (if (string-prefix? \"python\"\n"
"                                               (package-name package))\n"
"                               (cons package lst)\n"
"                               lst))\n"
"                         '()))\n"
"scheme@@(guile-user)> (length snakes)\n"
"$1 = 361\n"
msgstr ""
"$ ./pre-inst-env guile\n"
"scheme@@(guile-user)> ,use(guix)\n"
"scheme@@(guile-user)> ,use(gnu)\n"
"scheme@@(guile-user)> (define snakes\n"
"                       (fold-packages\n"
"                         (lambda (package lst)\n"
"                           (if (string-prefix? \"python\"\n"
"                                               (package-name package))\n"
"                               (cons package lst)\n"
"                               lst))\n"
"                         '()))\n"
"scheme@@(guile-user)> (length snakes)\n"
"$1 = 361\n"

msgid "If you are hacking on the daemon and its supporting code or if @command{guix-daemon} is not already running on your system, you can launch it straight from the build tree@footnote{The @option{-E} flag to @command{sudo} guarantees that @code{GUILE_LOAD_PATH} is correctly set such that @command{guix-daemon} and the tools it uses can find the Guile modules they need.}:"
msgstr "Если вы изучаете демона и его исходники, или если @command{guix-daemon} еще не запущена в вашей системе, вы можете запустить его прямо из дерева сборки@footnote{Флаг @option{-E} команды @command{sudo} гарантирует, что @code{GUILE_LOAD_PATH} настроен правильно, так что @command{guix-daemon} и инструменты, которые он использует, могут найти необходимые им модули Guile.}:"

msgid "$ sudo -E ./pre-inst-env guix-daemon --build-users-group=guixbuild\n"
msgstr "$ sudo -E ./pre-inst-env guix-daemon --build-users-group=guixbuild\n"

msgid "The @command{pre-inst-env} script sets up all the environment variables necessary to support this, including @env{PATH} and @env{GUILE_LOAD_PATH}."
msgstr "Скрипт @command{pre-inst-env} устанавливает все переменные окружения, которые необходимы для этой задачи, включая @env{PATH} и @env{GUILE_LOAD_PATH}."

msgid "Note that @command{./pre-inst-env guix pull} does @emph{not} upgrade the local source tree; it simply updates the @file{~/.config/guix/current} symlink (@pxref{Invoking guix pull}).  Run @command{git pull} instead if you want to upgrade your local source tree."
msgstr "Заметим, что @command{./pre-inst-env guix pull} @emph{не} обновляет локальное дерево исходников. Эта команда просто обновляет символическую ссылку @file{~/.config/guix/current} (@pxref{Invoking guix pull}). Выполните @command{git pull}, если вы хотите обновить локальное дерево исходников."

msgid "Sometimes, especially if you have recently updated your repository, running @command{./pre-inst-env} will print a message similar to the following example:"
msgstr "Иногда, особенно если вы недавно обновили репозиторий, выполнение @command{./pre-inst-env} выведет сообщение, подобное следующему примеру:"

msgid ""
";;; note: source file /home/user/projects/guix/guix/progress.scm\n"
";;;       newer than compiled /home/user/projects/guix/guix/progress.go\n"
msgstr ""
";;; note: source file /home/user/projects/guix/guix/progress.scm\n"
";;;       newer than compiled /home/user/projects/guix/guix/progress.go\n"

msgid "This is only a note and you can safely ignore it.  You can get rid of the message by running @command{make -j4}.  Until you do, Guile will run slightly slower because it will interpret the code instead of using prepared Guile object (@file{.go}) files."
msgstr "Это всего лишь примечание, которое вы можете смело игнорировать.\tВы можете избавиться от сообщения, запустив @command{make -j4}.\tПока вы этого не сделаете, Guile будет работать немного медленнее, так как он будет интерпретировать код вместо использования подготовленных файлов (@file{.go}) объекта Guile."

msgid "You can run @command{make} automatically as you work using @command{watchexec} from the @code{watchexec} package.  For example, to build again each time you update a package file, run @samp{watchexec -w gnu/packages -- make -j4}."
msgstr "Вы можете запускать @command{make} автоматически во время работы используя @command{watchexec} из пакета @code{watchexec}.\tНапример, для повторной сборки при каждом обновлении файла пакета, запускать @samp{watchexec -w gnu/packages -- make -j4}."

msgid "The Perfect Setup to hack on Guix is basically the perfect setup used for Guile hacking (@pxref{Using Guile in Emacs,,, guile, Guile Reference Manual}).  First, you need more than an editor, you need @url{https://www.gnu.org/software/emacs, Emacs}, empowered by the wonderful @url{https://nongnu.org/geiser/, Geiser}.  To set that up, run:"
msgstr "Совершенная установка для программирования Guix — это, по сути, совершенная установка, используемая для программирования на Guile (@pxref{Using Guile in Emacs,,, guile, Guile Reference Manual}). Во-первых, вам нужно нечто, большее, чем текстовый редактор, вам нужен @url{https://www.gnu.org/software/emacs, Emacs}, дополненный замечательным @url{https://nongnu.org/geiser/, Geiser}. Чтобы установить всё это, введите:"

msgid "guix install emacs guile emacs-geiser emacs-geiser-guile\n"
msgstr "guix install emacs guile emacs-geiser emacs-geiser-guile\n"

msgid "Geiser allows for interactive and incremental development from within Emacs: code compilation and evaluation from within buffers, access to on-line documentation (docstrings), context-sensitive completion, @kbd{M-.} to jump to an object definition, a REPL to try out your code, and more (@pxref{Introduction,,, geiser, Geiser User Manual}).  If you allow Emacs to load the @file{.dir-locals.el} file at the root of the project checkout, it will cause Geiser to automatically add the local Guix sources to the Guile load path."
msgstr "Geiser добавляет возможности интерактивной пошаговой разработки внутри Emacs: компиляция и запуск кода в буферах, доступ к онлайн-документации (docstrings), контекстные дополнения, @kbd{M-.} для перемещения к определениям объектов, REPL для тестирования кода и многое другое (@pxref{Introduction,,, geiser, Geiser User Manual}). Если вы позволите Emacs загружать файл @file{.dir-locals.el} в корне ветки вашего проекта, Geiser автоматически добавит локальные исходники Guix в пути Guile."

msgid "To actually edit the code, Emacs already has a neat Scheme mode.  But in addition to that, you must not miss @url{https://www.emacswiki.org/emacs/ParEdit, Paredit}.  It provides facilities to directly operate on the syntax tree, such as raising an s-expression or wrapping it, swallowing or rejecting the following s-expression, etc."
msgstr "Вообще, для редактирования кода, в Emacs уже есть классный Scheme режим.  Но также обратите внимание на @url{https://www.emacswiki.org/emacs/ParEdit, Paredit}. Данный пакет предоставляет средства для непосредственной работы с синтаксическим деревом, такие как объявление s-выражений, их упаковка, отклонение следующего s-выражения и т.д."

msgid "code snippets"
msgstr "сниппеты с кодом"

msgid "templates"
msgstr "шаблоны"

msgid "reducing boilerplate"
msgstr "сокращение шаблонов"

msgid "We also provide templates for common git commit messages and package definitions in the @file{etc/snippets} directory.  These templates can be used to expand short trigger strings to interactive text snippets. If you use @url{https://joaotavora.github.io/yasnippet/, YASnippet}, you may want to add the @file{etc/snippets/yas} snippets directory to the @var{yas-snippet-dirs} variable.  If you use @url{https://github.com/minad/tempel/, Tempel}, you may want to add the @file{etc/snippets/tempel/*} path to the @var{tempel-path} variable in Emacs."
msgstr "Мы также предоставляем шаблоны для стандартных git-коммитов и определений пакетов в каталоге @file{etc/snippets}.  Эти шаблоны могут быть использованы для расширения коротких строк триггера до интерактивных фрагментов текста. Если вы используете @url{https://joaotavora.github.io/yasnippet/, YASnippet}, возможно вы захотите добавить каталог сниппетов @file{etc/snippets/yas} в переменную @var{yas-snippet-dirs}. Если вы используете @url{https://github.com/minad/tempel/, Tempel}, возможно вы захотите добавить путь @file{etc/snippets/tempel/*}  в переменную @var{tempel-path} в Emacs."

msgid ""
";; @r{Assuming the Guix checkout is in ~/src/guix.}\n"
";; @r{Yasnippet configuration}\n"
"(with-eval-after-load 'yasnippet\n"
"  (add-to-list 'yas-snippet-dirs \"~/src/guix/etc/snippets/yas\"))\n"
";; @r{Tempel configuration}\n"
"(with-eval-after-load 'tempel\n"
"   ;; Ensure tempel-path is a list -- it may also be a string.\n"
"   (unless (listp 'tempel-path)\n"
"     (setq tempel-path (list tempel-path)))\n"
"   (add-to-list 'tempel-path \"~/src/guix/etc/snippets/tempel/*\"))\n"
msgstr ""
";; @r{Assuming the Guix checkout is in ~/src/guix.}\n"
";; @r{Yasnippet configuration}\n"
"(with-eval-after-load 'yasnippet\n"
"  (add-to-list 'yas-snippet-dirs \"~/src/guix/etc/snippets/yas\"))\n"
";; @r{Tempel configuration}\n"
"(with-eval-after-load 'tempel\n"
"   ;; Ensure tempel-path is a list -- it may also be a string.\n"
"   (unless (listp 'tempel-path)\n"
"     (setq tempel-path (list tempel-path)))\n"
"   (add-to-list 'tempel-path \"~/src/guix/etc/snippets/tempel/*\"))\n"

msgid "The commit message snippets depend on @url{https://magit.vc/, Magit} to display staged files.  When editing a commit message type @code{add} followed by @kbd{TAB} to insert a commit message template for adding a package; type @code{update} followed by @kbd{TAB} to insert a template for updating a package; type @code{https} followed by @kbd{TAB} to insert a template for changing the home page URI of a package to HTTPS."
msgstr "Тексты сообщений коммитов зависят от отображения затронутых файлов @url{https://magit.vc/, Magit}. Во время редактирования сообщения коммита типа @code{add} нажмите @kbd{TAB} после его ввода, чтобы вставить шаблон сообщения коммита добавления пакета; редактируя тип @code{update}, нажмите @kbd{TAB}, чтобы вставить шаблон обновления пакета; тип @code{https} - кнопка @kbd{TAB} вставит шаблон изменения адреса домашней страницы пакета на HTTPS."

msgid "The main snippet for @code{scheme-mode} is triggered by typing @code{package...} followed by @kbd{TAB}.  This snippet also inserts the trigger string @code{origin...}, which can be expanded further.  The @code{origin} snippet in turn may insert other trigger strings ending on @code{...}, which also can be expanded further."
msgstr "Основной код для @code{scheme-mode} вызывается при вводе @code{package...} и кнопки @kbd{TAB}. Этот код также вставляет строку триггера @code{origin...}, который может быть расширен в дальнейшем. Код @code{origin...}, в свою очередь, может вставить строки других триггеров, завершающихся @code{...}, который также может быть расширен в дальнейшем."

msgid "insert or update copyright"
msgstr "внести или обновить авторские права"

msgid "M-x guix-copyright"
msgstr "M-x guix-copyright"

msgid "M-x copyright-update"
msgstr "M-x copyright-update"

msgid "We additionally provide insertion and automatic update of a copyright in @file{etc/copyright.el}.  You may want to set your full name, mail, and load a file."
msgstr "Мы дополнительно обеспечиваем автоматическое обновление информации об авторских правах в @file{etc/copyright.el}.  Вы можете указать свое полное имя, почту и загрузить файл."

msgid ""
"(setq user-full-name \"Alice Doe\")\n"
"(setq user-mail-address \"alice@@mail.org\")\n"
";; @r{Assuming the Guix checkout is in ~/src/guix.}\n"
"(load-file \"~/src/guix/etc/copyright.el\")\n"
msgstr ""
"(setq user-full-name \"Alice Doe\")\n"
"(setq user-mail-address \"alice@@mail.org\")\n"
";; @r{Assuming the Guix checkout is in ~/src/guix.}\n"
"(load-file \"~/src/guix/etc/copyright.el\")\n"

msgid "To insert a copyright at the current line invoke @code{M-x guix-copyright}."
msgstr "Чтобы ввести авторское право в текущей строке, вызовите @code{M-x guix-copyright}."

msgid "To update a copyright you need to specify a @code{copyright-names-regexp}."
msgstr "Для обновления авторских прав необходимо указать @code{copyright-names-regexp}."

msgid ""
"(setq copyright-names-regexp\n"
"      (format \"%s <%s>\" user-full-name user-mail-address))\n"
msgstr ""
"(setq copyright-names-regexp\n"
"      (format \"%s <%s>\" user-full-name user-mail-address))\n"

msgid "You can check if your copyright is up to date by evaluating @code{M-x copyright-update}.  If you want to do it automatically after each buffer save then add @code{(add-hook 'after-save-hook 'copyright-update)} in Emacs."
msgstr "Вы можете проверить актуальность своих авторских прав, вызвав @code{M-x copyright-update}. Если вы хотите делать это автоматически после каждого сохранения в буфер, то добавьте @code{(add-hook 'after-save-hook 'copyright-update)} в Emacs."

msgid "Viewing Bugs within Emacs"
msgstr "Просмотр ошибок внутри Emacs"

msgid "Emacs has a nice minor mode called @code{bug-reference}, which, when combined with @samp{emacs-debbugs} (the Emacs package), can be used to open links such as @samp{<https://bugs.gnu.org/58697>} or @samp{<https://issues.guix.gnu.org/58697>} as bug report buffers.  From there you can easily consult the email thread via the Gnus interface, reply or modify the bug status, all without leaving the comfort of Emacs! Below is a sample configuration to add to your @file{~/.emacs} configuration file:"
msgstr "У Emacs есть хороший второстепенный режим @code{bug-reference}, который вместе с @samp{emacs-debbugs} (пакет Emacs) может открывать ссылки типа @samp{<https://bugs.gnu.org/58697>} или @samp{<https://issues.guix.gnu.org/58697>} как буфер редактирования отчёта об ошибке. Оттуда же вы можете легко просматривать ветку электронной почты через интерфейс Gnus, отвечать, изменять статус ошибки, и всё не выходя из удобного Emacs! Ниже есть пример, который вы можете добавить в свой файл конфигурации @file{~/.emacs}:"

msgid "For more information, refer to @ref{Bug Reference,,, emacs, The GNU Emacs Manual} and @ref{Minor Mode,,, debbugs-ug, The Debbugs User Guide}."
msgstr "Для дополнительной информации, см. @ref{Bug Reference,,, emacs, The GNU Emacs Manual} и @ref{Minor Mode,,, debbugs-ug, The Debbugs User Guide}."

msgid "Alternative setups than Emacs may let you work on Guix with a similar development experience and they might work better with the tools you currently use or help you make the transition to Emacs."
msgstr "Другие решения помимо Emacs позволят вам работать над Guix с похожим опытом, и они могут лучше работать с теми инструментами, что используете вы или помогать перейти на Emacs."

msgid "First step in your transition to Emacs."
msgstr "Первые шаги при переходе на Emacs."

msgid "Vim and NeoVim"
msgstr "Vim и NeoVim"

msgid "When you are evil to the root."
msgstr "Если вас объяла тьма."

msgid "Guile Studio is a pre-configured Emacs with mostly everything you need to start hacking in Guile. If you are not familiar with Emacs it makes the transition easier for you."
msgstr "Guile Studio - это предконфигурированный Emacs со всем тем, что может вам пригодиться для начала работы с Guile. Если вы не знакомы с Emacs, он позволит вам перейти на него ещё быстрее."

msgid "guix install guile-studio\n"
msgstr "guix install guile-studio\n"

msgid "Guile Studio comes with Geiser preinstalled and prepared for action."
msgstr "В Guile Studio предустановлен готовый к работе Geiser."

msgid "Vim (and NeoVim) are also packaged in Guix, just in case you decided to go for the evil path."
msgstr "В Guix также есть пакеты с Vim (и NeoVim) на случай, если вы решили встать на тёмную сторону."

msgid "guix install vim\n"
msgstr "guix install vim\n"

msgid "If you want to enjoy a similar development experience to that in the perfect setup, you should install several plugins to configure the editor. Vim (and NeoVim) have the equivalent to Paredit, @uref{https://www.vim.org/scripts/script.php?script_id=3998, @code{paredit.vim}}, that will help you with the structural editing of Scheme files (the support for very large files is not great, though)."
msgstr "Если хоитите насладиться похожим опытом разработки, что есть у Emacs, вам нужно установить несколько плагинов и настроить редактор кода. У Vim (и NeoVim) есть аналог Paredit, @uref{https://www.vim.org/scripts/script.php?script_id=3998, @code{paredit.vim}}, он поможет вам со структурированным редактированием файлов Scheme (поддержка файлов большого размера, однако, не столь прекрасная)."

msgid "guix install vim-paredit\n"
msgstr "guix install vim-paredit\n"

msgid "We also recommend that you run @code{:set autoindent} so that your code is automatically indented as you type."
msgstr "Мы также рекомендуем вам прописать @code{:set autoindent}, чтобы у вас автоматически делались отступы."

msgid "For the interaction with Git, @uref{https://www.vim.org/scripts/script.php?script_id=2975, @code{fugitive.vim}} is the most commonly used plugin:"
msgstr "Для взаимодействия с Git, @uref{https://www.vim.org/scripts/script.php?script_id=2975, @code{fugitive.vim}} - самый распространённый плагин:"

msgid "guix install vim-fugitive\n"
msgstr "guix install vim-fugitive\n"

msgid "And of course if you want to interact with Guix directly from inside of vim, using the built-in terminal emulator, we have our very own @code{guix.vim} package!"
msgstr "И конечно же, если хотите взаимодействовать с Guix напрямую из Vim, используя встроенный эмулятор терминала, у нас есть собственный пакет @code{guix.vim}!"

msgid "guix install vim-guix-vim\n"
msgstr "guix install vim-guix-vim\n"

msgid "In NeoVim you can even make a similar setup to Geiser using @url{https://conjure.fun/, Conjure} that lets you connect to a running Guile process and inject your code there live (sadly it's not packaged in Guix yet)."
msgstr "В NeoVim вы можете сделать похожую схему, как у Geiser, используя @url{https://conjure.fun/, Conjure}, который позволяет подключаться к процессу Guile и вставлять ваш код в реальном времени (к сожалению, в Guix такого пакета ещё нет)."

msgid "structure, of the source tree"
msgstr "структура, дерева исходного кода"

msgid "If you're willing to contribute to Guix beyond packages, or if you'd like to learn how it all fits together, this section provides a guided tour in the code base that you may find useful."
msgstr "Если хотите внести вклад в Guix помимо пакетов, или если вы хотите знать, как всё тут устроено, этот раздел будет экскурсией по кодовой базе, которая вам может быть полезна."

msgid "guix"
msgstr "guix"

msgid "(guix store)"
msgstr "(guix store)"

msgid "(guix derivations)"
msgstr "(guix derivations)"

msgid "Creating derivations (@pxref{Derivations})."
msgstr "Создание дериваций (@pxref{Derivations})."

msgid "(guix gexps)"
msgstr "(guix gexps)"

msgid "(guix packages)"
msgstr "(guix packages)"

msgid "(guix download)"
msgstr "(guix download)"

msgid "(guix git-download)"
msgstr "(guix git-download)"

msgid "(guix swh)"
msgstr "(guix swh)"

msgid "(guix search-paths)"
msgstr "(guix search-paths)"

msgid "(guix build-system)"
msgstr "(guix build-system)"

msgid "The build system interface (@pxref{Build Systems})."
msgstr "Интерфейс системы сборки (@pxref{Build Systems})."

msgid "(guix profiles)"
msgstr "(guix profiles)"

msgid "Implementing profiles."
msgstr "Разработка профилей."

msgid "guix/build-system"
msgstr "guix/build-system"

msgid "(guix build-system gnu)"
msgstr "(guix build-system gnu)"

msgid "the GNU build system;"
msgstr "система сборки GNU;"

msgid "(guix build-system cmake)"
msgstr "(guix build-system cmake)"

msgid "the CMake build system;"
msgstr "система сборки CMake;"

msgid "(guix build-system pyproject)"
msgstr "(guix build-system pyproject)"

msgid "The Python ``pyproject'' build system."
msgstr "Система сборки Python ``pyproject''."

msgid "guix/build"
msgstr "guix/build"

msgid "(guix build utils)"
msgstr "(guix build utils)"

msgid "Utilities for package definitions and more (@pxref{Build Utilities})."
msgstr "Утилиты для определения пакетов и прочее (@pxref{Build Utilities})."

msgid "(guix build gnu-build-system)"
msgstr "(guix build gnu-build-system)"

msgid "(guix build cmake-build-system)"
msgstr "(guix build cmake-build-system)"

msgid "(guix build pyproject-build-system)"
msgstr "(guix build pyproject-build-system)"

msgid "(guix build syscalls)"
msgstr "(guix build syscalls)"

msgid "command modules"
msgstr "командные модули"

msgid "guix/scripts"
msgstr "guix/scripts"

msgid "guix/import"
msgstr "guix/import"

msgid "package modules"
msgstr "Пакетные модули"

msgid "gnu/packages"
msgstr "gnu/packages"

msgid "(gnu packages base)"
msgstr "(gnu packages base)"

msgid "(gnu packages guile)"
msgstr "(gnu packages guile)"

msgid "Guile and core Guile packages."
msgstr "Guile и основные пакеты Guile."

msgid "(gnu packages linux)"
msgstr "(gnu packages linux)"

msgid "(gnu packages python)"
msgstr "(gnu packages python)"

msgid "Python and core Python packages."
msgstr "Python и основные пакеты Python."

msgid "In any case, you can jump to a package definition using @command{guix edit} (@pxref{Invoking guix edit}) and view its location with @command{guix show} (@pxref{Invoking guix package})."
msgstr "В любом случае, вы сможете перейти на определение пакета, используя @command{guix edit} (@pxref{Invoking guix edit}) и посмотреть его месторасположение с помощью @command{guix show} (@pxref{Invoking guix package})."

msgid "search-patches"
msgstr "search-patches"

msgid "gnu/services"
msgstr "gnu/services"

msgid "(gnu services)"
msgstr "(gnu services)"

msgid "(gnu services base)"
msgstr "(gnu services base)"

msgid "(gnu services desktop)"
msgstr "(gnu services desktop)"

msgid "``Desktop'' services (@pxref{Desktop Services})."
msgstr "Службы ``Рабочего стола'' (@pxref{Desktop Services})."

msgid "You can jump to a service definition using @command{guix system edit} and view its location with @command{guix system search} (@pxref{Invoking guix system})."
msgstr "Вы можете перейти на определение служб с помощью @command{guix system edit} и посмотреть его месторасположение при помощи @command{guix system search} (@pxref{Invoking guix system})."

msgid "gnu/system"
msgstr "gnu/system"

msgid "(gnu system)"
msgstr "(gnu system)"

msgid "(gnu system file-systems)"
msgstr "(gnu system file-systems)"

msgid "(gnu system mapped-devices)"
msgstr "(gnu system mapped-devices)"

msgid "gnu/build"
msgstr "gnu/build"

msgid "(gnu build accounts)"
msgstr "(gnu build accounts)"

msgid "(gnu build activation)"
msgstr "(gnu build activation)"

msgid "Activating an operating system at boot time or reconfiguration time."
msgstr "Активация операционной системы во время запуска или переконфигурации."

msgid "(gnu build file-systems)"
msgstr "(gnu build file-systems)"

msgid "Booting GNU/Linux and GNU/Hurd operating systems."
msgstr "Запуск операционных систем GNU/Linux и GNU/Hurd."

msgid "gnu/home"
msgstr "gnu/home"

msgid "(gnu home services)"
msgstr "(gnu home services)"

msgid "Core services such as @code{home-files-service-type}."
msgstr "Основные службы, такие как @code{home-files-service-type}."

msgid "(gnu home services ssh)"
msgstr "(gnu home services ssh)"

msgid "gnu/installer"
msgstr "gnu/installer"

msgid "gnu/machine"
msgstr "gnu/machine"

msgid "These are the @dfn{machine abstractions} used by @command{guix deploy} (@pxref{Invoking guix deploy})."
msgstr "Это @dfn{машинные абстракции}, используемые @command{guix deploy} (@pxref{Invoking guix deploy})."

msgid "nix"
msgstr "nix"

msgid "This is the C++ implementation of @command{guix-daemon}, inherited from Nix (@pxref{Invoking guix-daemon})."
msgstr "Это реализация @command{guix-daemon} на C++, основанная на Nix (@pxref{Invoking guix-daemon})."

msgid "tests"
msgstr "tests"

msgid "doc"
msgstr "doc"

msgid "packages, creating"
msgstr "создание, пакетов"

msgid "The GNU distribution is nascent and may well lack some of your favorite packages.  This section describes how you can help make the distribution grow."
msgstr "Дистрибутив GNU - только зарождается и может не содержать ваши любимые пакеты. Этот раздел описывает как можно помочь с развитием дистрибутива."

msgid "Free software packages are usually distributed in the form of @dfn{source code tarballs}---typically @file{tar.gz} files that contain all the source files.  Adding a package to the distribution means essentially two things: adding a @dfn{recipe} that describes how to build the package, including a list of other packages required to build it, and adding @dfn{package metadata} along with that recipe, such as a description and licensing information."
msgstr "Пакеты свободного программного обеспечения обычно распространяются в виде @dfn{архивов исходного кода}‐‐‐скорее всего @file{tar.gz}, которые содержат все исходные файлы. Добавить пакет в дистрибутив означает, по существу, две вещи: добавление @dfn{рецепта}, в котором обозначено, как собирать пакет, включая список других пакетов, необходимых для сборки данного, а также добавление @dfn{метаданных пакета} вместе с тем рецептом, таких как описание пакета и информации о лицензировании."

msgid "In Guix all this information is embodied in @dfn{package definitions}.  Package definitions provide a high-level view of the package.  They are written using the syntax of the Scheme programming language; in fact, for each package we define a variable bound to the package definition, and export that variable from a module (@pxref{Package Modules}).  However, in-depth Scheme knowledge is @emph{not} a prerequisite for creating packages.  For more information on package definitions, @pxref{Defining Packages}."
msgstr "В Guix вся эта информация включена в @dfn{определения пакетов}. Определения пакетов представляют собой высокоуровневый обзор пакета. Они написаны с использованием синтаксиса языка программирования Scheme. Для каждого пакета задаётся набор переменных, которые составляют определение пакета, и затем это определение пакета экспортируется из модуля (@pxref{Package Modules}). Однако основательные знания Scheme @emph{not} не обязательны для создания пакетов. Для информации об определении пакетов см. @pxref{Defining Packages}."

msgid "Once a package definition is in place, stored in a file in the Guix source tree, it can be tested using the @command{guix build} command (@pxref{Invoking guix build}).  For example, assuming the new package is called @code{gnew}, you may run this command from the Guix build tree (@pxref{Running Guix Before It Is Installed}):"
msgstr "Когда определение пакета создано, сохранено в файле в дереве исходников Guix, оно может быть протестировано командой @command{guix build} (@pxref{Invoking guix build}). Например, допустим, новый пакет называется @code{gnew}, тогда можно запустить эту команду из дерева сборки Guix (@pxref{Running Guix Before It Is Installed}):"

msgid "./pre-inst-env guix build gnew --keep-failed\n"
msgstr "./pre-inst-env guix build gnew --keep-failed\n"

msgid "Using @code{--keep-failed} makes it easier to debug build failures since it provides access to the failed build tree.  Another useful command-line option when debugging is @code{--log-file}, to access the build log."
msgstr "Использование @code{--keep-failed} помогает при отладке ошибок сборки, так как эта опция предоставляет доступ к дереву неудачных сборок. Другая полезная опция командной строки при отладке - @code{--log-file}, которая даёт доступ к логу сборки."

msgid "If the package is unknown to the @command{guix} command, it may be that the source file contains a syntax error, or lacks a @code{define-public} clause to export the package variable.  To figure it out, you may load the module from Guile to get more information about the actual error:"
msgstr "Если пакет не известен команде @command{guix}, это может означать, что файл исходника содержит синтаксическую ошибку или не имеет предложения @code{define-public}, которое экспортирует переменную пакета. Чтобы разобраться, можно загрузить модуль из Guile и получить больше информации о текущей ошибке:"

msgid "./pre-inst-env guile -c '(use-modules (gnu packages gnew))'\n"
msgstr "./pre-inst-env guile -c '(use-modules (gnu packages gnew))'\n"

msgid "Once your package builds correctly, please send us a patch (@pxref{Submitting Patches}).  Well, if you need help, we will be happy to help you too.  Once the patch is committed in the Guix repository, the new package automatically gets built on the supported platforms by @url{https://@value{SUBSTITUTE-SERVER-1}, our continuous integration system}."
msgstr "Если ваш пакет собирается без ошибок, пришлите нам свой патч (@pxref{Submitting Patches}). Если вам нужна помощь, мы будем рады помочь вам со своей стороны. После фиксации патча в репозитории Guix новый пакет будет автоматически собран для всех поддерживаемых платформ нашей @url{https://@value{SUBSTITUTE-SERVER-1} CI-системой}."

msgid "substituter"
msgstr "заменяющий"

msgid "Users can obtain the new package definition simply by running @command{guix pull} (@pxref{Invoking guix pull}).  When @code{@value{SUBSTITUTE-SERVER-1}} is done building the package, installing the package automatically downloads binaries from there (@pxref{Substitutes}).  The only place where human intervention is needed is to review and apply the patch."
msgstr "Пользователи могут получать новые доступные определения пакетов простым запуском @command{guix pull} (@pxref{Invoking guix pull}). Если @code{@value{SUBSTITUTE-SERVER-1}} выполнил сборку пакета, установка пакета выполнит автоматическое скачивание бинарных файлов оттуда (@pxref{Substitutes}). Единственное место, где нужна активность человека, - обзор и применение патча."

msgid "Software Freedom"
msgstr "Свобода программного обеспечения"

msgid "What may go into the distribution."
msgstr "Что может быть принято в дистрибутив."

msgid "Package Naming"
msgstr "Как называть пакеты"

msgid "What's in a name?"
msgstr "Что может быть в имени?"

msgid "Version Numbers"
msgstr "Номера версий"

msgid "When the name is not enough."
msgstr "Когда имени не достаточно."

msgid "Synopses and Descriptions"
msgstr "Краткие обзоры и описания"

msgid "Helping users find the right package."
msgstr "Помощь пользователю в поиске нужного пакета."

msgid "Snippets versus Phases"
msgstr "Сниппеты против Фаз"

msgid "Whether to use a snippet, or a build phase."
msgstr "Где использовать сниппет, а где фазу сборки."

msgid "Cyclic Module Dependencies"
msgstr "Циклические зависимости модулей"

msgid "Emacs Packages"
msgstr "Пакеты Emacs"

msgid "Your Elisp fix."
msgstr "Ваш Elisp фикс."

msgid "Python Modules"
msgstr "Модули Python"

msgid "A touch of British comedy."
msgstr "Английский юмор."

msgid "Perl Modules"
msgstr "Модули Perl"

msgid "Little pearls."
msgstr "Жемчужинки."

msgid "Java Packages"
msgstr "Пакеты Java"

msgid "Coffee break."
msgstr "Кофе-брейк."

msgid "Rust Crates"
msgstr "Rust Crates пакеты"

msgid "Beware of oxidation."
msgstr "Остерегайтесь окисления."

msgid "Elm Packages"
msgstr "Пакеты Elm"

msgid "Trees of browser code"
msgstr "Лесок браузерного кода"

msgid "Fonts"
msgstr "Шрифты"

msgid "Fond of fonts."
msgstr "Любителям шрифтов."

msgid "free software"
msgstr "свободное программное обеспечение"

msgid "The GNU operating system has been developed so that users can have freedom in their computing.  GNU is @dfn{free software}, meaning that users have the @url{https://www.gnu.org/philosophy/free-sw.html,four essential freedoms}: to run the program, to study and change the program in source code form, to redistribute exact copies, and to distribute modified versions.  Packages found in the GNU distribution provide only software that conveys these four freedoms."
msgstr "Операционная система GNU разработана, чтобы пользователи имели свободу при работе за компьютером. GNU --- это @dfn{свободное программное обеспечение}, то есть пользователи могут иметь @url{http://www.gnu.org/philosophy/free-sw.html,четыре важнейшие свободы}: запускать программу, изучать и изменять исходный код программы, распространять самостоятельно точные копии и распространять изменённые версии. Пакеты, включенные в дистрибутив GNU, поставляют только программное обеспечение, которое даёт эти четыре свободы."

msgid "In addition, the GNU distribution follow the @url{https://www.gnu.org/distros/free-system-distribution-guidelines.html,free software distribution guidelines}.  Among other things, these guidelines reject non-free firmware, recommendations of non-free software, and discuss ways to deal with trademarks and patents."
msgstr "Также дистрибутив GNU следует @url{http://www.gnu.org/distros/free-system-distribution-guidelines.html,рекомендациям для свободных дистрибутивов}. Эти рекомендации, среди прочих указаний, также отклоняют несвободные встроенные программы, рекомендации несвободного программного обеспечения и содержат доводы о том, как взаимодействовать с торговыми марками и патентами."

msgid "Some otherwise free upstream package sources contain a small and optional subset that violates the above guidelines, for instance because this subset is itself non-free code.  When that happens, the offending items are removed with appropriate patches or code snippets in the @code{origin} form of the package (@pxref{Defining Packages}).  This way, @code{guix build --source} returns the ``freed'' source rather than the unmodified upstream source."
msgstr "Но тем не менее, некоторые источники пакетов в оригинале содержат небольшие необязательные компоненты, которые нарушают указанные рекомендации, например, это может быть несвободный код. Если это происходит, такие компоненты удаляются применением соответствующих патчей или сниппетов в @code{исходный} код пакета @pxref{Defining Packages}). Так @code{guix build --source} возвращает \"восстановленный свободный\" исходный код вместо изначального исходника."

msgid "package name"
msgstr "имя пакета"

msgid "A package actually has two names associated with it.  First, there is the name of the @emph{Scheme variable}, the one following @code{define-public}.  By this name, the package can be made known in the Scheme code, for instance as input to another package.  Second, there is the string in the @code{name} field of a package definition.  This name is used by package management commands such as @command{guix package} and @command{guix build}."
msgstr "Пакет, в действительности, имеет два имени, ассоциированных с ним: первое --- это имя @emph{переменной Scheme}, которая указана в @code{define-public}. Это имя делает пакет доступным в коде Scheme, например, может использоваться как входные данные другого пакета. Второе --- это строка в поле @code{name} в определении пакета. Это имя используется командами управления пакетами, например, @command{guix package} и @command{guix build}."

msgid "Both are usually the same and correspond to the lowercase conversion of the project name chosen upstream, with underscores replaced with hyphens.  For instance, GNUnet is available as @code{gnunet}, and SDL_net as @code{sdl-net}."
msgstr "Оба обычно представляют собой строки в нижнем регистре, содержащие имя оригинального проекта с дефисами вместо символов нижнего подчёркивания. Например, GNUnet доступен как @code{gnunet}, а SDL_net --- как @code{sdl-net}."

msgid "A noteworthy exception to this rule is when the project name is only a single character, or if an older maintained project with the same name already exists---regardless of whether it has already been packaged for Guix.  Use common sense to make such names unambiguous and meaningful.  For example, Guix's package for the shell called ``s'' upstream is @code{s-shell} and @emph{not} @code{s}.  Feel free to ask your fellow hackers for inspiration."
msgstr "Заслуживающим внимания исключением из этого правила является случай, когда имя проекта состоит только из одного символа, или если уже существует более старый поддерживаемый проект с таким же именем---независимо от того, был ли он уже упакован для Guix.  Пользуйтесь здравым смыслом, чтобы сделать такие имена однозначными и значимыми.  Например, пакет Guix для оболочки (shell) под названием ``s ''---это @code{s-shell} и @emph{нет} @code{s}.  Не стесняйтесь обращаться к своим коллегам-хакерам за вдохновением."

msgid "We do not add @code{lib} prefixes for library packages, unless these are already part of the official project name.  But @pxref{Python Modules} and @ref{Perl Modules} for special rules concerning modules for the Python and Perl languages."
msgstr "Мы не добавляем приставку @code{lib} для пакетов библиотек, несмотря на то, что это уже часть официального имени пакета. Но для @pxref{Python Modules} и @ref{Perl Modules} есть исключения, касающиеся модулей для языков Python и Perl."

msgid "Font package names are handled differently, @pxref{Fonts}."
msgstr "При именовании пакетов шрифтов имена меняются, @pxref{Fonts}."

msgid "package version"
msgstr "версия пакета"

msgid "We usually package only the latest version of a given free software project.  But sometimes, for instance for incompatible library versions, two (or more) versions of the same package are needed.  These require different Scheme variable names.  We use the name as defined in @ref{Package Naming} for the most recent version; previous versions use the same name, suffixed by @code{-} and the smallest prefix of the version number that may distinguish the two versions."
msgstr "Обычно мы опакечиваем только последнюю версию данного программного обеспечения. Но иногда, например, при наличии несовместимых версий библиотек, нужны две (или более) версии одного пакета. Такая ситуация требует различных имён переменных в Scheme. Мы используем имя, определённое в @ref{Package Naming}, для самой последней версии; предыдущие же версии используют такое же имя с добавлением @code{-} и кратчайшим  числом версии, что позволяет различать между  двумя версиями."

msgid "The name inside the package definition is the same for all versions of a package and does not contain any version number."
msgstr "Имя внутри описания пакета постоянно для всех версий пакета и не содержит номера версии."

msgid "For instance, the versions 2.24.20 and 3.9.12 of GTK+ may be packaged as follows:"
msgstr "Например, версии GTK+ 2.24.20 и 3.9.12 могут опакечиваться так:"

msgid ""
"(define-public gtk+\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"3.9.12\")\n"
"    ...))\n"
"(define-public gtk+-2\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"2.24.20\")\n"
"    ...))\n"
msgstr ""
"(define-public gtk+\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"3.9.12\")\n"
"    ...))\n"
"(define-public gtk+-2\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"2.24.20\")\n"
"    ...))\n"

msgid "If we also wanted GTK+ 3.8.2, this would be packaged as"
msgstr "Если нам также нужен GTK+ 3.8.2, он будет размещён в пакете"

msgid ""
"(define-public gtk+-3.8\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"3.8.2\")\n"
"    ...))\n"
msgstr ""
"(define-public gtk+-3.8\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"3.8.2\")\n"
"    ...))\n"

msgid "version number, for VCS snapshots"
msgstr "номер версии, для снимков СКВ"

msgid "Occasionally, we package snapshots of upstream's version control system (VCS) instead of formal releases.  This should remain exceptional, because it is up to upstream developers to clarify what the stable release is.  Yet, it is sometimes necessary.  So, what should we put in the @code{version} field?"
msgstr "Порой мы опакечиваем снимки исходников из системы контроля версий (СКВ) вместо официальных релизов. Такое следует делать в лишь порядке исключения, потому что только самим разработчики оригинальных программ решать, что является стабильным релизом. Тем не менее, иногда приходится это делать. Что же мы должны тогда пишем в поле @code{версия}?"

msgid "Clearly, we need to make the commit identifier of the VCS snapshot visible in the version string, but we also need to make sure that the version string is monotonically increasing so that @command{guix package --upgrade} can determine which version is newer.  Since commit identifiers, notably with Git, are not monotonically increasing, we add a revision number that we increase each time we upgrade to a newer snapshot.  The resulting version string looks like this:"
msgstr "Ясно, что нужно сделать идентификатор коммита снимка СКВ явным внутри строки версии, но мы также должны убедиться, что строка версии монотонно увеличивается, чтобы команда @command{guix package --upgrade} могла разобраться, какая версия новее. Поскольку идентификаторы коммитов, и особенно в Git, не увеличиваются монотонно, мы дописываем номер ревизии, который мы увеличиваем каждый раз, когда мы обновляем до нового снимка. В результате строка версии выглядит так:"

msgid ""
"2.0.11-3.cabba9e\n"
"  ^    ^    ^\n"
"  |    |    `-- upstream commit ID\n"
"  |    |\n"
"  |    `--- Guix package revision\n"
"  |\n"
"latest upstream version\n"
msgstr ""
"2.0.11-3.cabba9e\n"
"  ^    ^    ^\n"
"  |    |    `-- ID коммита оригинала\n"
"  |    |\n"
"  |    `--- версия пакета Guix \n"
"  |\n"
"последняя версия оригинала\n"

msgid "It is a good idea to strip commit identifiers in the @code{version} field to, say, 7 digits.  It avoids an aesthetic annoyance (assuming aesthetics have a role to play here) as well as problems related to OS limits such as the maximum shebang length (127 bytes for the Linux kernel).  There are helper functions for doing this for packages using @code{git-fetch} or @code{hg-fetch} (see below).  It is best to use the full commit identifiers in @code{origin}s, though, to avoid ambiguities.  A typical package definition may look like this:"
msgstr "Хорошая идея обрезать идентификаторы коммитов в поле @code{version}, скажем, до 7 цифр. Это позволяет избежать эстетическую неприятность (там, где это имеет значение), а также и проблемы с ограничениями ОС, как например, максимальная длина шебанга в заголовке скрипта (127 байт для ядра Linux). Существуют вспомогательные функции, дабы делать это в пакетах, используя @code{git-fetch} или @code{hg-fetch} (см. ниже).  В поле источника --- @code{origin} --- лучшее всего использовать полный идентификатор коммита, чтобы избежать двоякости. Типичное описание пакета может выглядеть так:"

msgid ""
"(define my-package\n"
"  (let ((commit \"c3f29bc928d5900971f65965feaae59e1272a3f7\")\n"
"        (revision \"1\"))          ;Guix package revision\n"
"    (package\n"
"      (version (git-version \"0.9\" revision commit))\n"
"      (source (origin\n"
"                (method git-fetch)\n"
"                (uri (git-reference\n"
"                      (url \"git://example.org/my-package.git\")\n"
"                      (commit commit)))\n"
"                (sha256 (base32 \"1mbikn@dots{}\"))\n"
"                (file-name (git-file-name name version))))\n"
"      ;; @dots{}\n"
"      )))\n"
msgstr ""
"(define my-package\n"
"  (let ((commit \"c3f29bc928d5900971f65965feaae59e1272a3f7\")\n"
"        (revision \"1\"))          ;Guix package revision\n"
"    (package\n"
"      (version (git-version \"0.9\" revision commit))\n"
"      (source (origin\n"
"                (method git-fetch)\n"
"                (uri (git-reference\n"
"                      (url \"git://example.org/my-package.git\")\n"
"                      (commit commit)))\n"
"                (sha256 (base32 \"1mbikn@dots{}\"))\n"
"                (file-name (git-file-name name version))))\n"
"      ;; @dots{}\n"
"      )))\n"

msgid "Return the version string for packages using @code{git-fetch}."
msgstr "Возвращает строку версии для пакетов используя @code{git-fetch}."

msgid ""
"(git-version \"0.2.3\" \"0\" \"93818c936ee7e2f1ba1b315578bde363a7d43d05\")\n"
"@result{} \"0.2.3-0.93818c9\"\n"
msgstr ""
"(git-version \"0.2.3\" \"0\" \"93818c936ee7e2f1ba1b315578bde363a7d43d05\")\n"
"@result{} \"0.2.3-0.93818c9\"\n"

msgid "Return the version string for packages using @code{hg-fetch}.  It works in the same way as @code{git-version}."
msgstr "Возвращает строку версии для пакетов используя @code{hg-fetch}.\tРаботает так же, как и @code{git-version}."

msgid "package description"
msgstr "описание пакета"

msgid "package synopsis"
msgstr "краткий обзор пакета"

msgid "As we have seen before, each package in GNU@tie{}Guix includes a synopsis and a description (@pxref{Defining Packages}).  Synopses and descriptions are important: They are what @command{guix package --search} searches, and a crucial piece of information to help users determine whether a given package suits their needs.  Consequently, packagers should pay attention to what goes into them."
msgstr "Как мы видели ранее, каждый пакет в GNU@tie{}Guix включает краткое описание и полное описание (@pxref{Defining Packages}). Краткие описания и полные описания важны: по ним производится поиск @command{guix package --search}, и это важная информация, которая помогает пользователям определить, насколько пакет соответствует их потребностям. Следовательно, сборщики пакетов должны следить за тем, что туда прописывается."

msgid "Synopses must start with a capital letter and must not end with a period.  They must not start with ``a'' or ``the'', which usually does not bring anything; for instance, prefer ``File-frobbing tool'' over ``A tool that frobs files''.  The synopsis should say what the package is---e.g., ``Core GNU utilities (file, text, shell)''---or what it is used for---e.g., the synopsis for GNU@tie{}grep is ``Print lines matching a pattern''."
msgstr "Краткие описания должны начинаться с заглавной буквы и не должны заканчиваться точкой. Они не должны начинаться с артикля (англ. \"a\" или \"the\"), что обычно ничего не значит; например, лучше начать \"File-frobbing tool\" вместо \"A tool that frobs files\".  Краткое описание должно сообщать о том, что представляет собой пакет, то есть: \"Основные утилиты GNU (файлы, текст, оболочка)\", - или для чего он используется. Например, краткое описание для GNU@tie{}grep таково: \"Печать строк, содержащих паттерн\"."

msgid "Keep in mind that the synopsis must be meaningful for a very wide audience.  For example, ``Manipulate alignments in the SAM format'' might make sense for a seasoned bioinformatics researcher, but might be fairly unhelpful or even misleading to a non-specialized audience.  It is a good idea to come up with a synopsis that gives an idea of the application domain of the package.  In this example, this might give something like ``Manipulate nucleotide sequence alignments'', which hopefully gives the user a better idea of whether this is what they are looking for."
msgstr "Помните, что краткое описание должно быть понятным для очень широкой аудитории. Например, \"Манипулирование выравниванием в формате SAM\" может быть понятно продвинутым исследователям в области биоинформатики, но совершенно бесполезно или может ввести в заблужение не специалистов. Хорошая идея --- включать в краткое описание идею группы приложений, к которой относится пакет. В данном примере можно предложить такой вариант: \"Манипулирование выравниванием нуклеотидных последовательностей\", что, в целом, даёт пользователю лучшее представление о том, на что они смотрят."

msgid "Descriptions should take between five and ten lines.  Use full sentences, and avoid using acronyms without first introducing them.  Please avoid marketing phrases such as ``world-leading'', ``industrial-strength'', and ``next-generation'', and avoid superlatives like ``the most advanced''---they are not helpful to users looking for a package and may even sound suspicious.  Instead, try to be factual, mentioning use cases and features."
msgstr "Описания должны занимать от 5 до 10 строк. Используйте полные предложения и остерегайтесь использовать аббревиатуры, которые до того не были расшифрованы. Пожалуйста, не пишите маркетинговые фразы типа ``мировой лидер'', ``промышленно устойчивый'', ``следующего поколения'',  и избегайте превосходную степень типа \"самый продвинутый\" --- это не помогает пользователям найти желанный пакет, и может даже звучать сомнительно. Вместо этого рассказывайте о фактах, упоминая особенности и применение."

msgid "Texinfo markup, in package descriptions"
msgstr "Разметка Texinfo, в описаниях пакетов"

msgid "Descriptions can include Texinfo markup, which is useful to introduce ornaments such as @code{@@code} or @code{@@dfn}, bullet lists, or hyperlinks (@pxref{Overview,,, texinfo, GNU Texinfo}).  However you should be careful when using some characters for example @samp{@@} and curly braces which are the basic special characters in Texinfo (@pxref{Special Characters,,, texinfo, GNU Texinfo}).  User interfaces such as @command{guix show} take care of rendering it appropriately."
msgstr "Описания могут содержать разметку Texinfo, что полезно для использования подсветки, такой, как @code{@@code} или @code{@@dfn}, списков или гиперссылок (@pxref{Overview,,, texinfo, GNU Texinfo}). Будьте, однако, внимательны при пользовании некоторых символов, например @samp{@@} и фигурных скобок, которые являются основными спецсимволами в Texinfo (@pxref{Special Characters,,, texinfo, GNU Texinfo}). Пользовательские интерфейсы, вроде @command{guix show}, правильно учитывают разметку при построении вывода."

msgid "Synopses and descriptions are translated by volunteers @uref{https://translate.codeberg.org/projects/guix/packages, at Weblate} so that as many users as possible can read them in their native language.  User interfaces search them and display them in the language specified by the current locale."
msgstr "Краткие и полные описания переводятся добровольцами @uref{https://translate.codeberg.org/projects/guix/packages, в Weblate}, чтобы как можно больше пользователей могли читать их на своем родном языке.  Пользовательские интерфейсы производят поиск по ним и отображают их на языке, заданном текущей локалью."

msgid "To allow @command{xgettext} to extract them as translatable strings, synopses and descriptions @emph{must be literal strings}.  This means that you cannot use @code{string-append} or @code{format} to construct these strings:"
msgstr "Чтобы позволить команде @command{xgettext} извлекать их как текст для перевода, краткие и полные описания @emph{должны быть буквенными строками}.  Это означает, что нельзя пользоваться @code{string-append} или @code{format} при составлении этих строк:"

msgid ""
"(package\n"
"  ;; @dots{}\n"
"  (synopsis \"This is translatable\")\n"
"  (description (string-append \"This is \" \"*not*\" \" translatable.\")))\n"
msgstr ""
"(package\n"
"  ;; @dots{}\n"
"  (synopsis \"Эту строку можно переводить\")\n"
"  (description (string-append \"Эта строка \" \"*не поддерживает*\" \" перевод.\")))\n"

msgid "Translation is a lot of work so, as a packager, please pay even more attention to your synopses and descriptions as every change may entail additional work for translators.  In order to help them, it is possible to make recommendations or instructions visible to them by inserting special comments like this (@pxref{xgettext Invocation,,, gettext, GNU Gettext}):"
msgstr "Перевод --- трудоёмкая работа. Как автор пакета, пожалуйста, уделите особое внимание кратким и полным описаниям, поскольку каждое изменение може повлечь за собой дополнительную работу для переводчиков. Чтобы помочь им, можно оставлять видимые им рекомендации или инструкции, вставив особенные комментарии вот так (@pxref{xgettext Invocation,,, gettext, GNU Gettext}):"

msgid ""
";; TRANSLATORS: \"X11 resize-and-rotate\" should not be translated.\n"
"(description \"ARandR is designed to provide a simple visual front end\n"
"for the X11 resize-and-rotate (RandR) extension. @dots{}\")\n"
msgstr ""
";; TRANSLATORS: \"X11 resize-and-rotate\" should not be translated.\n"
"(description \"ARandR is designed to provide a simple visual front end\n"
"for the X11 resize-and-rotate (RandR) extension. @dots{}\")\n"

msgid "snippets, when to use"
msgstr "сниппеты, где использовать"

msgid "The boundary between using an origin snippet versus a build phase to modify the sources of a package can be elusive.  Origin snippets are typically used to remove unwanted files such as bundled libraries, nonfree sources, or to apply simple substitutions.  The source derived from an origin should produce a source that can be used to build the package on any system that the upstream package supports (i.e., act as the corresponding source).  In particular, origin snippets must not embed store items in the sources; such patching should rather be done using build phases.  Refer to the @code{origin} record documentation for more information (@pxref{origin Reference})."
msgstr "Граница разделения между использованием фрагмента кода в поле origin и фазы сборки для модификации исходных кодов пакета может быть неочевидной. Обыкновенно фрагменты кода используются для удаления нежелательных файлов, таких, как поставляемые с пакетом библиотеки, несвободные исходники, или для простых подстановок. Обработанный из оригинала исходник должен быть таким, чтобы его можно использовать для сборки пакета в любой системе, поддерживаемой апстримом пакета (т.е. действовать как эквивалентный исходный код).  В частности, объявления с помощью фрагмента кода не должны встраивать содержимое хранилища в производный продукт. Такие виды исправлений лучше делать с помощью фаз сборки.  Обратитесь к @code{origin} документации за дополнительной информацией (@pxref{origin Reference})."

msgid "emacs, packaging"
msgstr "Emacs, пакетирование"

msgid "elisp, packaging"
msgstr "elisp, пакетирование"

msgid "Emacs packages should preferably use the Emacs build system (@pxref{emacs-build-system}), for uniformity and the benefits provided by its build phases, such as the auto-generation of the autoloads file and the byte compilation of the sources.  Because there is no standardized way to run a test suite for Emacs packages, tests are disabled by default.  When a test suite is available, it should be enabled by setting the @code{#:tests?} argument to @code{#true}.  By default, the command to run the test is @command{make check}, but any command can be specified via the @code{#:test-command} argument.  The @code{#:test-command} argument expects a list containing a command and its arguments, to be invoked during the @code{check} phase."
msgstr "Для пакетов emacs желательно использовать систему сборки emacs (@pxref{emacs-build-system}), ради однородности и полезностей от её фаз сборки, таких, как автоматическое создание файла автозагрузки и байтовая компиляция исходного кода.  Поскольку не существует стандартизированного способа запуска набора тестов для пакетов Emacs, тесты по умолчанию отключены.  Если у пакета есть набор тестов, его следует включить, дав аргументу @code{#:tests?} значение @code{#true}.  По умолчанию команда для запуска теста---@command{make check}, но может быть использована любая команда , указанная в аргументе @code{#:test-command}.  Аргумент @code{#:test-command} ожидает получить список, содержащий команду и ее аргументы, для ее вызова во время фазы @code{check}."

msgid "The Elisp dependencies of Emacs packages are typically provided as @code{propagated-inputs} when required at run time.  As for other packages, build or test dependencies should be specified as @code{native-inputs}."
msgstr "Elisp-зависимости пакетов emacs обычно указываются как @code{propagated-inputs}, если они необходимы во время работы программы.  Что касается других пакетов, зависимости сборки или тестирования должны быть указаны как @code{native-inputs}."

msgid "Emacs packages sometimes depend on resources directories that should be installed along the Elisp files.  The @code{#:include} argument can be used for that purpose, by specifying a list of regexps to match.  The best practice when using the @code{#:include} argument is to extend rather than override its default value (accessible via the @code{%default-include} variable).  As an example, a yasnippet extension package typically include a @file{snippets} directory, which could be copied to the installation directory using:"
msgstr "Пакеты emacs иногда зависят от директорий с ресурсами, которые должны быть установлены вместе с файлами Elisp. Для этого можно использовать аргумент @code{#:include}, указывая список регулярных выражений, которые должны совпадать.  Хорошей практикой при использовании аргумента @code{#:include} является расширение, а не изменение его значения по умолчанию, которое доступно через переменную @code{%default-include}.  Например, дополнительные пакеты для  yasnippet обычно содержат директорию @file{snippets}, которую можно скопировать в директорию установки, используя:"

msgid "#:include (cons \"^snippets/\" %default-include)\n"
msgstr "#:include (cons \"^snippets/\" %default-include)\n"

msgid "When encountering problems, it is wise to check for the presence of the @code{Package-Requires} extension header in the package main source file, and whether any dependencies and their versions listed therein are satisfied."
msgstr "При возникновении проблем целесообразно проверить наличие заголовка расширения @code{Package-Requires} в основном исходном файле пакета, а также удостоверится, что все перечисленные там зависимости и их версии удовлетворены."

msgid "python"
msgstr "python"

msgid "We currently package Python 2 and Python 3, under the Scheme variable names @code{python-2} and @code{python} as explained in @ref{Version Numbers}.  To avoid confusion and naming clashes with other programming languages, it seems desirable that the name of a package for a Python module contains the word @code{python}."
msgstr "В настоящее время мы поставляем пакеты Python 2 и Python 3 через переменную Scheme под именами @code{python-2} и @code{python} в соответствии с @ref{Version Numbers}. Чтобы предотвратить путаницу и конфликты имён с другими языками программирования, желательно, чтобы имена пакетов с модулями Python содержали слово @code{python}."

msgid "Some modules are compatible with only one version of Python, others with both.  If the package Foo is compiled with Python 3, we name it @code{python-foo}.  If it is compiled with Python 2, we name it @code{python2-foo}.  Python 2 packages are being removed from the distribution; please do no not submit any new Python 2 packages."
msgstr "Некоторые модули совместимы только с одной версией Python, другие - с обеими. Если пакет Foo скомпилирован с Python 3, мы называем его @code{python-foo}. Если он скомпилирован с Python 2, мы называем его @code{python2-foo}. Пакеты Python 2 удаляются из дистрибутива; пожалуйста, не присылайте новые пакеты Python 2."

msgid "If a project already contains the word @code{python}, we drop this; for instance, the module python-dateutil is packaged under the names @code{python-dateutil} and @code{python2-dateutil}.  If the project name starts with @code{py} (e.g.@: @code{pytz}), we keep it and prefix it as described above."
msgstr "Если проект уже содержит слово @code{python}, оно отбрасывается; например, модуль python-dateutil упаковывается под именем @code{python-dateutil} и @code{python2-dateutil}. Если имя проекта начинается с @code{py} (т.е.@:  @code{pytz}), мы оставляем такое имя и добавляем префикс, как это описано выше."

msgid "Currently there are two different build systems for Python packages in Guix: @var{python-build-system} and @var{pyproject-build-system}.  For the longest time, Python packages were built from an informally specified @file{setup.py} file.  That worked amazingly well, considering Python's success, but was difficult to build tooling around.  As a result, a host of alternative build systems emerged and the community eventually settled on a @url{https://peps.python.org/pep-0517/, formal standard} for specifying build requirements.  @var{pyproject-build-system} is Guix's implementation of this standard.  It is considered ``experimental'' in that it does not yet support all the various PEP-517 @emph{build backends}, but you are encouraged to try it for new Python packages and report any problems.  It will eventually be deprecated and merged into @var{python-build-system}."
msgstr "В настоящий момент в Guix  существует две системы сборки для пакетов  Python: @var{python-build-system} and @var{pyproject-build-system}.  В течение долгого времени, пакеты  Python собирались из файла @file{setup.py} file, для которого нет официальной спецификации. Это работало удивительно прекрасно, учитывая успех языка Python, но при такого подходе было тяжело построить инструментаж.  В конечном итоге, появилось несколько альтернативных систем сборки, и сообщество в конце концов сошлось на @url{https://peps.python.org/pep-0517/, формальном стандарте} для описания требований сборки.  Система @var{pyproject-build-system} является Guixовским воплощением этого стандарта.  Она считается ``экспериментальной'' в том смысле, что ещё не поддерживает все из различных @emph{бэкендов сборки} PEP-517, но мы поощряем её использование для новых пакетов Python, и просим сообщать об обнаруженных проблемах.  Рано или поздно она будет упразднена и объединена в @var{python-build-system}."

msgid "Specifying Dependencies"
msgstr "Перечисление зависимостей"

msgid "inputs, for Python packages"
msgstr "входные данные, для пакетов Python"

msgid "Dependency information for Python packages is usually available in the package source tree, with varying degrees of accuracy: in the @file{pyproject.toml} file, the @file{setup.py} file, in @file{requirements.txt}, or in @file{tox.ini} (the latter mostly for test dependencies)."
msgstr "Информация о зависимостях для пакетов Python обычно находится в исходном коде пакета, с различной степенью точности: в файлах @file{pyproject.toml}, @file{setup.py}, @file{requirements.txt}, и в файле @file{tox.ini} (в последнем указываются в основном зависимости для выполнения тестов)."

msgid "Your mission, when writing a recipe for a Python package, is to map these dependencies to the appropriate type of ``input'' (@pxref{package Reference, inputs}).  Although the @code{pypi} importer normally does a good job (@pxref{Invoking guix import}), you may want to check the following check list to determine which dependency goes where."
msgstr "При написании рецепта сборки пакета Python ваша задача --- сопоставить эти зависимости к должному типу ``input'' (@pxref{package Reference, inputs}). Хотя импортёр @code{pypi} обычно отрабатывает хорошо (@pxref{Invoking guix import}), желательно пройтись по приведённому чек-листу, чтобы узнать, какая зависимости куда уходит."

msgid "We currently package Python with @code{setuptools} and @code{pip} installed per default.  This is about to change, and users are encouraged to use @code{python-toolchain} if they want a build environment for Python."
msgstr "В настоящее время мы поставляем Python с @code{setuptools} и @code{pip}, установленными по умолчанию. Это скоро изменится, и пользователям рекомендуется использовать @code{python-toolchain}, если нужно окружение сборки для Python."

msgid "@command{guix lint} will warn if @code{setuptools} or @code{pip} are added as native-inputs because they are generally not necessary."
msgstr "@command{guix lint} выдаст предупреждение, если @code{setuptools} или @code{pip} добавлены как native-inputs, поскольку они почти всегда не нужны."

msgid "Python dependencies required at run time go into @code{propagated-inputs}.  They are typically defined with the @code{install_requires} keyword in @file{setup.py}, or in the @file{requirements.txt} file."
msgstr "Зависимости Python, необходимые во время работы, идут в @code{propagated-inputs}. Они обычно определяются ключевым словом @code{install_requires} в @file{setup.py} или в файле @file{requirements.txt}."

msgid "Python packages required only at build time---e.g., those listed under @code{build-system.requires} in @file{pyproject.toml} or with the @code{setup_requires} keyword in @file{setup.py}---or dependencies only for testing---e.g., those in @code{tests_require} or @file{tox.ini}---go into @code{native-inputs}.  The rationale is that (1) they do not need to be propagated because they are not needed at run time, and (2) in a cross-compilation context, it's the ``native'' input that we'd want."
msgstr "Пакеты Python, необходимые только во время сборки, например, перечисленные в @code{build-system.requires} файла @file{pyproject.toml}, или с ключевым словом @code{setup_requires} в @file{setup.py}, или же зависимости, необходимые только для тестирования, как, например, в @code{setup_requires} или @file{tox.ini}, указываются, как @code{native-inputs}. Резон этого в том, что, во-первых, их не нужно передавать в конечный пакет, потому что они не нужны для его нормальной работы, а во-вторых, в контексте кросс-компиляции они и есть \"родные\" входные данные, которые там нужны."

msgid "Examples are the @code{pytest}, @code{mock}, and @code{nose} test frameworks.  Of course if any of these packages is also required at run-time, it needs to go to @code{propagated-inputs}."
msgstr "Примерами являются фреймворки тестирования @code{pytest}, @code{mock} и @code{nose}. Конечно, если какой-либо из этих пакетов также необходим во время запуска и работы, его следует указывать в @code{propagated-inputs}."

msgid "Anything that does not fall in the previous categories goes to @code{inputs}, for example programs or C libraries required for building Python packages containing C extensions."
msgstr "Всё, что не попало в предыдущие категории, указывается в @code{inputs}, например, программы или библиотеки C, необходимые для сборки пакетов, которые содержат расширения Python на C."

msgid "If a Python package has optional dependencies (@code{extras_require}), it is up to you to decide whether to add them or not, based on their usefulness/overhead ratio (@pxref{Submitting Patches, @command{guix size}})."
msgstr "Если у пакета Python есть необязательные зависимости (@code{extras_require}), решайте самостоятельно, нужно ли их добавлять, судя по отношению их пользы к накладным расходам (@pxref{Submitting Patches, @command{guix size}})."

msgid "perl"
msgstr "perl"

msgid "Perl programs standing for themselves are named as any other package, using the lowercase upstream name.  For Perl packages containing a single class, we use the lowercase class name, replace all occurrences of @code{::} by dashes and prepend the prefix @code{perl-}.  So the class @code{XML::Parser} becomes @code{perl-xml-parser}.  Modules containing several classes keep their lowercase upstream name and are also prepended by @code{perl-}.  Such modules tend to have the word @code{perl} somewhere in their name, which gets dropped in favor of the prefix.  For instance, @code{libwww-perl} becomes @code{perl-libwww}."
msgstr "Самостоятельные программы Perl именуются как и любой другой пакет, используя исходное имя в нижнем регистре. Для пакетов Perl, содержащих единственный класс, мы используем имя класса в нижнем регистре, заменяя все появления @code{::} на дефисы и добавляем приставку @code{perl-}. Так, класс @code{XML::Parser} становится @code{perl-xml-parser}. Модули, содержащие несколько классов, сохраняют свои изначальные имена в нижнем регистре и также имеют префикс @code{perl-}. Подобные модули имеют тенденцию писать слово @code{perl} где-либо в их имени, так что это слово удаляется в пользу префикса. Например, @code{libwww-perl} становится @code{perl-libwww}."

msgid "java"
msgstr "java"

msgid "Java programs standing for themselves are named as any other package, using the lowercase upstream name."
msgstr "Самостоятельные программы на Java именуются как и любой другой пакет, используя исходное им в нижнем регистре."

msgid "To avoid confusion and naming clashes with other programming languages, it is desirable that the name of a package for a Java package is prefixed with @code{java-}.  If a project already contains the word @code{java}, we drop this; for instance, the package @code{ngsjava} is packaged under the name @code{java-ngs}."
msgstr "Чтобы избежать путаницы и конфликтов наименований с другими языками программирования, желательно именовать пакет, поставляющий программу Java, с префиксом @code{java-}. Если проект уже содержит слово @code{java}, мы обрезаем его. Например, пакет @code{ngsjava} опакечивается под именем @code{java-ngs}."

msgid "For Java packages containing a single class or a small class hierarchy, we use the lowercase class name, replace all occurrences of @code{.} by dashes and prepend the prefix @code{java-}.  So the class @code{apache.commons.cli} becomes package @code{java-apache-commons-cli}."
msgstr "Для пакетов Java, содержащих отдельный класс или небольшую иерархию классов, мы используем имя в нижнем регистре, заменяя все появления @code{.} на дефисы, и указываем префикс @code{java-}. Так класс @code{apache.commons.cli} становится пакетом @code{java-apache-commons-cli}."

msgid "rust"
msgstr "rust"

msgid "Elm"
msgstr "Elm"

msgid "Elm applications can be named like other software: their names need not mention Elm."
msgstr "Приложения Elm могут называться так же, как и другие программы: в их именах не обязательно упоминать Elm."

msgid "To form the Guix package name from the upstream name, we follow a convention similar to Python packages (@pxref{Python Modules}), adding an @code{elm-} prefix unless the name would already begin with @code{elm-}."
msgstr "Для формирования имени пакета Guix из исходного, мы придерживаемся конвенции, похожей на конвенцию для пакетов Python (@pxref{Python Modules}), добавляя префикс @code{elm-}, если имя уже на него не начинается."

msgid "In many cases we can reconstruct an Elm package's upstream name heuristically, but, since conversion to a Guix-style name involves a loss of information, this is not always possible.  Care should be taken to add the @code{'upstream-name} property when necessary so that @samp{guix import elm} will work correctly (@pxref{Invoking guix import}). The most notable scenarios when explicitly specifying the upstream name is necessary are:"
msgstr "Во многих случаях мы можем эвристически восстановить имя пакета Elm, но, поскольку преобразование в имя в стиле Guix связано с потерей информации, это не всегда возможно.  Следует позаботиться о добавлении свойства @code{'upstream-name}, когда это необходимо, чтобы @samp{guix import elm} работал правильно (@pxref{Invoking guix import}). Наиболее заметными сценариями, когда необходимо явно указывать имя upstream, являются:"

msgid "When the @var{author} is @code{elm} and the @var{project} contains one or more hyphens, as with @code{elm/virtual-dom}; and"
msgstr "Когда @var{author} является @code{elm}, а @var{project} содержит один или несколько дефисов, как в случае @code{elm/virtual-dom}; и"

msgid "When the @var{author} contains hyphens or uppercase letters, as with @code{Elm-Canvas/raster-shapes}---unless the @var{author} is @code{elm-explorations}, which is handled as a special case, so packages like @code{elm-explorations/markdown} do @emph{not} need to use the @code{'upstream-name} property."
msgstr "Когда @var{author} содержит дефисы или заглавные буквы, как в @code{Elm-Canvas/raster-shapes}---если @var{author} не является @code{elm-explorations}, который обрабатывается как особый случай, поэтому такие пакеты как @code{elm-explorations/markdown} не @emph{not} должны использовать свойство @code{'upstream-name}."

msgid "The module @code{(guix build-system elm)} provides the following utilities for working with names and related conventions:"
msgstr "Модуль @code{(guix build-system elm)} предоставляет следующие утилиты для работы с именами и связанными с ними соглашениями:"

msgid "@var{hash} Returns a Git origin using the repository naming and tagging regime required for a published Elm package with the upstream name @var{elm-name} at version @var{version} with sha256 checksum @var{hash}."
msgstr "@var{hash} Возвращает Git origin используя формат именования репозитория и метки, необходимые для опубликованного пакет Elm с оригинальным именем @var{elm-name} в версии @var{version} с контрольной суммой sha256 @var{hash}."

msgid "For example:"
msgstr "Например:"

msgid ""
"(package\n"
"  (name \"elm-html\")\n"
"  (version \"1.0.0\")\n"
"  (source\n"
"   (elm-package-origin\n"
"    \"elm/html\"\n"
"    version\n"
"    (base32 \"15k1679ja57vvlpinpv06znmrxy09lbhzfkzdc89i01qa8c4gb4a\")))\n"
"  ...)\n"
msgstr ""
"(package\n"
"  (name \"elm-html\")\n"
"  (version \"1.0.0\")\n"
"  (source\n"
"   (elm-package-origin\n"
"    \"elm/html\"\n"
"    version\n"
"    (base32 \"15k1679ja57vvlpinpv06znmrxy09lbhzfkzdc89i01qa8c4gb4a\")))\n"
"  ...)\n"

msgid "Returns the Guix-style package name for an Elm package with upstream name @var{elm-name}."
msgstr "Возвращает название пакета в стиле Guix для Elm пакета с оригинальным названием @var{elm-name}."

msgid "Note that there is more than one possible @var{elm-name} for which @code{elm->package-name} will produce a given result."
msgstr "Обратите внимание, что существует более одного возможного @var{elm-name}, для которого @code{elm->package-name} выдаст заданный результат."

msgid "Given an Elm @var{package}, returns the possibly-inferred upstream name, or @code{#f} the upstream name is not specified via the @code{'upstream-name} property and can not be inferred by @code{infer-elm-package-name}."
msgstr "Получив имя пакета Elm @var{package}, возвращает (возможно выведенное) оригинальное имя, или @code{#f}, если оригинальное имя не указано через свойство @code{'upstream-name} и не может быть выведено с помощью @code{infer-elm-package-name}."

msgid "Given the @var{guix-name} of an Elm package, returns the inferred upstream name, or @code{#f} if the upstream name can't be inferred.  If the result is not @code{#f}, supplying it to @code{elm->package-name} would produce @var{guix-name}."
msgstr "Получив через @var{guix-name} имя пакета Elm, возвращает выведенное оригинальное имя, или @code{#f}, если его вывести нельзя. Если результат не @code{#f}, то передача его в @code{elm->package-name} вернёт обратно @var{guix-name}."

msgid "fonts"
msgstr "шрифты"

msgid "For fonts that are in general not installed by a user for typesetting purposes, or that are distributed as part of a larger software package, we rely on the general packaging rules for software; for instance, this applies to the fonts delivered as part of the X.Org system or fonts that are part of TeX Live."
msgstr "Для шрифтов, которые обычно не устанавливаются пользователем для печати, или распространяемые как часть большего пакета программного обеспечения, мы применяем обычные правила опакечивания программного обеспечения. Например, это относится к шрифтам, поставляемым как часть системы X.Org, или шрифтов TeX Live."

msgid "To make it easier for a user to search for fonts, names for other packages containing only fonts are constructed as follows, independently of the upstream package name."
msgstr "Чтобы облегчить пользовательский поиск шрифтов, имена пакетов, содержащих только шрифты, создаются следующим образом, независимо от изначального имени пакета."

msgid "The name of a package containing only one font family starts with @code{font-}; it is followed by the foundry name and a dash @code{-} if the foundry is known, and the font family name, in which spaces are replaced by dashes (and as usual, all upper case letters are transformed to lower case).  For example, the Gentium font family by SIL is packaged under the name @code{font-sil-gentium}."
msgstr "Имя пакета, содержащего только одно семейство шрифтов, начинается с @code{font-}; далее идёт имя кузницы и дефис @code{-}, если имя кузницы известно, а затем - имя семейства шрифтов, в котором пробелы заменяются дефисами (и обычно все буквы в верхнем регистре заменяются на нижний регистр). Например, семейство шрифтов Gentium от SIL опакечивается под именем @code{font-sil-gentium}."

msgid "For a package containing several font families, the name of the collection is used in the place of the font family name.  For instance, the Liberation fonts consist of three families, Liberation Sans, Liberation Serif and Liberation Mono.  These could be packaged separately under the names @code{font-liberation-sans} and so on; but as they are distributed together under a common name, we prefer to package them together as @code{font-liberation}."
msgstr "Пакет с несколькими семействами шрифтов имеет в названии имя коллекции вместо имени семейства. Например, шрифты Liberation состоят из трёх семейств: Liberation Sans, Liberation Serfif и Liberation Mono. Они могли бы опакечиваться отдельно под именами @code{font-liberation-sans} и так далее, но поскольку они распространяются вместе под общим именем, мы предпочитаем опакечивать их вместе как @code{font-liberation}."

msgid "In the case where several formats of the same font family or font collection are packaged separately, a short form of the format, prepended by a dash, is added to the package name.  We use @code{-ttf} for TrueType fonts, @code{-otf} for OpenType fonts and @code{-type1} for PostScript Type 1 fonts."
msgstr "В случае, когда несколько форматов из одного семейства шрифтов или коллекции шрифтов опакечены отдельно, в имени присутствует небольшая отметка с предваряющим дефисом. Мы используем @code{-ttf} для шрифтов TrueType, @code{-otf} - для шрифтов OpenType - и  @code{-type1} - для шрифтов PostScript Type 1."

msgid "In general our code follows the GNU Coding Standards (@pxref{Top,,, standards, GNU Coding Standards}).  However, they do not say much about Scheme, so here are some additional rules."
msgstr "В основном наш код следует стандартам кодирования GNU (@pxref{Top,,, standards, GNU Coding Standards}). Они не сообщают много конкретного о Scheme, поэтому вот несколько дополнительных правил."

msgid "Programming Paradigm"
msgstr "Парадигма программирования"

msgid "How to compose your elements."
msgstr "Как компоновать элементы."

msgid "Modules"
msgstr "Модули"

msgid "Where to store your code?"
msgstr "Где размещать ваш код?"

msgid "Data Types and Pattern Matching"
msgstr "Типы данных и поиск по образцам"

msgid "Implementing data structures."
msgstr "Воплощение структур данных."

msgid "Formatting Code"
msgstr "Форматирование кода"

msgid "Writing conventions."
msgstr "Конвенции написания."

msgid "Scheme code in Guix is written in a purely functional style.  One exception is code that involves input/output, and procedures that implement low-level concepts, such as the @code{memoize} procedure."
msgstr "Код Scheme в Guix написан в чисто функциональном стиле. Одно исключение - это код, который вызывает ввод/вывод и процедуры, которые реализуют низкоуровневые концепции, как, для примера, процедура @code{memoize}."

msgid "Modules that deal with the broader GNU system should be in the @code{(gnu @dots{})} name space rather than @code{(guix @dots{})}."
msgstr "Модули, которые обращаются к системе GNU в более широком понимании, должны быть в пространстве имён @code{(gnu @dots{})}, а не @code{(guix @dots{})}."

msgid "The tendency in classical Lisp is to use lists to represent everything, and then to browse them ``by hand'' using @code{car}, @code{cdr}, @code{cadr}, and co.  There are several problems with that style, notably the fact that it is hard to read, error-prone, and a hindrance to proper type error reports."
msgstr "В классическом Lispе есть склонность к использованию списков для представления чего угодно, а затем гуляния по ним  \"вручную\", используя @code{car}, @code{cdr}, @code{cadr} и тому подобное. Такой стиль вызывает несколько осложнений, а особенно то, что он тяжело читается, подвержен ошибкам, и мешает компилятору правильно указывать на ошибки типов."

msgid "define-record-type*"
msgstr "define-record-type*"

msgid "match-record"
msgstr "match-record"

msgid "pattern matching"
msgstr "Поиск по образцам"

msgid "Guix code should define appropriate data types (for instance, using @code{define-record-type*}) rather than abuse lists.  In addition, it should use pattern matching, via Guile’s @code{(ice-9 match)} module, especially when matching lists (@pxref{Pattern Matching,,, guile, GNU Guile Reference Manual}); pattern matching for records is better done using @code{match-record} from @code{(guix records)}, which, unlike @code{match}, verifies field names at macro-expansion time."
msgstr "Код Guix должен определять подходящие типы данных (пользуясь, например, @code{define-record-type*}) вместо злоупотребления списками. Кроме того, он должен использовать поиск по образцам с помощью модуля Guile  @code{(ice-9 match)}, особенно для поиска по образцам в списках (@pxref{Pattern Matching,,, guile, GNU Guile Reference Manual}); для поиска по образцам в записях лучше использовать @code{match-record} из @code{(guix records)}, который, в отличие от @code{match}, проверяет названия полей  во время расширения макросов."

msgid "formatting code"
msgstr "форматирование кода"

msgid "coding style"
msgstr "стиль кодирования"

msgid "When writing Scheme code, we follow common wisdom among Scheme programmers.  In general, we follow the @url{https://mumble.net/~campbell/scheme/style.txt, Riastradh's Lisp Style Rules}.  This document happens to describe the conventions mostly used in Guile’s code too.  It is very thoughtful and well written, so please do read it."
msgstr "При написании кода на Scheme мы полагаемся на премудрость, общепринятую среди программистов Scheme. В основном мы следуем  @url{http://mumble.net/~campbell/scheme/style.txt, Правила лисповского стиля Riastradh}. Этот документ содержит большинство соглашений, которые часто встречаются и в исходном коде Guile тоже. Это очень продуманная и хорошо написанная работа, так что не поленитесь её прочесть."

msgid "Some special forms introduced in Guix, such as the @code{substitute*} macro, have special indentation rules.  These are defined in the @file{.dir-locals.el} file, which Emacs automatically uses.  Also note that Emacs-Guix provides @code{guix-devel-mode} mode that indents and highlights Guix code properly (@pxref{Development,,, emacs-guix, The Emacs-Guix Reference Manual})."
msgstr "Некоторые специальные формы, представленные в Guix, как например, макрос @code{substitute*}, имеют специальные правила отступов. Они определены в файле @file{.dir-locals.el}, которые Emacs использует автоматически. Также заметьте, что Emacs-Guix предоставляет режим @code{guix-devel-mode}, который вставляет отступы и подсвечивает код Guix должным образом (@pxref{Development,,, emacs-guix, The Emacs-Guix Reference Manual})."

msgid "indentation, of code"
msgstr "отступы, в коде"

msgid "formatting, of code"
msgstr "Форматирование, кода"

msgid "If you do not use Emacs, please make sure your editor knows these rules.  To automatically indent a package definition, you can also run:"
msgstr "Если вы не пользуетесь Emacs, пожалуйста убедитесь, что ваш редактор знает эти правила. Для автоматической расстановки отступов в определении пакета можно запустить:"

msgid "./pre-inst-env guix style @var{package}\n"
msgstr "./pre-inst-env guix style @var{package}\n"

msgid "@xref{Invoking guix style}, for more information."
msgstr "@xref{Invoking guix style} для дополнительной информации."

msgid "We require all top-level procedures to carry a docstring.  This requirement can be relaxed for simple private procedures in the @code{(guix build @dots{})} name space, though."
msgstr "Мы требуем, чтобы все процедуры верхнего уровня содержали строку документации, хотя это требование может не учитываться для простых приватных процедур в пространстве имён @code{(guix build @dots{})}."

msgid "Procedures should not have more than four positional parameters.  Use keyword parameters for procedures that take more than four parameters."
msgstr "Процедуры должны иметь не более четырёх позиционных параметров. Передавайте параметры по ключевым словам в процедурах, которые принимают более четырёх аргументов."

msgid "Please write commit logs in the ChangeLog format (@pxref{Change Logs,,, standards, GNU Coding Standards}); you can check the commit history for examples."
msgstr "Пожалуйста, пишите логи коммита в формате ChangeLog (@pxref{Change Logs,,, standards, GNU Coding Standards}); для примеров загляните в историю коммитов."

msgid "You can help make the review process more efficient, and increase the chance that your patch will be reviewed quickly, by describing the context of your patch and the impact you expect it to have.  For example, if your patch is fixing something that is broken, describe the problem and how your patch fixes it.  Tell us how you have tested your patch.  Will users of the code changed by your patch have to adjust their workflow at all? If so, tell us how.  In general, try to imagine what questions a reviewer will ask, and answer those questions in advance."
msgstr "Вы можете помочь сделать процесс рассмотрения более эффективным и увеличить вероятность того, что ваш патч будет быстро рассмотрен, описав контекст вашего патча и влияние, которое вы ожидаете от него.  Например, если ваш патч исправляет что-то сломанное, опишите проблему и то, как ваш патч ее устраняет.  Расскажите, как вы протестировали свой патч.  Придется ли пользователям кода, измененного вашим патчем, вносить какие-либо изменения в свой рабочий процесс? Если да, расскажите, как.  В целом, постарайтесь представить, какие вопросы задаст рецензент, и ответьте на них заранее."

msgid "Before submitting a patch that adds or modifies a package definition, please run through this check list:"
msgstr "Перед отправкой патча, который добавляет или изменяет описание пакета, пожалуйста, выполните следующие проверки:"

msgid "If the authors of the packaged software provide a cryptographic signature for the release tarball, make an effort to verify the authenticity of the archive.  For a detached GPG signature file this would be done with the @code{gpg --verify} command."
msgstr "Если авторы пакета программного обеспечения предоставляют криптографическую подпись для архива релиза, не поленитесь проверить подлинность архива. Для файла отделённой GPG-подписи это можно сделать командой @code{gpg --verify}."

msgid "Take some time to provide an adequate synopsis and description for the package.  @xref{Synopses and Descriptions}, for some guidelines."
msgstr "Потратьте немного времени, чтобы предоставить адекватное краткое описание и полное описание пакета. Смотрите @xref{Synopses and Descriptions} для подробностей."

msgid "Run @command{guix lint @var{package}}, where @var{package} is the name of the new or modified package, and fix any errors it reports (@pxref{Invoking guix lint})."
msgstr "Запустите @command{guix lint @var{package}}, где @var{package} - это имя нового или изменённого пакета, и устраните любые ошибки из отчёта (@pxref{Invoking guix lint})."

msgid "Run @command{guix style @var{package}} to format the new package definition according to the project's conventions (@pxref{Invoking guix style})."
msgstr "Запустите @command{guix style @var{package}} для проверки нового определения пакетов в соответствии с соглашениями проекта (@pxref{Invoking guix style})."

msgid "We recommend you also try building the package on other supported platforms.  As you may not have access to actual hardware platforms, we recommend using the @code{qemu-binfmt-service-type} to emulate them.  In order to enable it, add the @code{virtualization} service module and the following service to the list of services in your @code{operating-system} configuration:"
msgstr "Мы рекомендуем вам также попробовать собрать пакет на других поддерживаемых платформах. Поскольку у вас может не быть доступа к реальным аппаратным платформам, мы рекомендуем использовать @code{qemu-binfmt-service-type}, чтобы эмулировать их. Для того, чтобы включить эмуляцию, добавьте модуль сервиса @code{virtualization} и следующий сервис в список сервисов @code{operating-system} в вашей конфигурации:"

msgid ""
"(service qemu-binfmt-service-type\n"
" (qemu-binfmt-configuration\n"
"   (platforms (lookup-qemu-platforms \"arm\" \"aarch64\"))))\n"
msgstr ""
"(service qemu-binfmt-service-type\n"
" (qemu-binfmt-configuration\n"
"   (platforms (lookup-qemu-platforms \"arm\" \"aarch64\"))))\n"

msgid "Then reconfigure your system."
msgstr "После этого запустите переконфигурирование системы."

msgid "You can then build packages for different platforms by specifying the @code{--system} option.  For example, to build the \"hello\" package for the armhf or aarch64 architectures, you would run the following commands, respectively:"
msgstr "Теперь вы можете собирать пакеты под различные платформы, обозначив опцию @code{--system}. Например, чтобы собрать пакет \"hello\" для архитектур armhf, aarch64, или mips64 вы должны выполнить следующие команды, соответственно:"

msgid ""
"guix build --system=armhf-linux --rounds=2 hello\n"
"guix build --system=aarch64-linux --rounds=2 hello\n"
msgstr ""
"guix build --system=armhf-linux --rounds=2 hello\n"
"guix build --system=aarch64-linux --rounds=2 hello\n"

msgid "Make sure the package does not use bundled copies of software already available as separate packages."
msgstr "Убедитесь, что пакет не использует встроенные копии программ, которые уже доступны в отдельных пакетах."

msgid "Sometimes, packages include copies of the source code of their dependencies as a convenience for users.  However, as a distribution, we want to make sure that such packages end up using the copy we already have in the distribution, if there is one.  This improves resource usage (the dependency is built and stored only once), and allows the distribution to make transverse changes such as applying security updates for a given software package in a single place and have them affect the whole system---something that bundled copies prevent."
msgstr "Иногда пакеты включают копии исходных кодов своих зависимостей, исходя из удобства для пользователей. Однако как дистрибутив, мы должны убедиться, что подобные пакеты в конечном итоге используют копию, которую мы уже имеем в дистрибутиве, если таковая имеется. Это улучшает использование ресурсов (зависимость собирается и сохраняется лишь один раз) и позволяет дистрибутиву производить поперечные изменения, как например, применение обновлений безопасности для поставляемого пакета программного обеспечения в единственном месте, и эти изменения будут иметь силу во всей системе --- встроенные в пакет копии этому мешают."

msgid "determinism, of build processes"
msgstr "детерминизм, процесса сборки"

msgid "reproducible builds, checking"
msgstr "воспроизводимые сорки, проверка"

msgid "Check whether the package's build process is deterministic.  This typically means checking whether an independent build of the package yields the exact same result that you obtained, bit for bit."
msgstr "Проверьте, является ли процесс сборки пакета детеминистическим. Это обычно означает необходимость проверки того, что независимая сборка пакета производит точно такой же результат, которым вы располагаете, бит к биту."

msgid "A simple way to do that is by building the same package several times in a row on your machine (@pxref{Invoking guix build}):"
msgstr "Простой способ выполнить это - собрать такой же пакет несколько раз подряд на вашей машине (@pxref{Invoking guix build}):"

msgid "guix build --rounds=2 my-package\n"
msgstr "guix build --rounds=2 my-package\n"

msgid "This is enough to catch a class of common non-determinism issues, such as timestamps or randomly-generated output in the build result."
msgstr "Этого достаточно, чтобы отловить привычный набор проблем, нарушающих детерминизм, как например, отпечаток времени или случайно генерируемый выход на результате сборке."

msgid "Another option is to use @command{guix challenge} (@pxref{Invoking guix challenge}).  You may run it once the package has been committed and built by @code{@value{SUBSTITUTE-SERVER-1}} to check whether it obtains the same result as you did.  Better yet: Find another machine that can build it and run @command{guix publish}.  Since the remote build machine is likely different from yours, this can catch non-determinism issues related to the hardware---e.g., use of different instruction set extensions---or to the operating system kernel---e.g., reliance on @code{uname} or @file{/proc} files."
msgstr "Другой способ --- использовать @command{guix challenge} (@pxref{Invoking guix challenge}). Можно запустить это один раз, когда коммит пакета был отправлен, и собрать с помощью @code{@value{SUBSTITUTE-SERVER-1}}, чтобы проверить, что это даёт результат такой же, как у вас.  Ещё лучше найти другую машину, на которой можно собрать это и выполнить @command{guix publish}. Так как другая удалённая машина дл сборки отличается от вашей, это может выявить проблемы, нарушающие детерминизм, связанные с аппаратным обеспечением, то есть вызванные использованием различных расширений ассемблера или другого ядра операционной системы, то есть касательно файлов @code{uname} или @file{/proc}."

msgid "When writing documentation, please use gender-neutral wording when referring to people, such as @uref{https://en.wikipedia.org/wiki/Singular_they, singular ``they''@comma{} ``their''@comma{} ``them''}, and so forth."
msgstr "При написании документации, пожалуйста, используйте нейтральную по гендеру лексику, когда речь идёт о людях, как например, тут @uref{https://en.wikipedia.org/wiki/Singular_they, singular \"they\"@comma{} \"their\"@comma{} \"them\"} и т.д."

msgid "Verify that your patch contains only one set of related changes.  Bundling unrelated changes together makes reviewing harder and slower."
msgstr "Проверьте, что ваш патч содержит изменения, связанные только с одной темой. Связывая вместе изменения, касающиеся различных тем, делает обзор сложным и медленным."

msgid "Examples of unrelated changes include the addition of several packages, or a package update along with fixes to that package."
msgstr "Примеры несвязанных изменений включают, в том числе, добавление некоторых пакетов или обновление пакета вместе с исправлениями в этом пакете."

msgid "Please follow our code formatting rules, possibly running @command{guix style} script to do that automatically for you (@pxref{Formatting Code})."
msgstr "Пожалуйста, следуйте нашим правилам форматирования кода, по возможности запуская скрипт @command{guix style}, который сделает это автоматически (@pxref{Formatting Code})."

msgid "When possible, use mirrors in the source URL (@pxref{Invoking guix download}).  Use reliable URLs, not generated ones.  For instance, GitHub archives are not necessarily identical from one generation to the next, so in this case it's often better to clone the repository.  Don't use the @code{name} field in the URL: it is not very useful and if the name changes, the URL will probably be wrong."
msgstr "Если это возможно, используйте зеркала при указании URL исходников (@pxref{Invoking guix download}). Используйте надёжные URL'ы, а не сгенерированные. Например, архивы GitHub не являются идентичными между поколениями, так что в этом случае часто лучше клонировать репозиторий. Не используйте поле @code{name} в URL, это не очень удобно: если имя изменится, тогда URL будет неправильным."

msgid "Check if Guix builds (@pxref{Building from Git}) and address the warnings, especially those about use of undefined symbols."
msgstr "Проверьте, собирается ли Guix (@pxref{Building from Git}), и устраните предупреждения, особенно те, которые касаются использования неопределенных символов."

msgid "Make sure your changes do not break Guix and simulate a @command{guix pull} with:"
msgstr "Убедитесь, что ваши изменения не ломают Guix и имитируйте @command{guix pull} через:"

msgid "When posting a patch to the mailing list, use @samp{[PATCH] @dots{}} as a subject, if your patch is to be applied on a branch other than @code{master}, say @code{core-updates}, specify it in the subject like @samp{[PATCH core-updates] @dots{}}."
msgstr "При публикации патча в рассылке, используйте @samp{[PATCH] @dots{}} в теме письма. Если ваш патч должен быть применён на ветке отличной от @code{master}, допустим @code{core-updates}, укажите её в теме как @samp{[PATCH core-updates] @dots{}}."

msgid "Expect some delay when you submit your very first patch to @email{guix-patches@@gnu.org}. You have to wait until you get an acknowledgement with the assigned tracking number. Future acknowledgements should not be delayed."
msgstr "Когда отправите свой самый первый патч на @email{guix-patches@@gnu.org}, ожидайте некоторой задержки. Вам нужно подождать, пока вы не получите подтверждение с присвоенным номером отслеживания. Дальнейшие подтверждения не следует откладывать."

msgid "When a bug is resolved, please close the thread by sending an email to @email{@var{ISSUE_NUMBER}-done@@debbugs.gnu.org}."
msgstr "Когда баг исправлен, пожалуйста, закройте тему, отправив сообщение на @email{@var{ISSUE_NUMBER}-done@@debbugs.gnu.org}."

msgid "Configuring Git"
msgstr "Конфигурирование Git"

msgid "Sending a Patch Series"
msgstr "Отправка пакета исправлений"

msgid "git configuration"
msgstr "Конфигурирование Git"

msgid "git format-patch"
msgstr "git format-patch"

msgid "git send-email"
msgstr "git send-email"

msgid "If you have not done so already, you may wish to set a name and email that will be associated with your commits (@pxref{telling git your name, , Telling Git your name, git, Git User Manual}).  If you wish to use a different name or email just for commits in this repository, you can use @command{git config --local}, or edit @file{.git/config} in the repository instead of @file{~/.gitconfig}."
msgstr "Если вы ещё этого не сделали, вы можете установить имя и адрес электронной почты, которые будут ассоциированы с вашими коммитами (@pxref{telling git your name, , Telling Git your name, git, Git User Manual}).\tЕсли вы хотите использовать другое имя или почту только для коммитов в этом репозитории, вы можете использовать @command{git config --local} или отредактировать @file{.git/config} в репозитории вместо @file{~/.gitconfig}."

msgid "patch series"
msgstr "группы патчей"

msgid "Warning"
msgstr "Предупреждение"

msgid "Single Patches"
msgstr "Одиночные патчи"

msgid "The @command{git send-email} command is the best way to send both single patches and patch series (@pxref{Multiple Patches}) to the Guix mailing list.  Sending patches as email attachments may make them difficult to review in some mail clients, and @command{git diff} does not store commit metadata."
msgstr "Команда @command{git send-email} - лучший способ отправки как отдельных патчей, так и серий патчей (@pxref{Multiple Patches}) в список рассылки Guix.  Отправка патчей в виде вложений по электронной почте может затруднить их просмотр в некоторых почтовых клиентах, а команда @command{git diff} не хранит метаданные коммитов."

msgid "The following command will create a patch email from the latest commit, open it in your @var{EDITOR} or @var{VISUAL} for editing, and send it to the Guix mailing list to be reviewed and merged.  Assuming you have already configured Git according to @xref{Configuring Git}, you can simply use:"
msgstr "Следующая команда создаст письмо с патчем из последнего коммита, откроет его в вашем @var{EDITOR} или @var{VISUAL} для редактирования и отправит его в список рассылки Guix для рассмотрения и объединения.  Если вы уже настроили Git согласно @xref{Конфигурирование Git}, вы можете просто использовать:"

msgid "$ git send-email --annotate -1\n"
msgstr "$ git send-email --annotate -1\n"

msgid "bug reports, tracking"
msgstr "сообщения об ошибке, отслеживание"

msgid "patch submissions, tracking"
msgstr "отправка патча, отслеживание"

msgid "issue tracking"
msgstr "отслеживание заявок об ошибках"

msgid "Debbugs, issue tracking system"
msgstr "Debbugs, система отслеживания ошибок"

msgid "branching strategy"
msgstr "стратегия ветвления"

msgid "rebuild scheduling strategy"
msgstr "стратегия планирования пересборки"

msgid "A web interface (actually @emph{two} web interfaces!) are available to browse issues:"
msgstr "Для просмотра вопросов доступен веб-интерфейс (на самом деле даже @emph{два} веб-интерфейса):"

msgid "@url{https://bugs.gnu.org/guix} lists bug reports;"
msgstr "@url{https://gnupg.org/, GNU libgcrypt} списки отчётов об ошибках;"

msgid "@url{https://bugs.gnu.org/guix-patches} lists patch submissions."
msgstr "@url{https://bugs.gnu.org/guix-patches} списки патчей на рассмотрении."

msgid "To view discussions related to issue number @var{n}, go to @indicateurl{https://issues.guix.gnu.org/@var{n}} or @indicateurl{https://bugs.gnu.org/@var{n}}."
msgstr "Чтобы просмотреть обсуждения, связанные с номером проблемы @var{n}, перейдите на @indicateurl{https://issues.guix.gnu.org/@var{n}} или @indicateurl{https://bugs.gnu.org/@var{n}}."

msgid "If you use Emacs, you may find it more convenient to interact with issues using @file{debbugs.el}, which you can install with:"
msgstr "Если вы используете Emacs, вам может быть удобнее взаимодействовать с проблемами при помощи @file{debbugs.el}, который вы можете установить с помощью:"

msgid "guix install emacs-debbugs\n"
msgstr "guix install emacs-debbugs\n"

msgid "For example, to list all open issues on @code{guix-patches}, hit:"
msgstr "Например, чтбы уввидеть все открытые заявки на @code{guix-patches}, введите:"

msgid "@kbd{C-u} @kbd{M-x} debbugs-gnu @kbd{RET} @kbd{RET} guix-patches @kbd{RET} n y\n"
msgstr "@kbd{C-u} @kbd{M-x} debbugs-gnu @kbd{RET} @kbd{RET} guix-patches @kbd{RET} n y\n"

msgid "@xref{Top,,, debbugs-ug, Debbugs User Guide}, for more information on this nifty tool!"
msgstr "@xref{Top,,, debbugs-ug, Debbugs User Guide} для подробной информации об этом полезном инструменте!"

msgid "powerpc64le-linux"
msgstr "aarch64-linux"

msgid "reproducibility"
msgstr "воспроизводимость"

msgid "commit access, for developers"
msgstr "доступ для отправки коммитов, для разработчиков"

msgid "Committers are expected to have had some interactions with you as a contributor and to be able to judge whether you are sufficiently familiar with the project's practices.  It is @emph{not} a judgment on the value of your work, so a refusal should rather be interpreted as ``let's try again later''."
msgstr "Ожидается, что коммиттеры взаимодействовали с вами как c участником и могли судить, достаточно ли вы знакомы с проектом. Это @emph{не} суждение о ценности вашей работы, поэтому отказ следует скорее интерпретировать как «давайте попробуем позже»."

msgid "Send @email{guix-maintainers@@gnu.org} a message stating your intent, listing the three committers who support your application, signed with the OpenPGP key you will use to sign commits, and giving its fingerprint (see below).  See @uref{https://emailselfdefense.fsf.org/en/}, for an introduction to public-key cryptography with GnuPG."
msgstr "Отправьте @email{guix-keepers@@gnu.org} сообщение с указанием ваших намерений, перечисляя трех коммиттеров, поддерживающих вашу заявку, подписанных ключом OpenPGP, который вы будете использовать для подписания коммитов, и указав свой отпечаток (смотри ниже). Ознакомся с @uref{https://emailselfdefense.fsf.org/ru/}, чтобы познакомиться с криптографией с открытым ключом с помощью GnuPG."

msgid "Set up GnuPG such that it never uses the SHA1 hash algorithm for digital signatures, which is known to be unsafe since 2019, for instance by adding the following line to @file{~/.gnupg/gpg.conf} (@pxref{GPG Esoteric Options,,, gnupg, The GNU Privacy Guard Manual}):"
msgstr "Настройте GnuPG так, чтобы он никогда не использовал хэш-алгоритм SHA1 для цифровых подписей, который, как известно, небезопасен с 2019 года. Например, добавив следующую строку в @file{~/.gnupg/gpg.conf} (@pxref{GPG Esoteric Options,,, gnupg, The GNU Privacy Guard Manual}):"

msgid "digest-algo sha512\n"
msgstr "digest-algo sha512\n"

msgid "Maintainers ultimately decide whether to grant you commit access, usually following your referrals' recommendation."
msgstr "Маинтайнеры решают, предоставлять ли вам доступ к коммитам, обычно следуя рекомендациям ваших рефералов."

msgid "OpenPGP, signed commits"
msgstr "Коммиты, подписанные OpenPGP"

msgid "If and once you've been given access, please send a message to @email{guix-devel@@gnu.org} to say so, again signed with the OpenPGP key you will use to sign commits (do that before pushing your first commit).  That way, everyone can notice and ensure you control that OpenPGP key."
msgstr "Получив доступ, пожалуйста, отправьте сообщение на адрес @email{guix-devel@@gnu.org}, чтобы снова подписать его ключом OpenPGP, который вы будете использовать для подписания коммитов (сделайте это перед отправкой первого коммита). Таким образом, каждый может заметить и убедиться, что это ваш ключ OpenPGP."

msgid "Important"
msgstr "Важно"

msgid "Before you can push for the first time, maintainers must:"
msgstr "Перед тем, как вы отправите изменения впервые, сопровождающие должны:"

msgid "add your OpenPGP key to the @code{keyring} branch;"
msgstr "добавить ваш OpenPGP ключ в @code{keyring} ветку;"

msgid "add your OpenPGP fingerprint to the @file{.guix-authorizations} file of the branch(es) you will commit to."
msgstr "добавьте отпечаток вашего OpenPGP ключа в @file{.guix-authorizations} файл ветки (-ок), которые вы подпишите (commit)."

msgid "Make sure to read the rest of this section and... profit!"
msgstr "Обязательно прочтите остальную часть этого раздела!"

msgid "Maintainers are happy to give commit access to people who have been contributing for some time and have a track record---don't be shy and don't underestimate your work!"
msgstr "Маинтейнеры с радостью предоставят доступ к коммитам людям, которые внесли свой вклад в течение некоторого времени и имеют послужной список - не стесняйтесь и не недооценивайте свою работу!"

msgid "However, note that the project is working towards a more automated patch review and merging system, which, as a consequence, may lead us to have fewer people with commit access to the main repository.  Stay tuned!"
msgstr "Тем не менее, обратите внимание, что проект работает над созданием более автоматизированной системы проверки и объединения исправлений, что, как следствие, может привести к тому, что у нас будет меньше людей, имеющих доступ к главному репозиторию. Будьте на связи!"

msgid "All commits that are pushed to the central repository on Codeberg must be signed with an OpenPGP key, and the public key should be uploaded to your user account on Codeberg and to public key servers, such as @code{keys.openpgp.org}.  To configure Git to automatically sign commits, run:"
msgstr "Все коммиты, которые передаются в центральный репозиторий в Codeberg, должны быть подписаны ключом OpenPGP, а открытый ключ должен быть загружен в вашу учетную запись пользователя на Codeberg и на серверы открытых ключей, такие как @code{keys.openpgp.org}. Чтобы настроить Git для автоматической подписи коммитов, запустите:"

msgid ""
"git config commit.gpgsign true\n"
"\n"
msgstr ""
"git config commit.gpgsign true\n"
"\n"

msgid "To avoid accidentally pushing unsigned or signed with the wrong key commits to Codeberg, make sure to configure Git according to @xref{Configuring Git}."
msgstr "Чтобы избежать случайной отправки неподписанных или подписанных неверным ключом коммитов в Codeberg, обязательно настройте Git согласно @xref{Configuring Git}."

msgid "If you get commit access, please make sure to follow the policy below (discussions of the policy can take place on @email{guix-devel@@gnu.org})."
msgstr "Если вы получили доступ к коммиту, пожалуйста, следуйте приведенной ниже политике (обсуждение политики может проходить по адресу @email{guix-devel@@gnu.org})."

msgid "When pushing a commit on behalf of somebody else, please add a @code{Signed-off-by} line at the end of the commit log message---e.g., with @command{git am --signoff}.  This improves tracking of who did what."
msgstr "Когда вы отправляете коммит от имени кого-то другого, добавьте строку @code{Signed-off-by} в конце сообщения коммит лога---например, с @command{git am --signoff}. Это улучшает отслеживание того, кто что сделал."

msgid "When adding channel news entries (@pxref{Channels, Writing Channel News}), make sure they are well-formed by running the following command right before pushing:"
msgstr "При добавлении новостей канала (@pxref{Channels, Writing Channel News}), убедитесь, что они правильно сформированы, выполнив следующую команду прямо перед нажатием:"

msgid "make check-channel-news\n"
msgstr "make check-channel-news\n"

msgid "In order to reduce the possibility of mistakes, committers will have their Codeberg account removed from the Guix Codeberg project and their key removed from @file{.guix-authorizations} after 12 months of inactivity; they can ask to regain commit access by emailing the maintainers, without going through the vouching process."
msgstr "Чтобы уменьшить вероятность ошибок, учетные записи контрибьюторов будут удалены из проекта Guix на Codeberg, а их ключи - из @file{.guix-authorizations} после 12 месяцев бездействия; они могут попросить восстановить доступ к отправке коммитов, отправив электронное письмо мэйнтейнеров, не проходя через процесс подтверждения."

msgid "One last thing: the project keeps moving forward because committers not only push their own awesome changes, but also offer some of their time @emph{reviewing} and pushing other people's changes.  As a committer, you're welcome to use your expertise and commit rights to help other contributors, too!"
msgstr "И последнее: проект продолжает двигаться вперед, потому что коммиттеры не только вносят свои собственные потрясающие изменения, но также уделяют свое время на @emph{reviewing} и продвижение изменений других людей. Как коммиттер, вы можете использовать свой опыт и передавать права, чтобы помочь и другим участникам!"

msgid "It is sometimes desirable to update the @code{guix} package itself (the package defined in @code{(gnu packages package-management)}), for example to make new daemon features available for use by the @code{guix-service-type} service type.  In order to simplify this task, the following command can be used:"
msgstr "Иногда желательно обновить сам пакет @code{guix} (пакет определен в @code{(gnu packages package-management)}), например, чтобы сделать новые функции демона доступными для использования сервисом @code{guix-service-type}.  Чтобы упростить эту задачу, можно использовать следующую команду:"

msgid "make update-guix-package\n"
msgstr "make authenticate\n"

msgid "The @code{update-guix-package} make target will use the last known @emph{commit} corresponding to @code{HEAD} in your Guix checkout, compute the hash of the Guix sources corresponding to that commit and update the @code{commit}, @code{revision} and hash of the @code{guix} package definition."
msgstr "@code{update-guix-package} make target воспользуется последним известным коммитом, согласно @code{HEAD} вашего Guix checkout, вычислить хэш источников Guix, соответствующих этому коммиту и обновите @code{commit}, @code{revision} и хэш @code{guix}."

msgid "To validate that the updated @code{guix} package hashes are correct and that it can be built successfully, the following command can be run from the directory of your Guix checkout:"
msgstr "Чтобы убедиться, что обновленные хеш-суммы пакета @code{guix} верны и что он может быть успешно собран, следующая команда может быть запущена из каталога Guix (from the directory of your Guix checkout):"

msgid "./pre-inst-env guix build guix\n"
msgstr "./pre-inst-env guix build gnew --keep-failed\n"

msgid "To guard against accidentally updating the @code{guix} package to a commit that others can't refer to, a check is made that the commit used has already been pushed to the Codeberg-hosted Guix Git repository."
msgstr "Чтобы предотвратить случайное обновление пакета @code{guix} к коммиту, на которую другие не могут ссылаться, выполняется проверка того, что использованный коммит уже был отправлен в Git-репозиторий Guix, размещенный в Codeberg."

msgid "This check can be disabled, @emph{at your own peril}, by setting the @code{GUIX_ALLOW_ME_TO_USE_PRIVATE_COMMIT} environment variable.  When this variable is set, the updated package source is also added to the store.  This is used as part of the release process of Guix."
msgstr "Эту проверку можно отключить @emph{на свой страх и риск}, установив переменну окружения @code{GUIX_ALLOW_ME_TO_USE_PRIVATE_COMMIT}.  Когда эта переменная установлена, обновленный исходник пакета также добавляется в хранилище.  Это часть процесса выпуска Guix."

msgid "Services"
msgstr "Сервисы"

msgid "documentation"
msgstr "documentation"

msgid "translation"
msgstr "транзакции"

msgid "l10n"
msgstr "l10n"

msgid "i18n"
msgstr "i18n"

msgid "native language support"
msgstr "Работа с языками, поддерживаемыми gcc."

msgid "Writing code and packages is not the only way to provide a meaningful contribution to Guix.  Translating to a language you speak is another example of a valuable contribution you can make.  This section is designed to describe the translation process.  It gives you advice on how you can get involved, what can be translated, what mistakes you should avoid and what we can do to help you!"
msgstr "Написание кода и пакетов - не единственный способ внести значимый вклад в Guix.  Перевод на язык, на котором вы говорите---еще один пример вашего ценного вклада.  Этот раздел предназначен для описания процесса перевода. Здесь представлены советы о том, как вы можете принять участие, что можно перевести, каких ошибок следует избегать и что мы можем сделать, чтобы вам помочь!"

msgid "Some of the software packaged in Guix also contain translations.  We do not host a translation platform for them.  If you want to translate a package provided by Guix, you should contact their developers or find the information on their website.  As an example, you can find the homepage of the @code{hello} package by typing @command{guix show hello}.  On the ``homepage'' line, you will see @url{https://www.gnu.org/software/hello/} as the homepage."
msgstr "Некоторое программное обеспечение, упакованное в Guix, также содержит переводы.  Мы не хостим для них платформу для перевода.  Если вы хотите перевести пакет, предоставленный Guix, вам следует связаться с их разработчиками или найти информацию на их веб-сайтах.  Например, вы можете найти домашнюю страницу пакета @code{hello}, набрав @command{guix show hello}. В строке ``домашняя страница'' вы увидите @url{https://www.gnu.org/software/hello/} в качестве домашней страницы."

msgid "Many GNU and non-GNU packages can be translated on the @uref{https://translationproject.org,Translation Project}.  Some projects with multiple components have their own platform.  For instance, GNOME has its own platform, @uref{https://l10n.gnome.org/,Damned Lies}."
msgstr "Многие пакеты GNU и не-GNU можно перевести на @uref{https: //translationproject.org,Translation Project}.  Некоторые проекты с несколькими компонентами имеют собственную платформу.  Например, GNOME имеет собственную платформу @uref{https://l10n.gnome.org/,Damned Lies}."

msgid "Guix has five components hosted on Weblate."
msgstr "Guix состоит из пяти компонентов, размещенных на Weblate."

msgid "@code{guix} contains all the strings from the Guix software (the"
msgstr "@code{guix} содержит все строки из программного обеспечения Guix ("

msgid "guided system installer, the package manager, etc), excluding packages."
msgstr "установщик системы, менеджер пакетов и т.д.), за исключением пакетов."

msgid "@code{packages} contains the synopsis (single-sentence description"
msgstr "@code{packages} содержит синопсис (описание пакета из одного предложения"

msgid "of a package) and description (longer description) of packages in Guix."
msgstr ") и (более подробное) описание пакетов в Guix."

msgid "@code{website} contains the official Guix website, except for"
msgstr "@code{website} содержит официальный сайт Guix, за исключением"

msgid "blog posts and multimedia content."
msgstr "сообщения в блогах и мультимедийный контент."

msgid "@code{documentation-manual} corresponds to this manual."
msgstr "@code{documentation-manual} соответствует этому руководству."

msgid "@code{documentation-cookbook} is the component for the cookbook."
msgstr "@code{documentation-cookbook} - компонент для поваренной книги."

msgid "General Directions"
msgstr "поколения"

msgid "Like lots of other free software packages, Guix uses @uref{https://www.gnu.org/software/gettext,GNU Gettext} for its translations, with which translatable strings are extracted from the source code to so-called PO files."
msgstr "Как и многие другие бесплатные программные пакеты, Guix использует @uref{https://www.gnu.org/software/gettext,GNU Gettext} для своих переводов, с помощью которых переводимые строки извлекаются из исходного кода в так называемые PO-файлы."

msgid "Even though PO files are text files, changes should not be made with a text editor but with PO editing software.  Weblate integrates PO editing functionality.  Alternatively, translators can use any of various free-software tools for filling in translations, of which @uref{https://poedit.net/,Poedit} is one example, and (after logging in)  @uref{https://docs.weblate.org/en/latest/user/files.html,upload} the changed file.  There is also a special @uref{https://www.emacswiki.org/emacs/PoMode,PO editing mode} for users of GNU Emacs.  Over time translators find out what software they are happy with and what features they need."
msgstr "Несмотря на то, что файлы PO являются текстовыми файлами, изменения следует вносить не с помощью текстового редактора, а с помощью программного обеспечения для редактирования PO.  Weblate интегрирует функции редактирования PO.  В качестве альтернативы переводчики могут использовать любой из различных бесплатных программных инструментов для заполнения переводов, одним из примеров которых является @uref{https://poedit.net/,Poedit} и (после входа в систему) @uref{https://docs.weblate.org/en/latest/user/files.html, загрузить} измененный файл.  Существует также специальный @uref {https://www.emacswiki.org/emacs/PoMode,PO режим редактирования} для пользователей GNU Emacs.  Со временем переводчики узнают, какое программное обеспечение им нравится и какие функции им нужны."

msgid "On Weblate, you will find various links to the editor, that will show various subsets (or all) of the strings.  Have a look around and at the @uref{https://docs.weblate.org/en/latest/,documentation} to familiarize yourself with the platform."
msgstr "На Weblate вы найдете различные ссылки на редактор, который покажет различные подмножества (или все) строк (-и).  Посмотрите вокруг и на @uref{https://docs.weblate.org/en/latest/,documentation}, чтобы ознакомиться с платформой."

msgid "Translation Components"
msgstr "Компоненты перевода"

msgid "In this section, we provide more detailed guidance on the translation process, as well as details on what you should or should not do.  When in doubt, please contact us, we will be happy to help!"
msgstr "В этом разделе мы даем более подробные инструкции по процессу перевода, а также подробности о том, что вам следует или не следует делать.  В случае сомнений свяжитесь с нами, мы будем рады помочь!"

msgid "As an example, you cannot translate @samp{package '~a' has been superseded by '~a'} by @samp{'~a' supersedes package '~a'}, because the meaning would be reversed.  If @var{foo} is superseded by @var{bar}, the translation would read @samp{'foo' supersedes package 'bar'}.  To work around this problem, it is possible to use more advanced formatting to select a given piece of data, instead of following the default English order.  @xref{Formatted Output,,, guile, GNU Guile Reference Manual}, for more information on formatting in Guile."
msgstr "Например, вы не можете перевести @samp{package '~a' has been superseded by '~a'} на @samp{'~a' supersedes package '~a'}, потому что значение будет обратным.  Если @var{foo} заменяется на @var{bar}, перевод будет выглядеть как @samp{'foo' заменяется пакетом 'bar'}.  Чтобы обойти эту проблему, можно использовать более сложное форматирование для выбора заданного фрагмента данных вместо того, чтобы следовать английскому порядку по умолчанию.  См. @ref{Formatted Output,,, guile, GNU Guile Reference Manual}, для получения дополнительной информации о форматировании в Guile."

msgid "packages"
msgstr "пакеты"

msgid "Package descriptions occasionally contain Texinfo markup (@pxref{Synopses and Descriptions}).  Texinfo markup looks like @samp{@@code@{rm -rf@}}, @samp{@@emph@{important@}}, etc.  When translating, please leave markup as is."
msgstr "Описания пакетов иногда содержат разметку Texinfo (@pxref{Synopses and Descriptions}).  Разметка Texinfo выглядит как @samp{@@code@{rm -rf@}}, @samp{@@emph@{important@}} и т.д.  При переводе оставляйте разметку как есть."

msgid "documentation-manual and documentation-cookbook"
msgstr "documentation-manual and documentation-cookbook"

msgid "The first step to ensure a successful translation of the manual is to find and translate the following strings @emph{first}:"
msgstr "Первый шаг к успешному переводу руководства---найти и перевести следующие строки @emph{первыми}:"

msgid "@code{version.texi}: Translate this string as @code{version-xx.texi},"
msgstr "@code{version.texi}: переведите эту строку как @code{version-xx.texi},"

msgid "where @code{xx} is your language code (the one shown in the URL on weblate)."
msgstr "где @code{xx}---код вашего языка (тот, который показан в URL-адресе на weblate)."

msgid "@code{contributing.texi}: Translate this string as"
msgstr "@code{contributing.texi}: переведите эту строку как"

msgid "@code{contributing.xx.texi}, where @code{xx} is the same language code."
msgstr "@code{contributing.xx.texi}, где @code {xx} - код того же языка."

msgid "@code{Top}: Do not translate this string, it is important for Texinfo."
msgstr "@code{Top}: Не переводите эту строку, это важно для Texinfo."

msgid "If you translate it, the document will be empty (missing a Top node).  Please look for it, and register @code{Top} as its translation."
msgstr "Если вы переведете его, документ будет пустым (missing a Top node).  Найдите его и зарегистрируйте @code{Top} в качестве его перевода."

msgid "Translating these strings first ensure we can include your translation in the guix repository without breaking the make process or the @command{guix pull} machinery."
msgstr "Перевод этих строк гарантирует, что мы сможем включить ваш перевод в репозиторий guix, не нарушая процесс make или механизм @command{guix pull}."

msgid "When translating references from the cookbook to the manual, you need to replace the name of the manual and the name of the section.  For instance, to translate @code{@@pxref@{Defining Packages,,, guix, GNU Guix Reference Manual@}}, you would replace @code{Defining Packages} with the title of that section in the translated manual @emph{only} if that title is translated.  If the title is not translated in your language yet, do not translate it here, or the link will be broken.  Replace @code{guix} with @code{guix.xx} where @code{xx} is your language code.  @code{GNU Guix Reference Manual} is the text of the link.  You can translate it however you wish."
msgstr "При переводе ссылок из cookbook в мануал нужно заменить название мануала и название раздела.  Например, чтобы перевести @code{@@pxref@{Defining Packages,,, guix, GNU Guix Reference Manual@}}, вы должны заменить@code{Defining Packages} заголовком этого раздела в переведенном руководстве @emph{только} если это название переведено.  Если название еще не переведено на ваш язык, не переводите его здесь, иначе ссылка будет неработающей.  Замените @code{guix} на @code{guix.xx}, где @code{xx} - код вашего языка.  @code{GNU Guix Reference Manual}---это текст ссылки.  Вы можете перевести его как хотите."

msgid "website"
msgstr "официальный веб-сайт"

msgid "The website pages are written using SXML, an s-expression version of HTML, the basic language of the web.  We have a process to extract translatable strings from the source, and replace complex s-expressions with a more familiar XML markup, where each markup is numbered.  Translators can arbitrarily change the ordering, as in the following example."
msgstr "Страницы веб-сайта написаны с использованием SXML, версии HTML (основного языка Интернета) с s-выражениями.  У нас есть процесс извлечения переводимых строк из источника и замены сложных s-выражений на более знакомую разметку XML, где каждая разметка пронумерована.  Переводчики могут произвольно изменять порядок, как в следующем примере."

msgid ""
"#. TRANSLATORS: Defining Packages is a section name\n"
"#. in the English (en) manual.\n"
"#: apps/base/templates/about.scm:64\n"
"msgid \"Packages are <1>defined<1.1>en</1.1><1.2>Defining-Packages.html</1.2></1> as native <2>Guile</2> modules.\"\n"
"msgstr \"Pakete werden als reine <2>Guile</2>-Module <1>definiert<1.1>de</1.1><1.2>Pakete-definieren.html</1.2></1>.\"\n"
msgstr ""
"#. TRANSLATORS: Defining Packages is a section name\n"
"#. in the English (en) manual.\n"
"#: apps/base/templates/about.scm:64\n"
"msgid \"Packages are <1>defined<1.1>en</1.1><1.2>Defining-Packages.html</1.2></1> as native <2>Guile</2> modules.\"\n"
"msgstr \"Pakete werden als reine <2>Guile</2>-Module <1>definiert<1.1>de</1.1><1.2>Pakete-definieren.html</1.2></1>.\"\n"

msgid "Note that you need to include the same markups.  You cannot skip any."
msgstr "Обратите внимание, что вам нужно включить такие же разметки.  Вы не можете ничего пропустить."

msgid "In case you make a mistake, the component might fail to build properly with your language, or even make guix pull fail.  To prevent that, we have a process in place to check the content of the files before pushing to our repository.  We will not be able to update the translation for your language in Guix, so we will notify you (through weblate and/or by email) so you get a chance to fix the issue."
msgstr "Если вы допустили ошибку, компонент может не работать должным образом с вашим языком или даже привести к сбою guix pull.  Чтобы предотвратить это, у нас есть процесс проверки содержимого файлов перед отправкой в наш репозиторий.  Если, мы не сможем обновить перевод для вашего языка в Guix, мы уведомим вас (через веб-сайт и/или по электронной почте), чтобы решить проблему."

msgid "Outside of Weblate"
msgstr "Вне Weblate"

msgid "Currently, some parts of Guix cannot be translated on Weblate, help wanted!"
msgstr "В настоящее время некоторые части Guix не могут быть переведены на Weblate---требуется помощь!"

msgid "@command{guix pull} news can be translated in @file{news.scm}, but is not"
msgstr "@command{guix pull} новости можно перевести в @file{news.scm}, но не"

msgid "translated."
msgstr "транзакции"

msgid "@url{https://codeberg.org/guix/data-service, Guix Data Service}"
msgstr "@url{https://codeberg.org/guix/data-service, Служба данных Guix}"

msgid "@url{https://codeberg.org/guix/mumi, mumi}"
msgstr "@url{https://codeberg.org/guix/mumi, mumi}"

msgid "@url{https://codeberg.org/guix/nar-herder, Nar Herder}"
msgstr "@url{https://codeberg.org/guix/nar-herder, Nar Herder}"

msgid "@url{https://codeberg.org/guix/qa-frontpage, QA Frontpage}"
msgstr "@url{https://codeberg.org/guix/qa-frontpage, Заглавная страница ответов на вопросы}"

msgid "@url{https://codeberg.org/guix/maintenance.git/src/branch/master/hydra/}"
msgstr "@url{https://codeberg.org/guix/maintenance.git/src/branch/master/hydra/}"

msgid "@documentencoding UTF-8"
msgstr "@documentencoding UTF-8"

msgid "GNU Guix Reference Manual"
msgstr "Руководство по GNU Guix"

msgid "version.texi"
msgstr "version-ru.texi"

msgid "Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license is included in the section entitled ``GNU Free Documentation License''."
msgstr "Разрешено копирование, распространение и/или модификация этого документа на условиях лицензии свободной документации GNU (GNU FDL) версии 1.3 или любой более поздней версии, опубликованной Фондом свободного программного обеспечения (FSF), исключая неизменяемые секции, исключая тексты, размещенные на переплёте и задней стороне обложки. Копия лицензии включена в документ в разделе под названием \"GNU Free Documentation Licens\"."

msgid "System administration"
msgstr "Администрирование системы"

msgid "Guix: (guix)"
msgstr "Guix.ru: (guix.ru)"

msgid "Manage installed software and system configuration."
msgstr "Управление установленным ПО и настройка системы."

msgid "guix package: (guix)Invoking guix package"
msgstr "guix package: (guix.ru)Запуск guix package"

msgid "Installing, removing, and upgrading packages."
msgstr "Установка, удаление и обновление пакетов."

msgid "guix gc: (guix)Invoking guix gc"
msgstr "guix gc: (guix.ru)Запуск guix gc"

msgid "Reclaiming unused disk space."
msgstr "Освобождение неиспользуемого места на диске."

msgid "guix pull: (guix)Invoking guix pull"
msgstr "guix pull: (guix.ru)Запуск guix pull"

msgid "Update the list of available packages."
msgstr "Обновление списка доступных пакетов."

msgid "guix system: (guix)Invoking guix system"
msgstr "guix system: (guix.ru)Запуск guix system"

msgid "Manage the operating system configuration."
msgstr "Управление конфигурацией ОС."

msgid "guix deploy: (guix)Invoking guix deploy"
msgstr "guix deploy: (guix.ru)Запуск guix deploy"

msgid "Manage operating system configurations for remote hosts."
msgstr "Управление конфигурациями ОС на удалённых машинах."

msgid "Software development"
msgstr "Разработка программного обеспечения"

msgid "guix shell: (guix)Invoking guix shell"
msgstr "guix shell: (guix.ru)Запуск guix shell"

msgid "guix environment: (guix)Invoking guix environment"
msgstr "guix environment: (guix.ru)Запуск guix environment"

msgid "Building development environments with Guix."
msgstr "Сборка среды разработки с помощью Guix."

msgid "guix build: (guix)Invoking guix build"
msgstr "guix build: (guix.ru)Запуск guix build"

msgid "Building packages."
msgstr "Сборка пакетов."

msgid "guix pack: (guix)Invoking guix pack"
msgstr "guix pack: (guix.ru)Запуск guix pack"

msgid "Creating binary bundles."
msgstr "Создание бинарных пакетов."

msgid "Using the GNU Guix Functional Package Manager"
msgstr "Использование функционального пакетного менеджера GNU Guix"

msgid "The GNU Guix Developers"
msgstr "Разработчики GNU Guix"

msgid "Edition @value{EDITION} @* @value{UPDATED} @*"
msgstr "Ревизия @value{EDITION} @* @value{UPDATED} @*"

msgid "Top"
msgstr "Top"

msgid "GNU Guix"
msgstr "GNU Guix"

msgid "This document describes GNU Guix version @value{VERSION}, a functional package management tool written for the GNU system."
msgstr "В этом документе описывается GNU Guix версии @value{VERSION} — менеджер пакетов, написанный для системы GNU."

msgid "This manual is also available in Simplified Chinese (@pxref{Top,,, guix.zh_CN, GNU Guix参考手册}), French (@pxref{Top,,, guix.fr, Manuel de référence de GNU Guix}), German (@pxref{Top,,, guix.de, Referenzhandbuch zu GNU Guix}), Spanish (@pxref{Top,,, guix.es, Manual de referencia de GNU Guix}), Italian (@pxref{Top,,, guix.it, Manuale di riferimento di GNU Guix}), Brazilian Portuguese (@pxref{Top,,, guix.pt_BR, Manual de referência do GNU Guix}), and Russian (@pxref{Top,,, guix.ru, Руководство GNU Guix}).  If you would like to translate it in your native language, consider joining @uref{https://translate.codeberg.org/projects/guix/documentation-manual, Weblate} (@pxref{Translating Guix})."
msgstr "Это руководство доступно также на английском (@pxref{Top,,, guix, GNU Guix Reference Manual}), (упрощённом) китайском языке (@pxref{Top,,, guix.zh_CN, GNU Guix参考手册}), на французском (@pxref{Top,,, guix.fr, Manuel de référence de GNU Guix}), немецком (@pxref{Top,,, guix.de, Referenzhandbuch zu GNU Guix}), испанском (@pxref{Top,,, guix.es, Manual de referencia de GNU Guix}), итальянском (@pxref{Top,,, guix.it, Manuale di riferimento di GNU Guix}) и бразильский португальский (@pxref{Top,,, guix.pt_BR, Manual de referência do GNU Guix}) языках. Если вы хотите перевести его на свой язык, присоединяйтесь к @uref{https://translate.codeberg.org/projects/guix/documentation-manual, Weblate} (@pxref{Translating Guix})."

msgid "Introduction"
msgstr "Введение"

msgid "What is Guix about?"
msgstr "Что такое Guix?"

msgid "Installation"
msgstr "Установка"

msgid "Installing Guix."
msgstr "Установка Guix."

msgid "System Installation"
msgstr "Установка системы"

msgid "Installing the whole operating system."
msgstr "Полная установка операционной системы."

msgid "Getting Started"
msgstr "Начало работы"

msgid "Your first steps."
msgstr "Прервые шаги."

msgid "Package Management"
msgstr "Управление пакетами"

msgid "Package installation, upgrade, etc."
msgstr "Установка пакетов, обновление и т.д."

msgid "Channels"
msgstr "Каналы"

msgid "Customizing the package collection."
msgstr "Настройка коллекции пакетов."

msgid "Development"
msgstr "Разработка"

msgid "Guix-aided software development."
msgstr "Разработка программного обеспечения при поддержке Guix."

msgid "Programming Interface"
msgstr "Программный интерфейс"

msgid "Using Guix in Scheme."
msgstr "Использование Guix в Scheme."

msgid "Utilities"
msgstr "Утилиты"

msgid "Package management commands."
msgstr "Команды управления пакетами."

msgid "System Configuration"
msgstr "Настройка системы"

msgid "Configuring the operating system."
msgstr "Конфигурирование операционной системы."

msgid "Documentation"
msgstr "Документация"

msgid "Browsing software user manuals."
msgstr "Программы обзора пользовательских мануалов."

msgid "Installing Debugging Files"
msgstr "Установка файлов отладки"

msgid "Feeding the debugger."
msgstr "Запуск отладчика."

msgid "Security Updates"
msgstr "Обновления безопасности"

msgid "Deploying security fixes quickly."
msgstr "Быстрое применение исправлений безопасности."

msgid "Bootstrapping"
msgstr "Начальная загрузка"

msgid "GNU/Linux built from scratch."
msgstr "Сборка GNU/Linux с нуля."

msgid "Porting"
msgstr "Портирование"

msgid "Targeting another platform or kernel."
msgstr "Перевод на другую платформу или ядро."

msgid "Your help needed!"
msgstr "Нужна ваша помощь!"

msgid "Acknowledgments"
msgstr "Благодарности"

msgid "Thanks!"
msgstr "Спасибо!"

msgid "GNU Free Documentation License"
msgstr "Лицензия свободной документации GNU"

msgid "The license of this manual."
msgstr "Лицензия этого руководства."

msgid "Concept Index"
msgstr "Термины и указатели"

msgid "Concepts."
msgstr "Понятия."

msgid "Programming Index"
msgstr "Программный индекс"

msgid "Data types, functions, and variables."
msgstr "Структуры данных, функции и переменные."

msgid "--- The Detailed Node Listing ---"
msgstr "--- Детальный список записей ---"

msgid "Managing Software the Guix Way"
msgstr "Управление программным обеспечением Guix Way"

msgid "What's special."
msgstr "Что особенного."

msgid "GNU Distribution"
msgstr "Дистрибутив GNU"

msgid "The packages and tools."
msgstr "Пакеты и утилиты."

msgid "Binary Installation"
msgstr "Бинарная установка"

msgid "Getting Guix running in no time!"
msgstr "Запускаем Guix по-быстрому!"

msgid "Setting Up the Daemon"
msgstr "Настройка демона"

msgid "Preparing the build daemon's environment."
msgstr "Подготовка окружения демона сборки."

msgid "Invoking guix-daemon"
msgstr "Вызов guix-daemon"

msgid "Running the build daemon."
msgstr "Запуск демона сборки."

msgid "Application Setup"
msgstr "Установка приложения"

msgid "Application-specific setup."
msgstr "Установка в качестве приожения."

msgid "Upgrading Guix"
msgstr "Обновление Guix"

msgid "Upgrading Guix and its build daemon."
msgstr "Обновление Guix и этого службы сборки."

msgid "Build Environment Setup"
msgstr "Установка окружения сборки"

msgid "Preparing the isolated build environment."
msgstr "Подготовка отдельного окружения сборки."

msgid "Daemon Offload Setup"
msgstr "Установка демона разгрузки"

msgid "Offloading builds to remote machines."
msgstr "Разгрузка сборок по удалённым машинам."

msgid "SELinux Support"
msgstr "Поддержка SELinux"

msgid "Using an SELinux policy for the daemon."
msgstr "Использование политики SELinux для демона."

msgid "Limitations"
msgstr "Ограничения"

msgid "What you can expect."
msgstr "Что нужно учитывать."

msgid "Hardware Considerations"
msgstr "По поводу железа"

msgid "Supported hardware."
msgstr "Поддерживаемое аппаратное обеспечение."

msgid "USB Stick and DVD Installation"
msgstr "Установочная флеш и DVD"

msgid "Preparing the installation medium."
msgstr "Подготовка установочного носителя."

msgid "Preparing for Installation"
msgstr "Подготовка к установке"

msgid "Networking, partitioning, etc."
msgstr "Сеть, разметка диска и т.д."

msgid "Guided Graphical Installation"
msgstr "Графическая установка в GUI"

msgid "Easy graphical installation."
msgstr "Простая графическая установка."

msgid "Manual Installation"
msgstr "Ручная установка"

msgid "Manual installation for wizards."
msgstr "Ручная установка для магов."

msgid "After System Installation"
msgstr "После установки системы"

msgid "When installation succeeded."
msgstr "Когда установка завершилась успешно."

msgid "Installing Guix in a VM"
msgstr "Установка Guix на виртуальную машину"

msgid "Guix System playground."
msgstr "Площадка системы Guix."

msgid "Building the Installation Image"
msgstr "Сборка установочного образа"

msgid "How this comes to be."
msgstr "Как это происходит."

msgid "Keyboard Layout and Networking and Partitioning"
msgstr "Раскладка клавиатуры и работа с сетью и разбиение диска"

msgid "Initial setup."
msgstr "Начальная установка."

msgid "Proceeding with the Installation"
msgstr "В продолжении установки"

msgid "Installing."
msgstr "Установка."

msgid "Features"
msgstr "Особенности"

msgid "How Guix will make your life brighter."
msgstr "Как Guix делает жизнь ярче."

msgid "Invoking guix package"
msgstr "Вызов guix package"

msgid "Package installation, removal, etc."
msgstr "Установка пакетов, удаление и т.д."

msgid "Substitutes"
msgstr "Подстановки"

msgid "Downloading pre-built binaries."
msgstr "Скачивание собранных бинарников."

msgid "Packages with Multiple Outputs"
msgstr "Пакеты со множественным выходом"

msgid "Single source package, multiple outputs."
msgstr "Один исходный пакет, различные выходы."

msgid "Invoking guix gc"
msgstr "Вызов guix gc"

msgid "Running the garbage collector."
msgstr "Запуск сборщика мусора."

msgid "Invoking guix pull"
msgstr "Запуск guix pull"

msgid "Fetching the latest Guix and distribution."
msgstr "Закачка последнего Guix и дистрибуции."

msgid "Invoking guix time-machine"
msgstr "Вызов guix time-machine"

msgid "Running an older revision of Guix."
msgstr "Запуск более старых ревизий Guix."

msgid "Inferiors"
msgstr "Младшие версии"

msgid "Interacting with another revision of Guix."
msgstr "Взаимодействие с другими ревизиями Guix."

msgid "Invoking guix describe"
msgstr "Вызов guix describe"

msgid "Display information about your Guix revision."
msgstr "Отобразить информацию о ревизии Guix."

msgid "Invoking guix archive"
msgstr "Вызов guix archive"

msgid "Exporting and importing store files."
msgstr "Экспорт и импорт файлов склада."

msgid "One particular source of substitutes."
msgstr "Отдельный источник подстановок."

msgid "Substitute Server Authorization"
msgstr "Авторизация сервера подстановок"

msgid "How to enable or disable substitutes."
msgstr "Как включить или отключить подстановки."

msgid "Getting Substitutes from Other Servers"
msgstr "Получение заменителей с других серверов"

msgid "Substitute diversity."
msgstr "Разнообразие заменителей."

msgid "Substitute Authentication"
msgstr "Аутентификация подстановок"

msgid "How Guix verifies substitutes."
msgstr "Как Guix проверяет подстановки."

msgid "Proxy Settings"
msgstr "Настройки proxy"

msgid "How to get substitutes via proxy."
msgstr "Как получить подстановки через proxy."

msgid "Substitution Failure"
msgstr "Ошибки при подстановке"

msgid "What happens when substitution fails."
msgstr "Что происходит, когда подстановка завершается ошибкой."

msgid "On Trusting Binaries"
msgstr "Касательно проверенных бинарников"

msgid "How can you trust that binary blob?"
msgstr "Как можно доверять определённому бинарному блоку?"

msgid "Specifying Additional Channels"
msgstr "Указание дополнительных каналов"

msgid "Extending the package collection."
msgstr "Расширение коллекции пакетов."

msgid "Using a Custom Guix Channel"
msgstr "Использование отдельного канала Guix"

msgid "Using a customized Guix."
msgstr "Использование кастомизированного Guix."

msgid "Replicating Guix"
msgstr "Копирование Guix"

msgid "Running the @emph{exact same} Guix."
msgstr "Запуск @emph{exact same} Guix."

msgid "Channel Authentication"
msgstr "Аутентификация канала"

msgid "How Guix verifies what it fetches."
msgstr "Как Guix проверяет то, что получает."

msgid "Channels with Substitutes"
msgstr "Каналы с заменителями"

msgid "Using channels with available substitutes."
msgstr "Использование каналов с доступными заменителями."

msgid "Creating a Channel"
msgstr "Создание канала"

msgid "How to write your custom channel."
msgstr "Как написать собственный канал."

msgid "Package Modules in a Sub-directory"
msgstr "Пакетные модули в поддиректории"

msgid "Specifying the channel's package modules location."
msgstr "Задание расположения пакетных модулей канала."

msgid "Declaring Channel Dependencies"
msgstr "Объявление зависимостей канала"

msgid "How to depend on other channels."
msgstr "Как зависеть от других каналов."

msgid "Specifying Channel Authorizations"
msgstr "Указание авторизаций канала"

msgid "Defining channel authors authorizations."
msgstr "Авторизация авторов канала."

msgid "Primary URL"
msgstr "Основной URL"

msgid "Distinguishing mirror to original."
msgstr "Отличие зеркала от оригинала."

msgid "Writing Channel News"
msgstr "Написание новостей канала"

msgid "Communicating information to channel's users."
msgstr "Передача информации пользователям канала."

msgid "Invoking guix shell"
msgstr "Запуск guix shell"

msgid "Invoking guix environment"
msgstr "Запуск guix environment"

msgid "Setting up development environments."
msgstr "Настройка окружения сборки."

msgid "Invoking guix pack"
msgstr "Запуск guix pack"

msgid "Creating software bundles."
msgstr "Создание наборов программ."

msgid "The GCC toolchain"
msgstr "Тулчейн GCC"

msgid "Working with languages supported by GCC."
msgstr "Работа с языками, поддерживаемыми gcc."

msgid "Invoking guix git authenticate"
msgstr "Запуск guix git authenticate"

msgid "Authenticating Git repositories."
msgstr "Аутентификация Git репозиториев."

msgid "Package Modules"
msgstr "Пакетные модули"

msgid "Packages from the programmer's viewpoint."
msgstr "Пакеты с точки зрения программиста."

msgid "Defining Packages"
msgstr "Описание пакетов"

msgid "Defining new packages."
msgstr "Описание новых пакетов."

msgid "Customizing packages."
msgstr "Кастомизация пакетов."

msgid "Build Systems"
msgstr "Системы сборки"

msgid "Specifying how packages are built."
msgstr "Задание параметров сборки пакетов."

msgid "Build Phases"
msgstr "Фазы сборки"

msgid "Phases of the build process of a package."
msgstr "Фазы процесса сборки пакета."

msgid "Helpers for your package definitions and more."
msgstr "Импорт описаниий пакетов."

msgid "The Store"
msgstr "Хранилище"

msgid "Manipulating the package store."
msgstr "Работа с хранилищем пакетов."

msgid "Derivations"
msgstr "Деривации"

msgid "Low-level interface to package derivations."
msgstr "Низкоуровневый интерфейс дериваций пакетов."

msgid "The Store Monad"
msgstr "Устройство склада"

msgid "Purely functional interface to the store."
msgstr "Чисто функциональный интерфейс доступа к складу."

msgid "G-Expressions"
msgstr "G-Expressions"

msgid "Manipulating build expressions."
msgstr "Управление механизмом сборки."

msgid "Invoking guix repl"
msgstr "Запуск guix repl"

msgid "Programming Guix in Guile"
msgstr "Программирование Guix в Guile"

msgid "package Reference"
msgstr "ссылка на пакет"

msgid "The package data type."
msgstr "Тип данных package."

msgid "origin Reference"
msgstr "Интерфейс origin"

msgid "The origin data type."
msgstr "Тип данных origin."

msgid "Invoking guix build"
msgstr "Запуск guix build"

msgid "Building packages from the command line."
msgstr "Сборка пакетов в командной строке."

msgid "Invoking guix edit"
msgstr "Запуск guix edit"

msgid "Editing package definitions."
msgstr "Редактирование описания пакета."

msgid "Invoking guix download"
msgstr "Запуск guix download"

msgid "Downloading a file and printing its hash."
msgstr "Загрузка файла и вывод его хэша."

msgid "Invoking guix hash"
msgstr "Запуск guix hash"

msgid "Computing the cryptographic hash of a file."
msgstr "Вычисление криптографического хеша файла."

msgid "Invoking guix import"
msgstr "Запуск guix import"

msgid "Importing package definitions."
msgstr "Импорт описаниий пакетов."

msgid "Invoking guix refresh"
msgstr "Запуск guix refresh"

msgid "Updating package definitions."
msgstr "Обновление описаний пакетов."

msgid "Invoking guix lint"
msgstr "Запуск guix lint"

msgid "Finding errors in package definitions."
msgstr "Поиск ошибок в описаниях пакетов."

msgid "Invoking guix size"
msgstr "Запуск guix size"

msgid "Profiling disk usage."
msgstr "Обзор использования диска."

msgid "Invoking guix graph"
msgstr "Запуск guix graph"

msgid "Visualizing the graph of packages."
msgstr "Визуализация графа пакета."

msgid "Invoking guix publish"
msgstr "Запуск guix publish"

msgid "Sharing substitutes."
msgstr "Совместное использование подстановок."

msgid "Invoking guix challenge"
msgstr "Запуск guix challenge"

msgid "Challenging substitute servers."
msgstr "Соперничающие серверы подстановок."

msgid "Invoking guix copy"
msgstr "Запуск guix copy"

msgid "Copying to and from a remote store."
msgstr "Копирование из и в удалённый склад."

msgid "Invoking guix container"
msgstr "Запуск guix container"

msgid "Process isolation."
msgstr "Изоляция процесса."

msgid "Invoking guix weather"
msgstr "Запуск guix weather"

msgid "Assessing substitute availability."
msgstr "Оценка доступности подстановок."

msgid "Invoking guix processes"
msgstr "Запуск guix processes"

msgid "Listing client processes."
msgstr "Чтение клиентских процессов."

msgid "Invoking @command{guix build}"
msgstr "Запуск @command{guix build}"

msgid "Common Build Options"
msgstr "Стандартные параметры сборки"

msgid "Build options for most commands."
msgstr "Параметры сборки для большинства команд."

msgid "Package Transformation Options"
msgstr "Параметры преобразования пакета"

msgid "Creating variants of packages."
msgstr "Создание вариантов пакетов."

msgid "Additional Build Options"
msgstr "Дополнительные параметры сборки"

msgid "Options specific to 'guix build'."
msgstr "Особые параметры для 'guix build'."

msgid "Debugging Build Failures"
msgstr "Отладка ошибок сборки"

msgid "Real life packaging experience."
msgstr "Жизненный опыт в сборке пакетов."

msgid "Using the Configuration System"
msgstr "Использование системы конфигурации"

msgid "Customizing your GNU system."
msgstr "Настройка вашей системы GNU."

msgid "operating-system Reference"
msgstr "Интерфейс operating-system"

msgid "Detail of operating-system declarations."
msgstr "Подробные сведения об объявлениях opertaing-system."

msgid "File Systems"
msgstr "Файловые системы"

msgid "Configuring file system mounts."
msgstr "Настройка точек подключения файловой системы."

msgid "Mapped Devices"
msgstr "Размеченные устройства"

msgid "Block device extra processing."
msgstr "Дополнительные проверки блочных устройств."

msgid "User Accounts"
msgstr "Учётные записи пользователей"

msgid "Specifying user accounts."
msgstr "Задание пользовательских учётных записей."

msgid "Keyboard Layout"
msgstr "Раскладка клавиатуры"

msgid "How the system interprets key strokes."
msgstr "Интерпретация нажатия клавиш системой."

msgid "Locales"
msgstr "Региональные настройки"

msgid "Language and cultural convention settings."
msgstr "Настройка языка и культурных особенностей."

msgid "Specifying system services."
msgstr "Настройка системных служб."

msgid "X.509 Certificates"
msgstr "Сертификаты X.509"

msgid "Authenticating HTTPS servers."
msgstr "Аутентификация серверов HTTPS."

msgid "Name Service Switch"
msgstr "Переключатель службы имен"

msgid "Configuring libc's name service switch."
msgstr "Настройка службы имён libc."

msgid "Initial RAM Disk"
msgstr "Начальный RAM-диск"

msgid "Linux-Libre bootstrapping."
msgstr "Начальная загрузка Linux-Libre."

msgid "Bootloader Configuration"
msgstr "Настройка загрузчика"

msgid "Configuring the boot loader."
msgstr "Конфигурирование загрузчика диска."

msgid "Invoking guix system"
msgstr "Вызов guix system"

msgid "Instantiating a system configuration."
msgstr "Проверка конфигурации операционной системы."

msgid "Invoking guix deploy"
msgstr "Запуск guix deploy"

msgid "Deploying a system configuration to a remote host."
msgstr "Развёртывание конфигурации системы на удалённой машине."

msgid "Running Guix in a VM"
msgstr "Запуск Guix на виртуальной машине"

msgid "How to run Guix System in a virtual machine."
msgstr "Как запускать систему Guix на виртуальной машине."

msgid "Defining Services"
msgstr "Создание служб"

msgid "Adding new service definitions."
msgstr "Добавление новых определений служб."

msgid "Base Services"
msgstr "Базовые службы"

msgid "Essential system services."
msgstr "Ключевые службы системы."

msgid "Scheduled Job Execution"
msgstr "Запланированное исполнения задач"

msgid "The mcron service."
msgstr "Служба mcron."

msgid "Log Rotation"
msgstr "Ротация логов"

msgid "Networking Services"
msgstr "Сервисы сети"

msgid "Unattended Upgrades"
msgstr "Автоматические обновления"

msgid "Automated system upgrades."
msgstr "Автоматические обновления системы."

msgid "X Window"
msgstr "Оконная система X"

msgid "Graphical display."
msgstr "Графический дисплей."

msgid "Printing Services"
msgstr "Сервисы печати"

msgid "Local and remote printer support."
msgstr "Поддержка локальных и удалённых принтеров."

msgid "Desktop Services"
msgstr "Сервисы рабочего стола"

msgid "D-Bus and desktop services."
msgstr "D-Bus и сервисы рабочего стола."

msgid "Sound Services"
msgstr "Звуковые сервисы"

msgid "ALSA and Pulseaudio services."
msgstr "Сервисы ALSA и Pulseaudio."

msgid "Database Services"
msgstr "Сервисы баз данных"

msgid "SQL databases, key-value stores, etc."
msgstr "Базы данных SQL, базы ключ-значение и т. д."

msgid "Mail Services"
msgstr "Почтовые сервисы"

msgid "IMAP, POP3, SMTP, and all that."
msgstr "IMAP, POP3, SMTP и прочее."

msgid "Messaging Services"
msgstr "Сервисы сообщений"

msgid "Messaging services."
msgstr "Сервисы сообщений."

msgid "Telephony Services"
msgstr "Сервисы телефонии"

msgid "Telephony services."
msgstr "Сервисы телефонии."

msgid "Monitoring Services"
msgstr "Сервисы мониторинга"

msgid "Monitoring services."
msgstr "Сервисы мониторинга."

msgid "Kerberos Services"
msgstr "Сервисы Kerberos"

msgid "Kerberos services."
msgstr "Сервисы Kerberos."

msgid "LDAP Services"
msgstr "LDAP Сервисы"

msgid "LDAP services."
msgstr "LDAP сервисы."

msgid "Web Services"
msgstr "Веб-сервисы"

msgid "Web servers."
msgstr "Веб-серверы."

msgid "Certificate Services"
msgstr "Сервисы сертификатов"

msgid "TLS certificates via Let's Encrypt."
msgstr "Сертификаты TLS через Let's Encrypt."

msgid "DNS Services"
msgstr "Сервисы DNS"

msgid "DNS daemons."
msgstr "DNS-демоны."

msgid "VPN Services"
msgstr "VPN-сервисы"

msgid "VPN daemons."
msgstr "VPN-демоны."

msgid "Network File System"
msgstr "Сетевые файловые системы"

msgid "NFS related services."
msgstr "Сервисы, работающие с сетевыми файловыми системами."

msgid "Continuous Integration"
msgstr "Длительная интеграция"

msgid "Cuirass and Laminar services."
msgstr "Сервис Cuirass."

msgid "Power Management Services"
msgstr "Сервисы управления питанием"

msgid "Audio Services"
msgstr "Сервисы аудио"

msgid "The MPD."
msgstr "MPD."

msgid "Virtualization Services"
msgstr "Сервисы виртуализации"

msgid "Virtualization services."
msgstr "Сервисы виртуализации."

msgid "Version Control Services"
msgstr "Сервисы упраления версиями"

msgid "Providing remote access to Git repositories."
msgstr "Доступ к удалённым репозиториям Git."

msgid "Game Services"
msgstr "Игровые службы"

msgid "Game servers."
msgstr "Игровые службы."

msgid "PAM Mount Service"
msgstr "Службы подключения PAM"

msgid "Service to mount volumes when logging in."
msgstr "Служба подключения томов при входе в систему."

msgid "Guix Services"
msgstr "Сервисы Guix"

msgid "Services relating specifically to Guix."
msgstr "Сервисы, касающиеся конкретно Guix."

msgid "Linux Services"
msgstr "Службы Linux"

msgid "Services tied to the Linux kernel."
msgstr "Службы, привязанные к ядру Linux."

msgid "Hurd Services"
msgstr "Сервисы Hurd"

msgid "Services specific for a Hurd System."
msgstr "Сервисы, касающиеся Hurd System."

msgid "Miscellaneous Services"
msgstr "Разнообразные службы"

msgid "Other services."
msgstr "Другие службы."

msgid "Service Composition"
msgstr "Структура сервисов"

msgid "The model for composing services."
msgstr "Модель построения сервисов."

msgid "Service Types and Services"
msgstr "Типы сервисов и сервисы"

msgid "Types and services."
msgstr "Типы и сервисы."

msgid "Service Reference"
msgstr "Интерфейс сервиса"

msgid "API reference."
msgstr "Доступ через API."

msgid "Shepherd Services"
msgstr "Сервисы Shepherd"

msgid "A particular type of service."
msgstr "Особенный тип сервисов."

msgid "Invoking guix home"
msgstr "Запуск guix home"

msgid "Separate Debug Info"
msgstr "Отдельная информация об отладке"

msgid "Installing 'debug' outputs."
msgstr "Установка выводов отладочной информации."

msgid "Rebuilding Debug Info"
msgstr "Сборка с отладочной информацией"

msgid "Building missing debug info."
msgstr "Сборка отсутствующей отладочной информации."

msgid "A Bootstrap worthy of GNU."
msgstr "Первичная загрузка, достойная GNU."

msgid "Preparing to Use the Bootstrap Binaries"
msgstr "Подготовка к использованию двоичных файлов первоначальной загрузки"

msgid "Building that what matters most."
msgstr "Сборка самого главного."

msgid "purpose"
msgstr "цель"

msgid "GNU Guix@footnote{``Guix'' is pronounced like ``geeks'', or ``ɡiːks'' using the international phonetic alphabet (IPA).} is a package management tool for and distribution of the GNU system.  Guix makes it easy for unprivileged users to install, upgrade, or remove software packages, to roll back to a previous package set, to build packages from source, and generally assists with the creation and maintenance of software environments."
msgstr "GNU Guix@footnote{\"Guix\" произносится \"гикс\".} --- это утилита для управления пакетами и дистрибутив системы GNU. Guix позволяет непривилегированным пользователям устанавливать, обновлять и удалять программные пакеты, откатываться до предыдущих наборов пакетов, собирать пакеты из исходников и обеспечивает создание и поддержку программного окружения в целом."

msgid "Guix System"
msgstr "Система Guix"

msgid "GuixSD, now Guix System"
msgstr "GuixSD, теперь система Guix"

msgid "Guix System Distribution, now Guix System"
msgstr "Guix System Distribution, теперь система Guix"

msgid "You can install GNU@tie{}Guix on top of an existing GNU/Linux system where it complements the available tools without interference (@pxref{Installation}), or you can use it as a standalone operating system distribution, @dfn{Guix@tie{}System}@footnote{We used to refer to Guix System as ``Guix System Distribution'' or ``GuixSD''.  We now consider it makes more sense to group everything under the ``Guix'' banner since, after all, Guix System is readily available through the @command{guix system} command, even if you're using a different distro underneath!}.  @xref{GNU Distribution}."
msgstr "Вы можете установить GNU@tie{}Guix поверх существующей системы GNU/Linux, где он дополнит имеющиеся инструменты, не внося помехи (@pxref{Installation}), или вы можете использовать его как отдельный дистрибутив операционной системы, @dfn{Guix@tie{}System}@footnote{Мы раньше называли Guix System как ``Guix System Distribution'' или ``GuixSD''.  Теперь мы считаем, что логичнее объединить все под баннером ``Guix'', поскольку, в конце концов, Guix System легко доступна через команду @command{guix system}, даже если вы используете под ней другой дистрибутив!}  @xref{GNU Distribution}."

msgid "user interfaces"
msgstr "пользовательские интерфейсы"

msgid "Guix provides a command-line package management interface (@pxref{Package Management}), tools to help with software development (@pxref{Development}), command-line utilities for more advanced usage (@pxref{Utilities}), as well as Scheme programming interfaces (@pxref{Programming Interface})."
msgstr "Guix предоставляет интерфейс командной строки для управления пакетами (@pxref{Package Management}), инструменты, которые помогают в разработке программного обеспечения (@pxref{Development}), более сложные утилиты командной строки (@pxref{Utilities}), а также программный интерфейс Scheme (@pxref{Programming Interface})."

msgid "build daemon"
msgstr "демон сборки"

msgid "Its @dfn{build daemon} is responsible for building packages on behalf of users (@pxref{Setting Up the Daemon}) and for downloading pre-built binaries from authorized sources (@pxref{Substitutes})."
msgstr "Его @dfn{демон сборки} отвечает за сборку пакетов по запросам пользователей (@pxref{Setting Up the Daemon}) и за скачивание компилированных бинарников из авторизованных ресурсов (@pxref{Substitutes})."

msgid "extensibility of the distribution"
msgstr "расширяемость дистрибутива"

msgid "customization, of packages"
msgstr "настройка, пакетов"

msgid "Guix includes package definitions for many GNU and non-GNU packages, all of which @uref{https://www.gnu.org/philosophy/free-sw.html, respect the user's computing freedom}.  It is @emph{extensible}: users can write their own package definitions (@pxref{Defining Packages}) and make them available as independent package modules (@pxref{Package Modules}).  It is also @emph{customizable}: users can @emph{derive} specialized package definitions from existing ones, including from the command line (@pxref{Package Transformation Options})."
msgstr "Guix включает определения пакетов для множества проектов GNU и не-GNU, каждый из которых @uref{https://www.gnu.org/philosophy/free-sw.html, уважает свободу пользователя в работе за компьютером}. Он @emph{расширяемый}: пользователи могут писать свои собственные определения пакетов (@pxref{Defining Packages}) и делать их доступными как независимые пакетные модули (@pxref{Package Modules}). Он также @emph{настраиваемый}: пользователи могут @emph{получать} специальные определения пакетов из существующих, в том числе через командную строку (@pxref{Package Transformation Options})."

msgid "functional package management"
msgstr "функциональное управление пакетами"

msgid "isolation"
msgstr "изоляция"

msgid "Under the hood, Guix implements the @dfn{functional package management} discipline pioneered by Nix (@pxref{Acknowledgments}).  In Guix, the package build and installation process is seen as a @emph{function}, in the mathematical sense.  That function takes inputs, such as build scripts, a compiler, and libraries, and returns an installed package.  As a pure function, its result depends solely on its inputs---for instance, it cannot refer to software or scripts that were not explicitly passed as inputs.  A build function always produces the same result when passed a given set of inputs.  It cannot alter the environment of the running system in any way; for instance, it cannot create, modify, or delete files outside of its build and installation directories.  This is achieved by running build processes in isolated environments (or @dfn{containers}), where only their explicit inputs are visible."
msgstr "Под капотом Guix работает как @dfn{функциональный пакетный менеджер} --- принцип, впервые введённый Nix (@pxref{Acknowledgments}). В Guix процесс сборки и установки пакета рассматривается как @emph{функция} в математическом смысле. Эта функция принимает входные данные, как например, скрипты сборки, компилятор, её результат зависит только от входных данных, и он не может зависеть от программ или скриптов, которые не подаются на вход явным образом. Функция сборки всегда производит один результат, когда получает один и тот же набор входных данных. Она не может как-либо изменять окружение запущенной системы; например, она не может создавать, изменять или удалять файлы за пределами её директорий сборки и установки. Это достигается так: процесс сборки запускается в изолированном окружении (или @dfn{контейнере}), в котором видны только входные данные, заданные явно."

msgid "store"
msgstr "store"

msgid "The result of package build functions is @dfn{cached} in the file system, in a special directory called @dfn{the store} (@pxref{The Store}).  Each package is installed in a directory of its own in the store---by default under @file{/gnu/store}.  The directory name contains a hash of all the inputs used to build that package; thus, changing an input yields a different directory name."
msgstr "Результат работы функций сборки пакетов кешируется в файловой системе в специальной директории, называемой @dfn{склад} (@pxref{The Store}).Каждый пакет устанавливается в собственную директорию склада, по умолчанию --- под @file{/gnu/store}. Имя директории содержит хеш всех входных данных, используемых для сборки этого пакета, так что изменение входных данных порождает различные имена директорий."

msgid "This approach is the foundation for the salient features of Guix: support for transactional package upgrade and rollback, per-user installation, and garbage collection of packages (@pxref{Features})."
msgstr "Этот подход является принципиальным, на нём основаны ключевые особенностей Guix: поддержка транзакционного обновления пакета и откаты, установка для отдельного пользователя, сборка мусора от пакетов (@pxref{Features})."

msgid "Guix comes with a distribution of the GNU system consisting entirely of free software@footnote{The term ``free'' here refers to the @url{https://www.gnu.org/philosophy/free-sw.html,freedom provided to users of that software}.}.  The distribution can be installed on its own (@pxref{System Installation}), but it is also possible to install Guix as a package manager on top of an installed GNU/Linux system (@pxref{Installation}).  When we need to distinguish between the two, we refer to the standalone distribution as Guix@tie{}System."
msgstr "Guix поставляется с дистрибутивом системы GNU, полностью состоящим из свободного программного обеспечения @footnote{Термин ``свободного'' здесь относится к @url{https://www.gnu.org/philosophy/free-sw.ru.html,свобода, предоставляемая пользователям этого программного обеспечения}.}.  Дистрибутив можно установить отдельно (@pxref{System Installation}), но также можно установить Guix в качестве пакетного менеджера поверх установленной системы GNU/Linux (@pxref{Installation}).  Когда нам нужно провести различие между ними, мы называем самодостаточный дистрибутив Guix@tie{}System."

msgid "The distribution provides core GNU packages such as GNU libc, GCC, and Binutils, as well as many GNU and non-GNU applications.  The complete list of available packages can be browsed @url{https://www.gnu.org/software/guix/packages,on-line} or by running @command{guix package} (@pxref{Invoking guix package}):"
msgstr "Дистрибутив предоставляет основные пакеты GNU, такие как GNU libc, GCC и Binutils, а также многие приложения GNU и не-GNU.  Полный список доступных пакетов можно просмотреть по @url{https://www.gnu.org/software/guix/packages,онлайн} или запустив @command{guix package} (@pxref{Invoking guix package}):"

msgid "guix package --list-available\n"
msgstr "guix package --list-available\n"

msgid "Our goal is to provide a practical 100% free software distribution of Linux-based and other variants of GNU, with a focus on the promotion and tight integration of GNU components, and an emphasis on programs and tools that help users exert that freedom."
msgstr "Наша цель --- предоставить состоящий на 100% из свободного программного обеспечения рабочий дистрибуив Linux или другие варианты GNU. Мы ориентируемся на продвижении и полноценной интеграции компонентов GNU и поддержке программ и утилит, которые помогают пользователям реализовать их свободы."

msgid "Packages are currently available on the following platforms:"
msgstr "Пакеты в данные момент доступны для следующих платформ:"

msgid "x86_64-linux"
msgstr "x86_64-linux"

msgid "Intel/AMD @code{x86_64} architecture, Linux-Libre kernel."
msgstr "архитектура Intel/AMD @code{x86_64} с ядром Linux-Libre."

msgid "i686-linux"
msgstr "i686-linux"

msgid "Intel 32-bit architecture (IA32), Linux-Libre kernel."
msgstr "архитектура Intel 32-bit (IA32) с ядром Linux-Libre."

msgid "armhf-linux"
msgstr "armhf-linux"

msgid "ARMv7-A architecture with hard float, Thumb-2 and NEON, using the EABI hard-float application binary interface (ABI), and Linux-Libre kernel."
msgstr "архитектура ARMv7-A с hard float, Thumb-2 и NEON, использующая двоичный интерфейс приложений EABI hard-float (ABI), с ядром Linux-Libre."

msgid "aarch64-linux"
msgstr "aarch64-linux"

msgid "little-endian 64-bit ARMv8-A processors, Linux-Libre kernel."
msgstr "процессоры little-endian 64-bit ARMv8-A с ядром Linux-Libre."

msgid "i586-gnu"
msgstr "i586-gnu"

msgid "@uref{https://hurd.gnu.org, GNU/Hurd} on the Intel 32-bit architecture (IA32)."
msgstr "@uref{https://hurd.gnu.org, GNU/Hurd} на 32 битной архитектуре Intel (IA32)."

msgid "This configuration is experimental and under development.  The easiest way for you to give it a try is by setting up an instance of @code{hurd-vm-service-type} on your GNU/Linux machine (@pxref{transparent-emulation-qemu, @code{hurd-vm-service-type}}).  @xref{Contributing}, on how to help!"
msgstr "Эта конфигурация является экспериментальной и находится в разработке.  Самый простой способ попробовать - настроить экземпляр @code{hurd-vm-service-type} на вашем GNU/Linux компьютере (@pxref{transparent-emulation-qemu, @code{hurd-vm-service-type}}).  @xref{Contributing}, о том, как помочь!"

msgid "little-endian 64-bit MIPS processors, specifically the Loongson series, n32 ABI, and Linux-Libre kernel.  This configuration is no longer fully supported; in particular, there is no ongoing work to ensure that this architecture still works.  Should someone decide they wish to revive this architecture then the code is still available."
msgstr "64-разрядные little-endian процессоры MIPS порядком байтов, в частности серии Loongson, n32 ABI и ядро Linux-Libre. Эта конфигурация больше не поддерживается полностью; в частности, фермы сборки проекта больше не предоставляют замены этой архитектуре."

msgid "big-endian 32-bit PowerPC processors, specifically the PowerPC G4 with AltiVec support, and Linux-Libre kernel.  This configuration is not fully supported and there is no ongoing work to ensure this architecture works."
msgstr "32-битные big-endian процессоры PowerPC, в частности PowerPC G4 с поддержкой AltiVec, и ядро Linux-Libre. Эта конфигурация не поддерживается полностью, и работа по обеспечению работоспособности этой архитектуры не ведется."

msgid "little-endian 64-bit RISC-V processors, specifically RV64GC, and Linux-Libre kernel. This platform is available as a \"technology preview\": although it is supported, substitutes are not yet available from the build farm (@pxref{Substitutes}), and some packages may fail to build (@pxref{Tracking Bugs and Changes}).  That said, the Guix community is actively working on improving this support, and now is a great time to try it and get involved!"
msgstr "64-битные little-endian процессоры RISC-V, в частности RV64GC, и ядро Linux-Libre. Эта платформа доступна как \"предварительный просмотр технологий\": хотя она поддерживается, заменители пока недоступны из фермы сборки (@pxref{Substitutes}), и некоторые пакеты могут не собраться (@pxref{Tracking Bugs and Changes}). Тем не менее, сообщество Guix активно работает над улучшением этой поддержки, и сейчас самое время попробовать ее и принять участие!"

msgid "With Guix@tie{}System, you @emph{declare} all aspects of the operating system configuration and Guix takes care of instantiating the configuration in a transactional, reproducible, and stateless fashion (@pxref{System Configuration}).  Guix System uses the Linux-libre kernel, the Shepherd initialization system (@pxref{Introduction,,, shepherd, The GNU Shepherd Manual}), the well-known GNU utilities and tool chain, as well as the graphical environment or system services of your choice."
msgstr "Пользуясь Guix@tie{}System, вы @emph{объявляете} все аспекты конфигурации системы, а Guix заботится об инстанцировании конфигурации в транзакционном, воспроизводимом и безэталонном режимах (@pxref{System Configuration}). Система Guix использует ядро Linux-libre, систему инициализации Shepherd (@pxref{Introduction,,, shepherd, The GNU Shepherd Manual}), хорошо известные утилиты и тулчейны GNU, а также графическое окружение или системные службы по вашему выбору."

msgid "Guix System is available on all the above platforms except @code{mips64el-linux}, @code{powerpc-linux}, @code{powerpc64le-linux} and @code{riscv64-linux}."
msgstr "Система Guix доступна на всех перечисленных платформах, кроме @code{mips64el-linux}, @code{powerpc-linux}, @code{powerpc64le-linux} и @code{riscv64-linux}."

msgid "For information on porting to other architectures or kernels, @pxref{Porting}."
msgstr "Информация о портировании на другие архитектуры и ядра доступна в @pxref{Porting}."

msgid "Building this distribution is a cooperative effort, and you are invited to join! @xref{Contributing}, for information about how you can help."
msgstr "Дистрибутив созаётся совместными усилиями, приглашаем вас! См. @xref{Contributing}, чтобы узнать о том, как вы можете помочь."

msgid "installing Guix"
msgstr "Установка Guix"

msgid "foreign distro"
msgstr "дистрибутив GNU/Linux, отличный от Guix System"

msgid "directories related to foreign distro"
msgstr "директории относящиеся к чужому дистрибутиву"

msgid "When installed on a foreign distro, GNU@tie{}Guix complements the available tools without interference.  Its data lives exclusively in two directories, usually @file{/gnu/store} and @file{/var/guix}; other files on your system, such as @file{/etc}, are left untouched."
msgstr "При установке на чужой дистрибутив GNU@tie{}Guix дополняет доступные утилиты без внесения помех. Его данные живут только в двух директориях --- обычно @file{/gnu/store} и @file{/var/guix}; другие файлы вашей системы, как @file{/etc}, остаются нетронутыми."

msgid "Once installed, Guix can be updated by running @command{guix pull} (@pxref{Invoking guix pull})."
msgstr "Установленный Guix можно обновлять командой @command{guix pull} (@pxref{Invoking guix pull})."

msgid "installing Guix from binaries"
msgstr "установка Guix из бинарных файлов"

msgid "installer script"
msgstr "скрипт установки"

msgid "Likewise, on openSUSE:"
msgstr "Подобным же образом на openSUSE:"

msgid ""
"# cd /tmp\n"
"# wget https://guix.gnu.org/guix-install.sh\n"
"# chmod +x guix-install.sh\n"
"# ./guix-install.sh\n"
msgstr ""
"# cd /tmp\n"
"# wget https://guix.gnu.org/guix-install.sh\n"
"# chmod +x guix-install.sh\n"
"# ./guix-install.sh\n"

msgid "substitutes, authorization thereof"
msgstr "авторизация, подстановок"

msgid ""
"# guix archive --authorize < \\\n"
"     ~root/.config/guix/current/share/guix/@value{SUBSTITUTE-SERVER-1}.pub\n"
"# guix archive --authorize < \\\n"
"     ~root/.config/guix/current/share/guix/@value{SUBSTITUTE-SERVER-2}.pub\n"
msgstr ""
"# guix archive --authorize < \\\n"
"     ~root/.config/guix/current/share/guix/@value{SUBSTITUTE-SERVER-1}.pub\n"
"# guix archive --authorize < \\\n"
"     ~root/.config/guix/current/share/guix/@value{SUBSTITUTE-SERVER-2}.pub\n"

msgid "The binary installation tarball can be (re)produced and verified simply by running the following command in the Guix source tree:"
msgstr "Архив для бинарной установки может быть воспроизведён (повторён) и проверен простым запуском следующей команды в дереве исходников Guix:"

msgid "make guix-binary.@var{system}.tar.xz\n"
msgstr "make guix-binary.@var{system}.tar.xz\n"

msgid "...@: which, in turn, runs:"
msgstr "..., что в свою очередь, выполнит:"

msgid ""
"guix pack -s @var{system} --localstatedir \\\n"
"  --profile-name=current-guix guix\n"
msgstr ""
"guix pack -s @var{system} --localstatedir \\\n"
"  --profile-name=current-guix guix\n"

msgid "@xref{Invoking guix pack}, for more info on this handy tool."
msgstr "@xref{Invoking guix pack} для подробной информации об этом полезном инструменте."

msgid "daemon"
msgstr "демон"

msgid "Operations such as building a package or running the garbage collector are all performed by a specialized process, the build daemon, on behalf of clients.  Only the daemon may access the store and its associated database.  Thus, any operation that manipulates the store goes through the daemon.  For instance, command-line tools such as @command{guix package} and @command{guix build} communicate with the daemon (@i{via} remote procedure calls) to instruct it what to do."
msgstr "Такие операции, как сборка пакета или запуск сборщика мусора, выполняются запуском специальных процесса --- демона сборки --- по запросам клиентов. Только демон имеет доступ к складу и его базе данных. Так что операции управления складом выполняются с помощью демона. Например, инструменты командной строки, как @command{guix package} и @command{guix build}, обычно взаимодействуют с демоном через удалённый вызов процедур (RPC) и сообщают, что необходимо сделать."

msgid "build environment"
msgstr "окружение сборки"

msgid "build users"
msgstr "пользователи сборки"

msgid "When @command{guix-daemon} runs as @code{root}, you may not want package build processes themselves to run as @code{root} too, for obvious security reasons.  To avoid that, a special pool of @dfn{build users} should be created for use by build processes started by the daemon.  Having several such users allows the daemon to launch distinct build processes under separate UIDs, which guarantees that they do not interfere with each other---an essential feature since builds are regarded as pure functions (@pxref{Introduction})."
msgstr "Когда @command{guix-daemon} запущен от @code{root}, возможно, из соображений безопасности вы не примете того, что процессы сборки пакетов тоже выполняются от @code{root}. Чтобы избежать этого, необходимо создать специальных @dfn{пользователей для сборки}. Ими будет пользоваться процесс сборки, запускаемый демоном. Наличие нескольких таких пользователей позволит демону запускать отдельные процессы сборки  под отдельными UID, что гарантирует, что они не будут помехой друг другу --- важная особенность, учитывая, что сборка рассматривается как чистая функция (@pxref{Introduction})."

msgid "On a GNU/Linux system, a build user pool may be created like this (using Bash syntax and the @code{shadow} commands):"
msgstr "В системе GNU/Linux набор пользователей для сборки может быть создан так (используя синтаксис команды Bash @code{shadow}):"

msgid ""
"# groupadd --system guixbuild\n"
"# for i in $(seq -w 1 10);\n"
"  do\n"
"    useradd -g guixbuild -G guixbuild           \\\n"
"            -d /var/empty -s $(which nologin)   \\\n"
"            -c \"Guix build user $i\" --system    \\\n"
"            guixbuilder$i;\n"
"  done\n"
msgstr ""
"# groupadd --system guixbuild\n"
"# for i in `seq -w 1 10`;\n"
"  do\n"
"    useradd -g guixbuild -G guixbuild           \\\n"
"            -d /var/empty -s `which nologin`    \\\n"
"            -c \"Guix build user $i\" --system    \\\n"
"            guixbuilder$i;\n"
"  done\n"

msgid "The number of build users determines how many build jobs may run in parallel, as specified by the @option{--max-jobs} option (@pxref{Invoking guix-daemon, @option{--max-jobs}}).  To use @command{guix system vm} and related commands, you may need to add the build users to the @code{kvm} group so they can access @file{/dev/kvm}, using @code{-G guixbuild,kvm} instead of @code{-G guixbuild} (@pxref{Invoking guix system})."
msgstr "Число пользователей для сборки определяет, сколько задач сборки может быть запущено параллельно. Это задаётся опцией @option{--max-jobs} (@pxref{Invoking guix-daemon, @option{--max-jobs}}). Чтобы использовать @command{guix system vm} и подобные, вам потребуется добавить пользователей для сборки в группу @code{kvm}, так чтобы они имели доступ к @file{/dev/kvm}, используя @code{-G guixbuild,kvm} вместо @code{-G guixbuild} (@pxref{Invoking guix system})."

msgid "# guix-daemon --build-users-group=guixbuild\n"
msgstr "# guix-daemon --build-users-group=guixbuild\n"

msgid ""
"# groupadd --system guix-daemon\n"
"# useradd -g guix-daemon -G guix-daemon              \\\n"
"          -d /var/empty -s $(which nologin)          \\\n"
"          -c \"Guix daemon privilege separation user\" \\\n"
"          --system guix-daemon\n"
msgstr ""
"# groupadd --system guix-daemon\n"
"# useradd -g guix-daemon -G guix-daemon              \\\n"
"          -d /var/empty -s $(which nologin)          \\\n"
"          -c \"Guix daemon privilege separation user\" \\\n"
"          --system guix-daemon\n"

msgid "chroot"
msgstr "chroot"

msgid "a minimal @code{/dev} directory, created mostly independently from the host @code{/dev}@footnote{``Mostly'', because while the set of files that appear in the chroot's @code{/dev} is fixed, most of these files can only be created if the host has them.};"
msgstr "минимальный состав директории @code{/dev}, созданной максимально независимо от исходной @code{/dev}@footnote{\"Максимально\", потому что файлы, доступные в chroot под @code{/dev}, могут быть созданы только, если машина их имеет};"

msgid "the @code{/proc} directory; it only shows the processes of the container since a separate PID name space is used;"
msgstr "директория @code{/proc}; она показывает только процессы контейнера, так как используется отдельное пространство имён процессов PID;"

msgid "@file{/etc/passwd} with an entry for the current user and an entry for user @file{nobody};"
msgstr "@file{/etc/passwd} с записью о текущем пользователе и пользователе @file{nobody};"

msgid "@file{/etc/group} with an entry for the user's group;"
msgstr "@file{/etc/group} с записью о группе пользователя;"

msgid "@file{/etc/hosts} with an entry that maps @code{localhost} to @code{127.0.0.1};"
msgstr "@file{/etc/hosts} с записью, которая адресует @code{localhost} на @code{127.0.0.1};"

msgid "a writable @file{/tmp} directory."
msgstr "директория @file{/tmp}, доступная для записи."

msgid "You can influence the directory where the daemon stores build trees @i{via} the @env{TMPDIR} environment variable.  However, the build tree within the chroot is always called @file{/tmp/guix-build-@var{name}.drv-0}, where @var{name} is the derivation name---e.g., @code{coreutils-8.24}.  This way, the value of @env{TMPDIR} does not leak inside build environments, which avoids discrepancies in cases where build processes capture the name of their build tree."
msgstr "Можно указать директорию, в которую демон сохраняет деревья сборки через переменную окружения @code{TMPDIR}. Однако дерево сборки внутри chroot всегда называется @file{/tmp/guix-build-@var{name}.drv-0}, где @var{name} - это имя деривации, то есть, например, @code{coreutils-8.24}. Так значение @code{TMPDIR} не проникает внутрь окружения сборки, что предотвращает расхождения и случаях, когда процессы сборки имеют иные имена их деревьев сборки."

msgid "http_proxy"
msgstr "http_proxy"

msgid "https_proxy"
msgstr "https_proxy"

msgid "The daemon also honors the @env{http_proxy} and @env{https_proxy} environment variables for HTTP and HTTPS downloads it performs, be it for fixed-output derivations (@pxref{Derivations}) or for substitutes (@pxref{Substitutes})."
msgstr "Демон также уважаем переменную окружения @code{http_proxy}, когда выполняет скачивание по HTTP как для дериваций с фиксированным результатом (@pxref{Derivations}), так и для подстановок (@pxref{Substitutes})."

msgid "Using the Offload Facility"
msgstr "Использование функционала разгрузки"

msgid "offloading"
msgstr "разгрузка"

msgid "build hook"
msgstr "хук сборки"

msgid "When desired, the build daemon can @dfn{offload} derivation builds to other machines running Guix, using the @code{offload} @dfn{build hook}@footnote{This feature is available only when @uref{https://github.com/artyom-poptsov/guile-ssh, Guile-SSH} is present.}.  When that feature is enabled, a list of user-specified build machines is read from @file{/etc/guix/machines.scm}; every time a build is requested, for instance via @code{guix build}, the daemon attempts to offload it to one of the machines that satisfy the constraints of the derivation, in particular its system types---e.g., @code{x86_64-linux}.  A single machine can have multiple system types, either because its architecture natively supports it, via emulation (@pxref{transparent-emulation-qemu, Transparent Emulation with QEMU}), or both.  Missing prerequisites for the build are copied over SSH to the target machine, which then proceeds with the build; upon success the output(s) of the build are copied back to the initial machine.  The offload facility comes with a basic scheduler that attempts to select the best machine.  The best machine is chosen among the available machines based on criteria such as:"
msgstr "При желании демон сборки может @dfn{offload} производные сборки на других машинах, на которых запущен Guix, используя @code{offload} @dfn{build hook}@footnote{Эта функция доступна только когда установлен @uref{https://github.com/artyom-poptsov/guile-ssh, Guile-SSH.}}.  Когда данная функция включена, список указанных пользователем машин для сборки считывается из @file{/etc/guix/machines.scm}; каждый раз, когда запрашивается сборка, например через @code{guix build}, демон пытается выгрузить ее на одну из машин, удовлетворяющих ограничениям производной сборки, в частности, ее системным типам---например, @code{x86_64-linux}.  На одной машине можеь быть несколько типов систем, либо потому, что архитектура изначально поддерживает ее, либо через эмуляцию (@pxref{transparent-emulation-qemu, Transparent Emulation with QEMU}).  Отсутствующие необходимые условия для сборки копируются по SSH на целевой компьютер, который затем продолжает сборку; в случает успеха выходные данные копируются на исходную машину.  Средство разгрузки поставляется с базовым планировщиком, который пытается выбрать лучшую машину. Лучшая машина выбирается среди доступных машин на основании такиз критериев как:"

msgid "The availability of a build slot.  A build machine can have as many build slots (connections) as the value of the @code{parallel-builds} field of its @code{build-machine} object."
msgstr "Наличие слота для сборки.  Машина для сборки может иметь столько слотов для сборки (соединений), сколько указано в значении @code{parallel-builds} определения объекта @code{build-machine}."

msgid "Its relative speed, as defined via the @code{speed} field of its @code{build-machine} object."
msgstr "Ее относительная скорость, указанная через значение @code{speed} определения объекта @code{build-machine}."

msgid "Its load.  The normalized machine load must be lower than a threshold value, configurable via the @code{overload-threshold} field of its @code{build-machine} object."
msgstr "Ее нагрузка.  Нормализованная нагрузка на машину должна быть ниже порогового значения, которое можно настроить с помощью поля @code{overload-threshold} объекта @code{build-machine}."

msgid "Disk space availability.  More than 100 MiB must be available."
msgstr "Доступность дискового пространства.  Должно быть доступно более 100 МБ."

msgid "The @file{/etc/guix/machines.scm} file typically looks like this:"
msgstr "Файл @file{/etc/guix/machines.scm} обычно выглядит так:"

msgid ""
"(list (build-machine\n"
"        (name \"eightysix.example.org\")\n"
"        (systems (list \"x86_64-linux\" \"i686-linux\"))\n"
"        (host-key \"ssh-ed25519 AAAAC3Nza@dots{}\")\n"
"        (user \"bob\")\n"
"        (speed 2.))     ;incredibly fast!\n"
"\n"
msgstr ""
"(list (build-machine\n"
"           (name \"eightysix.example.org\")\n"
"           (systems (list \"x86_64-linux\" \"i686-linux\"))\n"
"           (host-key \"ssh-ed25519 AAAAC3Nza@dots{}\")\n"
"           (user \"bob\")\n"
"           (speed 2.))     ;incredibly fast!\n"
"\n"

msgid ""
"      (build-machine\n"
"        (name \"armeight.example.org\")\n"
"        (systems (list \"aarch64-linux\"))\n"
"        (host-key \"ssh-rsa AAAAB3Nza@dots{}\")\n"
"        (user \"alice\")\n"
"\n"
msgstr ""
"      (build-machine\n"
"        (name \"armeight.example.org\")\n"
"        (systems (list \"aarch64-linux\"))\n"
"        (host-key \"ssh-rsa AAAAB3Nza@dots{}\")\n"
"        (user \"alice\")\n"
"\n"

msgid "In the example above we specify a list of two build machines, one for the @code{x86_64} and @code{i686} architectures and one for the @code{aarch64} architecture."
msgstr "В примере выше мы обозначили список, состоящий из двух машин: одна --- для архитектуры @code{x86_64}, а другая --- для архитектуры @code{mips64el}."

msgid "In fact, this file is---not surprisingly!---a Scheme file that is evaluated when the @code{offload} hook is started.  Its return value must be a list of @code{build-machine} objects.  While this example shows a fixed list of build machines, one could imagine, say, using DNS-SD to return a list of potential build machines discovered in the local network (@pxref{Introduction, Guile-Avahi,, guile-avahi, Using Avahi in Guile Scheme Programs}).  The @code{build-machine} data type is detailed below."
msgstr "По факту, этот файл, что не удивительно, является файлом Scheme, и он имеет значение, когда запускается @code{хук разгрузки}. Он возвращает объекты класса @code{build-machine}. Приведённый пример показывает фиксированный список машин для сборки, но можно представить, скажем, используя DNS-SD, он может возвращать список потенциальных машин, обнаруженных в локальной сети (@pxref{Introduction, Guile-Avahi,, guile-avahi, Using Avahi in Guile Scheme Programs}). Тип данных @code{build-machine} описан ниже."

msgid "{Data Type} build-machine"
msgstr "{Тип данных} build-machine"

msgid "This data type represents build machines to which the daemon may offload builds.  The important fields are:"
msgstr "Этот тип данных представляет машины для сборки, на которые демон может разгружать сборки. Важные поля:"

msgid "name"
msgstr "name"

msgid "The host name of the remote machine."
msgstr "Имя хоста удалённой машины."

msgid "systems"
msgstr "systems"

msgid "The system types the remote machine supports---e.g., @code{(list \"x86_64-linux\" \"i686-linux\")}."
msgstr "Тип системы удалённой машины, то есть @code{x86_64-linux}."

msgid "user"
msgstr "user"

msgid "host-key"
msgstr "host-key"

msgid "This must be the machine's SSH @dfn{public host key} in OpenSSH format.  This is used to authenticate the machine when we connect to it.  It is a long string that looks like this:"
msgstr "Это @dfn{публичный ключ хоста} в формает OpenSSH. Он используется при аутентификации машины, когда мы подсоединяемс к ней. Это длинная строка, которая выглядит примерно так:"

msgid "ssh-ed25519 AAAAC3NzaC@dots{}mde+UhL hint@@example.org\n"
msgstr "ssh-ed25519 AAAAC3NzaC@dots{}mde+UhL hint@@example.org\n"

msgid "If the machine is running the OpenSSH daemon, @command{sshd}, the host key can be found in a file such as @file{/etc/ssh/ssh_host_ed25519_key.pub}."
msgstr "Если на машине запущен демон OpenSSH @command{sshd}, ключ хоста может быть найден в файле под директорией /etc/ssh, например, @file{/etc/ssh/ssh_host_ed25519_key.pub}."

msgid "If the machine is running the SSH daemon of GNU@tie{}lsh, @command{lshd}, the host key is in @file{/etc/lsh/host-key.pub} or a similar file.  It can be converted to the OpenSSH format using @command{lsh-export-key} (@pxref{Converting keys,,, lsh, LSH Manual}):"
msgstr "Если на машине запущен демон SSH GNU@tie{}lsh, @command{lshd}, тогда ключ хоста расположен в @file{/etc/lsh/host-key.pub} или подобном файле. Его можно конвертировать в формат OpenSSH, используя @command{lsh-export-key} (@pxref{Converting keys,,, lsh, LSH Manual}):"

msgid ""
"$ lsh-export-key --openssh < /etc/lsh/host-key.pub\n"
"ssh-rsa AAAAB3NzaC1yc2EAAAAEOp8FoQAAAQEAs1eB46LV@dots{}\n"
msgstr ""
"$ lsh-export-key --openssh < /etc/lsh/host-key.pub\n"
"ssh-rsa AAAAB3NzaC1yc2EAAAAEOp8FoQAAAQEAs1eB46LV@dots{}\n"

msgid "A number of optional fields may be specified:"
msgstr "Список необязательных полей:"

msgid "@code{port} (default: @code{22})"
msgstr "@code{port} (default: @code{22})"

msgid "Port number of SSH server on the machine."
msgstr "Номер порта сервера SSH на машине."

msgid "@code{private-key} (default: @file{~root/.ssh/id_rsa})"
msgstr "@code{private-key} (default: @file{~root/.ssh/id_rsa})"

msgid "The SSH private key file to use when connecting to the machine, in OpenSSH format.  This key must not be protected with a passphrase."
msgstr "Файл приватного ключа в формате OpenSSH, используемого в соединении с машиной. Этот ключ не должен быть защищён парольной фразой."

msgid "Note that the default value is the private key @emph{of the root account}.  Make sure it exists if you use the default."
msgstr "Отметим, что значение по умолчанию --- приватный ключ @emph{аккаунта root}. Убедитесь, что он существует, если вы используете настройки по умолчанию."

msgid "@code{compression} (default: @code{\"zlib@@openssh.com,zlib\"})"
msgstr "@code{compression} (default: @code{\"zlib@@openssh.com,zlib\"})"

msgid "@code{compression-level} (default: @code{3})"
msgstr "@code{compression-level} (default: @code{3})"

msgid "The SSH-level compression methods and compression level requested."
msgstr "Методы компрессии уровня SSH и уровень компрессии."

msgid "Note that offloading relies on SSH compression to reduce bandwidth usage when transferring files to and from build machines."
msgstr "Отметим, что разгрузка зависит от компрессии SSH, что уменьшает использование траффика при передаче файлов на и с машин для сборки."

msgid "@code{daemon-socket} (default: @code{\"/var/guix/daemon-socket/socket\"})"
msgstr "@code{daemon-socket} (default: @code{\"/var/guix/daemon-socket/socket\"})"

msgid "File name of the Unix-domain socket @command{guix-daemon} is listening to on that machine."
msgstr "Имя файла сокета Unix-домена, который слушает @command{guix-daemon} на удалённой машине."

msgid "The load threshold above which a potential offload machine is disregarded by the offload scheduler.  The value roughly translates to the total processor usage of the build machine, ranging from 0.0 (0%) to 1.0 (100%).  It can also be disabled by setting @code{overload-threshold} to @code{#f}."
msgstr "Порог нагрузки, выше которого потенциальная offload машина не учитывается offload планировщиком.  Это значение примерно соответствует общему использованию процессора машиной сборки в диапазоне от 0,0 (0%) до 1,0 (100%).  Это также можно отключить, установив @code{overload-threshold} в @code{#f}."

msgid "@code{parallel-builds} (default: @code{1})"
msgstr "@code{parallel-builds} (default: @code{1})"

msgid "The number of builds that may run in parallel on the machine."
msgstr "Число сборок, которые могут быть запущены на машине."

msgid "@code{speed} (default: @code{1.0})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "A ``relative speed factor''.  The offload scheduler will tend to prefer machines with a higher speed factor."
msgstr "Показатель скорости. Планировщик разгрузки предпримет попытку выбрать машину с наибольшим показателем скорости."

msgid "@code{features} (default: @code{'()})"
msgstr "@code{features} (default: @code{'()})"

msgid "A list of strings denoting specific features supported by the machine.  An example is @code{\"kvm\"} for machines that have the KVM Linux modules and corresponding hardware support.  Derivations can request features by name, and they will be scheduled on matching build machines."
msgstr "Набор строк, описывающий специфические функции, которые поддерживаются на машине. Например, @code{\"kvm\"} для машин, которые имеют модули Linux KVM и соответствующую поддерку аппаратного обеспечения. Деривации могут запрашивать функции по имени, и тогда они будут запранированы на соответствующих машинах для сборки."

msgid "The @command{guix} command must be in the search path on the build machines.  You can check whether this is the case by running:"
msgstr "Команда @command{guix} должна быть в путях для поиска на машинах лоя сборки. Можно проверить это, выполнив:"

msgid "ssh build-machine guix repl --version\n"
msgstr "ssh build-machine guix repl --version\n"

msgid "There is one last thing to do once @file{machines.scm} is in place.  As explained above, when offloading, files are transferred back and forth between the machine stores.  For this to work, you first need to generate a key pair on each machine to allow the daemon to export signed archives of files from the store (@pxref{Invoking guix archive}):"
msgstr "Есть ещё одна вещь, которую нужно выполнить после размещения @file{machines.scm}. Выше описано, что при разгрузке файлы передаются вперёд и назад между складами на машинах. Для этого необходимо сгенерировать ключ-пару на кадой машине, чтобы позволить демону экспортировать подписанные архивы файлов из склада (@pxref{Invoking guix archive}):"

msgid "# guix archive --generate-key\n"
msgstr "# guix archive --generate-key\n"

msgid "Each build machine must authorize the key of the master machine so that it accepts store items it receives from the master:"
msgstr "Каждая машина для сорки должна авторизовать ключ машины-инициатора, чтобы принимать элементы из склада, которые присылает инициатор:"

msgid "# guix archive --authorize < master-public-key.txt\n"
msgstr "# guix archive --authorize < master-public-key.txt\n"

msgid "Likewise, the master machine must authorize the key of each build machine."
msgstr "Точно так же машина-инициатор должна авторизовать ключ каждой машины для сборки."

msgid "All the fuss with keys is here to express pairwise mutual trust relations between the master and the build machines.  Concretely, when the master receives files from a build machine (and @i{vice versa}), its build daemon can make sure they are genuine, have not been tampered with, and that they are signed by an authorized key."
msgstr "Всё движение с ключами, описанное здесь, создаёт надёжную двустороннюю свзь между инициатором и машинами для сборки. А именно, когда машина-инициатор принимает файлы из машины для сборки (или @i{наборот}), её демон может удостоверить их подлинность и невмешательство других, а также то, что они подписаны авторизованным ключом."

msgid "offload test"
msgstr "тест разгрузки"

msgid "To test whether your setup is operational, run this command on the master node:"
msgstr "Чтобы проверить работоспособность настроек, запустите следующую команду на инициирующем узле:"

msgid "# guix offload test\n"
msgstr "# guix offload test\n"

msgid "This will attempt to connect to each of the build machines specified in @file{/etc/guix/machines.scm}, make sure Guix is available on each machine, attempt to export to the machine and import from it, and report any error in the process."
msgstr "Это выполнит попытку соединиться с каждой из машин для сборки, обозначенных в @file{/etc/guix/machines.scm}, проверит наличие модулей Guile и Guix на каждой машине, а также сделает попытку экспортировать и импортировать, а затем выведет отчёт об этом процессе."

msgid "If you want to test a different machine file, just specify it on the command line:"
msgstr "Если нужно тестировать другой файл с описанием машин, просто приведите его в командной строке:"

msgid "# guix offload test machines-qualif.scm\n"
msgstr "# guix offload test machines-qualif.scm\n"

msgid "Last, you can test the subset of the machines whose name matches a regular expression like this:"
msgstr "И последнее, можно тестировать набор машин, чьи имена соответствуют регулярному выражению, например:"

msgid "# guix offload test machines.scm '\\.gnu\\.org$'\n"
msgstr "# guix offload test machines.scm '\\.gnu\\.org$'\n"

msgid "offload status"
msgstr "статус разгрузки"

msgid "To display the current load of all build hosts, run this command on the main node:"
msgstr "Чтобы отобразить текущую загрузку всех машин для сборки, запустите команду на инициирущем узле:"

msgid "# guix offload status\n"
msgstr "# guix offload status\n"

msgid "SELinux, daemon policy"
msgstr "SELinux, политика демона"

msgid "mandatory access control, SELinux"
msgstr "мандатный контроль доступа, SELinux"

msgid "security, guix-daemon"
msgstr "безопасность, guix-daemon"

msgid "Guix includes an SELinux policy file at @file{etc/guix-daemon.cil} that can be installed on a system where SELinux is enabled, in order to label Guix files and to specify the expected behavior of the daemon.  Since Guix System does not provide an SELinux base policy, the daemon policy cannot be used on Guix System."
msgstr "Guix включает файл политик SELinnux @file{etc/guix-daemon.cil}, который может устанавливаться в систему, в которой включен SELinux, тогда файлы Guix будут помечены и настроены для соответствующего поведения демона. Так как система Guix не предоставляет политику SELinux, политика демона не может использоваться в системе Guix."

msgid "Installing the SELinux policy"
msgstr "Установка политики SELinux"

msgid "SELinux, policy installation"
msgstr "SELinux, установка политики"

msgid "To install the policy run this command as root:"
msgstr "Чтобы установить политику, запустите следующую команду от root:"

msgid "Once the policy is installed, the file system has been relabeled, and the daemon has been restarted, it should be running in the @code{guix_daemon_t} context.  You can confirm this with the following command:"
msgstr "Когда политика установлена, изменена метка файловой системы и демон перезапущен, она должна работать в контексте @code{guix_daemon_t}. Можно проверить это следующей командой:"

msgid "ps -Zax | grep guix-daemon\n"
msgstr "ps -Zax | grep guix-daemon\n"

msgid "Monitor the SELinux log files as you run a command like @code{guix build hello} to convince yourself that SELinux permits all necessary operations."
msgstr "Наблюдайте файлы логов SELinux во время работы команды @code{guix build hello}, чтобы удостовериться, что SELinux позволяет выполнение необходимых операций."

msgid "SELinux, limitations"
msgstr "SELinux, ограничения"

msgid "This policy is not perfect.  Here is a list of limitations or quirks that should be considered when deploying the provided SELinux policy for the Guix daemon."
msgstr "Эта политика не совершенна. Тут есть ряд ограничений или причуд, который нужно учитывать при разворачивании политики SELinux для демона Guix."

msgid "@code{guix_daemon_socket_t} isn’t actually used.  None of the socket operations involve contexts that have anything to do with @code{guix_daemon_socket_t}.  It doesn’t hurt to have this unused label, but it would be preferable to define socket rules for only this label."
msgstr "@code{guix_daemon_socket_t} на самом деле не используется. Никакие операции с сокетом не выполняются. Ничего плохого в том, чтобы иметь эту неиспользуемую метку, но желательно определить правила сокета для этой метки."

msgid "The daemon’s feature to listen for TCP connections might no longer work.  This might require extra rules, because SELinux treats network sockets differently from files."
msgstr "Функция демона прослушивать соединения TCP может более не работать. Это может потребовать дополнительных правил, потому что SELinux относится к сетевым сокетам иначе, чем к файлам."

msgid "Currently all files with a name matching the regular expression @code{/gnu/store/.+-(guix-.+|profile)/bin/guix-daemon} are assigned the label @code{guix_daemon_exec_t}; this means that @emph{any} file with that name in any profile would be permitted to run in the @code{guix_daemon_t} domain.  This is not ideal.  An attacker could build a package that provides this executable and convince a user to install and run it, which lifts it into the @code{guix_daemon_t} domain.  At that point SELinux could not prevent it from accessing files that are allowed for processes in that domain."
msgstr "В настоящее время всем файлам с именами, соответствующими регулярному выражению @code{/gnu/store/.+-(guix-.+|profile)/bin/guix-daemon}, присвоена метка @code{guix_daemon_exec_t}; это означает, что @emph{любому} файлу с таким именем в любом профиле разрешён запуск в домене @code{guix_daemon_t}. Это не идеально. Атакующий может собрать пакет, который содержит исполняемый файл и убеить пользователя установить и запустить его, и таким образом он получит доступ к домену @code{guix_daemon_t}. В этой связи SELinux мог бы не давать ему доступ к файлам, которые разрешены для процессов в этом домене."

msgid "You will need to relabel the store directory after all upgrades to @file{guix-daemon}, such as after running @code{guix pull}.  Assuming the store is in @file{/gnu}, you can do this with @code{restorecon -vR /gnu}, or by other means provided by your operating system."
msgstr "Вам нужно будет изменить метку (label) каталога хранилища после всех обновлений до @file{guix-daemon}, например, после запуска @code{guix pull}.  Предполагая, что хранилище в @file{/gnu}, вы можете это сделать с @code{restorecon -vR /gnu}, или другими способами, предусмотренными вашей операционной системой."

msgid "We could generate a much more restrictive policy at installation time, so that only the @emph{exact} file name of the currently installed @code{guix-daemon} executable would be labelled with @code{guix_daemon_exec_t}, instead of using a broad regular expression.  The downside is that root would have to install or upgrade the policy at installation time whenever the Guix package that provides the effectively running @code{guix-daemon} executable is upgraded."
msgstr "Мы можем создать политику с большими ограничениями во время установки, так чтобы только @emph{точное} имя исполняемого файла установленного в данный момент @code{guix-daemon} было помечено меткой @code{guix_daemon_exec_t} вместо того, чтобы использовать регулярное выражение, выбирающее большой ряд файлов. Проблемой в данном случае будет то, что root потребуется устанавливать или обновлять политику во время любой установки в случае, если обновлён исполняемый файл @code{guix-daemon}."

msgid "Invoking @command{guix-daemon}"
msgstr "Вызов @command{guix-daemon}"

msgid "The @command{guix-daemon} program implements all the functionality to access the store.  This includes launching build processes, running the garbage collector, querying the availability of a build result, etc.  It is normally run as @code{root} like this:"
msgstr "Программа @command{guix-daemon} реализует весь функционал доступа к складу. Это включает запуск процессов сборки, запуск сборщика мусора, проверка доступности результата сборки и т.д. Он должен быть запущен от @code{root} так:"

msgid "For details on how to set it up, @pxref{Setting Up the Daemon}."
msgstr "Для подробностей о том, как настроить его, смотрите @pxref{Setting Up the Daemon}."

msgid "container, build environment"
msgstr "контейнер, окружение сборки"

msgid "reproducible builds"
msgstr "воспроизводимые сборки"

msgid "By default, @command{guix-daemon} launches build processes under different UIDs, taken from the build group specified with @option{--build-users-group}.  In addition, each build process is run in a chroot environment that only contains the subset of the store that the build process depends on, as specified by its derivation (@pxref{Programming Interface, derivation}), plus a set of specific system directories.  By default, the latter contains @file{/dev} and @file{/dev/pts}.  Furthermore, on GNU/Linux, the build environment is a @dfn{container}: in addition to having its own file system tree, it has a separate mount name space, its own PID name space, network name space, etc.  This helps achieve reproducible builds (@pxref{Features})."
msgstr "По умолчанию @command{guix-daemon} запускает процессы сборки под различными UID, от пользователей из группы, обозначенной в @code{--build-users-group}. В дополнение каждый процесс сборки запускается в окружении chroot, которое содержит только набор элементов склада, от которых зависит процесс сборки, как это обозначено в деривации (@pxref{Programming Interface, derivation}), а также набор специфичных системных директорий. По умолчанию последнее включает @file{/dev} и @file{/dev/pts}. Более того, под GNU/Linux окружение сборки --- это @dfn{контейнер}: в дополнение к тому, что он имеет собственное дерево файловой системы, он также имеет отдельное пространство имён монтирования, своё собственное пространство имён процессов PID, пространство сетевых имён и т.д. Это позволяет получить воспроизводимые сборки (@pxref{Features})."

msgid "When the daemon performs a build on behalf of the user, it creates a build directory under @file{/tmp} or under the directory specified by its @env{TMPDIR} environment variable.  This directory is shared with the container for the duration of the build, though within the container, the build tree is always called @file{/tmp/guix-build-@var{name}.drv-0}."
msgstr "Когда демон выполняет сборку по запросу пользователя, он создаёт директорию под @file{/tmp} или под директорией, заданной его переменной окружения @code{TMPDIR}. Эта директория разделяется с контейнером на время сборки, хотя внутри контейнера дерево сборки всегда называется @file{/tmp/guix-build-@var{name}.drv-0}."

msgid "The build directory is automatically deleted upon completion, unless the build failed and the client specified @option{--keep-failed} (@pxref{Common Build Options, @option{--keep-failed}})."
msgstr "Директория сборки автоматически удаляется по завершении, если конечно, сборка не завершилась с ошибкой, и клиент не обозначил @option{--keep-failed} (@pxref{Invoking guix build, @option{--keep-failed}})."

msgid "The daemon listens for connections and spawns one sub-process for each session started by a client (one of the @command{guix} sub-commands).  The @command{guix processes} command allows you to get an overview of the activity on your system by viewing each of the active sessions and clients.  @xref{Invoking guix processes}, for more information."
msgstr "Демон слушает соединения и порождает один под-процесс для каждой сессии, запускаемой клиентом (одну из подкоманд @command{guix}). Команда @command{guix processes} позволяет мониторить активность вашей системы, предоставляя обзор каждой активной сессии и клиентов. Смотрите @xref{Invoking guix processes} для подробной информации."

msgid "The following command-line options are supported:"
msgstr "Поддерживаются следующие опции командной строки:"

msgid "--build-users-group=@var{group}"
msgstr "--build-users-group=@var{group}"

msgid "Take users from @var{group} to run build processes (@pxref{Setting Up the Daemon, build users})."
msgstr "Использовать пользователей из группы @var{group} для запуска процессов сборки (@pxref{Setting Up the Daemon, build users})."

msgid "--no-substitutes"
msgstr "--no-substitutes"

msgid "substitutes"
msgstr "подстановки"

msgid "Do not use substitutes for build products.  That is, always build things locally instead of allowing downloads of pre-built binaries (@pxref{Substitutes})."
msgstr "Не использовать подстановки для сборок. Это означает --- собирать элементы локально вместо того, чтобы скачивать собранные бинарники (@pxref{Substitutes})."

msgid "When the daemon runs with @option{--no-substitutes}, clients can still explicitly enable substitution @i{via} the @code{set-build-options} remote procedure call (@pxref{The Store})."
msgstr "Когда демон работает с @code{--no-substitutes}, клиенты всё ещё могут явно включить подстановку с помощью удалённого вызова процедур @code{set-build-options} (@pxref{The Store})."

msgid "daemon-substitute-urls"
msgstr "daemon-substitute-urls"

msgid "--substitute-urls=@var{urls}"
msgstr "--substitute-urls=@var{urls}"

msgid "Consider @var{urls} the default whitespace-separated list of substitute source URLs.  When this option is omitted, @indicateurl{@value{SUBSTITUTE-URLS}} is used."
msgstr "Использовать адреса @var{urls}, разделённые пробелом по умолчанию, как список источников подстановок.  Когда эта опция пропущена, используется @indicateurl{@value{SUBSTITUTE-URLS}}."

msgid "This means that substitutes may be downloaded from @var{urls}, as long as they are signed by a trusted signature (@pxref{Substitutes})."
msgstr "Это означает, что подстановки могут скачиваться из адресов @var{urls}, если конечно они подписаны доверенной подписью (@pxref{Substitutes})."

msgid "@xref{Getting Substitutes from Other Servers}, for more information on how to configure the daemon to get substitutes from other servers."
msgstr "@xref{Getting Substitutes from Other Servers}, для получения дополнительной информации о том, как настроить демон для получения заменителей с других серверов."

msgid "--no-offload"
msgstr "--no-offload"

msgid "Do not use offload builds to other machines (@pxref{Daemon Offload Setup}).  That is, always build things locally instead of offloading builds to remote machines."
msgstr "Не использовать подстановки для сборок. Это означает --- собирать элементы локально вместо того, чтобы скачивать собранные бинарники (@pxref{Substitutes})."

msgid "--cache-failures"
msgstr "--cache-failures"

msgid "Cache build failures.  By default, only successful builds are cached."
msgstr "Кешировать ошибки сборки. По умолчанию кешируются только успешные сборки."

msgid "When this option is used, @command{guix gc --list-failures} can be used to query the set of store items marked as failed; @command{guix gc --clear-failures} removes store items from the set of cached failures.  @xref{Invoking guix gc}."
msgstr "При установке этой опции можно использовать @command{guix gc --list-failures}, чтобы просматривать элементы склада, помеченные как ошибочные; @command{guix gc --clear-failures} удаляет элементы склада из кеша ошибок.  @xref{Invoking guix gc}."

msgid "--cores=@var{n}"
msgstr "--cores=@var{n}"

msgid "-c @var{n}"
msgstr "-c @var{n}"

msgid "Use @var{n} CPU cores to build each derivation; @code{0} means as many as available."
msgstr "Использовать @var{n} ядер процессора для сборки каждой деривации; @code{0} означает использовать все доступные."

msgid "The default value is @code{0}, but it may be overridden by clients, such as the @option{--cores} option of @command{guix build} (@pxref{Invoking guix build})."
msgstr "Значение по умолчанию - @code{0}, но оно может быть изменено клиентами, в частности, опцией @code{--cores} команды @command{guix build} (@pxref{Invoking guix build})."

msgid "The effect is to define the @env{NIX_BUILD_CORES} environment variable in the build process, which can then use it to exploit internal parallelism---for instance, by running @code{make -j$NIX_BUILD_CORES}."
msgstr "В результате устанавливается переменная окружения @code{NIX_BUILD_CORES} для процесса сборки, который затем может использовать её для применения внутреннего параллелизма, например, для запуска @code{make -j$NIX_BUILD_CORES}."

msgid "--max-jobs=@var{n}"
msgstr "--max-jobs=@var{n}"

msgid "-M @var{n}"
msgstr "-M @var{n}"

msgid "Allow at most @var{n} build jobs in parallel.  The default value is @code{1}.  Setting it to @code{0} means that no builds will be performed locally; instead, the daemon will offload builds (@pxref{Daemon Offload Setup}), or simply fail."
msgstr "Разрешить максимум @var{n} параллельных задач сборки. Значение по умолчанию - @code{1}. Установка в @code{0} означает, чтоб сборки не будут выполняться локально, вместо этого, демон будет разгружать сборки (@pxref{Daemon Offload Setup}) или просто отчитается об ошибке."

msgid "--max-silent-time=@var{seconds}"
msgstr "--max-silent-time=@var{seconds}"

msgid "When the build or substitution process remains silent for more than @var{seconds}, terminate it and report a build failure."
msgstr "Когда процесс сборки или подстановки молчит более @var{seconds} секунд, завершить его и отчитаться об ошибке сборки."

msgid "The value specified here can be overridden by clients (@pxref{Common Build Options, @option{--max-silent-time}})."
msgstr "Значение, заданное здесь, может быть переопределено клиентами (@pxref{Common Build Options, @code{--max-silent-time}})."

msgid "--timeout=@var{seconds}"
msgstr "--timeout=@var{seconds}"

msgid "Likewise, when the build or substitution process lasts for more than @var{seconds}, terminate it and report a build failure."
msgstr "Точно так же, когда процесс сборки или подстановки длится более @var{seconds}, завершить его и отчитаться об ошибке сборки."

msgid "The value specified here can be overridden by clients (@pxref{Common Build Options, @option{--timeout}})."
msgstr "Значение, заданное здесь, может быть переопределено клиентами (@pxref{Common Build Options, @code{--timeout}})."

msgid "--rounds=@var{N}"
msgstr "--rounds=@var{N}"

msgid "Build each derivation @var{n} times in a row, and raise an error if consecutive build results are not bit-for-bit identical.  Note that this setting can be overridden by clients such as @command{guix build} (@pxref{Invoking guix build})."
msgstr "Собирать каждую деривацию @var{n} раз подряд и вызывать ошибку, если результаты последовательных сборок не идентичны бит-к-биту. Отметим, что эта настройка может быть переопределена клиентами в команде, например, @command{guix build} (@pxref{Invoking guix build})."

msgid "When used in conjunction with @option{--keep-failed}, the differing output is kept in the store, under @file{/gnu/store/@dots{}-check}.  This makes it easy to look for differences between the two results."
msgstr "При использовании вместе с @option{--keep-failed} различные результаты сохраняются на складе под @file{/gnu/store/@dots{}-check}. Это делает возможным просмотр различий между двумя результатами."

msgid "--debug"
msgstr "--debug"

msgid "Produce debugging output."
msgstr "Выводить отладочную информацию."

msgid "This is useful to debug daemon start-up issues, but then it may be overridden by clients, for example the @option{--verbosity} option of @command{guix build} (@pxref{Invoking guix build})."
msgstr "Это полезно для отладки проблем запуска демона, но затем это может быть переопределено клиентами, например, опцией @option{--verbosity} команды @command{guix build} (@pxref{Invoking guix build})."

msgid "--chroot-directory=@var{dir}"
msgstr "--chroot-directory=@var{dir}"

msgid "Add @var{dir} to the build chroot."
msgstr "Добавить директорию @var{dir} в chroot сборки."

msgid "Doing this may change the result of build processes---for instance if they use optional dependencies found in @var{dir} when it is available, and not otherwise.  For that reason, it is not recommended to do so.  Instead, make sure that each derivation declares all the inputs that it needs."
msgstr "Это может изменить результаты процессов сборки, например, если они используют необязательные (опциональные) зависимости, найденные в  @var{dir}, если они доступны, но только так, а не иначе. Поэтому не рекомендуется делать так. Вместо этого, убедитесь, что каждая деривация объявляет все необходимые входные данные."

msgid "--disable-chroot"
msgstr "--disable-chroot"

msgid "Disable chroot builds."
msgstr "Отключить chroot для сборки."

msgid "--log-compression=@var{type}"
msgstr "--log-compression=@var{type}"

msgid "Compress build logs according to @var{type}, one of @code{gzip}, @code{bzip2}, or @code{none}."
msgstr "Архивировать логи сборки методом @var{type}. Это один из: @code{gzip}, @code{bzip2} или @code{none}."

msgid "--discover[=yes|no]"
msgstr "--discover[=yes|no]"

msgid "Whether to discover substitute servers on the local network using mDNS and DNS-SD."
msgstr "Следует ли обнаруживать сервера с заменителями в локальной сети с помощью mDNS and DNS-SD."

msgid "This feature is still experimental.  However, here are a few considerations."
msgstr "Эта функция все еще экспериментальная.  Однако есть несколько соображений."

msgid "It might be faster/less expensive than fetching from remote servers;"
msgstr "Это может быть быстрее/дешевле, чем загрузка (fetching) с удаленных серверов;"

msgid "There are no security risks, only genuine substitutes will be used (@pxref{Substitute Authentication});"
msgstr "Никаких угроз безопасности, будут использоваться только подлинные заменители (@pxref{Substitute Authentication});"

msgid "An attacker advertising @command{guix publish} on your LAN cannot serve you malicious binaries, but they can learn what software you’re installing;"
msgstr "Объявление злоумышленника @command{guix publish} в вашей локальной сети не могут предоставить вам вредоносные двоичные файлы, но они могут узнать, какое программное обеспечение вы устанавливаете;"

msgid "Servers may serve substitute over HTTP, unencrypted, so anyone on the LAN can see what software you’re installing."
msgstr "Серверы могут предоставить заменители через HTTP в незашифрованном виде, поэтому любой в локальной сети может видеть, какое программное обеспечение вы устанавливаете."

msgid "It is also possible to enable or disable substitute server discovery at run-time by running:"
msgstr "Также можно включить или отключить обнаружение сервера с заменителями во время выполнения, запустив:"

msgid ""
"herd discover guix-daemon on\n"
"herd discover guix-daemon off\n"
msgstr ""
"herd discover guix-daemon on\n"
"herd discover guix-daemon off\n"

msgid "--disable-deduplication"
msgstr "--disable-deduplication"

msgid "deduplication"
msgstr "дедупликация"

msgid "Disable automatic file ``deduplication'' in the store."
msgstr "Отключить автоматическую \"дедупликацию\" файлов на складе."

msgid "By default, files added to the store are automatically ``deduplicated'': if a newly added file is identical to another one found in the store, the daemon makes the new file a hard link to the other file.  This can noticeably reduce disk usage, at the expense of slightly increased input/output load at the end of a build process.  This option disables this optimization."
msgstr "По умолчанию файлы, добавленные на склад, автоматически \"дедуплицируются\": если вновь добавленный файл идентичен другому, найденному на складе, демон делает новый файл жесткой ссылкой на другой файл. Это существенно сокращает использование места на диске за счёт небольшого увеличения запросов ввода/вывода в конце процесса сборки. Эта опция отключает такую оптимизацию."

msgid "--gc-keep-outputs[=yes|no]"
msgstr "--gc-keep-outputs[=yes|no]"

msgid "Tell whether the garbage collector (GC) must keep outputs of live derivations."
msgstr "Сообщить, должен ли сборщик мусора (GC) сохранять выходные данные живой деривации."

msgid "GC roots"
msgstr "Корни сборщика мусора"

msgid "garbage collector roots"
msgstr "корни сборщика мусора"

msgid "When set to @code{yes}, the GC will keep the outputs of any live derivation available in the store---the @file{.drv} files.  The default is @code{no}, meaning that derivation outputs are kept only if they are reachable from a GC root.  @xref{Invoking guix gc}, for more on GC roots."
msgstr "При установке в \"yes\" (да), сборщик мусора (GC) будет сохранять результаты любой живой деривации, доступной на складе, --- файлы @code{.drv}. Значение по умолчанию - \"no\" (нет) - означает, что результаты дериваций хранятся только, если они доступны из корней сборщика мусора (GC roots). Смотрите @xref{Invoking guix gc} для информации о корнях сборщика мусора."

msgid "--gc-keep-derivations[=yes|no]"
msgstr "--gc-keep-derivations[=yes|no]"

msgid "Tell whether the garbage collector (GC) must keep derivations corresponding to live outputs."
msgstr "Сообщить, должен ли сборщик мусора (GC) сохранять деривации, соответствующие живым результатам."

msgid "When set to @code{yes}, as is the case by default, the GC keeps derivations---i.e., @file{.drv} files---as long as at least one of their outputs is live.  This allows users to keep track of the origins of items in their store.  Setting it to @code{no} saves a bit of disk space."
msgstr "При указании \"yes\" (да), что является значением по умолчанию, сборщик мусора сохраняет деривации, то есть файлы @code{.drv}, до тех пор, пока любой из их выходов остаётся живым. Это позволяет пользователям отслеживать исходники элементов на складе. Установка в \"no\" (нет) немного экономит место на диске."

msgid "In this way, setting @option{--gc-keep-derivations} to @code{yes} causes liveness to flow from outputs to derivations, and setting @option{--gc-keep-outputs} to @code{yes} causes liveness to flow from derivations to outputs.  When both are set to @code{yes}, the effect is to keep all the build prerequisites (the sources, compiler, libraries, and other build-time tools) of live objects in the store, regardless of whether these prerequisites are reachable from a GC root.  This is convenient for developers since it saves rebuilds or downloads."
msgstr "Таким образом, установка @code{--gc-keep-derivations} в \"yes\" (да) даётт возможность пройти от результатов до дериваций, а установка  @code{--gc-keep-outputs} в \"yes\" (да), делает возможным пройти от дериваций до результатов. Если оба установлены в \"yes\", тогда это сохранит всё используемое для сборки (исходники, компилятор, библиотеки и другие инструменты сборки) живых объектов на складе, без учёта, доступны эти инструменты сборки из корней сборщика мусора или нет. Это удобно для разработчиков, так как это сокращает пересборки или скачивания."

msgid "--impersonate-linux-2.6"
msgstr "--impersonate-linux-2.6"

msgid "On Linux-based systems, impersonate Linux 2.6.  This means that the kernel's @command{uname} system call will report 2.6 as the release number."
msgstr "На системах, основанных на Linux, выдавать себя за Linux 2.6. Это означает, что системный вызов ядра @code{uname} будет выдавать 2.6 номером релиза."

msgid "This might be helpful to build programs that (usually wrongfully) depend on the kernel version number."
msgstr "Это полезно для сборки программ, которые (обычно по ошибке) зависят от версии ядра."

msgid "--lose-logs"
msgstr "--lose-logs"

msgid "Do not keep build logs.  By default they are kept under @file{@var{localstatedir}/guix/log}."
msgstr "Не сохранять логи сборки. По умолчанию они сохраняются под @code{@var{localstatedir}/guix/log}."

msgid "--system=@var{system}"
msgstr "--system=@var{system}"

msgid "Assume @var{system} as the current system type.  By default it is the architecture/kernel pair found at configure time, such as @code{x86_64-linux}."
msgstr "Считать @var{system} текущим типом системы. По умолчанию это пара архитектура/ядро, обнаруженная во время конфигурации, например, @code{x86_64-linux}."

msgid "--listen=@var{endpoint}"
msgstr "--listen=@var{endpoint}"

msgid "Listen for connections on @var{endpoint}.  @var{endpoint} is interpreted as the file name of a Unix-domain socket if it starts with @code{/} (slash sign).  Otherwise, @var{endpoint} is interpreted as a host name or host name and port to listen to.  Here are a few examples:"
msgstr "Слушать соединения с @var{endpoint}. @var{endpoint} интерпретируется как имя файла сокета Unix-домена, если начинается с @code{/} (знак слеша). В противном случае @var{endpoint} интерпретируется как имя хоста или им хоста и порт для прослушивания. Вот несколько примеров:"

msgid "--listen=/gnu/var/daemon"
msgstr "--listen=/gnu/var/daemon"

msgid "Listen for connections on the @file{/gnu/var/daemon} Unix-domain socket, creating it if needed."
msgstr "Слушать соединения с сокетом Unix-домена @file{/gnu/var/daemon}, который создаётся при необходимости."

msgid "--listen=localhost"
msgstr "--listen=localhost"

msgid "daemon, remote access"
msgstr "демон, удалённый доступ"

msgid "remote access to the daemon"
msgstr "удалённый доступ к демону"

msgid "daemon, cluster setup"
msgstr "демон, установка кластера"

msgid "clusters, daemon setup"
msgstr "кластеры, установка демона"

msgid "Listen for TCP connections on the network interface corresponding to @code{localhost}, on port 44146."
msgstr "Слушать соединения TCP сетевого интерфейса, относящиеся к @code{localhost}, на порту 44146."

msgid "--listen=128.0.0.42:1234"
msgstr "--listen=128.0.0.42:1234"

msgid "Listen for TCP connections on the network interface corresponding to @code{128.0.0.42}, on port 1234."
msgstr "Слушать соединения TCP сетевого интерфейса, относящиеся к @code{128.0.0.42}, на порту 1234."

msgid "This option can be repeated multiple times, in which case @command{guix-daemon} accepts connections on all the specified endpoints.  Users can tell client commands what endpoint to connect to by setting the @env{GUIX_DAEMON_SOCKET} environment variable (@pxref{The Store, @env{GUIX_DAEMON_SOCKET}})."
msgstr "Эта опция может повторяться много раз, в таком случае @command{guix-daemon} принимает соединения на всех обозначенных точках. Пользователи могут через клиентские команды сообщать, через какие точки соединяться, для этого нужно устанавливать переменную окружения @code{GUIX_DAEMON_SOCKET} (@pxref{The Store, @code{GUIX_DAEMON_SOCKET}})."

msgid "The daemon protocol is @emph{unauthenticated and unencrypted}.  Using @option{--listen=@var{host}} is suitable on local networks, such as clusters, where only trusted nodes may connect to the build daemon.  In other cases where remote access to the daemon is needed, we recommend using Unix-domain sockets along with SSH."
msgstr "Протокол демона @emph{неаутентичный и нешифрованный}. Использование @code{--listen=@var{host}} подходит локальным сетям, как например, кластерам, где только доверенные узлы могут соединяться с демоном сборки. В других случаях, когда необходим удалённый доступ к демону рекомендуется использовать сокеты Unix-домена вместе с SSH."

msgid "When @option{--listen} is omitted, @command{guix-daemon} listens for connections on the Unix-domain socket located at @file{@var{localstatedir}/guix/daemon-socket/socket}."
msgstr "Когда @code{--listen} пропущена, @command{guix-daemon} слушает соединения с сокетом Unix-домена, расположенным в @file{@var{localstatedir}/guix/daemon-socket/socket}."

msgid "When using Guix on top of GNU/Linux distribution other than Guix System---a so-called @dfn{foreign distro}---a few additional steps are needed to get everything in place.  Here are some of them."
msgstr "При использовании дистрибутива GNU/Linux, отличного от системы, называемого также @dfn{чужой дистрибутив}, необходимо несколько дополнительных шагов, чтобы всё работало. Вот некоторые из них."

msgid "locales-and-locpath"
msgstr "locales-and-locpath"

msgid "locales, when not on Guix System"
msgstr "локали, если не на системе Guix"

msgid "LOCPATH"
msgstr "LOCPATH"

msgid "GUIX_LOCPATH"
msgstr "GUIX_LOCPATH"

msgid "Packages installed @i{via} Guix will not use the locale data of the host system.  Instead, you must first install one of the locale packages available with Guix and then define the @env{GUIX_LOCPATH} environment variable:"
msgstr "Пакеты, установленные с помощью Guix, не будут использовать данные локали хост-системы. Вместо этого вы должны вначале установить один из пакетов локали, доступных в Guix, а затем определить переменную окружения @code{GUIX_LOCPATH}:"

msgid ""
"$ guix install glibc-locales\n"
"$ export GUIX_LOCPATH=$HOME/.guix-profile/lib/locale\n"
msgstr ""
"$ guix install glibc-locales\n"
"$ export GUIX_LOCPATH=$HOME/.guix-profile/lib/locale\n"

msgid "The @env{GUIX_LOCPATH} variable plays a role similar to @env{LOCPATH} (@pxref{Locale Names, @env{LOCPATH},, libc, The GNU C Library Reference Manual}).  There are two important differences though:"
msgstr "Переменная @env{GUIX_LOCPATH} играет ту же роль, что и @env{LOCPATH} (@pxref{Locale Names, @env{LOCPATH},, libc, The GNU C Library Reference Manual}). Но есть два существенных различия:"

msgid "@env{GUIX_LOCPATH} is honored only by the libc in Guix, and not by the libc provided by foreign distros.  Thus, using @env{GUIX_LOCPATH} allows you to make sure the programs of the foreign distro will not end up loading incompatible locale data."
msgstr "@code{GUIX_LOCPATH} учитывается только libc в Guix, но не учитывается libc, предоставляемым чужим дистрибутивом. Так что использование @code{GUIX_LOCPATH} позволяет вам убедиться, что программы чужого дистрибутива не будут производить загрузку несовместимых данных локали."

msgid "libc suffixes each entry of @env{GUIX_LOCPATH} with @code{/X.Y}, where @code{X.Y} is the libc version---e.g., @code{2.22}.  This means that, should your Guix profile contain a mixture of programs linked against different libc version, each libc version will only try to load locale data in the right format."
msgstr "libc добавляет суффиксы @code{/X.Y} к каждому компоненту @code{GUIX_LOCPATH}, где @code{X.Y} - это версия libc, например, @code{2.22}. Это значит, что если ваш профиль Guix будет содержать смесь программ, связанных с дугой версией libc, каждая версия libc будет пытаться загружать только данные локали в правильном формате."

msgid "This is important because the locale data format used by different libc versions may be incompatible."
msgstr "Это важно, потому что использование данных локали другой версией libc может быть неприемлемо."

msgid "name service switch, glibc"
msgstr "выбор имён сервисов, glibc"

msgid "NSS (name service switch), glibc"
msgstr "NSS (выбор имён сервисов), glibc"

msgid "When using Guix on a foreign distro, we @emph{strongly recommend} that the system run the GNU C library's @dfn{name service cache daemon}, @command{nscd}, which should be listening on the @file{/var/run/nscd/socket} socket.  Failing to do that, applications installed with Guix may fail to look up host names or user accounts, or may even crash.  The next paragraphs explain why."
msgstr "При использовании Guix на чужом дистрибутиве мы @emph{настойчиво рекомендуем}, чтобы система запускала @dfn{демон кеша имён сервисов} библиотеки GNU C, @command{nscd}, который должен слушать сокет @file{/var/run/nscd/socket}. Если это не сделано, приложения, установленные Guix, могут некорректно адресовать имена хостов или аккаунты пользователей и даже падать. Ниже объясняется почему."

msgid "nsswitch.conf"
msgstr "nsswitch.conf"

msgid "The GNU C library implements a @dfn{name service switch} (NSS), which is an extensible mechanism for ``name lookups'' in general: host name resolution, user accounts, and more (@pxref{Name Service Switch,,, libc, The GNU C Library Reference Manual})."
msgstr "Библиотека GNU C реализует @dfn{выбор имён сервисов} (NSS), который представляет собой расширяемый механизм для резолвинга имён в целом: резолвинг имён хостов, аккаунтов пользователей и другое (@pxref{Name Service Switch,,, libc, The GNU C Library Reference Manual})."

msgid "Network information service (NIS)"
msgstr "Сервис сетевой информации (NIS)"

msgid "NIS (Network information service)"
msgstr "NIS (сервис сетевой информации)"

msgid "Being extensible, the NSS supports @dfn{plugins}, which provide new name lookup implementations: for example, the @code{nss-mdns} plugin allow resolution of @code{.local} host names, the @code{nis} plugin allows user account lookup using the Network information service (NIS), and so on.  These extra ``lookup services'' are configured system-wide in @file{/etc/nsswitch.conf}, and all the programs running on the system honor those settings (@pxref{NSS Configuration File,,, libc, The GNU C Reference Manual})."
msgstr "Будучи расширяемым, NSS поддерживает @dfn{плагины}, которые предоставляют реализации разрешения новых имён: плагин @code{nss-mdns} резолвит имена хостов @code{.local}, плагин @code{nis} адресует пользовательские аккаунты, используя сервис сетевой информации (NIS) и т.д. Эти дополнительные сервисы адресации настраиваются для всей системы в @file{/etc/nsswitch.conf}, и все запущенные в системе программы учитывают эти настройки (@pxref{NSS Configuration File,,, libc, The GNU C Reference Manual})."

msgid "When they perform a name lookup---for instance by calling the @code{getaddrinfo} function in C---applications first try to connect to the nscd; on success, nscd performs name lookups on their behalf.  If the nscd is not running, then they perform the name lookup by themselves, by loading the name lookup services into their own address space and running it.  These name lookup services---the @file{libnss_*.so} files---are @code{dlopen}'d, but they may come from the host system's C library, rather than from the C library the application is linked against (the C library coming from Guix)."
msgstr "Когда выполняется разрешение имён, например, вызовом функции C @code{getaddrinfo}, приложения вначале делают попытку соединиться с nscd; в случае успеха nscd выполняет разрешение имён по их запросу. Если nscd не запущен, тогда они выполняют разрешение имён самостоятельно, загружая сервисы разрешения имён в их собственные адресные пространства и запуская их. Эти сервисы разрешения имён --- файлы @file{libnss_*.so} --- запускаются @code{dlopen}, но они могут поставляться системной библиотекой C, а не библиотекой C, с которой залинковано приложение (библиотека C из Guix)."

msgid "And this is where the problem is: if your application is linked against Guix's C library (say, glibc 2.24) and tries to load NSS plugins from another C library (say, @code{libnss_mdns.so} for glibc 2.22), it will likely crash or have its name lookups fail unexpectedly."
msgstr "Вот где кроется проблема --- если ваше приложение залинковано с библиотекой C Guix (скажем, glibc 2.24) и пытается загрузить плагины NSS из другой библиотеки C (скажем, @code{libnss_mdns.so} для glibc 2.22), это вероятно вызовет падение или резолвинг имени завершится с ошибкой."

msgid "Running @command{nscd} on the system, among other advantages, eliminates this binary incompatibility problem because those @code{libnss_*.so} files are loaded in the @command{nscd} process, not in applications themselves."
msgstr "Запуск @command{nscd} в системе, помимо преимуществ, также исключает эту проблему несовместимости программ, потому что файлы @code{libnss_*.so} загружены в процессе @command{nscd}, а не в самом приложении."

msgid "X11 Fonts"
msgstr "Шрифты X11"

msgid "fc-cache"
msgstr "fc-cache"

msgid "font cache"
msgstr "кеш шрифтов"

msgid "Once you have installed or removed fonts, or when you notice an application that does not find fonts, you may need to install Fontconfig and to force an update of its font cache by running:"
msgstr "После того, как вы установили или удалили шрифты, или когда вы заметили приложение, которое не находит шрифты, вам может потребоваться установить Fontconfig и принудительно обновить кэш шрифтов, выполнив:"

msgid ""
"guix install fontconfig\n"
"fc-cache -rv\n"
msgstr ""
"guix install fontconfig\n"
"fc-cache -rv\n"

msgid "To display text written in Chinese languages, Japanese, or Korean in graphical applications, consider installing @code{font-adobe-source-han-sans} or @code{font-wqy-zenhei}.  The former has multiple outputs, one per language family (@pxref{Packages with Multiple Outputs}).  For instance, the following command installs fonts for Chinese languages:"
msgstr "Для отображения в графических приложениях текста на китайском, японском, корейском нужно установить @code{font-adobe-source-han-sans} или @code{font-wqy-zenhei}. Первый имеет множественный выход, один для языковой семьи (@pxref{Packages with Multiple Outputs}). Например, следующая команда устанавливает шрифты для китайских языков:"

msgid "guix install font-adobe-source-han-sans:cn\n"
msgstr "guix install font-adobe-source-han-sans:cn\n"

msgid "xterm"
msgstr "xterm"

msgid "Older programs such as @command{xterm} do not use Fontconfig and instead rely on server-side font rendering.  Such programs require to specify a full name of a font using XLFD (X Logical Font Description), like this:"
msgstr "Старые программы, например, @command{xterm}, не используют Fontconfig, а вместо этого вызывают рендеринг шрифтов на стороне сервера. Таким программам необходимо указывать полное имя шрифта, используя XLFD (X Logical Font Description), примерно так:"

msgid "-*-dejavu sans-medium-r-normal-*-*-100-*-*-*-*-*-1\n"
msgstr "-*-dejavu sans-medium-r-normal-*-*-100-*-*-*-*-*-1\n"

msgid "To be able to use such full names for the TrueType fonts installed in your Guix profile, you need to extend the font path of the X server:"
msgstr "Чтобы иметь возможность использовать такие полные имена для шрифтов TrueType, установленных в вашем профиле Guix, вам нужно расширить пути шрифтов X-сервера:"

msgid "xset +fp $(dirname $(readlink -f ~/.guix-profile/share/fonts/truetype/fonts.dir))\n"
msgstr "xset +fp $(dirname $(readlink -f ~/.guix-profile/share/fonts/truetype/fonts.dir))\n"

msgid "xlsfonts"
msgstr "xlsfonts"

msgid "After that, you can run @code{xlsfonts} (from @code{xlsfonts} package)  to make sure your TrueType fonts are listed there."
msgstr "После этого можно запустить @code{xlsfonts} (из пакета @code{xlsfonts}), чтобы убедиться, что ваши шрифты TrueType находятся там."

msgid "nss-certs"
msgstr "nss-certs"

msgid "The @code{nss-certs} package provides X.509 certificates, which allow programs to authenticate Web servers accessed over HTTPS."
msgstr "Пакет @code{nss-certs} предоставялет сертификаты X.509, которые позволяют программам аутентифицировать веб-серверы и работать через HTTPS."

msgid "When using Guix on a foreign distro, you can install this package and define the relevant environment variables so that packages know where to look for certificates.  @xref{X.509 Certificates}, for detailed information."
msgstr "При использовании Guix на чужом дистрибутиве можно установить этот пакет и определить соответствующие переменные окружения, чтобы пакеты знали, где искать сертификаты. Смотрите @xref{X.509 Certificates} для подробной информации."

msgid "emacs"
msgstr "emacs"

msgid "When you install Emacs packages with Guix, the Elisp files are placed under the @file{share/emacs/site-lisp/} directory of the profile in which they are installed.  The Elisp libraries are made available to Emacs through the @env{EMACSLOADPATH} environment variable, which is set when installing Emacs itself."
msgstr "Когда вы устанавливаете пакеты Emacs с Guix, файлы пакетов помещаются в каталог @file{share/emacs/site-lisp/} того профиля, в котором они установлены. Библиотеки Elisp доступны для Emacs через переменную среды @code{EMACSLOADPATH}, которая устанавливается при установке самого Emacs."

msgid "Upgrading Guix, on a foreign distro"
msgstr "Обновление Guix на ином дистрибутиве"

msgid "To upgrade Guix, run:"
msgstr "Чтобы обновить Guix, запустите:"

msgid "guix pull\n"
msgstr "guix pull\n"

msgid "@xref{Invoking guix pull}, for more information."
msgstr "@xref{Invoking guix pull} для дополнительной информации."

msgid "upgrading Guix for the root user, on a foreign distro"
msgstr "обновление Guix для пользователя root на ином дистрибутиве"

msgid "upgrading the Guix daemon, on a foreign distro"
msgstr "обновление Guix демона на ином дистрибутиве"

msgid "@command{guix pull} for the root user, on a foreign distro"
msgstr "@command{guix pull} для пользователя root, на ином дистрибутиве"

msgid "sudo -i guix pull\n"
msgstr "sudo -i guix pull\n"

msgid "followed by (assuming your distro uses the systemd service management tool):"
msgstr "затем (при условии, что ваш дистрибутив использует инструмент управления сервисами systemd):"

msgid "systemctl restart guix-daemon.service\n"
msgstr "systemctl restart guix-daemon.service\n"

msgid "On Guix System, upgrading the daemon is achieved by reconfiguring the system (@pxref{Invoking guix system, @code{guix system reconfigure}})."
msgstr "В системе Guix обновление демона достигается путем перенастройки системы (@pxref{Invoking guix system, @code{guix system reconfigure}})."

msgid "installing Guix System"
msgstr "установка системы Guix"

msgid "Guix System, installation"
msgstr "Система Guix, установка"

msgid "This section explains how to install Guix System on a machine.  Guix, as a package manager, can also be installed on top of a running GNU/Linux system, @pxref{Installation}."
msgstr "Этот раздел объясняет, как установить систему Guix на компьютер. Guix, как пакетный менеджер, можно также установить на уже установленную систему GNU/Linux (@pxref{Installation})."

msgid "You are reading this documentation with an Info reader.  For details on how to use it, hit the @key{RET} key (``return'' or ``enter'') on the link that follows: @pxref{Top, Info reader,, info-stnd, Stand-alone GNU Info}.  Hit @kbd{l} afterwards to come back here."
msgstr "Вы читаете этот документ с помощью info-просмотрщика. Чтобы узнать, как им пользоваться, нажмите кнопку @key{Ввод} (enter) по ссылке: @pxref{Top, Info reader,, info-stnd, Stand-alone GNU Info}. Нажмите @kbd{1} после этого, чтобы вернуться."

msgid "Alternatively, run @command{info info} in another tty to keep the manual available."
msgstr "Или запустите @command{info info} в другом tty, чтобы оставить руководство доступным."

msgid "We consider Guix System to be ready for a wide range of ``desktop'' and server use cases.  The reliability guarantees it provides---transactional upgrades and rollbacks, reproducibility---make it a solid foundation."
msgstr "Мы полагаем, система Guix будет широко применяться для офисных и серверных решений. Гарантия надёжности основана на транзакционных обновлениях, откатах и воспроизводимости. Это наше прочное основание."

msgid "More than a disclaimer, this is an invitation to report issues (and success stories!), and to join us in improving it.  @xref{Contributing}, for more info."
msgstr "Мы настойчиво призываем вас присылать отчёты о проблемах (или историиуспеха!). Присоединяйтесь к нам, если вы хотите улучшить Guix. Смотрите @xref{Contributing}, чтобы узнать больше."

msgid "hardware support on Guix System"
msgstr "поддержка аппаратного обеспечения в системе Guix"

msgid "GNU@tie{}Guix focuses on respecting the user's computing freedom.  It builds around the kernel Linux-libre, which means that only hardware for which free software drivers and firmware exist is supported.  Nowadays, a wide range of off-the-shelf hardware is supported on GNU/Linux-libre---from keyboards to graphics cards to scanners and Ethernet controllers.  Unfortunately, there are still areas where hardware vendors deny users control over their own computing, and such hardware is not supported on Guix System."
msgstr "GNU@tie{}Guix особенно заботится об уважении свободы пользователя при работе за компьютером. Она построена на ядре Linux-libre, что означает, что поддерживается только аппаратное обеспечение, которое имеет свободные драйверы и прошивки. Сегодня широкий список наличествующей аппаратуры поддерживается GNU/Linux-libre --- от клавиатур и графических карт до сканеров и контроллеров Ethernet. К сожалению, всё ещё остаётся ряд производителей железа, которые запрещают пользователям управлять их устройствами, и такое аппаратное обеспечение не поддерживается системой Guix."

msgid "WiFi, hardware support"
msgstr "WiFi, поддержка аппаратного обеспечения"

msgid "One of the main areas where free drivers or firmware are lacking is WiFi devices.  WiFi devices known to work include those using Atheros chips (AR9271 and AR7010), which corresponds to the @code{ath9k} Linux-libre driver, and those using Broadcom/AirForce chips (BCM43xx with Wireless-Core Revision 5), which corresponds to the @code{b43-open} Linux-libre driver.  Free firmware exists for both and is available out-of-the-box on Guix System, as part of @code{%base-firmware} (@pxref{operating-system Reference, @code{firmware}})."
msgstr "Основной областью, в которой отсутствуют свободные драйверы и прошивки, являются устройства Wi-Fi. Работают устройства Wi-Fi, которые используют платы Atheros (AR9271 и AR7010) и взаимодействуют с драйвером Linux-libre @code{ath9k}, также использующие платы Broadcom/AirForce (BCM43xx with Wireless-Core Revision 5), которые работают с драйвером Linux-libre @code{b43-open}. Свободная прошивка существует для обоих и доступна в системе Guix из коробки как часть @var{%base-firmware} (@pxref{operating-system Reference, @code{firmware}})."

msgid "The installer warns you early on if it detects devices that are known @emph{not} to work due to the lack of free firmware or free drivers."
msgstr "Программа установки предупредит вас заранее, если обнаружит устройства, которые, как известно, @emph{не} работают из-за отсутствия свободной прошивки или свободных драйверов."

msgid "RYF, Respects Your Freedom"
msgstr "уважение вашей свободы (RYF)"

msgid "The @uref{https://www.fsf.org/, Free Software Foundation} runs @uref{https://www.fsf.org/ryf, @dfn{Respects Your Freedom}} (RYF), a certification program for hardware products that respect your freedom and your privacy and ensure that you have control over your device.  We encourage you to check the list of RYF-certified devices."
msgstr "@uref{https://www.fsf.org/, Фонд свободного программного обспечения FSF} ведёт @uref{https://www.fsf.org/ryf, @dfn{Уважение вашей свободы}} (RYF) --- программу сертификации аппаратного обеспечения, которое уважает вашу свободу и вашу безопасность и утверждает, что вы имеете контроль над вашими устройствами. Мы побуждаем вас проверить список устройств, сертифицированных RYF."

msgid "Another useful resource is the @uref{https://www.h-node.org/, H-Node} web site.  It contains a catalog of hardware devices with information about their support in GNU/Linux."
msgstr "Другой полезный ресурс --- сайт @uref{https://www.h-node.org/, H-Node}. Он содержит каталог устройств с информацией об их поддержке в GNU/Linux."

msgid "An ISO-9660 installation image that can be written to a USB stick or burnt to a DVD can be downloaded from @indicateurl{@value{BASE-URL}/guix-system-install-@value{VERSION}.x86_64-linux.iso}, where you can replace @code{x86_64-linux} with one of:"
msgstr "Установочный образ ISO-9660 может быть записан на USB-флеш или DVD, скачать его можно по адресу: @indicateurl{@value{BASE-URL}/guix-system-install-@value{VERSION}.x86_64-linux.iso}, где вы можете заменить @code{x86_64-linux} на один из:"

msgid "for a GNU/Linux system on Intel/AMD-compatible 64-bit CPUs;"
msgstr "для системы GNU/Linux на 64-битных Intel/AMD-совместимых процессорах;"

msgid "for a 32-bit GNU/Linux system on Intel-compatible CPUs."
msgstr "для системы GNU/Linux на 32-битных Intel-совместимых процессорах."

msgid "Make sure to download the associated @file{.sig} file and to verify the authenticity of the image against it, along these lines:"
msgstr "Обязательно скачайте связанный файл подписи @file{.sig} и проверьте аутентичность образа так:"

msgid ""
"$ wget @value{BASE-URL}/guix-system-install-@value{VERSION}.x86_64-linux.iso.sig\n"
"$ gpg --verify guix-system-install-@value{VERSION}.x86_64-linux.iso.sig\n"
msgstr ""
"$ wget @value{BASE-URL}/guix-system-install-@value{VERSION}.x86_64-linux.iso.sig\n"
"$ gpg --verify guix-system-install-@value{VERSION}.x86_64-linux.iso.sig\n"

msgid "If that command fails because you do not have the required public key, then run this command to import it:"
msgstr "Если это завершается ошибкой, значит у вас нет необходимого публичного ключа, тогда запустите команду для импорта ключа:"

msgid ""
"$ wget @value{OPENPGP-SIGNING-KEY-URL} \\\n"
"      -qO - | gpg --import -\n"
msgstr ""
"$ wget @value{OPENPGP-SIGNING-KEY-URL} \\\n"
"      -qO - | gpg --import -\n"

msgid "and rerun the @code{gpg --verify} command."
msgstr "и запустите команду @code{gpg --verify}."

msgid "Take note that a warning like ``This key is not certified with a trusted signature!'' is normal."
msgstr "Обратите внимание, что предупреждение по типу «Этот ключ не сертифицирован с доверенной подписью!» является нормальным."

msgid "This image contains the tools necessary for an installation.  It is meant to be copied @emph{as is} to a large-enough USB stick or DVD."
msgstr "Этот образ содержит инструменты, необходимые для установки. Он должен копироваться @emph{как есть} на большую USB-флеш или DVD."

msgid "Copying to a USB Stick"
msgstr "Запись на USB-флеш"

msgid "Insert a USB stick of 1@tie{}GiB or more into your machine, and determine its device name.  Assuming that the USB stick is known as @file{/dev/sdX}, copy the image with:"
msgstr "Вставьте в компьютер USB-флеш объёмом 1@tie{}Гб или более и определите его имя. Учитывая имя (обычно соответствующее @file{/dev/sdX}) скопируйте образ на него:"

msgid ""
"dd if=guix-system-install-@value{VERSION}.x86_64-linux.iso of=/dev/sdX status=progress\n"
"sync\n"
msgstr ""
"dd if=guix-system-install-@value{VERSION}.x86_64-linux.iso of=/dev/sdX status=progress\n"
"sync\n"

msgid "Access to @file{/dev/sdX} usually requires root privileges."
msgstr "Доступ к @file{/dev/sdX} обычно требует привилегий root."

msgid "Burning on a DVD"
msgstr "Запись на DVD"

msgid "Insert a blank DVD into your machine, and determine its device name.  Assuming that the DVD drive is known as @file{/dev/srX}, copy the image with:"
msgstr "Вставьте чистый DVD в компьютер и определите имя устройства. Обычно DVD определяется как @file{/dev/srX}, скопируйте образ так:"

msgid "growisofs -dvd-compat -Z /dev/srX=guix-system-install-@value{VERSION}.x86_64-linux.iso\n"
msgstr "growisofs -dvd-compat -Z /dev/srX=guix-system-install-@value{VERSION}.x86_64-linux.iso\n"

msgid "Access to @file{/dev/srX} usually requires root privileges."
msgstr "Доступ к @file{/dev/srX} обычно требует привилегий root."

msgid "Booting"
msgstr "Загрузка"

msgid "Once this is done, you should be able to reboot the system and boot from the USB stick or DVD@.  The latter usually requires you to get in the BIOS or UEFI boot menu, where you can choose to boot from the USB stick.  In order to boot from Libreboot, switch to the command mode by pressing the @kbd{c} key and type @command{search_grub usb}."
msgstr "Когда это сделано, вы должны перезагрузить систему и загрузиться с USB-флеш или DVD. Последнее обычно требует доступа к меню BIOS или UEFI, где можно выбрать загрузку с USB-флеш."

msgid "@xref{Installing Guix in a VM}, if, instead, you would like to install Guix System in a virtual machine (VM)."
msgstr "Смотрите @xref{Installing Guix in a VM}, если вы хотите установить систему Guix на виртуальную машину (VM)."

msgid "Once you have booted, you can use the guided graphical installer, which makes it easy to get started (@pxref{Guided Graphical Installation}).  Alternatively, if you are already familiar with GNU/Linux and if you want more control than what the graphical installer provides, you can choose the ``manual'' installation process (@pxref{Manual Installation})."
msgstr "Когда вы загрузитесь, вы можете использовать графическую установку, которая намного проще для начала (@pxref{Guided Graphical Installation}). Или если вы уже знакомы с GNU/Linux или вы хотите больший контроль, чем это предоставляет графическая установка, вы можете выбрать ручной процесс установки (@pxref{Manual Installation})."

msgid "The graphical installer is available on TTY1.  You can obtain root shells on TTYs 3 to 6 by hitting @kbd{ctrl-alt-f3}, @kbd{ctrl-alt-f4}, etc.  TTY2 shows this documentation and you can reach it with @kbd{ctrl-alt-f2}.  Documentation is browsable using the Info reader commands (@pxref{Top,,, info-stnd, Stand-alone GNU Info}).  The installation system runs the GPM mouse daemon, which allows you to select text with the left mouse button and to paste it with the middle button."
msgstr "Графическа установка доступна в TTY1. Вы можете запустить оболочку root в TTY 3-6, нажимая @kbd{ctrl-alt-f3}, @kbd{ctrl-alt-f4} и т.д.  TTY2 отображает эту документацию, открыть его можно клавишами @kbd{ctrl-alt-f2}. Листать документацию можно командами просмотрщика Info (@pxref{Top,,, info-stnd, Stand-alone GNU Info}). Установка системы запускает демона мыши GPM, который позволяет вам выделять текст лековй кнопкой мыши и вставлять средней кнопкой."

msgid "Installation requires access to the Internet so that any missing dependencies of your system configuration can be downloaded.  See the ``Networking'' section below."
msgstr "Установка требует доступа к Интернету, чтобы скачивать любые отсутствующие зависимости в вашей конфигурации системы. Смотрите раздел \"Сеть\" ниже."

msgid "The graphical installer is a text-based user interface.  It will guide you, with dialog boxes, through the steps needed to install GNU@tie{}Guix System."
msgstr "Графический установщик представляет собой текстовый интерфейс. Он взаимодействует через диалоговые блоки, проходя шаги установки системы GNU@tie{}Guix."

msgid "The first dialog boxes allow you to set up the system as you use it during the installation: you can choose the language, keyboard layout, and set up networking, which will be used during the installation.  The image below shows the networking dialog."
msgstr "Первый диалоговый блок позволяет вам установить систему в таком виде, как во время установки. Вы можете выбрать язык, раскладку клавиатуры, задать настройки сети для установки. На картинке ниже --- диалог настройки сети."

msgid "@image{images/installer-network,5in,, networking setup with the graphical installer}"
msgstr "@image{images/installer-network,5in,, networking setup with the graphical installer}"

msgid "Later steps allow you to partition your hard disk, as shown in the image below, to choose whether or not to use encrypted file systems, to enter the host name and root password, and to create an additional account, among other things."
msgstr "Следующие шаги позволят вам разметить диск, как это показано на картинке ниже. Также можно выбрать шифрование вайловой системы (или без шифрования), ввести имя хоста и пароль root, создать дополнительную учётную запись и другие действия."

msgid "@image{images/installer-partitions,5in,, partitioning with the graphical installer}"
msgstr "@image{images/installer-partitions,5in,, partitioning with the graphical installer}"

msgid "Note that, at any time, the installer allows you to exit the current installation step and resume at a previous step, as show in the image below."
msgstr "Отметим, что в любое время установщик позволяет вам отменить текущий шаг и вернуться к предыдущему шагу установки, как это показано на картинке ниже."

msgid "@image{images/installer-resume,5in,, resuming the installation process}"
msgstr "@image{images/installer-resume,5in,, resuming the installation process}"

msgid "Once you're done, the installer produces an operating system configuration and displays it (@pxref{Using the Configuration System}).  At that point you can hit ``OK'' and installation will proceed.  On success, you can reboot into the new system and enjoy.  @xref{After System Installation}, for what's next!"
msgstr "Когда настройки выполнены, установщик сгенерирует конфигурацию операционной системы и отобразит её (@pxref{Using the Configuration System}).  На этом этапе нажатие ``OK'' запустит установку.  После успешнго завершения нужно перезагрузиться и использовать новую систему.  Смотрите @xref{After System Installation}, чтобы узнать ещё больше!"

msgid "This section describes how you would ``manually'' install GNU@tie{}Guix System on your machine.  This option requires familiarity with GNU/Linux, with the shell, and with common administration tools.  If you think this is not for you, consider using the guided graphical installer (@pxref{Guided Graphical Installation})."
msgstr "Этот раздел описывает, как можно вручную установить систему GNU@tie{}Guix на вашу машину. Это потребует знаний GNU/Linux, оболочки и инструментов администрирования. Если вы считаете, это не для вас, используйте вариант графической установки (@pxref{Guided Graphical Installation})."

msgid "The installation system provides root shells on TTYs 3 to 6; press @kbd{ctrl-alt-f3}, @kbd{ctrl-alt-f4}, and so on to reach them.  It includes many common tools needed to install the system, but is also a full-blown Guix System.  This means that you can install additional packages, should you need it, using @command{guix package} (@pxref{Invoking guix package})."
msgstr "Система установки предоставляет root-оболочки в TTY от 3 до 6; нажмите @kbd{ctrl-alt-f3}, @kbd{ctrl-alt-f4} и так далее, чтобы попасть в них. Они включают много распространенных инструментов, необходимых для установки системы, но они также является полноценной системой Guix. Это означает, что вы можете установить дополнительные пакеты, если вам это понадобится, используя @command{guix package} (@pxref{Invoking guix package})."

msgid "Keyboard Layout, Networking, and Partitioning"
msgstr "Раскладка клавиатуры, Сеть, Разметка диска"

msgid "Before you can install the system, you may want to adjust the keyboard layout, set up networking, and partition your target hard disk.  This section will guide you through this."
msgstr "Перед установкой системы вам может понадобиться смена раскладки клавиатуры, а также настройка сети и разметка целевого жёсткого диска. В этом разделе приведены соответствующие инструкции."

msgid "keyboard layout"
msgstr "раскладка клавиатуры"

msgid "The installation image uses the US qwerty keyboard layout.  If you want to change it, you can use the @command{loadkeys} command.  For example, the following command selects the Dvorak keyboard layout:"
msgstr "Установочный образ использует раскладку клавиатуры US qwerty. Если нужно поменять её, можно пользоваться командой @command{loadkeys}. Например, следующая команда выбирает раскладку клавиатуры Dvorak:"

msgid "loadkeys dvorak\n"
msgstr "loadkeys dvorak\n"

msgid "See the files under @file{/run/current-system/profile/share/keymaps} for a list of available keyboard layouts.  Run @command{man loadkeys} for more information."
msgstr "Смотрите файлы в @file{/run/current-system/profile/share/keymaps}, чтобы найти список доступных раскладок. Запустите @command{man loadkeys}, чтобы узнать больше."

msgid "manual-installation-networking"
msgstr "manual-installation-networking"

msgid "Networking"
msgstr "Сеть"

msgid "Run the following command to see what your network interfaces are called:"
msgstr "Запустите следующую команду, чтобы узнать имена сетевых интерфейсов:"

msgid "ifconfig -a\n"
msgstr "ifconfig -a\n"

msgid "@dots{} or, using the GNU/Linux-specific @command{ip} command:"
msgstr "@dots{} или используйте специальную команду GNU/Linux @command{ip}:"

msgid "ip address\n"
msgstr "ip address\n"

msgid "Wired interfaces have a name starting with @samp{e}; for example, the interface corresponding to the first on-board Ethernet controller is called @samp{eno1}.  Wireless interfaces have a name starting with @samp{w}, like @samp{w1p2s0}."
msgstr "Проводные интерфейсы называются на букву @samp{e}; например, интерфейс, соответствующий первому контроллеру Ethernet на материнской плате, называется @samp{eno1}. Беспроводные интерфейсы имеют имена, начинающиеся с @samp{w}, как @samp{w1p2s0}."

msgid "Wired connection"
msgstr "Проводное соединение"

msgid "To configure a wired network run the following command, substituting @var{interface} with the name of the wired interface you want to use."
msgstr "Чтобы настроить проводную сеть, запустите следующую команду, заменив @var{interface} именем проводного интерфейса, который вы хотите использовать."

msgid "ifconfig @var{interface} up\n"
msgstr "ifconfig @var{interface} up\n"

msgid "ip link set @var{interface} up\n"
msgstr "ifconfig @var{interface} up\n"

msgid "Wireless connection"
msgstr "Беспроводное соединение"

msgid "wireless"
msgstr "беспроводной"

msgid "WiFi"
msgstr "WiFi"

msgid "To configure wireless networking, you can create a configuration file for the @command{wpa_supplicant} configuration tool (its location is not important) using one of the available text editors such as @command{nano}:"
msgstr "Чтобы настроить беспроводную сеть, можно создать конфигурционный файл для @command{wpa_supplicant} (расположение файла неважно). Можно пользоваться любым доступным текстовым редактором, например, @command{nano}:"

msgid "nano wpa_supplicant.conf\n"
msgstr "nano wpa_supplicant.conf\n"

msgid "As an example, the following stanza can go to this file and will work for many wireless networks, provided you give the actual SSID and passphrase for the network you are connecting to:"
msgstr "Следующий пример настроек подойдёт для большинства беспроводных сетей. Нужно предоставить фактический SSID и парольную фразу для сети, к которой вы подключаетесь:"

msgid ""
"network=@{\n"
"  ssid=\"@var{my-ssid}\"\n"
"  key_mgmt=WPA-PSK\n"
"  psk=\"the network's secret passphrase\"\n"
"@}\n"
msgstr ""
"network=@{\n"
"  ssid=\"@var{my-ssid}\"\n"
"  key_mgmt=WPA-PSK\n"
"  psk=\"the network's secret passphrase\"\n"
"@}\n"

msgid "Start the wireless service and run it in the background with the following command (substitute @var{interface} with the name of the network interface you want to use):"
msgstr "Запустите сервис беспроводной сети в фоновом режиме следующей командой (замените @var{interface} именем сетевого интерфейса, который вы используете):"

msgid "wpa_supplicant -c wpa_supplicant.conf -i @var{interface} -B\n"
msgstr "wpa_supplicant -c wpa_supplicant.conf -i @var{interface} -B\n"

msgid "Run @command{man wpa_supplicant} for more information."
msgstr "Запустите @command{man wpa_supplicant}, чтобы узнать больше."

msgid "DHCP"
msgstr "DHCP"

msgid "At this point, you need to acquire an IP address.  On a network where IP addresses are automatically assigned @i{via} DHCP, you can run:"
msgstr "Теперь нужно получить IP-адрес. В случае сети, где IP-адреса автоматически распределяются с помощью DHCP, можно запустить:"

msgid "dhclient -v @var{interface}\n"
msgstr "dhclient -v @var{interface}\n"

msgid "Try to ping a server to see if networking is up and running:"
msgstr "Попробуйте пинговать сервер, чтобы узнать, работает ли сеть:"

msgid "ping -c 3 gnu.org\n"
msgstr "ping -c 3 gnu.org\n"

msgid "Setting up network access is almost always a requirement because the image does not contain all the software and tools that may be needed."
msgstr "Настройка доступа к сети необходима почти всегда, потому что ораз может не иметь программное обеспечение и инструменты, которые могут понадобиться."

msgid "proxy, during system installation"
msgstr "Система Guix, установка"

msgid "If you need HTTP and HTTPS access to go through a proxy, run the following command:"
msgstr "Если вам нужено настроить доступ HTTP и HTTPS прокси, выполните следующую команду:"

msgid "herd set-http-proxy guix-daemon @var{URL}\n"
msgstr "herd set-http-proxy guix-daemon @var{URL}\n"

msgid "where @var{URL} is the proxy URL, for example @code{http://example.org:8118}."
msgstr "где @var{URL} адрес прокси, например @code{http://example.org:8118}."

msgid "installing over SSH"
msgstr "установка через SSH"

msgid "If you want to, you can continue the installation remotely by starting an SSH server:"
msgstr "Если желаете, вы можете продолжить установку удалённо, запустив SSH-сервер:"

msgid "herd start ssh-daemon\n"
msgstr "herd start ssh-daemon\n"

msgid "Make sure to either set a password with @command{passwd}, or configure OpenSSH public key authentication before logging in."
msgstr "Не забудьте задать пароль командой @command{passwd} или настроить публичный ключ OpenSSH для аутентификации, чтобы иметь возможность подключиться."

msgid "Disk Partitioning"
msgstr "Разметка диска"

msgid "Unless this has already been done, the next step is to partition, and then format the target partition(s)."
msgstr "Если это ещё не сделано, тогда нужно разделить диск, а затем отформатировать целевой(-ые) раздел(ы)."

msgid "The installation image includes several partitioning tools, including Parted (@pxref{Overview,,, parted, GNU Parted User Manual}), @command{fdisk}, and @command{cfdisk}.  Run it and set up your disk with the partition layout you want:"
msgstr "Установочный образ содержит несколько инструментов для разметки, включая Parted (@pxref{Overview,,, parted, GNU Parted User Manual}), @command{fdisk} и @command{cfdisk}. Запустите и настройте ваш диск, используя план разметки, который нужен:"

msgid "cfdisk\n"
msgstr "cfdisk\n"

msgid "If your disk uses the GUID Partition Table (GPT) format and you plan to install BIOS-based GRUB (which is the default), make sure a BIOS Boot Partition is available (@pxref{BIOS installation,,, grub, GNU GRUB manual})."
msgstr "Если ваш диск использует формат GUID Partition Table (GPT), и вы планируете использовать GRUB, работающий с BIOS (что по умолчанию), убедитесь, что раздел BIOS Boot Partition доступен (@pxref{BIOS installation,,, grub, GNU GRUB manual})."

msgid "EFI, installation"
msgstr "EFI, установка"

msgid "UEFI, installation"
msgstr "UEFI, установка"

msgid "ESP, EFI system partition"
msgstr "ESP, EFI разметка системы"

msgid "If you instead wish to use EFI-based GRUB, a FAT32 @dfn{EFI System Partition} (ESP) is required.  This partition can be mounted at @file{/boot/efi} for instance and must have the @code{esp} flag set.  E.g., for @command{parted}:"
msgstr "Если вместо этого вы хотите использовать GRUB, работающий с EFI, тогда необходима @dfn{разметка система EFI} FAT32 (ESP). Такая разметка может, например, монтироваться в @file{/boot/efi} и должна иметь флаг @code{esp}. То есть в случае @command{parted}:"

msgid "parted /dev/sda set 1 esp on\n"
msgstr "parted /dev/sda set 1 esp on\n"

msgid "grub-bootloader"
msgstr "grub-bootloader"

msgid "grub-efi-bootloader"
msgstr "grub-efi-bootloader"

msgid "Unsure whether to use EFI- or BIOS-based GRUB? If the directory @file{/sys/firmware/efi} exists in the installation image, then you should probably perform an EFI installation, using @code{grub-efi-bootloader}.  Otherwise you should use the BIOS-based GRUB, known as @code{grub-bootloader}.  @xref{Bootloader Configuration}, for more info on bootloaders."
msgstr "Не уверенны, что выбрать: GRUB, взаимодействующий с EFI или BIOS? Если существует директория @file{/sys/firmware/efi} в установочом образе, тогда вам следует использовать установку EFI и @code{grub-efi-bootloader}. В противном случае нужно использовать GRUB, работающий с BIOS, называемый @code{grub-bootloader}. Смотрите @xref{Bootloader Configuration} для большей информации о загрузчиках."

msgid "Once you are done partitioning the target hard disk drive, you have to create a file system on the relevant partition(s)@footnote{Currently Guix System only supports ext4, btrfs, JFS, F2FS, and XFS file systems.  In particular, code that reads file system UUIDs and labels only works for these file system types.}.  For the ESP, if you have one and assuming it is @file{/dev/sda1}, run:"
msgstr "Когда разметка целевого диска выполнена, нужно создать файловую систему на соответствующем(-их) разделе(-ах)@footnote{В данный момент система Guix поддерживает только файловые системы ext4, btrfs, JFS, F2FS и XFS. По факту, код, читающий UUID и метки файлвых систем, работает только для этих типов файловых систем.}. В случае ESP, если у вас раздел @file{/dev/sda1}, выполните:"

msgid "mkfs.fat -F32 /dev/sda1\n"
msgstr "mkfs.fat -F32 /dev/sda1\n"

msgid "For the root file system, ext4 is the most widely used format.  Other file systems, such as Btrfs, support compression, which is reported to nicely complement file deduplication that the daemon performs independently of the file system (@pxref{Invoking guix-daemon, deduplication})."
msgstr "Для корневой файловой системы наиболее широко используется формат ext4.  Другие файловые системы, такие как Btrfs, поддерживают сжатие, которое, как известно, прекрасно дополняет дедупликацию файлов, которую демон выполняет независимо от файловой системы (@pxref{Invoking guix-daemon, deduplication})."

msgid "Preferably, assign file systems a label so that you can easily and reliably refer to them in @code{file-system} declarations (@pxref{File Systems}).  This is typically done using the @code{-L} option of @command{mkfs.ext4} and related commands.  So, assuming the target root partition lives at @file{/dev/sda2}, a file system with the label @code{my-root} can be created with:"
msgstr "Желательно добавить метки файловых систем, чтобы вы могли ссылаться на них по именам в объявлениях @code{file-system} (@pxref{File Systems}). Обычно это можно сделать опцией @code{-L} в @command{mkfs.ext4}, например. Допустим, раздел root располагается в @file{/dev/sda2}, можно добавить метку @code{my-root} следующим образом:"

msgid "mkfs.ext4 -L my-root /dev/sda2\n"
msgstr "mkfs.ext4 -L my-root /dev/sda2\n"

msgid "encrypted disk"
msgstr "шифрованный диск"

msgid "If you are instead planning to encrypt the root partition, you can use the Cryptsetup/LUKS utilities to do that (see @inlinefmtifelse{html, @uref{https://linux.die.net/man/8/cryptsetup, @code{man cryptsetup}}, @code{man cryptsetup}} for more information)."
msgstr "Если вы планируете зашифровать раздел root, то вы можете использовать для этого утилиты Cryptsetup/LUKS (см. @inlinefmtifelse{html, @uref{https://linux.die.net/man/8/cryptsetup, @code{man cryptsetup}}, @code{man cryptsetup}} для получения дополнительной информации)."

msgid "Once that is done, mount the target file system under @file{/mnt} with a command like (again, assuming @code{my-root} is the label of the root file system):"
msgstr "Когда это сделано, монтируйте целевую файловую систему под @file{/mnt} следующей командой (опять же полагая, что метка раздела root --- @code{my-root}):"

msgid "mount LABEL=my-root /mnt\n"
msgstr "mount LABEL=my-root /mnt\n"

msgid "Also mount any other file systems you would like to use on the target system relative to this path.  If you have opted for @file{/boot/efi} as an EFI mount point for example, mount it at @file{/mnt/boot/efi} now so it is found by @code{guix system init} afterwards."
msgstr "Также монтируйте любые другие файловые системы внутрь целевой файловой системы. Если например, выбрана точка монтирования EFI @file{/boot/efi}, монтируйте её в @file{/mnt/boot/efi}, так, чтобы она обнаруживалась после запуска @code{guix system init}."

msgid "Finally, if you plan to use one or more swap partitions (@pxref{Swap Space}), make sure to initialize them with @command{mkswap}.  Assuming you have one swap partition on @file{/dev/sda3}, you would run:"
msgstr "Наконец, если вы планируете использовать один или более разделов подкачки (@pxref{Swap Space}), обязательно инициализируйте их с помощью @command{mkswap}. Предположим, что у вас есть один раздел подкачки на @file{/dev/sda3}, вы должны выполнить:"

msgid ""
"mkswap /dev/sda3\n"
"swapon /dev/sda3\n"
msgstr ""
"mkswap /dev/sda3\n"
"swapon /dev/sda3\n"

msgid "Alternatively, you may use a swap file.  For example, assuming that in the new system you want to use the file @file{/swapfile} as a swap file, you would run@footnote{This example will work for many types of file systems (e.g., ext4).  However, for copy-on-write file systems (e.g., btrfs), the required steps may be different.  For details, see the manual pages for @command{mkswap} and @command{swapon}.}:"
msgstr "Возможно, вместо этого вы используете swap-файл. Например, предположим, вы хотите использовать в новой системе swap-файл в @file{/swapfile}, тогда нужно выполнить@footnote{Этот пример работает для многих типов файловых систем, например, ext4. Однако для файловых систем, использующих механизм копирование при записи (copy-on-write), например, btrfs, необходимы другие шаги. Подробнее смотрите в мануалах для @command{mkswap} и @command{swapon}.}:"

msgid ""
"# This is 10 GiB of swap space.  Adjust \"count\" to change the size.\n"
"dd if=/dev/zero of=/mnt/swapfile bs=1MiB count=10240\n"
"# For security, make the file readable and writable only by root.\n"
"chmod 600 /mnt/swapfile\n"
"mkswap /mnt/swapfile\n"
"swapon /mnt/swapfile\n"
msgstr ""
"# This is 10 GiB of swap space.  Adjust \"count\" to change the size.\n"
"dd if=/dev/zero of=/mnt/swapfile bs=1MiB count=10240\n"
"# For security, make the file readable and writable only by root.\n"
"chmod 600 /mnt/swapfile\n"
"mkswap /mnt/swapfile\n"
"swapon /mnt/swapfile\n"

msgid "Note that if you have encrypted the root partition and created a swap file in its file system as described above, then the encryption also protects the swap file, just like any other file in that file system."
msgstr "Заметим, что если вы шифруете раздел root и создаёте swap-файл в его файловой системе, как это описано выше, шифрование также будет защищать swap-файл, как и любой другой файл в этой файловой системе."

msgid "With the target partitions ready and the target root mounted on @file{/mnt}, we're ready to go.  First, run:"
msgstr "Когда целевые разделы готовы и раздел root монтирован под @file{/mnt}, всё готово для старта. Сначала запустите:"

msgid "herd start cow-store /mnt\n"
msgstr "herd start cow-store /mnt\n"

msgid "This makes @file{/gnu/store} copy-on-write, such that packages added to it during the installation phase are written to the target disk on @file{/mnt} rather than kept in memory.  This is necessary because the first phase of the @command{guix system init} command (see below) entails downloads or builds to @file{/gnu/store} which, initially, is an in-memory file system."
msgstr "Это сделает @file{/gnu/store} копируемым при записи (copy-on-write), что заставит систему записывать пакеты, добавляемые в систему на этапе установки, на целевой диск под @file{/mnt}, а не держать их в памяти. Это важно, потому что по команде @command{guix system init} (смотрите ниже) будут скачиваться или собираться пакеты в @file{/gnu/store}, которая изначально находится в файловой системе, загрузженной в память."

msgid "Next, you have to edit a file and provide the declaration of the operating system to be installed.  To that end, the installation system comes with three text editors.  We recommend GNU nano (@pxref{Top,,, nano, GNU nano Manual}), which supports syntax highlighting and parentheses matching; other editors include mg (an Emacs clone), and nvi (a clone of the original BSD @command{vi} editor).  We strongly recommend storing that file on the target root file system, say, as @file{/mnt/etc/config.scm}.  Failing to do that, you will have lost your configuration file once you have rebooted into the newly-installed system."
msgstr "Далее нужно редактировать файл объявления операционной системы, которым будет пользоваться установщик. Для этого при установке системы можно использовать три текстовых редактора. Мы ркомендуем GNU nano (@pxref{Top,,, nano, GNU nano Manual}) --- он поддерживает подсветку синтаксиса и работу со скобками. Другие редакторы: GNU Zile (клон Emacs), nvi (клон исходного редактора BSD @command{vi}). Мы настойчиво рекомендуем сохранять файл конфигураций в целевой файловой системе root, например, как @file{/mnt/etc/config.scm}. Иначе есть возможность потерять конфигурационный файл, когда вы загрузитесь в новую установенную систему."

msgid "@xref{Using the Configuration System}, for an overview of the configuration file.  The example configurations discussed in that section are available under @file{/etc/configuration} in the installation image.  Thus, to get started with a system configuration providing a graphical display server (a ``desktop'' system), you can run something along these lines:"
msgstr "Смотрите @xref{Using the Configuration System} для подробностей о конфигурационном файле. Конфигурационный файл для примера доступен под @file{/etc/configuration} установочного образа. Например, чтобы получить систему с графическим сервером (т.е. десктопную систему), можно это сделать примерно так:"

msgid ""
"# mkdir /mnt/etc\n"
"# cp /etc/configuration/desktop.scm /mnt/etc/config.scm\n"
"# nano /mnt/etc/config.scm\n"
msgstr ""
"# mkdir /mnt/etc\n"
"# cp /etc/configuration/desktop.scm /mnt/etc/config.scm\n"
"# nano /mnt/etc/config.scm\n"

msgid "You should pay attention to what your configuration file contains, and in particular:"
msgstr "Нужно уделить внимание содержимому конфигурационного файла, в частности:"

msgid "Make sure the @code{bootloader-configuration} form refers to the targets you want to install GRUB on.  It should mention @code{grub-bootloader} if you are installing GRUB in the legacy way, or @code{grub-efi-bootloader} for newer UEFI systems.  For legacy systems, the @code{targets} field contain the names of the devices, like @code{(list \"/dev/sda\")}; for UEFI systems it names the paths to mounted EFI partitions, like @code{(list \"/boot/efi\")}; do make sure the paths are currently mounted and a @code{file-system} entry is specified in your configuration."
msgstr "Убедитесь, что @code{bootloader-configuration} указывает на тот раздел, в который вы хотите установить GRUB. Он должен содержать @code{grub-bootloader}, если вы используете legacy-GRUB, или @code{grub-efi-bootloader} для новых систем UEFI. Для систем legacy поле @code{target} содержит имя устройства, например, @code{/dev/sda}; для систем UEFI он указывает имя раздела EFI, например, @code{/boot/efi}. Так что обязательно проверьте, чтобы нужный путь был монтирован, и запись @code{file-system} содержала нужную конфигурацию."

msgid "Be sure that your file system labels match the value of their respective @code{device} fields in your @code{file-system} configuration, assuming your @code{file-system} configuration uses the @code{file-system-label} procedure in its @code{device} field."
msgstr "Убедитесь, чтобы в полях @code{device} были указаны метки ваших файловых систем внутри конфигурации @code{file-system}, если конечно, конфигурация @code{file-system} использует процедуру @code{file-system-label} в поле @code{device}."

msgid "If there are encrypted or RAID partitions, make sure to add a @code{mapped-devices} field to describe them (@pxref{Mapped Devices})."
msgstr "При наличии шифрованных разделов RAID, обязательно добавьте поле @code{mapped-devices}, чтобы описать их (@pxref{Mapped Devices})."

msgid "Once you are done preparing the configuration file, the new system must be initialized (remember that the target root file system is mounted under @file{/mnt}):"
msgstr "Когда вы подготовили конфигурационный файл, нужно инициализировать новую систему (помните, что целевой раздел root монтирован под @file{/mnt}):"

msgid "guix system init /mnt/etc/config.scm /mnt\n"
msgstr "guix system init /mnt/etc/config.scm /mnt\n"

msgid "This copies all the necessary files and installs GRUB on @file{/dev/sdX}, unless you pass the @option{--no-bootloader} option.  For more information, @pxref{Invoking guix system}.  This command may trigger downloads or builds of missing packages, which can take some time."
msgstr "Это копирует все нужные файлы и устанавливает GRUB в @file{/dev/sdX}, если конечно, вы не задали опцию @option{--no-bootloader}. Подробнее - @pxref{Invoking guix system}. Эта команда может вызывать скачивание или сборку отсутствующих пакетов, что может занять время."

msgid "Once that command has completed---and hopefully succeeded!---you can run @command{reboot} and boot into the new system.  The @code{root} password in the new system is initially empty; other users' passwords need to be initialized by running the @command{passwd} command as @code{root}, unless your configuration specifies otherwise (@pxref{user-account-password, user account passwords}).  @xref{After System Installation}, for what's next!"
msgstr "Когда эта команда завершена, надеемся, успешно, можно запустить @command{reboot} и загрузиться в новую систему.  Пароль @code{root} в новой системе изначально пустой; пароли других пользователей должны быть заданы командой @command{passwd} от @code{root}, если конечно, ваша конфиурация не содержит указания (@pxref{user-account-password, user account passwords}). Смотрите @xref{After System Installation}, чтобы узнать, что дальше!"

msgid ""
"guix pull\n"
"sudo guix system reconfigure /etc/config.scm\n"
msgstr ""
"guix pull\n"
"sudo guix system reconfigure /etc/config.scm\n"

msgid "Installing Guix in a Virtual Machine"
msgstr "Установка Guix на виртуальную машину (VM)"

msgid "virtual machine, Guix System installation"
msgstr "виртуальная машина, установка системы Guix"

msgid "virtual private server (VPS)"
msgstr "виртуальный приватный сервер (VPS)"

msgid "VPS (virtual private server)"
msgstr "VPS (virtual private server)"

msgid "If you'd like to install Guix System in a virtual machine (VM) or on a virtual private server (VPS) rather than on your beloved machine, this section is for you."
msgstr "Если вы хотите установить систему Guix на виртуальную машину (VM) или на виртуальный приватный сервер (VPS) вместо вашей любимой машины, этот раздел для вас."

msgid "To boot a @uref{https://qemu.org/,QEMU} VM for installing Guix System in a disk image, follow these steps:"
msgstr "Чтобы загрузить Guix в @uref{http://qemu.org/,QEMU} VM и установить образ, выполните шаги:"

msgid "First, retrieve and decompress the Guix system installation image as described previously (@pxref{USB Stick and DVD Installation})."
msgstr "Во-первых, найдите и распакуйте установочный образ системы Guix, как описано ранее (@pxref{USB Stick and DVD Installation})."

msgid "Create a disk image that will hold the installed system.  To make a qcow2-formatted disk image, use the @command{qemu-img} command:"
msgstr "Создайте образ диска, который будет содержать установленную систему. Чтобы создать образ диска qcow2, используйте команду @command{qemu-img}:"

msgid "qemu-img create -f qcow2 guix-system.img 50G\n"
msgstr "qemu-img create -f qcow2 guixsd.img 50G\n"

msgid "The resulting file will be much smaller than 50 GB (typically less than 1 MB), but it will grow as the virtualized storage device is filled up."
msgstr "Результирующий файл будет намного меньше 50Гб (обычно менее 1Мб), но он будет увеличиваться с заполнение виртуального устройства."

msgid "Boot the USB installation image in a VM:"
msgstr "Загрузите установочный образ USB в VM:"

msgid "@code{-enable-kvm} is optional, but significantly improves performance, @pxref{Running Guix in a VM}."
msgstr "@code{-enable-kvm} опционален, но значительно улучшает производительность, @pxref{Running Guix in a VM}."

msgid "You're now root in the VM, proceed with the installation process.  @xref{Preparing for Installation}, and follow the instructions."
msgstr "Теперь вы в корне VM, проделайте процесс установки @xref{Preparing for Installation} и последующие инструкции."

msgid "Once installation is complete, you can boot the system that's on your @file{guix-system.img} image.  @xref{Running Guix in a VM}, for how to do that."
msgstr "Когда установка завершена, можно загрузиться в систему, которая расположена в образе @file{guixsd.img}. Смотрите @xref{Running Guix in a VM}, чтобы узнать, как это сделать."

msgid "installation image"
msgstr "установочный образ"

msgid "The installation image described above was built using the @command{guix system} command, specifically:"
msgstr "Установочный образ, описанный выше, собран командой @command{guix system}, а именно:"

msgid "guix system image -t iso9660 gnu/system/install.scm\n"
msgstr "guix system disk-image -t iso9660 gnu/system/install.scm\n"

msgid "Have a look at @file{gnu/system/install.scm} in the source tree, and see also @ref{Invoking guix system} for more information about the installation image."
msgstr "Нужно просмотреть @file{gnu/system/install.scm} в дереве исходников, а также @ref{Invoking guix system}, чтобы получить больше информации об установочном образе."

msgid "Building the Installation Image for ARM Boards"
msgstr "Сбрка и установка образа для плат ARM"

msgid "Many ARM boards require a specific variant of the @uref{https://www.denx.de/wiki/U-Boot/, U-Boot} bootloader."
msgstr "Многие платы ARM требуют специфический вариант загрузчика @uref{https://www.denx.de/wiki/U-Boot/, U-Boot}."

msgid "If you build a disk image and the bootloader is not available otherwise (on another boot drive etc), it's advisable to build an image that includes the bootloader, specifically:"
msgstr "Если вы собираете образ диска, а загрузчик не доступен (на другом устройстве загрузке и т.п.), советуем собрать образ, который включает загрузчик, то есть так:"

msgid "guix system image --system=armhf-linux -e '((@@ (gnu system install) os-with-u-boot) (@@ (gnu system install) installation-os) \"A20-OLinuXino-Lime2\")'\n"
msgstr "guix system disk-image --system=armhf-linux -e '((@@ (gnu system install) os-with-u-boot) (@@ (gnu system install) installation-os) \"A20-OLinuXino-Lime2\")'\n"

msgid "@code{A20-OLinuXino-Lime2} is the name of the board.  If you specify an invalid board, a list of possible boards will be printed."
msgstr "@code{A20-OLinuXino-Lime2} --- это имя материнской платы. Если вы обозначите недействительную плату, будет выведен список возможных плат."

msgid "Presumably, you've reached this section because either you have installed Guix on top of another distribution (@pxref{Installation}), or you've installed the standalone Guix System (@pxref{System Installation}).  It's time for you to get started using Guix and this section aims to help you do that and give you a feel of what it's like."
msgstr "Предположительно, вы попали в этот раздел, потому что либо вы установили Guix поверх другого дистрибутива (@pxref{Installation}), либо вы установили отдельную операционную систему Guix (@pxref{System Installation}).  Пора вам начать использовать Guix, и этот раздел призван помочь вам в этом."

msgid "Guix is about installing software, so probably the first thing you'll want to do is to actually look for software.  Let's say you're looking for a text editor, you can run:"
msgstr "Guix занимается установкой программного обеспечения, поэтому, вероятно, первое, что вам нужно сделать, это поискать программное обеспечение.  Допустим, вы ищете текстовый редактор, вы можете запустить:"

msgid "guix search text editor\n"
msgstr "guix search text editor\n"

msgid "This command shows you a number of matching @dfn{packages}, each time showing the package's name, version, a description, and additional info.  Once you've found out the one you want to use, let's say Emacs (ah ha!), you can go ahead and install it (run this command as a regular user, @emph{no need for root privileges}!):"
msgstr "Эта команда показывает количество подходящих @dfn{пакетов}, каждый раз показывая имя пакета, версию, описание и дополнительную информацию.  Как только вы определились с тем, какой пакет хотите использовать, скажем, Emacs (ха!), вы можете установить его следующей командой (запустите эту команду как обычный пользователь, root привилегии не нужны!):"

msgid "guix install emacs\n"
msgstr "guix install emacs\n"

msgid "profile"
msgstr "профиль"

msgid "You've installed your first package, congrats! The package is now visible in your default @dfn{profile}, @file{$HOME/.guix-profile}---a profile is a directory containing installed packages.  In the process, you've probably noticed that Guix downloaded pre-built binaries; or, if you explicitly chose to @emph{not} use pre-built binaries, then probably Guix is still building software (@pxref{Substitutes}, for more info)."
msgstr "Вы установили свой первый пакет, поздравляю! В процессе вы, вероятно, заметили, что Guix загружает заранее собранные двоичные файлы; или, если вы явно решили не использовать предварительно созданные двоичные файлы, то, вероятно, Guix все еще собирает программное обеспечение (@pxref{Substitutes}, для дополнительной информации)."

msgid "Unless you're using Guix System, the @command{guix install} command must have printed this hint:"
msgstr "Пока вы используете Guix System, @command{guix install} команда должна выводить данную подсказку:"

msgid ""
"hint: Consider setting the necessary environment variables by running:\n"
"\n"
msgstr ""
"hint: Consider setting the necessary environment variables by running:\n"
"\n"

msgid ""
"     GUIX_PROFILE=\"$HOME/.guix-profile\"\n"
"     . \"$GUIX_PROFILE/etc/profile\"\n"
"\n"
msgstr ""
"     GUIX_PROFILE=\\\"$HOME/.guix-profile\\\"\n"
"     . \\\"$GUIX_PROFILE/etc/profile\\\"\n"
"\n"

msgid "Alternately, see `guix package --search-paths -p \"$HOME/.guix-profile\"'.\n"
msgstr "Или смотрите `guix package --search-paths -p \"$HOME/.guix-profile\"'.\n"

msgid "You can go on installing packages at your will.  To list installed packages, run:"
msgstr "Вы можете продолжать установку пакетов по своему желанию. Чтобы вывести список установленных пакетов, запустите:"

msgid "guix package --list-installed\n"
msgstr "guix package --list-installed\n"

msgid "To remove a package, you would unsurprisingly run @command{guix remove}.  A distinguishing feature is the ability to @dfn{roll back} any operation you made---installation, removal, upgrade---by simply typing:"
msgstr "Для удаления пакета вы можете выполнить команду @command{guix remove}.  Отличительная черта - возможность @dfn{откатить} любую операцию, которую вы сделали (установка, удаление, обновление):"

msgid "guix package --roll-back\n"
msgstr "guix package --roll-back\n"

msgid "This is because each operation is in fact a @dfn{transaction} that creates a new @dfn{generation}.  These generations and the difference between them can be displayed by running:"
msgstr "Каждая операция фактически является транзакцией, которая создает новое поколение.  Эти поколения и разницу между ними можно отобразить, запустив:"

msgid "guix package --list-generations\n"
msgstr "guix package --list-generations\n"

msgid "Now you know the basics of package management!"
msgstr "Теперь вы знаете основы управления пакетами!"

msgid "Going further"
msgstr "Больше информации"

msgid "@xref{Package Management}, for more about package management.  You may like @dfn{declarative} package management with @command{guix package --manifest}, managing separate @dfn{profiles} with @option{--profile}, deleting old generations, collecting garbage, and other nifty features that will come in handy as you become more familiar with Guix.  If you are a developer, @pxref{Development} for additional tools.  And if you're curious, @pxref{Features}, to peek under the hood."
msgstr "@xref{Package Management}, для получения дополнительной информации об управлении пакетами.  Вам может понравиться @dfn{декларативное} управление пакетами с помощью @command{guix package --manifest}, управление отдельными @dfn{профилями} с помощью @option{--profile}, удаление старых поколений, сбор мусора и другие полезные функции, которые помогут пригодится по мере того, как вы ближе познакомитесь с Guix.  Если вы разработчик, @pxref{Development} для получения дополнительных инструментов.  И если вам интересно, @pxref{Features}, чтобы заглянуть под капот."

msgid "Once you've installed a set of packages, you will want to periodically @emph{upgrade} them to the latest and greatest version.  To do that, you will first pull the latest revision of Guix and its package collection:"
msgstr "После того, как вы установили набор пакетов, вам нужно будет периодически @emph{обновлять} их до последней и самой лучшей версии.  Для этого вы сначала загрузите последнюю версию Guix и его коллекцию пакетов:"

msgid "The end result is a new @command{guix} command, under @file{~/.config/guix/current/bin}.  Unless you're on Guix System, the first time you run @command{guix pull}, be sure to follow the hint that the command prints and, similar to what we saw above, paste these two lines in your terminal and @file{.bash_profile}:"
msgstr "Конечным результатом является новая команда @command{guix} в @file{~/.config/guix/current/bin}.  Если вы не используете Guix System, при первом запуске @command{guix pull} обязательно следуйте подсказке, которую выводит команда, и, подобно тому, что мы видели выше, вставьте эти две строки в свой терминал и @file{.bash_profile}:"

msgid ""
"GUIX_PROFILE=\"$HOME/.config/guix/current\"\n"
". \"$GUIX_PROFILE/etc/profile\"\n"
msgstr ""
"GUIX_PROFILE=\"$HOME/.config/guix/current/etc/profile\"\n"
". \"$GUIX_PROFILE/etc/profile\"\n"

msgid "You must also instruct your shell to point to this new @command{guix}:"
msgstr "Вы также должны указать своей оболочке, чтобы она указывала на новую команду @command{guix}:"

msgid "hash guix\n"
msgstr "hash guix\n"

msgid "At this point, you're running a brand new Guix.  You can thus go ahead and actually upgrade all the packages you previously installed:"
msgstr "На данный момент вы используете новый Guix.  Вы можете обновить все ранее установленные пакеты:"

msgid "guix upgrade\n"
msgstr "guix upgrade\n"

msgid "As you run this command, you will see that binaries are downloaded (or perhaps some packages are built), and eventually you end up with the upgraded packages.  Should one of these upgraded packages not be to your liking, remember you can always roll back!"
msgstr "Когда вы запустите эту команду, вы увидите, что загружены двоичные файлы (или, возможно, собраны некоторые пакеты), и в конечном итоге вы получите обновленные пакеты.  Если один из этих обновленных пакетов вам не понравится, помните, что вы всегда можете выполнить откат!"

msgid "You can display the exact revision of Guix you're currently using by running:"
msgstr "Вы можете отобразить точную версию Guix, которую сейчас используете, запустив:"

msgid "guix describe\n"
msgstr "guix describe\n"

msgid "The information it displays is @emph{all it takes to reproduce the exact same Guix}, be it at a different point in time or on a different machine."
msgstr "Отображаемая информация - это @emph{все, что нужно для воспроизведения того же самого Guix}, будь то в другой момент времени или на другой машине."

msgid "@xref{Invoking guix pull}, for more information.  @xref{Channels}, on how to specify additional @dfn{channels} to pull packages from, how to replicate Guix, and more.  You may also find @command{time-machine} handy (@pxref{Invoking guix time-machine})."
msgstr "@xref{Invoking guix pull}, для дополнительной информации.  @xref{Channels}, как указать дополнительные @dfn{каналы} для получения пакетов, как реплицировать Guix и т. д.  Также команда @command{time-machine} может оказаться полезной (@pxref{Invoking guix time-machine})."

msgid "If you installed Guix System, one of the first things you'll want to do is to upgrade your system.  Once you've run @command{guix pull} to get the latest Guix, you can upgrade the system like this:"
msgstr "Если вы установили Guix System, первое, что вам нужно сделать, это обновить вашу систему.  После того, как вы запустите команду @command{guix pull}, чтобы получить последнюю версию Guix, вы можете обновить систему следующим образом:"

msgid "sudo guix system reconfigure /etc/config.scm\n"
msgstr "sudo guix system reconfigure /etc/config.scm\n"

msgid "Now you know enough to get started!"
msgstr "Теперь вы знаете достаточно, чтобы начать!"

msgid "Resources"
msgstr "Ресурсы"

msgid "The rest of this manual provides a reference for all things Guix.  Here are some additional resources you may find useful:"
msgstr "Остальная часть этого руководства представляет собой справочник по всему, что связано с Guix.  Вот несколько дополнительных ресурсов, которые могут вам пригодиться:"

msgid "@xref{Top,,, guix-cookbook, The GNU Guix Cookbook}, for a list of ``how-to'' style of recipes for a variety of applications."
msgstr "@xref{Top,,, guix-cookbook.ru, GNU Guix Рецепты}, статьи с готовыми решениями для различных ситуаций в стиле ``how-to''."

msgid "The @uref{https://guix.gnu.org/guix-refcard.pdf, GNU Guix Reference Card} lists in two pages most of the commands and options you'll ever need."
msgstr "@uref{https://guix.gnu.org/guix-refcard.pdf, GNU Guix Reference Card} шпаргалка с большинством команд и опций, которые вам когда-либо понадобятся."

msgid "The web site contains @uref{https://guix.gnu.org/en/videos/, instructional videos} covering topics such as everyday use of Guix, how to get help, and how to become a contributor."
msgstr "Веб-сайт содержит @uref{https://guix.gnu.org/en/videos/, обучающие видеоролики} по таким темам, как повседневное использование Guix, как получить помощь и как стать участником сообщества."

msgid "@xref{Documentation}, to learn how to access documentation on your computer."
msgstr "@xref{Documentation}, чтобы узнать, как получить доступ к документации на вашем компьютере."

msgid "We hope you will enjoy Guix as much as the community enjoys building it!"
msgstr "Мы надеемся, что вам понравится Guix так же, как и сообществу нравится его создавать!"

msgid "The purpose of GNU Guix is to allow users to easily install, upgrade, and remove software packages, without having to know about their build procedures or dependencies.  Guix also goes beyond this obvious set of features."
msgstr "Целью GNU Guix является предоставление пользователям возможности легко устанавливать, обновлять и удалять пакеты программного обеспечения, без необходимости изучения процедур их сборки и без необходимости разрешения зависимостей. Также Guix имеет следующие обязательные особенности."

msgid "This chapter describes the main features of Guix, as well as the package management tools it provides.  Along with the command-line interface described below (@pxref{Invoking guix package, @code{guix package}}), you may also use the Emacs-Guix interface (@pxref{Top,,, emacs-guix, The Emacs-Guix Reference Manual}), after installing @code{emacs-guix} package (run @kbd{M-x guix-help} command to start with it):"
msgstr "Этот раздел описывает основные особенности Guix и предоставляемые им инструменты управления пакетами.  Кроме интерфейса командной строки, который описан ниже (@pxref{Invoking guix package, @code{guix package}}), можно также использовать интерфейс Emacs-Guix (@pxref{Top,,, emacs-guix, The Emacs-Guix Reference Manual}), если установить пакет @code{emacs-guix} (выполните команду @kbd{M-x guix-help}, чтобы начать работу с ним):"

msgid "guix install emacs-guix\n"
msgstr "guix install emacs-guix\n"

msgid "Here we assume you've already made your first steps with Guix (@pxref{Getting Started}) and would like to get an overview about what's going on under the hood."
msgstr "Здесь мы предполагаем, что вы уже сделали свои первые шаги с Guix (@pxref{Getting Started}) и хотели бы получить обзор того, что происходит под капотом."

msgid "When using Guix, each package ends up in the @dfn{package store}, in its own directory---something that resembles @file{/gnu/store/xxx-package-1.2}, where @code{xxx} is a base32 string."
msgstr "При использовании Guix каждый пакет после установки размещается в @dfn{package store}, в собственной директории, например, @file{/gnu/store/xxx-package-1.2}, где @code{xxx} - это строка base32."

msgid "Instead of referring to these directories, users have their own @dfn{profile}, which points to the packages that they actually want to use.  These profiles are stored within each user's home directory, at @code{$HOME/.guix-profile}."
msgstr "Вместо того, чтобы ссылаться на эти директории, пользователям нужно обращаться к их @dfn{профилям}, профиль указывает на пакеты, которые они хотят использовать. Эти профили хранятся в домашней директории каждого пользователя в @code{$HOME/.guix-profile}."

msgid "For example, @code{alice} installs GCC 4.7.2.  As a result, @file{/home/alice/.guix-profile/bin/gcc} points to @file{/gnu/store/@dots{}-gcc-4.7.2/bin/gcc}.  Now, on the same machine, @code{bob} had already installed GCC 4.8.0.  The profile of @code{bob} simply continues to point to @file{/gnu/store/@dots{}-gcc-4.8.0/bin/gcc}---i.e., both versions of GCC coexist on the same system without any interference."
msgstr "Например,  @code{alice} устанавливает GCC 4.7.2. В результате @file{/home/alice/.guix-profile/bin/gcc} указывает на @file{/gnu/store/@dots{}-gcc-4.7.2/bin/gcc}. Допустим, на той же машине @code{bob} установил GCC 4.8.0. Профиль пользователя @code{bob} просто указывает на @file{/gnu/store/@dots{}-gcc-4.8.0/bin/gcc}. То есть обе версии GCC присутствуют в одной системе без помех."

msgid "The @command{guix package} command is the central tool to manage packages (@pxref{Invoking guix package}).  It operates on the per-user profiles, and can be used @emph{with normal user privileges}."
msgstr "Команда @command{guix package} --- главный инструмент для управления пакетами (@pxref{Invoking guix package}). Она работает с профилями пользователей, которые имеют @emph{права обычных пользователей}."

msgid "transactions"
msgstr "транзакции"

msgid "The command provides the obvious install, remove, and upgrade operations.  Each invocation is actually a @emph{transaction}: either the specified operation succeeds, or nothing happens.  Thus, if the @command{guix package} process is terminated during the transaction, or if a power outage occurs during the transaction, then the user's profile remains in its previous state, and remains usable."
msgstr "Команда предоставляет обязательные операции установки, удаления и обновления. Каждый вызов представляет собой @emph{транзакцию}, независимо от того, выполнены успешно заданные операции, или ничего не произошло. Так, если процесс @command{guix package} завершился во время транзакции, или произошёл сбой питания во время транзакции, тогда профиль пользователя остаётся в исходном состоянии, готовом к использованию."

msgid "All packages in the package store may be @emph{garbage-collected}.  Guix can determine which packages are still referenced by user profiles, and remove those that are provably no longer referenced (@pxref{Invoking guix gc}).  Users may also explicitly remove old generations of their profile so that the packages they refer to can be collected."
msgstr "Все пакеты на складе могут быть @emph{собраны как мусор}. Guix может определить, какие пакеты всё ещё используются профилями пользователей, и удалить те, которые однозначно больше не используются  (@pxref{Invoking guix gc}). Также пользователи могут явно удалить старые поколения (generations) их профилей, поэтому пакеты, на которые ссылались старые профили, могут быть удалены."

msgid "Guix takes a @dfn{purely functional} approach to package management, as described in the introduction (@pxref{Introduction}).  Each @file{/gnu/store} package directory name contains a hash of all the inputs that were used to build that package---compiler, libraries, build scripts, etc.  This direct correspondence allows users to make sure a given package installation matches the current state of their distribution.  It also helps maximize @dfn{build reproducibility}: thanks to the isolated build environments that are used, a given build is likely to yield bit-identical files when performed on different machines (@pxref{Invoking guix-daemon, container})."
msgstr "Guix реализует @dfn{чисто функциональный} подход к управлению пакетами, как описано во введении (@pxref{Introduction}). В @file{/gnu/store} имя директории каждого пакета содержит хеш всех входных данных, которые использовались при сборке пакета: компилятор, библиотеки, скрипты сборки и т.д. Это прямое соответствие позволяет пользователям убедиться, что данная установка пакета соответствует текущему состоянию дистрибутива. Также это помогает улучшить @dfn{воспроизводимость сборки}: благодаря изолированному окружению сборки, которая используется при установке пакета, результат сборки содержит точно такие же файлы на разных машинах (@pxref{Invoking guix-daemon, container})."

msgid "This foundation allows Guix to support @dfn{transparent binary/source deployment}.  When a pre-built binary for a @file{/gnu/store} item is available from an external source---a @dfn{substitute}, Guix just downloads it and unpacks it; otherwise, it builds the package from source, locally (@pxref{Substitutes}).  Because build results are usually bit-for-bit reproducible, users do not have to trust servers that provide substitutes: they can force a local build and @emph{challenge} providers (@pxref{Invoking guix challenge})."
msgstr "Эта концепция позволяет Guix поддерживать @dfn{прозрачное внедрение бинарников/исходников}. Когда доступен элемент @file{/gnu/store}, собранный заранее на внешнем источнике, то есть готова @dfn{подстановка}, Guix просто скачивает и распаковывает его. В противном случае он собирает пакет из исходников на локальной машине (@pxref{Substitutes}). Так как результаты сборки обычно воспроизводимы бит-к-биту, пользователи не должны доверять серверам, которые поставляют подстановки --- они могут целенаправленно запросить локальную сборку и @emph{не пользоваться} серверами подстановки (@pxref{Invoking guix challenge})."

msgid "replication, of software environments"
msgstr "повторение, окружения программного обеспечения"

msgid "provenance tracking, of software artifacts"
msgstr "трекинг источника, артефакты программного обеспечения"

msgid "All of Guix and its package definitions is version-controlled, and @command{guix pull} allows you to ``travel in time'' on the history of Guix itself (@pxref{Invoking guix pull}).  This makes it possible to replicate a Guix instance on a different machine or at a later point in time, which in turn allows you to @emph{replicate complete software environments}, while retaining precise @dfn{provenance tracking} of the software."
msgstr "Guix и его определения пакетов подчняются контролю версиями, и @command{guix pull} позволяет \"путешествовать во времени\" по истории Guix (@pxref{Invoking guix pull}). Это позволяет повторять инстанцию Guix на разных машинах или по прошествию времени, что в свою очередь позволяет вам @emph{повторять полностью программное окружение} из достпуных @dfn{трекеров источников} программного обеспечения."

msgid "Invoking @command{guix package}"
msgstr "Вызов @command{guix package}"

msgid "installing packages"
msgstr "установка пакетов"

msgid "removing packages"
msgstr "удаление пакетов"

msgid "package installation"
msgstr "установка пакета"

msgid "package removal"
msgstr "удаление пакета"

msgid "The @command{guix package} command is the tool that allows users to install, upgrade, and remove packages, as well as rolling back to previous configurations.  These operations work on a user @dfn{profile}---a directory of installed packages.  Each user has a default profile in @file{$HOME/.guix-profile}.  The command operates only on the user's own profile, and works with normal user privileges (@pxref{Features}).  Its syntax is:"
msgstr "Команда @command{guix package} --- инструмент, который позволяет пользователям устанавливать, обновлять и удалять пакеты, а также откатываться до предыдущих конфигураций (@pxref{Features}). Его синтаксис:"

msgid "guix package @var{options}\n"
msgstr "guix package @var{options}\n"

msgid "Primarily, @var{options} specifies the operations to be performed during the transaction.  Upon completion, a new profile is created, but previous @dfn{generations} of the profile remain available, should the user want to roll back."
msgstr "В первую очередь, @var{options} (опции) задают операции, которые нужно выполнить в транзакции. По завершении создаётся новый профиль, а предыдущие @dfn{поколения} (generations) профиля остаются доступными, если пользователь решит откатиться."

msgid "For example, to remove @code{lua} and install @code{guile} and @code{guile-cairo} in a single transaction:"
msgstr "Например, чтобы удалить @code{lua} и устанвоить @code{guile} и @code{guile-cairo} в одной транзакции, напечатайте:"

msgid "guix package -r lua -i guile guile-cairo\n"
msgstr "guix package -r lua -i guile guile-cairo\n"

msgid "aliases, for @command{guix package}"
msgstr "синонимы, для @command{guix package}"

msgid "For your convenience, we also provide the following aliases:"
msgstr "Для вашего удобства мы также предоставляем следующие синонимы:"

msgid "@command{guix search} is an alias for @command{guix package -s},"
msgstr "@command{guix search} - синоним @command{guix package -s},"

msgid "@command{guix install} is an alias for @command{guix package -i},"
msgstr "@command{guix install} - синоним @command{guix package -i},"

msgid "@command{guix remove} is an alias for @command{guix package -r},"
msgstr "@command{guix remove} - синоним @command{guix package -r},"

msgid "@command{guix upgrade} is an alias for @command{guix package -u},"
msgstr "@command{guix upgrade} — это синоним @command{guix package -u},"

msgid "and @command{guix show} is an alias for @command{guix package --show=}."
msgstr "и @command{guix show} псевдоним (alias) для @command{guix package --show=}."

msgid "These aliases are less expressive than @command{guix package} and provide fewer options, so in some cases you'll probably want to use @command{guix package} directly."
msgstr "Эти синонимы не такие мощные, как @command{guix package}, и предоставляют меньше опций, так что в некоторых случаях вам скорее нужно пользоваться непосредственно @command{guix package}."

msgid "@command{guix package} also supports a @dfn{declarative approach} whereby the user specifies the exact set of packages to be available and passes it @i{via} the @option{--manifest} option (@pxref{profile-manifest, @option{--manifest}})."
msgstr "@command{guix package} также поддерживает @dfn{декларативный подход}, с помощью которого пользователь зааёт точный набор пакетов, которые должны быть доступны, и передаёт его в опции @option{--manifest} (@pxref{profile-manifest, @option{--manifest}})."

msgid "For each user, a symlink to the user's default profile is automatically created in @file{$HOME/.guix-profile}.  This symlink always points to the current generation of the user's default profile.  Thus, users can add @file{$HOME/.guix-profile/bin} to their @env{PATH} environment variable, and so on."
msgstr "Для каждого пользователя автоматически создаётся символическая ссылка на профиль по умолчанию, она располагается в файле @file{$HOME/.guix-profile}. Эта ссылка всегда указывает на текущее поколение пользовательского профиля по умолчанию. Так пользователи могут добавить @file{$HOME/.guix-profile/bin} в свою переменную окружения @code{PATH} и прочее."

msgid "search paths"
msgstr "пути поиска"

msgid "If you are not using Guix System, consider adding the following lines to your @file{~/.bash_profile} (@pxref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}) so that newly-spawned shells get all the right environment variable definitions:"
msgstr "Если вы не используете систему Guix, предполагается добавление следующих строк в ваш @file{~/.bash_profile} (@pxref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}), чтобы порождаемые оболочки получили все необходимые определения переменных окружения:"

msgid ""
"GUIX_PROFILE=\"$HOME/.guix-profile\" ; \\\n"
"source \"$GUIX_PROFILE/etc/profile\"\n"
msgstr ""
"GUIX_PROFILE=\"$HOME/.guix-profile\" ; \\\n"
"source \"$GUIX_PROFILE/etc/profile\"\n"

msgid "In a multi-user setup, user profiles are stored in a place registered as a @dfn{garbage-collector root}, which @file{$HOME/.guix-profile} points to (@pxref{Invoking guix gc}).  That directory is normally @code{@var{localstatedir}/guix/profiles/per-user/@var{user}}, where @var{localstatedir} is the value passed to @code{configure} as @option{--localstatedir}, and @var{user} is the user name.  The @file{per-user} directory is created when @command{guix-daemon} is started, and the @var{user} sub-directory is created by @command{guix package}."
msgstr "В случае многопользовательской установки, профили пользователей сохраняются в месте, которое зарегстрировано как @dfn{garbage-collector root}, которое указывет на @file{$HOME/.guix-profile} (@pxref{Invoking guix gc}). Эта директория обычно ссылается на @code{@var{localstatedir}/guix/profiles/per-user/@var{user}}, где @var{localstatedir} --- значение, переданное скрипту @code{configure} опцией @code{--localstatedir}, а @var{user} --- имя пользователя. Директория @file{per-user} создаёся, когда запускается @command{guix-daemon}, а поддиректория @var{user} создаётся @command{guix package}."

msgid "The @var{options} can be among the following:"
msgstr "Опции @var{options} могут быть следующими:"

msgid "--install=@var{package} @dots{}"
msgstr "--install=@var{package} @dots{}"

msgid "-i @var{package} @dots{}"
msgstr "-i @var{package} @dots{}"

msgid "Install the specified @var{package}s."
msgstr "Установить заданный пакет."

msgid "propagated inputs"
msgstr "распространяемые входные данные"

msgid "Sometimes packages have @dfn{propagated inputs}: these are dependencies that automatically get installed along with the required package (@pxref{package-propagated-inputs, @code{propagated-inputs} in @code{package} objects}, for information about propagated inputs in package definitions)."
msgstr "Иногда пакеты имеют @dfn{распространённые входные данные} (propagated inputs) --- это зависимости, которые устанавливаются автоматически вместе с требуемыми пакетами (см. @pxref{package-propagated-inputs, @code{propagated-inputs} in @code{package} objects} для подробной информации о распространяемых входных днных в определениях пакетов)."

msgid "package-cmd-propagated-inputs"
msgstr "package-cmd-propagated-inputs"

msgid "An example is the GNU MPC library: its C header files refer to those of the GNU MPFR library, which in turn refer to those of the GMP library.  Thus, when installing MPC, the MPFR and GMP libraries also get installed in the profile; removing MPC also removes MPFR and GMP---unless they had also been explicitly installed by the user."
msgstr "Примером является библиотека GNU MPC: его файлы заголовков C ссылаются на файлы библиотеки GNU MPFR, которые в свою очередь, ссылаются на библиотеку GMP. Так при установке MPC, также в профиль будут устанволены библиотеки MPFR и GMP; удаление MPC также удалит MPFR и GMP, если конечно, они не были явно установлены пользователем."

msgid "Besides, packages sometimes rely on the definition of environment variables for their search paths (see explanation of @option{--search-paths} below).  Any missing or possibly incorrect environment variable definitions are reported here."
msgstr "Кроме того, пакеты иногда зависят от переменных окружения --- от их путей поиска (смотрите разъяснение @code{--search-paths} ниже). Любая отсутствующая или, возможно, некорректная переменная окружения вызывает сообщение отчета."

msgid "--install-from-expression=@var{exp}"
msgstr "--install-from-expression=@var{exp}"

msgid "-e @var{exp}"
msgstr "-e @var{exp}"

msgid "Install the package @var{exp} evaluates to."
msgstr "Устанавить пакет, соответствующий @var{exp}."

msgid "Note that this option installs the first output of the specified package, which may be insufficient when needing a specific output of a multiple-output package."
msgstr "Отметим, что эта опция устанавливает первое содержимое пакета, чего может быть недостаточно, если нужен специфичный выход пакета со множественным выходом."

msgid "--install-from-file=@var{file}"
msgstr "--install-from-file=@var{file}"

msgid "-f @var{file}"
msgstr "-f @var{file}"

msgid "Install the package that the code within @var{file} evaluates to."
msgstr "Устанавить пакет, который определён в файле."

msgid "As an example, @var{file} might contain a definition like this (@pxref{Defining Packages}):"
msgstr "Например, @var{file} может содержать определение (@pxref{Defining Packages}):"

msgid "package-hello.scm"
msgstr "package-hello.scm"

msgid "The @var{file} may also contain a JSON representation of one or more package definitions.  Running @code{guix package -f} on @file{hello.json} with the following contents would result in installing the package @code{greeter} after building @code{myhello}:"
msgstr "@var{file} может также содержать JSON-представление одного или нескольких определений пакетов.  Запуск @code{guix package -f} на файле @file{hello.json} со следующим содержимым, установит пакет @code{greeter} после сборки @code{myhello}:"

msgid "@verbatiminclude package-hello.json\n"
msgstr "@verbatiminclude environment-gdb.scm\n"

msgid "--remove=@var{package} @dots{}"
msgstr "--remove=@var{package} @dots{}"

msgid "-r @var{package} @dots{}"
msgstr "-r @var{package} @dots{}"

msgid "Remove the specified @var{package}s."
msgstr "Удалить обозначенный пакет."

msgid "As for @option{--install}, each @var{package} may specify a version number and/or output name in addition to the package name.  For instance, @samp{-r glibc:debug} would remove the @code{debug} output of @code{glibc}."
msgstr "Касаемо @code{--install}, каждый пакет @var{package} может задавать номер версии и имя содержимого в добавлении к имени пакета. Например,  @code{-r glibc:debug} удалит содержимое @code{debug} из  @code{glibc}."

msgid "--upgrade[=@var{regexp} @dots{}]"
msgstr "--upgrade[=@var{regexp} @dots{}]"

msgid "-u [@var{regexp} @dots{}]"
msgstr "-u [@var{regexp} @dots{}]"

msgid "upgrading packages"
msgstr "обновление пакетов"

msgid "Upgrade all the installed packages.  If one or more @var{regexp}s are specified, upgrade only installed packages whose name matches a @var{regexp}.  Also see the @option{--do-not-upgrade} option below."
msgstr "Обновить все устанволенные пакеты. Если задано одно или более значений @var{regexp}, обновление затронет только пакеты, которые соответствуют @var{regexp}. Также смотрите опцию @code{--do-not-upgrade} ниже."

msgid "Note that this upgrades package to the latest version of packages found in the distribution currently installed.  To update your distribution, you should regularly run @command{guix pull} (@pxref{Invoking guix pull})."
msgstr "Отметим, что это обновляет пакеты, которые установлены в системе, до последних версий, имеющихся в дистрибутиве. Чтобы обновить дистрибутив, нужно регулярно запускать @command{guix pull} (@pxref{Invoking guix pull})."

msgid "package transformations, upgrades"
msgstr "Параметры преобразования пакета"

msgid "When upgrading, package transformations that were originally applied when creating the profile are automatically re-applied (@pxref{Package Transformation Options}).  For example, assume you first installed Emacs from the tip of its development branch with:"
msgstr "При обновлении автоматически применяются преобразования пакета, которые были первоначально применены при создании профиля (@pxref{Package Transformation Options}).  Например, предположим, что вы сначала установили Emacs из ветки разработки с помощью:"

msgid "guix install emacs-next --with-branch=emacs-next=master\n"
msgstr "guix install emacs-next --with-branch=emacs-next=master\n"

msgid "Next time you run @command{guix upgrade}, Guix will again pull the tip of the Emacs development branch and build @code{emacs-next} from that checkout."
msgstr "В следующий раз, когда вы запустите @command{guix upgrade}, Guix снова посмотрит на ветку разработки Emacs и соберет новый @code{emacs-next}."

msgid "Note that transformation options such as @option{--with-branch} and @option{--with-source} depend on external state; it is up to you to ensure that they work as expected.  You can also discard a transformations that apply to a package by running:"
msgstr "Обратите внимание, что параметры преобразования, такие как @option{--with-branch} и @option{--with-source}, зависят от внешнего состояния;  вам решать, чтобы они работали должным образом.  Вы также можете отменить преобразования, которые применяются к пакету, запустив:"

msgid "guix install @var{package}\n"
msgstr "guix install @var{package}\n"

msgid "--do-not-upgrade[=@var{regexp} @dots{}]"
msgstr "--do-not-upgrade[=@var{regexp} @dots{}]"

msgid "When used together with the @option{--upgrade} option, do @emph{not} upgrade any packages whose name matches a @var{regexp}.  For example, to upgrade all packages in the current profile except those containing the substring ``emacs'':"
msgstr "При совместном использовании с опцией @code{--upgrade} @emph{не} обновляет ни один пакет, чьё имя соответствует @var{regexp}. Например, обновить все пакеты в текущем профиле , кроме тех, которые содержат подстроку \"emacs\":"

msgid "$ guix package --upgrade . --do-not-upgrade emacs\n"
msgstr "$ guix package --upgrade . --do-not-upgrade emacs\n"

msgid "profile-manifest"
msgstr "profile-manifest"

msgid "--manifest=@var{file}"
msgstr "--manifest=@var{file}"

msgid "-m @var{file}"
msgstr "-m @var{file}"

msgid "profile declaration"
msgstr "описание профиля"

msgid "profile manifest"
msgstr "манифест профиля"

msgid "Create a new generation of the profile from the manifest object returned by the Scheme code in @var{file}.  This option can be repeated several times, in which case the manifests are concatenated."
msgstr "Создаёт новую версию профиля из объекта манифеста, возвращаемого кодом Scheme в @var{file}. Этот параметр можно указывать несколько раз. В результате манифесты будут объединены в один."

msgid "This allows you to @emph{declare} the profile's contents rather than constructing it through a sequence of @option{--install} and similar commands.  The advantage is that @var{file} can be put under version control, copied to different machines to reproduce the same profile, and so on."
msgstr "Это позволяет вам @emph{описать} содержимое профиля вместо того, чтобы собирать его последовательностью команд @code{--install} и других. Преимущество в том, что @var{file} может подчиняться контролю версиями, копироваться на другие машины, чтобы повторить такой же профиль и т.д."

msgid "@var{file} must return a @dfn{manifest} object, which is roughly a list of packages:"
msgstr "@var{file} должен возвращать объект @dfn{manifest}, который, грубо говоря, является списком пакетов:"

msgid "packages->manifest"
msgstr "packages->manifest"

msgid ""
"(use-package-modules guile emacs)\n"
"\n"
msgstr ""
"(use-package-modules guile emacs)\n"
"\n"

msgid ""
"(packages->manifest\n"
" (list emacs\n"
"       guile-2.0\n"
"       ;; Use a specific package output.\n"
"       (list guile-2.0 \"debug\")))\n"
msgstr ""
"(packages->manifest\n"
" (list emacs\n"
"       guile-2.0\n"
"       ;; Use a specific package output.\n"
"       (list guile-2.0 \"debug\")))\n"

msgid "--roll-back"
msgstr "--roll-back"

msgid "rolling back"
msgstr "откат"

msgid "undoing transactions"
msgstr "отменение транзакций"

msgid "transactions, undoing"
msgstr "транзакции, отмена"

msgid "Roll back to the previous @dfn{generation} of the profile---i.e., undo the last transaction."
msgstr "Откатиться до предыдущего @dfn{поколения} профиля, то есть отменить последнюю транзакцию."

msgid "When combined with options such as @option{--install}, roll back occurs before any other actions."
msgstr "При сочетании с опциеями как @code{--install}, откат выполняется до всех прочих действий."

msgid "When rolling back from the first generation that actually contains installed packages, the profile is made to point to the @dfn{zeroth generation}, which contains no files apart from its own metadata."
msgstr "При откате от первого поколения, которое по факту содержит установленные пакеты, профиль будет указывать на @dfn{нулевое поколение}, которое не содержит файлы, кроме собственных метаданных."

msgid "After having rolled back, installing, removing, or upgrading packages overwrites previous future generations.  Thus, the history of the generations in a profile is always linear."
msgstr "После выполнения отката, установка, удаление или обновление пакетов по факту заменяет прежние будущие поколения. То есть история поколений в профиле всегда линейная."

msgid "--switch-generation=@var{pattern}"
msgstr "--switch-generation=@var{pattern}"

msgid "-S @var{pattern}"
msgstr "-S @var{pattern}"

msgid "generations"
msgstr "поколения"

msgid "Switch to a particular generation defined by @var{pattern}."
msgstr "Переключиться на определённое поколение, опрделённое @var{pattern}."

msgid "@var{pattern} may be either a generation number or a number prefixed with ``+'' or ``-''.  The latter means: move forward/backward by a specified number of generations.  For example, if you want to return to the latest generation after @option{--roll-back}, use @option{--switch-generation=+1}."
msgstr "@var{pattern} может быть либо номером поколения или числом с префиксом \"+\" или \"-\". Последнее означает сменить вперёд/назад на обозначенное число поколений. Например, если вы хотите вернуться к последнему поколению после @code{--roll-back}, используйте @code{--switch-generation=+1}."

msgid "The difference between @option{--roll-back} and @option{--switch-generation=-1} is that @option{--switch-generation} will not make a zeroth generation, so if a specified generation does not exist, the current generation will not be changed."
msgstr "Разница между @code{--roll-back} и @code{--switch-generation=-1} заключается в том, что @code{--switch-generation} не создаёт нулевое поколение, так что если заданное поколение не существует, текущее поколение не будет изменено."

msgid "--search-paths[=@var{kind}]"
msgstr "--search-paths[=@var{kind}]"

msgid "Report environment variable definitions, in Bash syntax, that may be needed in order to use the set of installed packages.  These environment variables are used to specify @dfn{search paths} for files used by some of the installed packages."
msgstr "Вывести отчёт об определениях переменных окружения в синтаксисе Bash. Это может понадобиться для использования набора установленных пакетов. Эти переменные окружения используются некоторыми установленными пакетами для поиска файлов."

msgid "The typical use case is to define these environment variables in the shell:"
msgstr "Обычный способ определить эти переменные окружения в оболочке:"

msgid "@var{kind} may be one of @code{exact}, @code{prefix}, or @code{suffix}, meaning that the returned environment variable definitions will either be exact settings, or prefixes or suffixes of the current value of these variables.  When omitted, @var{kind} defaults to @code{exact}."
msgstr "Вид @var{kind} может быть либо точный адрес @code{exact}, либо префикс @code{prefix}, либо суффикс @code{suffix}, то есть возвращаемые переменные окружения могут быть либо точными, либо префиксами и суффиксами текущего значения этих переменных. При пропуске вид @var{kind} по умолчанию выбирается точный @code{exact}."

msgid "This option can also be used to compute the @emph{combined} search paths of several profiles.  Consider this example:"
msgstr "Эта опция также может использоваться для вычисления @emph{комбинированных} путей поиска нескольких профилей. Рассмотрим пример:"

msgid ""
"$ guix package -p foo -i guile\n"
"$ guix package -p bar -i guile-json\n"
"$ guix package -p foo -p bar --search-paths\n"
msgstr ""
"$ guix package -p foo -i guile\n"
"$ guix package -p bar -i guile-json\n"
"$ guix package -p foo -p bar --search-paths\n"

msgid "The last command above reports about the @env{GUILE_LOAD_PATH} variable, even though, taken individually, neither @file{foo} nor @file{bar} would lead to that recommendation."
msgstr "Последняя команда выше составляет отчёт о переменной @code{GUILE_LOAD_PATH}, даже если по отдельности ни @file{foo}, ни @file{bar} не предшествуют рекомендациям."

msgid "profile, choosing"
msgstr "противоречеия профиля"

msgid "--profile=@var{profile}"
msgstr "--profile=@var{profile}"

msgid "-p @var{profile}"
msgstr "-p @var{profile}"

msgid "Use @var{profile} instead of the user's default profile."
msgstr "Использовать @var{profile} вместо пользовательского профиля по умолчанию."

msgid "@var{profile} must be the name of a file that will be created upon completion.  Concretely, @var{profile} will be a mere symbolic link (``symlink'') pointing to the actual profile where packages are installed:"
msgstr "@var{profile} должен быть именем файла, который будет создан по завершении.  Конкретно @var{profile} будет простой символической ссылкой (``символическая ссылка''), указывающей на текущий профиль, в котором установлены пакеты:"

msgid ""
"$ guix install hello -p ~/code/my-profile\n"
"@dots{}\n"
"$ ~/code/my-profile/bin/hello\n"
"Hello, world!\n"
msgstr ""
"$ guix install hello -p ~/code/my-profile\n"
"@dots{}\n"
"$ ~/code/my-profile/bin/hello\n"
"Hello, world!\n"

msgid "All it takes to get rid of the profile is to remove this symlink and its siblings that point to specific generations:"
msgstr "Чтобы избавиться от профиля, нужно удалить символическую ссылку и привязанные к ней элементы, которые указывают на конкретные поколения:"

msgid "$ rm ~/code/my-profile ~/code/my-profile-*-link\n"
msgstr "$ rm ~/code/my-profile ~/code/my-profile-*-link\n"

msgid "--list-profiles"
msgstr "--list-profiles"

msgid "List all the user's profiles:"
msgstr "Перечислить все профили пользователя:"

msgid ""
"$ guix package --list-profiles\n"
"/home/charlie/.guix-profile\n"
"/home/charlie/code/my-profile\n"
"/home/charlie/code/devel-profile\n"
"/home/charlie/tmp/test\n"
msgstr ""
"$ guix package --list-profiles\n"
"/home/charlie/.guix-profile\n"
"/home/charlie/code/my-profile\n"
"/home/charlie/code/devel-profile\n"
"/home/charlie/tmp/test\n"

msgid "When running as root, list all the profiles of all the users."
msgstr "При запуске от имени root будут перечислены все профили всех пользователей."

msgid "collisions, in a profile"
msgstr "противоречия, в профиле"

msgid "colliding packages in profiles"
msgstr "соперничающие пакеты в профиле"

msgid "profile collisions"
msgstr "противоречеия профиля"

msgid "--allow-collisions"
msgstr "--allow-collisions"

msgid "Allow colliding packages in the new profile.  Use at your own risk!"
msgstr "Разрешить соперничающие пакеты в новом профиле. Используйте на свой собственный страх и риск!"

msgid "By default, @command{guix package} reports as an error @dfn{collisions} in the profile.  Collisions happen when two or more different versions or variants of a given package end up in the profile."
msgstr "По умолчанию @command{guix package} делает отчёт о противоречиях @dfn{collisions} в профиле. Противоречия происходят, когда дви или более разных версии или варианта данного пакета присутсвуют в профиле."

msgid "--bootstrap"
msgstr "--bootstrap"

msgid "Use the bootstrap Guile to build the profile.  This option is only useful to distribution developers."
msgstr "Использовать бутстрап Guile для сборки профиля. Эта опция полезна только разработчикам дистрибутива."

msgid "In addition to these actions, @command{guix package} supports the following options to query the current state of a profile, or the availability of packages:"
msgstr "В дополнение к этим действиям @command{guix package} поддерживает следующие опции при обращении к текущему состоянию профиля или для проверки доступности пакетов:"

msgid "--search=@var{regexp}"
msgstr "--search=@var{regexp}"

msgid "-s @var{regexp}"
msgstr "-s @var{regexp}"

msgid "guix-search"
msgstr "guix-search"

msgid "searching for packages"
msgstr "поиск пакетов"

msgid "List the available packages whose name, synopsis, or description matches @var{regexp} (in a case-insensitive fashion), sorted by relevance.  Print all the metadata of matching packages in @code{recutils} format (@pxref{Top, GNU recutils databases,, recutils, GNU recutils manual})."
msgstr "Вывести список пакетов, чьи имена или описания содержат выражение @var{regexp} с учётом регистра, упорядоченные по соответствию. Печать всех метаданных соответствующих пакетов в формате @code{recutils} (@pxref{Top, GNU recutils databases,, recutils, GNU recutils manual})."

msgid "This allows specific fields to be extracted using the @command{recsel} command, for instance:"
msgstr "Это позволяет извлекать заданые поля, используя команду @command{recsel}, например:"

msgid ""
"$ guix package -s malloc | recsel -p name,version,relevance\n"
"name: jemalloc\n"
"version: 4.5.0\n"
"relevance: 6\n"
"\n"
msgstr ""
"$ guix package -s malloc | recsel -p name,version,relevance\n"
"name: jemalloc\n"
"version: 4.5.0\n"
"relevance: 6\n"
"\n"

msgid ""
"name: glibc\n"
"version: 2.25\n"
"relevance: 1\n"
"\n"
msgstr ""
"name: glibc\n"
"version: 2.25\n"
"relevance: 1\n"
"\n"

msgid ""
"name: libgc\n"
"version: 7.6.0\n"
"relevance: 1\n"
msgstr ""
"name: libgc\n"
"version: 7.6.0\n"
"relevance: 1\n"

msgid "Similarly, to show the name of all the packages available under the terms of the GNU@tie{}LGPL version 3:"
msgstr "Также для отображения имён всех доступных пакетов под лицензией GNU@tie{}LGPL версии 3:"

msgid ""
"$ guix package -s \"\" | recsel -p name -e 'license ~ \"LGPL 3\"'\n"
"name: elfutils\n"
"\n"
msgstr ""
"$ guix package -s \"\" | recsel -p name -e 'license ~ \"LGPL 3\"'\n"
"name: elfutils\n"
"\n"

msgid ""
"name: gmp\n"
"@dots{}\n"
msgstr ""
"name: gmp\n"
"@dots{}\n"

msgid "It is also possible to refine search results using several @code{-s} flags to @command{guix package}, or several arguments to @command{guix search}.  For example, the following command returns a list of board games (this time using the @command{guix search} alias):"
msgstr "Также можно уточнить поиск, используя несколько флагов @code{-s} в команде @command{guix package} или несколько аргументов в @command{guix search}.  Например, следующая команда возвращает список настольных игр (используя синоним @command{guix search} на этот раз):"

msgid ""
"$ guix search '\\<board\\>' game | recsel -p name\n"
"name: gnubg\n"
"@dots{}\n"
msgstr ""
"$ guix search '\\<board\\>' game | recsel -p name\n"
"name: gnubg\n"
"@dots{}\n"

msgid "If we were to omit @code{-s game}, we would also get software packages that deal with printed circuit boards; removing the angle brackets around @code{board} would further add packages that have to do with keyboards."
msgstr "При пропуске @code{-s game} мы получим пакеты программного обеспечения, которые работают с печатными платами (boards); удалив угловые скобки рядом с @code{board}, получим пакеты, которые также работают с клавиатурами (keyboards)."

msgid "And now for a more elaborate example.  The following command searches for cryptographic libraries, filters out Haskell, Perl, Python, and Ruby libraries, and prints the name and synopsis of the matching packages:"
msgstr "А теперь более запутанный пример. Следующая команда ищет библиотеки криптографии, фильтрует библиотеки Haskel, Perl, Python и Ruby и печатает имена и краткие описания найденных пакетов:"

msgid ""
"$ guix search crypto library | \\\n"
"    recsel -e '! (name ~ \"^(ghc|perl|python|ruby)\")' -p name,synopsis\n"
msgstr ""
"$ guix search crypto library | \\\n"
"    recsel -e '! (name ~ \"^(ghc|perl|python|ruby)\")' -p name,synopsis\n"

msgid "@xref{Selection Expressions,,, recutils, GNU recutils manual}, for more information on @dfn{selection expressions} for @code{recsel -e}."
msgstr "См. @xref{Selection Expressions,,, recutils, GNU recutils manual} для подробной информации о регуларяных выражениях @dfn{selection expressions} для @code{recsel -e}."

msgid "--show=@var{package}"
msgstr "--show=@var{package}"

msgid "Show details about @var{package}, taken from the list of available packages, in @code{recutils} format (@pxref{Top, GNU recutils databases,, recutils, GNU recutils manual})."
msgstr "Показать детали пакета @var{package} из списка доступных пакетов в формате @code{recutils} (@pxref{Top, GNU recutils databases,, recutils, GNU recutils manual})."

msgid "You may also specify the full name of a package to only get details about a specific version of it (this time using the @command{guix show} alias):"
msgstr "Можно также указать полное имя пакета, чтобы только получить детали его определённой версии (в этот раз, используя @command{guix show} псевдоним):"

msgid "--list-installed[=@var{regexp}]"
msgstr "--list-installed[=@var{regexp}]"

msgid "-I [@var{regexp}]"
msgstr "-I [@var{regexp}]"

msgid "List the currently installed packages in the specified profile, with the most recently installed packages shown last.  When @var{regexp} is specified, list only installed packages whose name matches @var{regexp}."
msgstr "Вывести текущий список установленных пакетов в заданном профиле, отобразив самый последний установленный пакет последним. Если задано @var{regexp}, будут выведены только пакеты, чьи имена содержат @var{regexp}."

msgid "For each installed package, print the following items, separated by tabs: the package name, its version string, the part of the package that is installed (for instance, @code{out} for the default output, @code{include} for its headers, etc.), and the path of this package in the store."
msgstr "Для каждого установленного пакета выводит следующие элементы, разделенные табуляцией (tab): имя пакета, строка версии, частью какого пакета является установленный пакет (например, @code{out} вывода по умолчанию включает @code{include} его заголовки т.д.), а также путь этого пакета на складе."

msgid "--list-available[=@var{regexp}]"
msgstr "--list-available[=@var{regexp}]"

msgid "-A [@var{regexp}]"
msgstr "-A [@var{regexp}]"

msgid "List packages currently available in the distribution for this system (@pxref{GNU Distribution}).  When @var{regexp} is specified, list only available packages whose name matches @var{regexp}."
msgstr "Вывести список пакетов, доступных на текущий момент в дистрибутиве данной системы (@pxref{GNU Distribution}). Если задано @var{regexp}, выводит только установленные пакеты, чьё имя содержит @var{regexp}."

msgid "For each package, print the following items separated by tabs: its name, its version string, the parts of the package (@pxref{Packages with Multiple Outputs}), and the source location of its definition."
msgstr "Для каждого пакета выводит следующие элементы, разделённые табуляцией: его имя, строка версии, часть пакета (@pxref{Packages with Multiple Outputs}), а также расположение его определения в исходниках."

msgid "--list-generations[=@var{pattern}]"
msgstr "--list-generations[=@var{pattern}]"

msgid "-l [@var{pattern}]"
msgstr "-l [@var{pattern}]"

msgid "Return a list of generations along with their creation dates; for each generation, show the installed packages, with the most recently installed packages shown last.  Note that the zeroth generation is never shown."
msgstr "Вывести список поколений (generations) с датами их создания; для каждого поколения отобразить установленные пакеты, самый последний установленный пакет отобразать последним. Отметим, что нулевое поколение никогда не показывается."

msgid "For each installed package, print the following items, separated by tabs: the name of a package, its version string, the part of the package that is installed (@pxref{Packages with Multiple Outputs}), and the location of this package in the store."
msgstr "Для каждого установленного пакета отображает следующие элементы, разделённые табуляцией: имя пакета, строка версии, частью какого пакета является установленный пакет (@pxref{Packages with Multiple Outputs}), а также расположение пакета на складе."

msgid "When @var{pattern} is used, the command returns only matching generations.  Valid patterns include:"
msgstr "Если используется @var{pattern}, команда выводит только соответствующие поколения. Правильные паттерны содержат:"

msgid "@emph{Integers and comma-separated integers}.  Both patterns denote"
msgstr "@emph{Числа и числа, разделённые запятыми}. Оба паттерна обозначают"

msgid "generation numbers.  For instance, @option{--list-generations=1} returns the first one."
msgstr "номера поколений. Например, @option{--list-generations=1} возвращает первое."

msgid "And @option{--list-generations=1,8,2} outputs three generations in the specified order.  Neither spaces nor trailing commas are allowed."
msgstr "Опция @code{--list-generations=1,8,2} выводит три поколения в заданном пордке. Пробелы и запятые на конце запрещены."

msgid "@emph{Ranges}.  @option{--list-generations=2..9} prints the"
msgstr "@emph{Ranges}.  @option{--list-generations=2..9} выводит"

msgid "specified generations and everything in between.  Note that the start of a range must be smaller than its end."
msgstr "заданные поколения и все между ними. Отметим, что начало диапазона должно быть меньше его конца."

msgid "It is also possible to omit the endpoint.  For example, @option{--list-generations=2..}, returns all generations starting from the second one."
msgstr "Также можно пропустить конечную точку. Например, @code{--list-generations=2..} возвращает все поколения, начиная со второго."

msgid "@emph{Durations}.  You can also get the last @emph{N}@tie{}days, weeks,"
msgstr "@emph{Сроки}. Также можно задать последние @emph{N}@tie{}дней, недель"

msgid "or months by passing an integer along with the first letter of the duration.  For example, @option{--list-generations=20d} lists generations that are up to 20 days old."
msgstr "или месяцев, указав число и первую букву срока (d,w,m). Например,  @code{--list-generations=20d} отобразит список поколений старше 20 дней."

msgid "--delete-generations[=@var{pattern}]"
msgstr "--delete-generations[=@var{pattern}]"

msgid "-d [@var{pattern}]"
msgstr "-d [@var{pattern}]"

msgid "When @var{pattern} is omitted, delete all generations except the current one."
msgstr "Если @var{pattern} пропущен, удалит все поголения, кроме текущего."

msgid "This command accepts the same patterns as @option{--list-generations}.  When @var{pattern} is specified, delete the matching generations.  When @var{pattern} specifies a duration, generations @emph{older} than the specified duration match.  For instance, @option{--delete-generations=1m} deletes generations that are more than one month old."
msgstr "Эта команда принимает такие же паттерны, как @option{--list-generations}. Если @var{pattern} задан, удалит соответствующие поколения. Если паттерн @var{pattern} задаёт срок, выбираются поколения @emph{старше} срока. Например, @code{--delete-generations=1m} удалит поколения, которые старше одного месяца."

msgid "If the current generation matches, it is @emph{not} deleted.  Also, the zeroth generation is never deleted."
msgstr "Если текущее поколение попадает под условия паттерна, оно не будет удалено. А также нулевое поокление никогда не удаляется."

msgid "Note that deleting generations prevents rolling back to them.  Consequently, this command must be used with care."
msgstr "Отметим, что удаление поколений делает невозможным откат к ним. Следовательно эта команда должна использоваться внимательно."

msgid "manifest, exporting"
msgstr "манифест, экспорт"

msgid "export-manifest"
msgstr "export-manifest"

msgid "--export-manifest"
msgstr "--export-manifest"

msgid "Write to standard output a manifest suitable for @option{--manifest} corresponding to the chosen profile(s)."
msgstr "Напишите в стандартный вывод манифест, подходящий для @option{--manifest}, соответствующий выбранному профилю (-ам)."

msgid "This option is meant to help you migrate from the ``imperative'' operating mode---running @command{guix install}, @command{guix upgrade}, etc.---to the declarative mode that @option{--manifest} offers."
msgstr "Эта опция предназначена для того, чтобы помочь вам перейти из ``императивного'' режима работы---запустив @command{guix install}, @command{guix upgrade} и т.д.---в декларативный режим, который предлагает @option{--manifest}."

msgid "Be aware that the resulting manifest @emph{approximates} what your profile actually contains; for instance, depending on how your profile was created, it can refer to packages or package versions that are not exactly what you specified."
msgstr "Имейте в виду, что полученный манифест @emph{приблизительно} соответствует тому, что на самом деле содержится в вашем профиле; например, в зависимости от того, как был создан ваш профиль, он может относиться к пакетам или версиям пакетов, которые не совсем то, что вы указали."

msgid "Keep in mind that a manifest is purely symbolic: it only contains package names and possibly versions, and their meaning varies over time.  If you wish to ``pin'' channels to the revisions that were used to build the profile(s), see @option{--export-channels} below."
msgstr "Имейте в виду, что манифест является чисто символическим: он содержит только имена пакетов и, возможно, версии, и их значение со временем меняется.  Если вы хотите ``привязать'' каналы к ревизиям, которые использовались для создания профиля (ов), см. @option{--export-channels} ниже."

msgid "pinning, channel revisions of a profile"
msgstr "закрепление, канальные ревизии профиля"

msgid "--export-channels"
msgstr "%default-channels"

msgid "Write to standard output the list of channels used by the chosen profile(s), in a format suitable for @command{guix pull --channels} or @command{guix time-machine --channels} (@pxref{Channels})."
msgstr "Вывести на стандартный вывод список каналов, используемых выбранным профилем (-ями), в формате, подходящем для @command{guix pull --channels} или @command{guix time-machine --channels} (@pxref{Channels})."

msgid "Together with @option{--export-manifest}, this option provides information allowing you to replicate the current profile (@pxref{Replicating Guix})."
msgstr "Вместе с @option{--export-manifest} этот параметр предоставляет информацию, позволяющую копировать текущий профиль (@pxref{Replicating Guix})."

msgid "However, note that the output of this command @emph{approximates} what was actually used to build this profile.  In particular, a single profile might have been built from several different revisions of the same channel.  In that case, @option{--export-manifest} chooses the last one and writes the list of other revisions in a comment.  If you really need to pick packages from different channel revisions, you can use inferiors in your manifest to do so (@pxref{Inferiors})."
msgstr "Однако обратите внимание, что выходные данные этой команды @emph{приблизительно} используются для создания этого профиля.  В частности, один профиль мог быть построен из нескольких различных версий одного и того же канала.  В этом случае @option{--export-manifest} выбирает последнюю версию и записывает список других ревизий в комментарий.  Если вам действительно нужно выбрать пакеты из разных ревизий канала, вы можете использовать подчиненные элементы в своем манифесте для этого (@pxref{Inferiors})."

msgid "Together with @option{--export-manifest}, this is a good starting point if you are willing to migrate from the ``imperative'' model to the fully declarative model consisting of a manifest file along with a channels file pinning the exact channel revision(s) you want."
msgstr "Если вы хотите перейти от ``императивной'' модели к полностью декларативной модели, состоящей из файла манифеста и файла каналов, закрепляющего точную желаемые версии каналов, то @option{--export-manifest} хорошая отправная точка."

msgid "Finally, since @command{guix package} may actually start build processes, it supports all the common build options (@pxref{Common Build Options}).  It also supports package transformation options, such as @option{--with-source}, and preserves them across upgrades (@pxref{Package Transformation Options})."
msgstr "Наконец, так как @command{guix package} может запускать процессы сборки, она поддерживает все привычные опции сборки (@pxref{Common Build Options}). Она также поддерживает опции трансформации пакетов, как @option{--with-source} (@pxref{Package Transformation Options}). Однако, отметим, что трансформации пакетов теряются после обновлений; чтобы сохранить трансформации при обновлениях, нужно определить собственный вариант пакета в модуле Guile и добавить его в @code{GUIX_PACKAGE_PATH} (@pxref{Defining Packages})."

msgid "pre-built binaries"
msgstr "собранные бинарники"

msgid "Guix supports transparent source/binary deployment, which means that it can either build things locally, or download pre-built items from a server, or both.  We call these pre-built items @dfn{substitutes}---they are substitutes for local build results.  In many cases, downloading a substitute is much faster than building things locally."
msgstr "Guix поддерживает прозрачное развертывание исходников/бинарников, это означает, что он может либо собирать что-то локально, либо загружать предварительно собранные элементы с сервера, либо и то, и другое. Мы называем эти готовые элементы @dfn{подстановками} (substitutes) --- они заменяют результаты локальной сборки. Во многих случаях загрузка подстановки намного быстрее, чем сборка пакетов локально."

msgid "Substitutes can be anything resulting from a derivation build (@pxref{Derivations}).  Of course, in the common case, they are pre-built package binaries, but source tarballs, for instance, which also result from derivation builds, can be available as substitutes."
msgstr "В качестве подстановок может выступать какой угодно результат сборки деривации (@pxref{Derivations}). Конечно, обычно это собранные пакеты, но также архивы исходников, например, представляя собой результаты сборок дериваций, могут быть доступны в качестве подстановок."

msgid "build farm"
msgstr "ферма сборки"

msgid "@code{@value{SUBSTITUTE-SERVER-1}} and @code{@value{SUBSTITUTE-SERVER-2}} are both front-ends to official build farms that build packages from Guix continuously for some architectures, and make them available as substitutes.  These are the default source of substitutes; which can be overridden by passing the @option{--substitute-urls} option either to @command{guix-daemon} (@pxref{daemon-substitute-urls,, @code{guix-daemon --substitute-urls}})  or to client tools such as @command{guix package} (@pxref{client-substitute-urls,, client @option{--substitute-urls} option})."
msgstr "@code{@value{SUBSTITUTE-SERVER-1}} и @code{@value{SUBSTITUTE-SERVER-2}} - это интерфейсы для официальных сборочных ферм, которые постоянно собирают пакеты из Guix для некоторых архитектур и делают их доступными в качестве подстановок. Это источники подстановок по умолчанию; их можно переопределить, передав опцию @option{--substitute-urls} либо в @command{guix-daemon} (@pxref{daemon-substitute-urls,, @code{guix-daemon --substitute-urls}}), либо в клиентские инструменты, такие как @command{guix package} (@pxref{client-substitute-urls,, client @option{--substitute-urls} option})."

msgid "Substitute URLs can be either HTTP or HTTPS.  HTTPS is recommended because communications are encrypted; conversely, using HTTP makes all communications visible to an eavesdropper, who could use the information gathered to determine, for instance, whether your system has unpatched security vulnerabilities."
msgstr "URL подстановок могут быть либо HTTP, либо HTTPS. Рекомендуется HTTPS, так как такая связь шифруется; и наоборот, использование HTTP делает связь видимой для подслушивающих, и они могут использовать собранную информацию, чтобы определить, например, что ваша система не имеет патчей, покрывающих уязвимости безопасности."

msgid "Substitutes from the official build farms are enabled by default when using Guix System (@pxref{GNU Distribution}).  However, they are disabled by default when using Guix on a foreign distribution, unless you have explicitly enabled them via one of the recommended installation steps (@pxref{Installation}).  The following paragraphs describe how to enable or disable substitutes for the official build farm; the same procedure can also be used to enable substitutes for any other substitute server."
msgstr "Подстановки из официальных сборочных ферм доступны по умолчанию при использовании Guix System (@pxref{GNU Distribution}). Однако они отключены по умолчанию при использовании Guix на стороннем дистрибутиве, если вы явно не включили их с помощью одного из рекомендуемых шагов установки (@pxref{Installation}). В следующих параграфах описано, как включить или отключить подстановки для официальной сборочной фермы; эта же процедура может быть использована для включения подстановок с любого другого сервера подстановок."

msgid "security"
msgstr "безопасность"

msgid "access control list (ACL), for substitutes"
msgstr "список контроля доступом (ACL), для подстановок"

msgid "ACL (access control list), for substitutes"
msgstr "ACL (список контроля доступом), для подстановок"

msgid "To allow Guix to download substitutes from @code{@value{SUBSTITUTE-SERVER-1}}, @code{@value{SUBSTITUTE-SERVER-2}} or a mirror, you must add the relevant public key to the access control list (ACL) of archive imports, using the @command{guix archive} command (@pxref{Invoking guix archive}).  Doing so implies that you trust the substitute server to not be compromised and to serve genuine substitutes."
msgstr "Чтобы разрешить Guix скачать подстановки с @code{@value{SUBSTITUTE-SERVER-1}}, @code{@value{SUBSTITUTE-SERVER-2}} или зеркала, вы должны добавить соответствующий открытый ключ в список контроля доступа (ACL) импорта архивов с помощью команды @command{guix archive} (@pxref{Invoking guix archive}). Это подразумевает, что вы доверяете серверу подстановок в том, что он не взломан и предоставляет подлинные подстановки."

msgid "The public keys for each of the project maintained substitute servers are installed along with Guix, in @code{@var{prefix}/share/guix/}, where @var{prefix} is the installation prefix of Guix.  If you installed Guix from source, make sure you checked the GPG signature of @file{guix-@value{VERSION}.tar.gz}, which contains this public key file.  Then, you can run something like this:"
msgstr "Открытые ключи для каждого из поддерживаемых проектом серверов подстановок устанавливаются вместе с Guix в @code{@var{prefix}/share/guix/}, где @var{prefix}  - префикс установки Guix. Если вы установили Guix из исходного кода, убедитесь, что проверили GPG-подпись файла @file{guix-@value{VERSION}.tar.gz}, который содержит этот файл открытых ключей. Затем вы можете запустить что-то вроде этого:"

msgid ""
"# guix archive --authorize < @var{prefix}/share/guix/@value{SUBSTITUTE-SERVER-1}.pub\n"
"# guix archive --authorize < @var{prefix}/share/guix/@value{SUBSTITUTE-SERVER-2}.pub\n"
msgstr ""
"# guix archive --authorize < @var{prefix}/share/guix/@value{SUBSTITUTE-SERVER-1}.pub\n"
"# guix archive --authorize < @var{prefix}/share/guix/@value{SUBSTITUTE-SERVER-2}.pub\n"

msgid "Once this is in place, the output of a command like @code{guix build} should change from something like:"
msgstr "Когда это сделано, вывод команды @code{guix build} должен измениться с примерно такого:"

msgid ""
"$ guix build emacs --dry-run\n"
"The following derivations would be built:\n"
"   /gnu/store/yr7bnx8xwcayd6j95r2clmkdl1qh688w-emacs-24.3.drv\n"
"   /gnu/store/x8qsh1hlhgjx6cwsjyvybnfv2i37z23w-dbus-1.6.4.tar.gz.drv\n"
"   /gnu/store/1ixwp12fl950d15h2cj11c73733jay0z-alsa-lib-1.0.27.1.tar.bz2.drv\n"
"   /gnu/store/nlma1pw0p603fpfiqy7kn4zm105r5dmw-util-linux-2.21.drv\n"
"@dots{}\n"
msgstr ""
"$ guix build emacs --dry-run\n"
"The following derivations would be built:\n"
"   /gnu/store/yr7bnx8xwcayd6j95r2clmkdl1qh688w-emacs-24.3.drv\n"
"   /gnu/store/x8qsh1hlhgjx6cwsjyvybnfv2i37z23w-dbus-1.6.4.tar.gz.drv\n"
"   /gnu/store/1ixwp12fl950d15h2cj11c73733jay0z-alsa-lib-1.0.27.1.tar.bz2.drv\n"
"   /gnu/store/nlma1pw0p603fpfiqy7kn4zm105r5dmw-util-linux-2.21.drv\n"
"@dots{}\n"

msgid "to something like:"
msgstr "на примерно следующий:"

msgid ""
"$ guix build emacs --dry-run\n"
"112.3 MB would be downloaded:\n"
"   /gnu/store/pk3n22lbq6ydamyymqkkz7i69wiwjiwi-emacs-24.3\n"
"   /gnu/store/2ygn4ncnhrpr61rssa6z0d9x22si0va3-libjpeg-8d\n"
"   /gnu/store/71yz6lgx4dazma9dwn2mcjxaah9w77jq-cairo-1.12.16\n"
"   /gnu/store/7zdhgp0n1518lvfn8mb96sxqfmvqrl7v-libxrender-0.9.7\n"
"@dots{}\n"
msgstr ""
"$ guix build emacs --dry-run\n"
"112.3 MB would be downloaded:\n"
"   /gnu/store/pk3n22lbq6ydamyymqkkz7i69wiwjiwi-emacs-24.3\n"
"   /gnu/store/2ygn4ncnhrpr61rssa6z0d9x22si0va3-libjpeg-8d\n"
"   /gnu/store/71yz6lgx4dazma9dwn2mcjxaah9w77jq-cairo-1.12.16\n"
"   /gnu/store/7zdhgp0n1518lvfn8mb96sxqfmvqrl7v-libxrender-0.9.7\n"
"@dots{}\n"

msgid "The text changed from ``The following derivations would be built'' to ``112.3 MB would be downloaded''.  This indicates that substitutes from the configured substitute servers are usable and will be downloaded, when possible, for future builds."
msgstr "Текст изменился с ``The following derivations would be built\" на ``112.3 MB would be downloaded\". Это указывает на то, что подстановки с настроенных серверов подстановок пригодны для использования и будут загружены для будущих сборок, когда это станет возможно."

msgid "substitutes, how to disable"
msgstr "подстановки, как отключить"

msgid "The substitute mechanism can be disabled globally by running @code{guix-daemon} with @option{--no-substitutes} (@pxref{Invoking guix-daemon}).  It can also be disabled temporarily by passing the @option{--no-substitutes} option to @command{guix package}, @command{guix build}, and other command-line tools."
msgstr "Механизм подстановок может быть отключен глобально путём запуска @code{guix-daemon} с @code{--no-substitutes} (@pxref{Invoking guix-daemon}). Также он может отключиться временно путём указания опции @code{--no-substitutes} в @command{guix package}, @command{guix build} и других инструментах командной строки."

msgid "substitute servers, adding more"
msgstr "Авторизация сервера подстановок"

msgid "Guix can look up and fetch substitutes from several servers.  This is useful when you are using packages from additional channels for which the official server does not have substitutes but another server provides them.  Another situation where this is useful is when you would prefer to download from your organization's substitute server, resorting to the official server only as a fallback or dismissing it altogether."
msgstr "Guix может искать и получать заменители с нескольких серверов. Это полезно, когда вы используете пакеты из дополнительных каналов, для которых официальный сервер не имеет заменителей, но их предоставляет другой сервер. Еще одна ситуация, когда это полезно, если вы предпочитаете выполнять загрузку с замещающего сервера вашей организации, прибегая к официальному серверу только в качестве запасного варианта или полностью отклоняя его."

msgid "You can give Guix a list of substitute server URLs and it will check them in the specified order.  You also need to explicitly authorize the public keys of substitute servers to instruct Guix to accept the substitutes they sign."
msgstr "Вы можете дать Guix список URL-адресов серверов с заменителями, и он проверит их в указанном порядке. Вам также необходимо явно авторизовать открытые ключи серверов с заменителями, чтобы Guix принял заменители, которые они подписывают."

msgid "On Guix System, this is achieved by modifying the configuration of the @code{guix} service.  Since the @code{guix} service is part of the default lists of services, @code{%base-services} and @code{%desktop-services}, you can use @code{modify-services} to change its configuration and add the URLs and substitute keys that you want (@pxref{Service Reference, @code{modify-services}})."
msgstr "В системе Guix это достигается путем изменения конфигурации службы @code{guix}.  Поскольку служба @code{guix} является частью списков служб по умолчанию, @code{%base-services} и @code{%desktop-services}, вы можете использовать @code{modify-services} для изменения ее конфигурации и добавьте нужные URL-адреса и заменить ключи (@pxref{Service Reference, @code{modify-services}})."

msgid "As an example, suppose you want to fetch substitutes from @code{guix.example.org} and to authorize the signing key of that server, in addition to the default @code{@value{SUBSTITUTE-SERVER-1}} and @code{@value{SUBSTITUTE-SERVER-2}}.  The resulting operating system configuration will look something like:"
msgstr "В качестве примера предположим, что вы хотите получить заменители из @code{guix.example.org} и авторизовать ключ этого сервера в дополнение к @code{@value{SUBSTITUTE-SERVER-1}} и @code{@value{SUBSTITUTE-SERVER-2}}.  Полученная конфигурация операционной системы будет выглядеть примерно так:"

msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services\n"
"    ;; Assume we're starting from '%desktop-services'.  Replace it\n"
"    ;; with the list of services you're actually using.\n"
"    (modify-services %desktop-services\n"
"      (guix-service-type config =>\n"
"                        (guix-configuration\n"
"                          (inherit config)\n"
"                          (substitute-urls\n"
"                            (append (list \"https://guix.example.org\")\n"
"                                    %default-substitute-urls))\n"
"                          (authorized-keys\n"
"                            (append (list (local-file \"./key.pub\"))\n"
"                                    %default-authorized-guix-keys)))))))\n"
msgstr ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services\n"
"    ;; Assume we're starting from '%desktop-services'.  Replace it\n"
"    ;; with the list of services you're actually using.\n"
"    (modify-services %desktop-services\n"
"      (guix-service-type config =>\n"
"                        (guix-configuration\n"
"                          (inherit config)\n"
"                          (substitute-urls\n"
"                            (append (list \"https://guix.example.org\")\n"
"                                    %default-substitute-urls))\n"
"                          (authorized-keys\n"
"                            (append (list (local-file \"./key.pub\"))\n"
"                                    %default-authorized-guix-keys)))))))\n"

msgid "This assumes that the file @file{key.pub} contains the signing key of @code{guix.example.org}.  With this change in place in your operating system configuration file (say @file{/etc/config.scm}), you can reconfigure and restart the @code{guix-daemon} service or reboot so the changes take effect:"
msgstr "Предполагается, что файл @file{key.pub} содержит ключ подписи @code{guix.example.org}.  После внесения этого изменения в файл конфигурации вашей операционной системы (например, @file{/etc/config.scm}) вы можете перенастроить и перезапустить службу @code{guix-daemon} или перезагрузиться, чтобы изменения вступили в силу:"

msgid ""
"$ sudo guix system reconfigure /etc/config.scm\n"
"$ sudo herd restart guix-daemon\n"
msgstr ""
"$ sudo guix system reconfigure /etc/config.scm\n"
"$ sudo herd restart guix-daemon\n"

msgid "If you're running Guix on a ``foreign distro'', you would instead take the following steps to get substitutes from additional servers:"
msgstr "Если вы используете Guix в качестве пакетного менеджера на другом дистрибутиве, вместо вышеописанного вы должны предпринять следующие шаги, чтобы получить заменители с дополнительных серверов:"

msgid "Edit the service configuration file for @code{guix-daemon}; when using systemd, this is normally @file{/etc/systemd/system/guix-daemon.service}.  Add the @option{--substitute-urls} option on the @command{guix-daemon} command line and list the URLs of interest (@pxref{daemon-substitute-urls, @code{guix-daemon --substitute-urls}}):"
msgstr "Отредактируйте файл конфигурации службы для @code{guix-daemon}; когда исользуете systemd, это обычно @file{/etc/systemd/system/guix-daemon.service}.  Добавьте параметр @option{--substitute-urls} команды @command {guix-daemon} при вызове в командной строке и перечислите интересующие URL-адреса (@pxref{daemon-substitute-urls, @code{guix-daemon --substitute-urls}}):"

msgid "@dots{} --substitute-urls='https://guix.example.org @value{SUBSTITUTE-URLS}'\n"
msgstr "@dots{} --substitute-urls='https://guix.example.org @value{SUBSTITUTE-URLS}'\n"

msgid "Restart the daemon.  For systemd, it goes like this:"
msgstr "Перезапустите демон.  Пример для systemd:"

msgid ""
"systemctl daemon-reload\n"
"systemctl restart guix-daemon.service\n"
msgstr ""
"systemctl daemon-reload\n"
"systemctl restart guix-daemon.service\n"

msgid "Authorize the key of the new server (@pxref{Invoking guix archive}):"
msgstr "Авторизуйте ключ нового сервера (@pxref{Invoking guix archive}):"

msgid "guix archive --authorize < key.pub\n"
msgstr "# guix archive --authorize < master-public-key.txt\n"

msgid "Again this assumes @file{key.pub} contains the public key that @code{guix.example.org} uses to sign substitutes."
msgstr "Опять же, это предполагает @file{key.pub}, содержащий открытый ключ, который @code{guix.example.org} использует для подписи замененителей."

msgid "Note that there are also situations where one may want to add the URL of a substitute server @emph{without} authorizing its key.  @xref{Substitute Authentication}, to understand this fine point."
msgstr "Обратите внимание, что бывают также ситуации, когда можно добавить URL-адрес замещающего сервера @emph{без} авторизации его ключа.  @xref{Substitute Authentication}, чтобы понять этот тонкий момент."

msgid "digital signatures"
msgstr "цифровые подписи"

msgid "Guix detects and raises an error when attempting to use a substitute that has been tampered with.  Likewise, it ignores substitutes that are not signed, or that are not signed by one of the keys listed in the ACL."
msgstr "Guix определяет и вызывает ошибку, если происходит попытка использовать поддельную подстановку. А также он игнорирует подстановки, которые не подписаны, или те, которые не подписаны ни одним ключом из списка ACL."

msgid "There is one exception though: if an unauthorized server provides substitutes that are @emph{bit-for-bit identical} to those provided by an authorized server, then the unauthorized server becomes eligible for downloads.  For example, assume we have chosen two substitute servers with this option:"
msgstr "Но всё же есть одно исключение: если не авторизованный сервер предоставляет подстановки, которые являются @emph{идентичными бит-к-биту} с теми, которые предоставляет авторизованный сервер, тогда неавторизованный сервер становится приемлемым для скачивания. Например, положим, мы выбрали два сервера подстановок такой опцией:"

msgid "--substitute-urls=\"https://a.example.org https://b.example.org\"\n"
msgstr "--substitute-urls=\"https://a.example.org https://b.example.org\"\n"

msgid "If the ACL contains only the key for @samp{b.example.org}, and if @samp{a.example.org} happens to serve the @emph{exact same} substitutes, then Guix will download substitutes from @samp{a.example.org} because it comes first in the list and can be considered a mirror of @samp{b.example.org}.  In practice, independent build machines usually produce the same binaries, thanks to bit-reproducible builds (see below)."
msgstr "Если ACL содержит только ключ для @code{b.example.org}, и если вдруг @code{a.example.org} предоставляет @emph{идентичные} подстановки, тогда Guix будет скачивать подстановки из @code{a.example.org}, потому что он идёт первым в списке и может рассматриваться как зеркало @code{b.example.org}. На практике независимые машины сборки обычно производят одинаковые бинарники благодаря воспроизводимым сборкам (смотрите ниже)."

msgid "When using HTTPS, the server's X.509 certificate is @emph{not} validated (in other words, the server is not authenticated), contrary to what HTTPS clients such as Web browsers usually do.  This is because Guix authenticates substitute information itself, as explained above, which is what we care about (whereas X.509 certificates are about authenticating bindings between domain names and public keys)."
msgstr "При использовании HTTPS, сертификат X.509 сервера @emph{не} проверяется (другими словами, сервер не проходит аутентификацию), супротив тому, что HTTPS-клиенты, как веб-браузеры, обычно делают это. Это потому, что Guix аутентифицирует саму информацию подстановки, как это описано выше, что собственно и представляет для нас интерес (в то время, как сертификаты X.509 относятся к аутентификации связок между доменными именами и публичными ключами)."

msgid "Substitutes are downloaded over HTTP or HTTPS@.  The @env{http_proxy} and @env{https_proxy} environment variables can be set in the environment of @command{guix-daemon} and are honored for downloads of substitutes.  Note that the value of those environment variables in the environment where @command{guix build}, @command{guix package}, and other client commands are run has @emph{absolutely no effect}."
msgstr "Подстановки скачиваются через HTTP или HTTPS. Можно установить переменную окружения @code{http_proxy} в окружении  @command{guix-daemon}, чтобы она учитывалась при скачивании. Отметим, что значение @code{http_proxy} в окружении, в котором запускаются  @command{guix build}, @command{guix package} и другие клиентские команды @emph{совершенно не даёт эффекта}."

msgid "Even when a substitute for a derivation is available, sometimes the substitution attempt will fail.  This can happen for a variety of reasons: the substitute server might be offline, the substitute may recently have been deleted, the connection might have been interrupted, etc."
msgstr "Даже когда подстановка для деривации доступна, иногда попытка подстановки завершается неудачно. Это может происходить по разным причинам: сервер подстановок может быть отключен, подстановка могла быть недавно удалена, связь может прерываться и т.д."

msgid "When substitutes are enabled and a substitute for a derivation is available, but the substitution attempt fails, Guix will attempt to build the derivation locally depending on whether or not @option{--fallback} was given (@pxref{fallback-option,, common build option @option{--fallback}}).  Specifically, if @option{--fallback} was omitted, then no local build will be performed, and the derivation is considered to have failed.  However, if @option{--fallback} was given, then Guix will attempt to build the derivation locally, and the success or failure of the derivation depends on the success or failure of the local build.  Note that when substitutes are disabled or no substitute is available for the derivation in question, a local build will @emph{always} be performed, regardless of whether or not @option{--fallback} was given."
msgstr "Когда подстановки включены, и подстановка для деривации доступна, но попытка подстановки завершается с ошибкой, Guix будет пытаться собрать деривацию локально в зависимости от того, задана или нет опция @code{--fallback} (@pxref{fallback-option,, common build option @code{--fallback}}). То есть, если @code{--fallback} пропущена, тогда локальная сборка не будет выполняться, а деривация будет рассматриваться как неудачная. Однако, если @code{--fallback} задана, тогда Guix попытается собрать деривацию локально, и успех или неудача деривации будет зависеть от успешной или неудачной процедуры локальной сборки. Отметим, что когда подстановки отключены или нет доступных подстановок для деривации, локальная сборка @emph{всегда} будет исполняться, вне зависимости от установки опции @code{--fallback}."

msgid "To get an idea of how many substitutes are available right now, you can try running the @command{guix weather} command (@pxref{Invoking guix weather}).  This command provides statistics on the substitutes provided by a server."
msgstr "Чтобы узнать,. сколько подстановок доступны в данный момент, можно попробовать запустить команду @command{guix weather} (@pxref{Invoking guix weather}). Эта команда предоставляет статистику подстановок, предоставляемых сервером."

msgid "trust, of pre-built binaries"
msgstr "доверие, собранным бинарникам"

msgid "In the future, we want Guix to have support to publish and retrieve binaries to/from other users, in a peer-to-peer fashion.  If you would like to discuss this project, join us on @email{guix-devel@@gnu.org}."
msgstr "Мы хотим, чтобы Guix в будущем поддерживал публикации и запросы бинарников от/для пользователей в формате равноправного обмена (peer-to-peer). Если вы желаете обсудить этот проект, присоединяйтесь к нам @email{guix-devel@@gnu.org}."

msgid "multiple-output packages"
msgstr "пакеты со множественным результатом"

msgid "package outputs"
msgstr "результаты пакета"

msgid "outputs"
msgstr "результаты"

msgid "Often, packages defined in Guix have a single @dfn{output}---i.e., the source package leads to exactly one directory in the store.  When running @command{guix install glibc}, one installs the default output of the GNU libc package; the default output is called @code{out}, but its name can be omitted as shown in this command.  In this particular case, the default output of @code{glibc} contains all the C header files, shared libraries, static libraries, Info documentation, and other supporting files."
msgstr "Часто пакеты, определённые в Guix, имеют один @dfn{выход}, это значит, что исходный пакет даёт только одну директорию на складе. При запуске @command{guix package -i glibc} это устанавливает результат по умолчанию; результат по умолчанию называется @code{выходом}, но его имя может пропускаться, как показано в этой команде. В этом частном случае результат по умолчанию для @code{glibc} содержит все файлы заголовков C, разделяемые библиотеки, статические библиотеки, документацию Info и другие поставляемые файлы."

msgid "Sometimes it is more appropriate to separate the various types of files produced from a single source package into separate outputs.  For instance, the GLib C library (used by GTK+ and related packages)  installs more than 20 MiB of reference documentation as HTML pages.  To save space for users who do not need it, the documentation goes to a separate output, called @code{doc}.  To install the main GLib output, which contains everything but the documentation, one would run:"
msgstr "Часто более приемлемым будет разделить различные типы файлов, поставляемых одним исходным пакетом, на отдельные выходы (результаты). Например, библиотека GLib C, используемая GTK+ и связанными с ним пакетами, устанавливает более 20Мб связанной документации в виде страниц HTML. Чтобы экономить место, пользователи, которым это не нужно, документацию можно выделить в отдельный выход, называемый @code{doc}. Чтобы установить основной выход GLib, который содерит всё, кроме документации, можно запустить:"

msgid "guix install glib\n"
msgstr "guix install glib\n"

msgid "The command to install its documentation is:"
msgstr "Команда для установки её документации:"

msgid "guix install glib:doc\n"
msgstr "guix install glib:doc\n"

msgid "Some packages install programs with different ``dependency footprints''.  For instance, the WordNet package installs both command-line tools and graphical user interfaces (GUIs).  The former depend solely on the C library, whereas the latter depend on Tcl/Tk and the underlying X libraries.  In this case, we leave the command-line tools in the default output, whereas the GUIs are in a separate output.  This allows users who do not need the GUIs to save space.  The @command{guix size} command can help find out about such situations (@pxref{Invoking guix size}).  @command{guix graph} can also be helpful (@pxref{Invoking guix graph})."
msgstr "Некоторые пакеты устанавливают программы с различными ``отпечатками зависимостей''.  Например, пакет WordNet устанавливает и инструменты командной строки, и графический интерфейс (GUI).  Первое зависит только от библиотеки C, а последнее зависит от Tcl/Tk и библиотек X.  В таком случае мы оставляем инструменты командной строки в качестве результата по умолчанию, в то время как GUI поставляется как отдельный выход.  Это экономит место для пользователей, которым не нужен GUI.  Команда @command{guix size} может помочь выявить такие ситуации (@pxref{Invoking guix size}).  @command{guix graph} также полезна (@pxref{Invoking guix graph})."

msgid "There are several such multiple-output packages in the GNU distribution.  Other conventional output names include @code{lib} for libraries and possibly header files, @code{bin} for stand-alone programs, and @code{debug} for debugging information (@pxref{Installing Debugging Files}).  The outputs of a package are listed in the third column of the output of @command{guix package --list-available} (@pxref{Invoking guix package})."
msgstr "Есть несколько таких пакетов со множественным выходом в дистрибутиве GNU. Другие традиционные имена выходов включают @code{lib} - для библиотек и иногда файлов заголовков, @code{bin} - для самих программ, @code{debug} - для отладочной информации (@pxref{Installing Debugging Files}). Выходы пакетов представлены в третьей колонке вывода @command{guix package --list-available} (@pxref{Invoking guix package})."

msgid "The general syntax is:"
msgstr "Основной синтаксис:"

msgid "--stats"
msgstr "--stats"

msgid "--update"
msgstr "--update"

msgid "-u"
msgstr "-u"

msgid "Invoking @command{guix gc}"
msgstr "Вызов @command{guix gc}"

msgid "garbage collector"
msgstr "сборщик мусора"

msgid "disk space"
msgstr "место на диске"

msgid "Packages that are installed, but not used, may be @dfn{garbage-collected}.  The @command{guix gc} command allows users to explicitly run the garbage collector to reclaim space from the @file{/gnu/store} directory.  It is the @emph{only} way to remove files from @file{/gnu/store}---removing files or directories manually may break it beyond repair!"
msgstr "Пакеты, которые установлены, но не используются, могут быть очищены как мусор (@dfn{garbage-collected}).  Команда @command{guix gc} позволяет пользователям непосредственно запустить сборщик мусора и восстановить место в директории @file{/gnu/store}. Это @emph{единственный} способ удалить файлы из @file{/gnu/store} --- удаление файлов вручную может поломать её безвозвратно!"

msgid "The garbage collector has a set of known @dfn{roots}: any file under @file{/gnu/store} reachable from a root is considered @dfn{live} and cannot be deleted; any other file is considered @dfn{dead} and may be deleted.  The set of garbage collector roots (``GC roots'' for short)  includes default user profiles; by default, the symlinks under @file{/var/guix/gcroots} represent these GC roots.  New GC roots can be added with @command{guix build --root}, for example (@pxref{Invoking guix build}).  The @command{guix gc --list-roots} command lists them."
msgstr "Сборщик мусора имеет набор известных корней (@dfn{roots}): любой файл в @file{/gnu/store}, доступный из корня, рассматривается как живой (@dfn{live}) и не может быть удалён; любой другой файл рассматривается как мёртвый (@dfn{dead}) и может быть удалён. Набор корней сборщика мусора (сокращённо \"GC roots\") содержит профили пользователей по умолчанию; по умолчанию символические ссылки в @file{/var/guix/gcroots} представляют эти корни сборщика мусора. Новые корни могут добавляться, например, командой @command{guix build --root} (@pxref{Invoking guix build}). Команда @command{guix gc --list-roots} отображает их."

msgid "Prior to running @code{guix gc --collect-garbage} to make space, it is often useful to remove old generations from user profiles; that way, old package builds referenced by those generations can be reclaimed.  This is achieved by running @code{guix package --delete-generations} (@pxref{Invoking guix package})."
msgstr "Перед запуском @code{guix gc --collect-garbage} для освобождения места часто бывает полезно удалить старые поколения из пользовательских профилей; так старые пакеты, относящиеся к этим поколениям, будут удалены. Это можно сделать, запустив @code{guix package --delete-generations} (@pxref{Invoking guix package})."

msgid "Our recommendation is to run a garbage collection periodically, or when you are short on disk space.  For instance, to guarantee that at least 5@tie{}GB are available on your disk, simply run:"
msgstr "Мы рекомендуем запускать сборщик мусора периодически, или когда вы хотите освободить место на диске. Например, чтобы гарантировать, что по меньшей мере 5@tie{}Гб будет доступно на вашем диске, просто запустите:"

msgid "guix gc -F 5G\n"
msgstr "guix gc -F 5G\n"

msgid "It is perfectly safe to run as a non-interactive periodic job (@pxref{Scheduled Job Execution}, for how to set up such a job).  Running @command{guix gc} with no arguments will collect as much garbage as it can, but that is often inconvenient: you may find yourself having to rebuild or re-download software that is ``dead'' from the GC viewpoint but that is necessary to build other pieces of software---e.g., the compiler tool chain."
msgstr "Хорошо бы запускать это как неинтерактивную периодическую задачу (@pxref{Scheduled Job Execution}, чтобы узнать, как добавить такую задачу). Запуск @command{guix gc} без аргументов соберёт столько мусора, сколько возможно, но это часто не удобно: можно обнаружить, что придётся заново собирать или скачивать программы, \"убитые\" сборщиком мусора, хотя они необходимы для сборки другого софта, например, это касается инструментов компилятора."

msgid "The @command{guix gc} command has three modes of operation: it can be used to garbage-collect any dead files (the default), to delete specific files (the @option{--delete} option), to print garbage-collector information, or for more advanced queries.  The garbage collection options are as follows:"
msgstr "Команда @command{guix gc} предоставляет три способа взаимодействия: может использоваться для сборки мусора (garbage-collect) любых мёртвых файлов (по умолчанию), для удаления конкретных файлов (опция @code{--delete}), для вывода информации сборщика мусора, а также для более изощрённых запросов. Опции сборщика мусора:"

msgid "--collect-garbage[=@var{min}]"
msgstr "--collect-garbage[=@var{min}]"

msgid "-C [@var{min}]"
msgstr "-C [@var{min}]"

msgid "Collect garbage---i.e., unreachable @file{/gnu/store} files and sub-directories.  This is the default operation when no option is specified."
msgstr "Собрать мусор, то есть недоступные файлы в @file{/gnu/store} и поддиректориях. Это операция по умолчанию, если не заданы опции."

msgid "When @var{min} is given, stop once @var{min} bytes have been collected.  @var{min} may be a number of bytes, or it may include a unit as a suffix, such as @code{MiB} for mebibytes and @code{GB} for gigabytes (@pxref{Block size, size specifications,, coreutils, GNU Coreutils})."
msgstr "Если задана @var{min}, остановиться, когда @var{min} байт собрано.  @var{min} может быть числом байт или может содержать единицу измерения в суффиксе, как например, @code{MiB} для мебибайт и @code{GB} гигабайт (@pxref{Block size, size specifications,, coreutils, GNU Coreutils})."

msgid "When @var{min} is omitted, collect all the garbage."
msgstr "Если @var{min} пропущено, собрать весь мусор."

msgid "--free-space=@var{free}"
msgstr "--free-space=@var{free}"

msgid "-F @var{free}"
msgstr "-F @var{free}"

msgid "Collect garbage until @var{free} space is available under @file{/gnu/store}, if possible; @var{free} denotes storage space, such as @code{500MiB}, as described above."
msgstr "Собирать мусор, пока не станет доступно @var{free} места в @file{/gnu/store}, если возможно; @var{free} описывает дисковое пространство, как @code{500MiB}, как это описанов выше."

msgid "When @var{free} or more is already available in @file{/gnu/store}, do nothing and exit immediately."
msgstr "Когда @var{free} или более места стало свободно в @file{/gnu/store}, ничего не делать и немедленно выйти."

msgid "--delete-generations[=@var{duration}]"
msgstr "--delete-generations[=@var{duration}]"

msgid "-d [@var{duration}]"
msgstr "-d [@var{duration}]"

msgid "For example, this command deletes all the generations of all your profiles that are older than 2 months (except generations that are current), and then proceeds to free space until at least 10 GiB are available:"
msgstr "Например, следующая команда удаляет все поколения всех ваших профилей, которые старше 2 месцев (кроме текущего поколения), а затем запускается процесс освобождения мместа, пока по меньшей мере 10 GiB не станет доступно:"

msgid "guix gc -d 2m -F 10G\n"
msgstr "guix gc -d 2m -F 10G\n"

msgid "--delete"
msgstr "--delete"

msgid "-D"
msgstr "-D"

msgid "Attempt to delete all the store files and directories specified as arguments.  This fails if some of the files are not in the store, or if they are still live."
msgstr "Попытаться удалить все файлы и директории склада, приведённые в аргументах. Это завершается с ошибкой, если какие-либо файлы не присутствуют на складе, или если они ещё живы (live)."

msgid "--list-failures"
msgstr "--list-failures"

msgid "List store items corresponding to cached build failures."
msgstr "Вывести список элементов склада, которые относятся к кешированным неудачным сборкам."

msgid "This prints nothing unless the daemon was started with @option{--cache-failures} (@pxref{Invoking guix-daemon, @option{--cache-failures}})."
msgstr "Это ничего не выводит, если демон не был запущен с опцией @option{--cache-failures} (@pxref{Invoking guix-daemon, @option{--cache-failures}})."

msgid "--list-roots"
msgstr "--list-roots"

msgid "List the GC roots owned by the user; when run as root, list @emph{all} the GC roots."
msgstr "Вывести список корней сборщика мусора (GC roots), которыми владеет пользователь; при запуске от root, выводит список @emph{всех} корней сборщика мусора."

msgid "--list-busy"
msgstr "--list-busy"

msgid "List store items in use by currently running processes.  These store items are effectively considered GC roots: they cannot be deleted."
msgstr "Составляет список элементов хранилица, исользуемых запущенными в данное время процессами. Эти элементы считаются корнями GC: они не могут быть удалены."

msgid "--clear-failures"
msgstr "--clear-failures"

msgid "Remove the specified store items from the failed-build cache."
msgstr "Удалить заданные элементы склада из кеша неудачных сборок."

msgid "Again, this option only makes sense when the daemon is started with @option{--cache-failures}.  Otherwise, it does nothing."
msgstr "Опять же эта опция имеет смысл, если демон запущен с @option{--cache-failures}. В противном случае это не имеет эффекта."

msgid "--list-dead"
msgstr "--list-dead"

msgid "Show the list of dead files and directories still present in the store---i.e., files and directories no longer reachable from any root."
msgstr "Вывести список мёртвых файлов и директорий, которые по-прежнему присутствуют на складе, то есть файлы и директории, не доступные более из любого корня."

msgid "--list-live"
msgstr "--list-live"

msgid "Show the list of live store files and directories."
msgstr "Вывести список живых файлов и директорий склада."

msgid "In addition, the references among existing store files can be queried:"
msgstr "В дополнение можно запросить связи между существующими файлами на складе:"

msgid "--references"
msgstr "--references"

msgid "--referrers"
msgstr "--referrers"

msgid "package dependencies"
msgstr "зависимости пакетов"

msgid "List the references (respectively, the referrers) of store files given as arguments."
msgstr "Вывести список связанных (обязательно, ссылающихся) файлов на складе с указанными аргументами."

msgid "--requisites"
msgstr "--requisites"

msgid "-R"
msgstr "-R"

msgid "closure"
msgstr "closure"

msgid "List the requisites of the store files passed as arguments.  Requisites include the store files themselves, their references, and the references of these, recursively.  In other words, the returned list is the @dfn{transitive closure} of the store files."
msgstr "Вывести всё необходимое для файлов на складе, указанных в аргументах. Всё необходимое включает сами файлы на складе, их связи и связи их связей рекурсивно. Другими словами, выводимый список --- это @dfn{непосредственный конвейер} файлов на складе."

msgid "@xref{Invoking guix size}, for a tool to profile the size of the closure of an element.  @xref{Invoking guix graph}, for a tool to visualize the graph of references."
msgstr "См. @xref{Invoking guix size} для информации об инструменте профилирования конвейера для элемента. См. @xref{Invoking guix graph} для информации об инструменте визуализации графа связей."

msgid "--derivers"
msgstr "--derivers"

msgid "derivation"
msgstr "derivation"

msgid "Return the derivation(s) leading to the given store items (@pxref{Derivations})."
msgstr "Вернуть деривацию(-ии), производящие данные элементы склада (@pxref{Derivations})."

msgid "For example, this command:"
msgstr "Например, эта команда:"

msgid "guix gc --derivers $(guix package -I ^emacs$ | cut -f4)\n"
msgstr "guix gc --derivers `guix package -I ^emacs$ | cut -f4`\n"

msgid "returns the @file{.drv} file(s) leading to the @code{emacs} package installed in your profile."
msgstr "возвращает файл(ы) @file{.drv}, которые произвели пакет @code{emacs}, установленный в вашем профиле."

msgid "Note that there may be zero matching @file{.drv} files, for instance because these files have been garbage-collected.  There can also be more than one matching @file{.drv} due to fixed-output derivations."
msgstr "Отметим, что может быть не найдено ни одного файла @file{.drv}, например, потому что эти файлы были удалены сборщиком мусора. Также может быть более одного файла @file{.drv} из-за дериваций с фиксированным выходом."

msgid "Lastly, the following options allow you to check the integrity of the store and to control disk usage."
msgstr "Наконец, следующие опции позволяют проверить целостность склада и контролировать использование диска."

msgid "--verify[=@var{options}]"
msgstr "--verify[=@var{options}]"

msgid "integrity, of the store"
msgstr "целостность, склада"

msgid "integrity checking"
msgstr "проверка целостности"

msgid "Verify the integrity of the store."
msgstr "Проверить целостность склада."

msgid "By default, make sure that all the store items marked as valid in the database of the daemon actually exist in @file{/gnu/store}."
msgstr "По умолчанию убедиться, что все элементы склада, которые в базе данных демона помечены как действующие, на самом деле присутствуют в @file{/gnu/store}."

msgid "When provided, @var{options} must be a comma-separated list containing one or more of @code{contents} and @code{repair}."
msgstr "Опции @var{options}, если они указаны, должны представлять собой список, разделённый запятыми, содержащий одно или более значений @code{contents} и @code{repair}."

msgid "When passing @option{--verify=contents}, the daemon computes the content hash of each store item and compares it against its hash in the database.  Hash mismatches are reported as data corruptions.  Because it traverses @emph{all the files in the store}, this command can take a long time, especially on systems with a slow disk drive."
msgstr "Если задано @option{--verify=contents}, демон вычисляет хеш содержимого каждого элемента склада и сравнивает с его хешем в базе данных. Несовпадения хеша отображаются в отчёте как повреждение данных. Так как она проходит @emph{все файлы склада}, эта команда может занять много времени, особенно в системах с медленным диском."

msgid "repairing the store"
msgstr "восстановление склада"

msgid "corruption, recovering from"
msgstr "разрушение, его восстановление"

msgid "Using @option{--verify=repair} or @option{--verify=contents,repair} causes the daemon to try to repair corrupt store items by fetching substitutes for them (@pxref{Substitutes}).  Because repairing is not atomic, and thus potentially dangerous, it is available only to the system administrator.  A lightweight alternative, when you know exactly which items in the store are corrupt, is @command{guix build --repair} (@pxref{Invoking guix build})."
msgstr "Использование @option{--verify=repair} или @option{--verify=contents,repair} указывает демону предпринять попытку восстановить разрушенные элементы склада, выбирая подстановки для них (@pxref{Substitutes}). Так как восстановление не атомарное, и поэтому потенциально опасно, оно доступно только системному администратору. Малозатратная альтернатива в случае, если вы знаете точно, какие элементы склада испорчены, --- это @command{guix build --repair} (@pxref{Invoking guix build})."

msgid "--optimize"
msgstr "--optimize"

msgid "Optimize the store by hard-linking identical files---this is @dfn{deduplication}."
msgstr "Оптимизировать склад с помощью жёстких ссылок на идентичные файлы --- это @dfn{дедупликация}."

msgid "The daemon performs deduplication after each successful build or archive import, unless it was started with @option{--disable-deduplication} (@pxref{Invoking guix-daemon, @option{--disable-deduplication}}).  Thus, this option is primarily useful when the daemon was running with @option{--disable-deduplication}."
msgstr "Демон выполняет дедупликацию после каждой успешной сборки или импорта архива, если конечно оно не было запущено с @code{--disable-deduplication} (@pxref{Invoking guix-daemon, @code{--disable-deduplication}}). Так что эта опция особенно важна, если демон запущено с @code{--disable-deduplication}."

msgid "Invoking @command{guix pull}"
msgstr "Вызов @command{guix pull}"

msgid "upgrading Guix"
msgstr "обновление версии Guix"

msgid "updating Guix"
msgstr "обновление Guix"

msgid "guix pull"
msgstr "guix pull"

msgid "pull"
msgstr "получение"

msgid "security, @command{guix pull}"
msgstr "sudo vs. @command{guix pull}"

msgid "authenticity, of code obtained with @command{guix pull}"
msgstr "перемещаемые бинарники, с @command{guix pack}"

msgid "the @option{--channels} option;"
msgstr "опция @option{--channels};"

msgid "the built-in default channels specified in the @code{%default-channels} variable."
msgstr "встроенные по умолчанию каналы определены в переменной @code{%default-channels}."

msgid "On completion, @command{guix package} will use packages and package versions from this just-retrieved copy of Guix.  Not only that, but all the Guix commands and Scheme modules will also be taken from that latest version.  New @command{guix} sub-commands added by the update also become available."
msgstr "После выполнения этой команды @command{guix package} будет использовать пакеты и те их версии, которые имеются в только что полученной копии Guix. Эта последняя версия будет источником также всех команд Guix, модулей Scheme. Из этого обновления станет доступен набор команд @command{guix}."

msgid "Any user can update their Guix copy using @command{guix pull}, and the effect is limited to the user who ran @command{guix pull}.  For instance, when user @code{root} runs @command{guix pull}, this has no effect on the version of Guix that user @code{alice} sees, and vice versa."
msgstr "Любой пользователь может обновить свою копию Guix, используя @command{guix pull}, эффект коснётся только пользователя, который запустил @command{guix pull}. Например, если пользователь @code{root} запускает @command{guix pull}, это не имеет эффекта на версию Guix, которую видит @code{alice} sees, и наоборот."

msgid "The result of running @command{guix pull} is a @dfn{profile} available under @file{~/.config/guix/current} containing the latest Guix."
msgstr "Результат запуска @command{guix pull} --- это профиль @dfn{profile}, доступный в @file{~/.config/guix/current}, содержащий последний Guix."

msgid "The @option{--list-generations} or @option{-l} option lists past generations produced by @command{guix pull}, along with details about their provenance:"
msgstr "Опция @code{--list-generations} или @code{-l} выводит список последних поколений, поставленных @command{guix pull}, вместе с деталями об их происхождении:"

msgid "@xref{Invoking guix describe, @command{guix describe}}, for other ways to describe the current status of Guix."
msgstr "Смотрите @xref{Invoking guix describe, @command{guix describe}}, для информации о других способах получить информацию о текущем статусе Guix."

msgid "This @code{~/.config/guix/current} profile works exactly like the profiles created by @command{guix package} (@pxref{Invoking guix package}).  That is, you can list generations, roll back to the previous generation---i.e., the previous Guix---and so on:"
msgstr "Этот профиль @code{~/.config/guix/current} работает, как любой другой профиль, созданный @command{guix package} (@pxref{Invoking guix package}). Так что можно вывести список поколений, откатиться до предыдущего поколения, то есть до предыдущего Guix, и так далее:"

msgid ""
"$ guix pull --roll-back\n"
"switched from generation 3 to 2\n"
"$ guix pull --delete-generations=1\n"
"deleting /var/guix/profiles/per-user/charlie/current-guix-1-link\n"
msgstr ""
"$ guix package -p ~/.config/guix/current --roll-back\n"
"switched from generation 3 to 2\n"
"$ guix package -p ~/.config/guix/current --delete-generations=1\n"
"deleting /var/guix/profiles/per-user/charlie/current-guix-1-link\n"

msgid "You can also use @command{guix package} (@pxref{Invoking guix package})  to manage the profile by naming it explicitly:"
msgstr "Вы также можете использовать @command{guix package} (@pxref{Invoking guix package}),  чтобы управлять профилем, называя его явно:"

msgid ""
"$ guix package -p ~/.config/guix/current --roll-back\n"
"switched from generation 3 to 2\n"
"$ guix package -p ~/.config/guix/current --delete-generations=1\n"
"deleting /var/guix/profiles/per-user/charlie/current-guix-1-link\n"
msgstr ""
"$ guix package -p ~/.config/guix/current --roll-back\n"
"switched from generation 3 to 2\n"
"$ guix package -p ~/.config/guix/current --delete-generations=1\n"
"deleting /var/guix/profiles/per-user/charlie/current-guix-1-link\n"

msgid "The @command{guix pull} command is usually invoked with no arguments, but it supports the following options:"
msgstr "Команда @command{guix pull} обычно вызывается без аргументов, но поддерживает следующие опции:"

msgid "--url=@var{url}"
msgstr "--url=@var{url}"

msgid "--commit=@var{commit}"
msgstr "--commit=@var{commit}"

msgid "--branch=@var{branch}"
msgstr "--branch=@var{branch}"

msgid "@file{channels.scm}, configuration file"
msgstr "@file{channels.scm}, configuration file"

msgid "configuration file for channels"
msgstr "конфигурационный файл для каналов"

msgid "These options are provided for convenience, but you can also specify your configuration in the @file{~/.config/guix/channels.scm} file or using the @option{--channels} option (see below)."
msgstr "Эти опции внедрены для удобства, но также можно задать конфигурационный файл @file{~/.config/guix/channels.scm} или использовать опцию @option{--channels} (смотрите ниже)."

msgid "--channels=@var{file}"
msgstr "--channels=@var{file}"

msgid "-C @var{file}"
msgstr "-C @var{file}"

msgid "Read the list of channels from @var{file} instead of @file{~/.config/guix/channels.scm} or @file{/etc/guix/channels.scm}.  @var{file} must contain Scheme code that evaluates to a list of channel objects.  @xref{Channels}, for more information."
msgstr "Считать список каналов из файла @var{file} вместо @file{~/.config/guix/channels.scm}. @var{file} должен содержать код Scheme, который определяет список объектов \"канал\". См.  @xref{Channels} для подробной информации."

msgid "-q"
msgstr "-q"

msgid "channel news"
msgstr "каналы"

msgid "--news"
msgstr "--news"

msgid "-N"
msgstr "-N"

msgid "List all the generations of @file{~/.config/guix/current} or, if @var{pattern} is provided, the subset of generations that match @var{pattern}.  The syntax of @var{pattern} is the same as with @code{guix package --list-generations} (@pxref{Invoking guix package})."
msgstr "Вывести список всех поколений @file{~/.config/guix/current} или, если предоставлен паттерн @var{pattern}, подмножество поколений, которые соответствуют @var{pattern}. Синтаксис @var{pattern} --- такой же, как у @code{guix package --list-generations} (@pxref{Invoking guix package})."

msgid "Roll back to the previous @dfn{generation} of @file{~/.config/guix/current}---i.e., undo the last transaction."
msgstr "Откатиться до предыдущего @dfn{поколения} профиля, то есть отменить последнюю транзакцию."

msgid "If the current generation matches, it is @emph{not} deleted."
msgstr "Если текущее поколение попадает под условия паттерна, оно не будет удалено. А также нулевое поокление никогда не удаляется."

msgid "@xref{Invoking guix describe}, for a way to display information about the current generation only."
msgstr "См. @xref{Invoking guix describe}, чтобы узнать, как вывести информацию только о текущем поколении."

msgid "Use @var{profile} instead of @file{~/.config/guix/current}."
msgstr "Использовать профиль @var{profile} вместо @file{~/.config/guix/current}."

msgid "--dry-run"
msgstr "--dry-run"

msgid "-n"
msgstr "-n"

msgid "Show which channel commit(s) would be used and what would be built or substituted but do not actually do it."
msgstr "Показать, какие коммиты будут использоваться, и что будет собрано или скачано в виде подстановок, но не выполнять эту работу."

msgid "--allow-downgrades"
msgstr "--allow-downgrades"

msgid "Allow pulling older or unrelated revisions of channels than those currently in use."
msgstr "Разрешить загружать более старые или несвязанные версии каналов, чем те, которые используются в настоящее время."

msgid "downgrade attacks, protection against"
msgstr "атаки на понижение версии, защита от"

msgid "By default, @command{guix pull} protects against so-called ``downgrade attacks'' whereby the Git repository of a channel would be reset to an earlier or unrelated revision of itself, potentially leading you to install older, known-vulnerable versions of software packages."
msgstr "По умолчанию @command{guix pull} защищает от так называемых ``атак на более раннюю версию'', когда репозиторий Git данного канала будет сброшен до более ранней или несвязанной версии, что может привести к установке более старых, известных уязвимых версий пакетов."

msgid "Make sure you understand its security implications before using @option{--allow-downgrades}."
msgstr "Прежде чем использовать @option{--allow-downgrades}, убедитесь, что вы понимаете его последствия для безопасности."

msgid "--disable-authentication"
msgstr "--disable-authentication"

msgid "Allow pulling channel code without authenticating it."
msgstr "Разрешить загрузку канала без его аутентификации."

msgid "authentication, of channel code"
msgstr "аутентификация для проверки Guix"

msgid "By default, @command{guix pull} authenticates code downloaded from channels by verifying that its commits are signed by authorized developers, and raises an error if this is not the case.  This option instructs it to not perform any such verification."
msgstr "По умолчанию @command{guix pull} аутентифицирует код, загруженный из каналов, проверяя, что его коммиты подписаны авторизованными разработчиками, и выдает ошибку, если это не так.  Эта опция дает указание не выполнять такую проверку."

msgid "Make sure you understand its security implications before using @option{--disable-authentication}."
msgstr "Прежде чем использовать @option{--disable-authentication}, убедитесь, что вы понимаете его последствия для безопасности."

msgid "-s @var{system}"
msgstr "-s @var{system}"

msgid "Attempt to build for @var{system}---e.g., @code{i686-linux}---instead of the system type of the build host."
msgstr "Предпринять попытку собрать систему @var{system}, т.е. @code{i686-linux}, вместо типа системы хоста сборки."

msgid "Use the bootstrap Guile to build the latest Guix.  This option is only useful to Guix developers."
msgstr "Использовать бутстрап Guile для сорки последнего Guix. Эта опция полезна только для разработчиков."

msgid "The @dfn{channel} mechanism allows you to instruct @command{guix pull} which repository and branch to pull from, as well as @emph{additional} repositories containing package modules that should be deployed.  @xref{Channels}, for more information."
msgstr "Механизм каналов @dfn{channel} позволяет указать @command{guix pull}, из какого репозитория или ветки скачивать, а также какие @emph{дополнительные} репозитории должны использоваться для развёртки. См. @xref{Channels} для подробной информации."

msgid "In addition, @command{guix pull} supports all the common build options (@pxref{Common Build Options})."
msgstr "В добавок @command{guix pull} поддерживает все стандартные опции сборки (@pxref{Common Build Options})."

msgid "Invoking @command{guix time-machine}"
msgstr "Запуск @command{guix time-machine}"

msgid "guix time-machine"
msgstr "guix time-machine"

msgid "pinning, channels"
msgstr "связывание, каналы"

msgid "replicating Guix"
msgstr "копирование Guix"

msgid "reproducibility, of Guix"
msgstr "воспроизводимость, Guix"

msgid "The @command{guix time-machine} command provides access to other revisions of Guix, for example to install older versions of packages, or to reproduce a computation in an identical environment.  The revision of Guix to be used is defined by a commit or by a channel description file created by @command{guix describe} (@pxref{Invoking guix describe})."
msgstr "Команда @command{guix time-machine} предоставляет доступ к другим версиям Guix, например, для установки более старых версий пакетов или для воспроизведения вычислений в идентичной среде. Версия используемого Guix определяется коммитом или файлом описания канала, созданным @command{guix describe} (@pxref{Invoking guix describe})."

msgid ""
"guix time-machine --commit=v1.2.0 -- \\\n"
"  environment -C --ad-hoc guile -- guile\n"
msgstr ""
"guix time-machine --commit=v1.2.0 -- \\\n"
"  environment -C --ad-hoc guile -- guile\n"

msgid "guix time-machine @var{options}@dots{} -- @var{command} @var {arg}@dots{}\n"
msgstr "guix time-machine @var{options}@dots{} -- @var{command} @var{arg}@dots{}\n"

msgid "where @var{command} and @var{arg}@dots{} are passed unmodified to the @command{guix} command of the specified revision.  The @var{options} that define this revision are the same as for @command{guix pull} (@pxref{Invoking guix pull}):"
msgstr "где @var{command} и @var{arg}@dots{} передаются без изменений в команду @command{guix} указанной ревизии. @var{options}, которые определяют эту ревизию, такие же, как и для @command{guix pull} (@pxref{Invoking guix pull}):"

msgid "Read the list of channels from @var{file}.  @var{file} must contain Scheme code that evaluates to a list of channel objects.  @xref{Channels} for more information."
msgstr "Считать список каналов из файла @var{file} вместо @file{~/.config/guix/channels.scm}. @var{file} должен содержать код Scheme, который определяет список объектов \"канал\". См.  @xref{Channels} для подробной информации."

msgid "Note that @command{guix time-machine} can trigger builds of channels and their dependencies, and these are controlled by the standard build options (@pxref{Common Build Options})."
msgstr "Если указанные пакеты ещё не собраны, @command{guix archive} автоматически соберёт их. Процесс сборки может контролироваться обычными опциями сборки (@pxref{Common Build Options})."

msgid "The functionality described here is a ``technology preview'' as of version @value{VERSION}.  As such, the interface is subject to change."
msgstr "Функциональность, описанная здесь, --- это обзор технологии версии @value{VERSION}. Интерфейс может меняться."

msgid "inferiors"
msgstr "ранние версии"

msgid "composition of Guix revisions"
msgstr "составление ревизий Guix"

msgid "Sometimes you might need to mix packages from the revision of Guix you're currently running with packages available in a different revision of Guix.  Guix @dfn{inferiors} allow you to achieve that by composing different Guix revisions in arbitrary ways."
msgstr "Иногда вам может понадобиться перемешивать пакеты из ревизии Guix, которая работает в настоящий момент, с пакетами, доступными в другой ревизии Guix. Основания Guix @dfn{inferiors} позволяют вам получить это, составляя различные ревизии Guix произвольным образом."

msgid "inferior packages"
msgstr "пакеты ранних версий"

msgid "Technically, an ``inferior'' is essentially a separate Guix process connected to your main Guix process through a REPL (@pxref{Invoking guix repl}).  The @code{(guix inferior)} module allows you to create inferiors and to communicate with them.  It also provides a high-level interface to browse and manipulate the packages that an inferior provides---@dfn{inferior packages}."
msgstr "Технически работа с ранними версиями --- это в целом отдельный процесс Guix, связанный с главным процессом Guix через REPL (@pxref{Invoking guix repl}). Модуль @code{(guix inferior)} позволяет запускать ранние версии и взаимодействовать с ними. Он также предоставляет высокоуровневый интерфейс для обзора и управления пакетами, которые поставляет ранняя версия --- @dfn{ранние версии пакетов}."

msgid "When combined with channels (@pxref{Channels}), inferiors provide a simple way to interact with a separate revision of Guix.  For example, let's assume you want to install in your profile the current @code{guile} package, along with the @code{guile-json} as it existed in an older revision of Guix---perhaps because the newer @code{guile-json} has an incompatible API and you want to run your code against the old API@.  To do that, you could write a manifest for use by @code{guix package --manifest} (@pxref{Writing Manifests}); in that manifest, you would create an inferior for that old Guix revision you care about, and you would look up the @code{guile-json} package in the inferior:"
msgstr "При сочетании с каналами (@pxref{Channels}) ранние версии предоставляют простой способ взаимодействовать с отдельными ревизиями Guix. Например, предположим, вы хотите установить в ваш профиль текущий пакет @code{guile} вместе с тем @code{guile-json}, который был определён в предыдущей ревизии Guix (может быть, потому что новый @code{guile-json} имеет несовместимый API, и вы хотите запустить ваш код со старым API). Чтобы это сделать, можно написать манифест для использования с @code{guix package --manifest} (@pxref{Writing Manifests}). В этом манифесте вы создадите описание ранней версии той предыдущей ревизии Guix, которая вас интересует, в которой вы ищете пакет @code{guile-json} ранней версии:"

msgid ""
"(use-modules (guix inferior) (guix channels)\n"
"             (srfi srfi-1))   ;for 'first'\n"
"\n"
msgstr ""
"(use-modules (guix inferior) (guix channels)\n"
"             (srfi srfi-1))   ;for 'first'\n"
"\n"

msgid ""
"(define inferior\n"
"  ;; An inferior representing the above revision.\n"
"  (inferior-for-channels channels))\n"
"\n"
msgstr ""
"(define inferior\n"
"  ;; An inferior representing the above revision.\n"
"  (inferior-for-channels channels))\n"
"\n"

msgid ""
";; Now create a manifest with the current \"guile\" package\n"
";; and the old \"guile-json\" package.\n"
"(packages->manifest\n"
" (list (first (lookup-inferior-packages inferior \"guile-json\"))\n"
"       (specification->package \"guile\")))\n"
msgstr ""
";; Now create a manifest with the current \"guile\" package\n"
";; and the old \"guile-json\" package.\n"
"(packages->manifest\n"
" (list (first (lookup-inferior-packages inferior \"guile-json\"))\n"
"       (specification->package \"guile\")))\n"

msgid "On its first run, @command{guix package --manifest} might have to build the channel you specified before it can create the inferior; subsequent runs will be much faster because the Guix revision will be cached."
msgstr "Далее запуск @command{guix package --manifest} может вызвать сборку канала, который вы обозначили ранее, и в результате это задействует раннюю версию. Последовательные запуски будут быстрее, потому что ревизия Guix будет кеширована."

msgid "The @code{(guix inferior)} module provides the following procedures to open an inferior:"
msgstr "Модуль @code{(guix inferior)} предоставляет следующие процедуры для работы с ранними версиями:"

msgid "As a side effect, this procedure may build or substitute binaries for @var{channels}, which can take time."
msgstr "Как побочный эффект, эта процедура может собирать или скачивать подстановки бинарников для @var{channels}, что может занять время."

msgid "The procedures listed below allow you to obtain and manipulate inferior packages."
msgstr "Процедуры, приведённые ниже, обеспечивают работу и управление ранними версиями пакетов."

msgid "Return the list of packages known to @var{inferior}."
msgstr "Возвращает список пакетов, относящихся к ранней версии @var{inferior}."

msgid "Return true if @var{obj} is an inferior package."
msgstr "Возвращает true, если объект @var{obj} --- это пакет ранней версии."

msgid "These procedures are the counterpart of package record accessors (@pxref{package Reference}).  Most of them work by querying the inferior @var{package} comes from, so the inferior must still be live when you call these procedures."
msgstr "Эти процедуры являются двойниками метода доступа к записям пакетов (@pxref{package Reference}). Большинство из них работают с запросами для ранней версии, из которой происходит @var{package}, так что ранняя версия должна оставаться живой, когда вы вызываете эти процедуры."

msgid "Inferior packages can be used transparently like any other package or file-like object in G-expressions (@pxref{G-Expressions}).  They are also transparently handled by the @code{packages->manifest} procedure, which is commonly used in manifests (@pxref{Invoking guix package, the @option{--manifest} option of @command{guix package}}).  Thus you can insert an inferior package pretty much anywhere you would insert a regular package: in manifests, in the @code{packages} field of your @code{operating-system} declaration, and so on."
msgstr "Пакеты ранних версий могут использоваться прозрачно, как любой другой пакет или объект типа файл в выражении G-expressions (@pxref{G-Expressions}). Они также прозрачно используются в процедуре @code{packages->manifest}, которая обычно используется в манифестах (@pxref{Invoking guix package, the @option{--manifest} option of @command{guix package}}). Так можно вставлять пакет ранней версии в принципе куда угодно, как если вставлять обычный пакет: в манифесты, в поле @code{packages} вашего объявления @code{operating-system} и т.д."

msgid "Invoking @command{guix describe}"
msgstr "Вызов @command{guix describe}"

msgid "guix describe"
msgstr "guix describe"

msgid "Often you may want to answer questions like: ``Which revision of Guix am I using?'' or ``Which channels am I using?'' This is useful information in many situations: if you want to @emph{replicate} an environment on a different machine or user account, if you want to report a bug or to determine what change in the channels you are using caused it, or if you want to record your system state for reproducibility purposes.  The @command{guix describe} command answers these questions."
msgstr "Часто может возникать вопрос: \"Какую ревизию Guix я использую?\" - Или: \"Какие каналы я использую?\" Это полезна информация во многих ситуациях: если вы хотите @emph{повторить} окружение на другой машине или в другом пользовательском аккаунте, если вы хотите составить отчёт об ошибке, чтобы определить, какие изменения в канале, который вы используете, вызвали ошибку, или если вы хотите записать состояние вашей системы в целях воспроизводимости. Команда @command{guix describe} отвечает на эти вопросы."

msgid "When run from a @command{guix pull}ed @command{guix}, @command{guix describe} displays the channel(s) that it was built from, including their repository URL and commit IDs (@pxref{Channels}):"
msgstr "В случае запуска после @command{guix pull} команда @command{guix describe} отображает канал(ы), из которых производилась сборка, включая URL и репозиториев и ID коммитов (@pxref{Channels}):"

msgid "If you're familiar with the Git version control system, this is similar in spirit to @command{git describe}; the output is also similar to that of @command{guix pull --list-generations}, but limited to the current generation (@pxref{Invoking guix pull, the @option{--list-generations} option}).  Because the Git commit ID shown above unambiguously refers to a snapshot of Guix, this information is all it takes to describe the revision of Guix you're using, and also to replicate it."
msgstr "Если вы знакомы с системой контроля версиями Git, эта команда по сути похожа на @command{git describe}; выход тот же, что в @command{guix pull --list-generations}, но ограничен текущим поколением (@pxref{Invoking guix pull, the @option{--list-generations} option}).  Так как ID коммита Git выше ссылается однозначно на снимок Guix, эта информация --- всё, что нужно для описания используемой ревизии Guix и повторения её."

msgid "To make it easier to replicate Guix, @command{guix describe} can also be asked to return a list of channels instead of the human-readable description above:"
msgstr "Чтобы проще повторить Guix, @command{guix describe} также может вызываться для вывода списка каналов вместо читаемого описания выше:"

msgid ""
"$ guix describe -f channels\n"
"(list (channel\n"
"        (name 'guix)\n"
"        (url \"https://git.guix.gnu.org/guix.git\")\n"
"        (commit\n"
"          \"e0fa68c7718fffd33d81af415279d6ddb518f727\")\n"
"        (introduction\n"
"          (make-channel-introduction\n"
"            \"9edb3f66fd807b096b48283debdcddccfea34bad\"\n"
"            (openpgp-fingerprint\n"
"              \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\")))))\n"
msgstr ""
"$ guix describe -f channels\n"
"(list (channel\n"
"        (name 'guix)\n"
"        (url \"https://git.guix.gnu.org/guix.git\")\n"
"        (commit\n"
"          \"e0fa68c7718fffd33d81af415279d6ddb518f727\")\n"
"        (introduction\n"
"          (make-channel-introduction\n"
"            \"9edb3f66fd807b096b48283debdcddccfea34bad\"\n"
"            (openpgp-fingerprint\n"
"              \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\")))))\n"

msgid "You can save this to a file and feed it to @command{guix pull -C} on some other machine or at a later point in time, which will instantiate @emph{this exact Guix revision} (@pxref{Invoking guix pull, the @option{-C} option}).  From there on, since you're able to deploy the same revision of Guix, you can just as well @emph{replicate a complete software environment}.  We humbly think that this is @emph{awesome}, and we hope you'll like it too!"
msgstr "Можно сохранить это в файл и подать на вход @command{guix pull -C} на любой другой машине или через время, чтобы инициализировать @emph{эту конкретную ревизию Guix} (@pxref{Invoking guix pull, the @option{-C} option}). Теперь, когда можно развернуть подобную ревизию Guix, вы можете также @emph{полностью повторить программное окружение}. Мы скромно полагаем, это @emph{чудесно}. Надеемся, вам это тоже понравится!"

msgid "The details of the options supported by @command{guix describe} are as follows:"
msgstr "Подробнее об опциях, поддерживаемых @command{guix describe}:"

msgid "--format=@var{format}"
msgstr "--format=@var{format}"

msgid "-f @var{format}"
msgstr "-f @var{format}"

msgid "Produce output in the specified @var{format}, one of:"
msgstr "Произвести вывод в указанном формате @var{format}, одном из:"

msgid "human"
msgstr "human"

msgid "produce human-readable output;"
msgstr "произвести вывод для чтения человеком;"

msgid "channels"
msgstr "channels"

msgid "produce a list of channel specifications that can be passed to @command{guix pull -C} or installed as @file{~/.config/guix/channels.scm} (@pxref{Invoking guix pull});"
msgstr "произвести список спецификаций каналов, который может использоваться в @command{guix pull -C} или вставлен в файл @file{~/.config/guix/channels.scm} (@pxref{Invoking guix pull});"

msgid "channels-sans-intro"
msgstr "channels-sans-intro"

msgid "like @code{channels}, but omit the @code{introduction} field; use it to produce a channel specification suitable for Guix version 1.1.0 or earlier---the @code{introduction} field has to do with channel authentication (@pxref{Channels, Channel Authentication}) and is not supported by these older versions;"
msgstr "как @code{channels}, но без поля @code{Introduction}; используйте его для создания спецификации канала, подходящей для Guix версии 1.1.0 или более ранней. Поле @code{Introduction} связано с аутентификацией канала (@pxref{Channels, Channel Authentication}) и не поддерживается этими более ранними версиями;"

msgid "json"
msgstr "json"

msgid "JSON"
msgstr "JSON"

msgid "produce a list of channel specifications in JSON format;"
msgstr "произвести список спецификаций каналов в формате JSON;"

msgid "recutils"
msgstr "recutils"

msgid "produce a list of channel specifications in Recutils format."
msgstr "произвести список спецификаций каналов в формате Recutils."

msgid "--list-formats"
msgstr "--list-roots"

msgid "Display available formats for @option{--format} option."
msgstr "Вывести доступные форматы для @option{--format} опции."

msgid "Display information about @var{profile}."
msgstr "Вывести информацию о профиле @var{profile}."

msgid "Invoking @command{guix archive}"
msgstr "Вызов @command{guix archive}"

msgid "guix archive"
msgstr "guix archive"

msgid "archive"
msgstr "архив"

msgid "The @command{guix archive} command allows users to @dfn{export} files from the store into a single archive, and to later @dfn{import} them on a machine that runs Guix.  In particular, it allows store files to be transferred from one machine to the store on another machine."
msgstr "Команда @command{guix archive} даёт возможность пользователям @dfn{экспортировать} файлы со склада в простой архив и затем @dfn{импортировать} их на машину с работающим Guix. В частности, это позволяет передавать файлы склада одной машины на склад другой машины."

msgid "If you're looking for a way to produce archives in a format suitable for tools other than Guix, @pxref{Invoking guix pack}."
msgstr "Если вы ищете способ производить архивы в формате, который подходит для инструментов, отличных от Guix, смотрите @pxref{Invoking guix pack}."

msgid "exporting store items"
msgstr "экспорт элементов склада"

msgid "To export store files as an archive to standard output, run:"
msgstr "Чтобы экспортировать файлы склада в архив в стандартный вывод, выполните:"

msgid "guix archive --export @var{options} @var{specifications}...\n"
msgstr "guix archive --export @var{options} @var{specifications}...\n"

msgid "@var{specifications} may be either store file names or package specifications, as for @command{guix package} (@pxref{Invoking guix package}).  For instance, the following command creates an archive containing the @code{gui} output of the @code{git} package and the main output of @code{emacs}:"
msgstr "Спецификации @var{specifications} могут быть либо именами файлов или пакетами, как для команде @command{guix package} (@pxref{Invoking guix package}). Например, следующая команда создаёт архив, содержащий выход @code{gui} пакета @code{git} и главный выход @code{emacs}:"

msgid "guix archive --export git:gui /gnu/store/...-emacs-24.3 > great.nar\n"
msgstr "guix archive --export git:gui /gnu/store/...-emacs-24.3 > great.nar\n"

msgid "If the specified packages are not built yet, @command{guix archive} automatically builds them.  The build process may be controlled with the common build options (@pxref{Common Build Options})."
msgstr "Если указанные пакеты ещё не собраны, @command{guix archive} автоматически соберёт их. Процесс сборки может контролироваться обычными опциями сборки (@pxref{Common Build Options})."

msgid "To transfer the @code{emacs} package to a machine connected over SSH, one would run:"
msgstr "Чтобы передать пакет @code{emacs} на машину, соединённую по SSH, нужно следующее:"

msgid "guix archive --export -r emacs | ssh the-machine guix archive --import\n"
msgstr "guix archive --export -r emacs | ssh the-machine guix archive --import\n"

msgid "Similarly, a complete user profile may be transferred from one machine to another like this:"
msgstr "Точно также для передачи всего профиля пользователя из одной машины на другую, выполните:"

msgid ""
"guix archive --export -r $(readlink -f ~/.guix-profile) | \\\n"
"  ssh the-machine guix archive --import\n"
msgstr ""
"guix archive --export -r $(readlink -f ~/.guix-profile) | \\\n"
"  ssh the-machine guix archive --import\n"

msgid "However, note that, in both examples, all of @code{emacs} and the profile as well as all of their dependencies are transferred (due to @option{-r}), regardless of what is already available in the store on the target machine.  The @option{--missing} option can help figure out which items are missing from the target store.  The @command{guix copy} command simplifies and optimizes this whole process, so this is probably what you should use in this case (@pxref{Invoking guix copy})."
msgstr "Однако заметим, что в обоих примерах, передаются весь @code{emacs} и профиль вместе с их зависимости (ввиду @code{-r}), не учитывая, что доступно на складе целевой машины. Опция @code{--missing} помогает определить отсутствующие элементы на целевом складе. Команда @command{guix copy} упрощает и оптимизирует весь этот процесс, так что в данном случае она решает проблему (@pxref{Invoking guix copy})."

msgid "nar, archive format"
msgstr "nar, формат архива"

msgid "normalized archive (nar)"
msgstr "нормализованный архив (nar)"

msgid "nar bundle, archive format"
msgstr "nar, формат архива"

msgid "Each store item is written in the @dfn{normalized archive} or @dfn{nar} format (described below), and the output of @command{guix archive --export} (and input of @command{guix archive --import}) is a @dfn{nar bundle}."
msgstr "Каждый элемент храниища написан в @dfn{normalized archive} или @dfn{nar} формате (описано ниже), и вывод @command{guix archive --export} (и ввод @command{guix archive --import}) есть @dfn{nar bundle}."

msgid "The nar format is comparable in spirit to `tar', but with differences that make it more appropriate for our purposes.  First, rather than recording all Unix metadata for each file, the nar format only mentions the file type (regular, directory, or symbolic link); Unix permissions and owner/group are dismissed.  Second, the order in which directory entries are stored always follows the order of file names according to the C locale collation order.  This makes archive production fully deterministic."
msgstr "Формат nar по духу сравним с tar, но с отличиями, которые делают его более подходящим для наших целей.  Во-первых, вместо записи всех метаданных Unix для каждого файла, в формате nar упоминается только тип файла (обычный, каталог или символическая ссылка); Разрешения Unix и владелец/группа отклонены.  Во-вторых, порядок, в котором хранятся записи каталога, всегда следует порядку имен файлов в соответствии с порядком сопоставления @code{C} локали.  Это делает создание архивов полностью детерминированным."

msgid "That nar bundle format is essentially the concatenation of zero or more nars along with metadata for each store item it contains: its file name, references, corresponding derivation, and a digital signature."
msgstr "Формат пакета nar - это, по сути, конкатенация нуля или более nars вместе с метаданными для каждого элемента store, который содержит: имя файла, ссылки, соответствующую derivation и цифровую подпись."

msgid "When exporting, the daemon digitally signs the contents of the archive, and that digital signature is appended.  When importing, the daemon verifies the signature and rejects the import in case of an invalid signature or if the signing key is not authorized."
msgstr "При экспортировании демон подписывает цифровой подписью содержимое архива, и эта цифровая подпись прикрепляется. При импорте демон проверяет подпись и отменяет импорт в случае недействительной подписи, или если ключ подписи не авторизован."

msgid "The main options are:"
msgstr "Основные опции:"

msgid "--export"
msgstr "--export"

msgid "Export the specified store files or packages (see below).  Write the resulting archive to the standard output."
msgstr "Экспортировать указанные файлы хранилища или пакеты (смотрите ниже). Писать результирующий архив в стандартный вывод."

msgid "Dependencies are @emph{not} included in the output, unless @option{--recursive} is passed."
msgstr "Зависимости @emph{не} включаются в выход, если не задана опция @option{--recursive}."

msgid "-r"
msgstr "-r"

msgid "--recursive"
msgstr "--recursive"

msgid "When combined with @option{--export}, this instructs @command{guix archive} to include dependencies of the given items in the archive.  Thus, the resulting archive is self-contained: it contains the closure of the exported store items."
msgstr "При сочетании с @code{--export} это указывает @command{guix archive} включать в архив зависимости обозначенных элементов. Так результирующий архив будет \"сам в себе\": содержит полный конвейер экспортированных элементов склада."

msgid "--import"
msgstr "--import"

msgid "Read an archive from the standard input, and import the files listed therein into the store.  Abort if the archive has an invalid digital signature, or if it is signed by a public key not among the authorized keys (see @option{--authorize} below)."
msgstr "Читать архив из стандартного ввода и импортировать файлы, поставляемые им, на склад. Отклонить, если архив имеет недействительную цифровую подпись, или если он подписан публичным ключом, который не находится в списке авторизованных ключей (смотрите @code{--authorize} ниже)."

msgid "--missing"
msgstr "--missing"

msgid "Read a list of store file names from the standard input, one per line, and write on the standard output the subset of these files missing from the store."
msgstr "Читать список имён файлов склада из стандартного ввода, одна линия - один файл, и писать в стандартный вывод подмножество этих файлов, отсутствующих на складе."

msgid "--generate-key[=@var{parameters}]"
msgstr "--generate-key[=@var{parameters}]"

msgid "signing, archives"
msgstr "подпись, архивов"

msgid "Generate a new key pair for the daemon.  This is a prerequisite before archives can be exported with @option{--export}.  This operation is usually instantaneous but it can take time if the system's entropy pool needs to be refilled.  On Guix System, @code{guix-service-type} takes care of generating this key pair the first boot."
msgstr "Генерировать новую ключ-пару для демона. Это необходимо получить перед тем, как экспортировать архивы опцией @code{--export}. Отметим, что эта операция обычно занимает время, так как необходимо собрать много энтропии для ключ-пары."

msgid "The generated key pair is typically stored under @file{/etc/guix}, in @file{signing-key.pub} (public key) and @file{signing-key.sec} (private key, which must be kept secret).  When @var{parameters} is omitted, an ECDSA key using the Ed25519 curve is generated, or, for Libgcrypt versions before 1.6.0, it is a 4096-bit RSA key.  Alternatively, @var{parameters} can specify @code{genkey} parameters suitable for Libgcrypt (@pxref{General public-key related Functions, @code{gcry_pk_genkey},, gcrypt, The Libgcrypt Reference Manual})."
msgstr "Сгенерированная ключ-пара обычно сохраняется под @file{/etc/guix}, в файлы @file{signing-key.pub} (публичный ключ) и @file{signing-key.sec} (прватный ключ, который должен оставаться в секрете). Если параметры @var{parameters} пропущены, генерируется ключ ECDSA, используя кривую Ed25519, или для Libgcrypt версии ранее 1.6.0 --- это 4096-битный ключ RSA. Альтернативно в параметрах @var{parameters} можно указать @code{genkey}, соответствующие Libgcrypt (@pxref{General public-key related Functions, @code{gcry_pk_genkey},, gcrypt, The Libgcrypt Reference Manual})."

msgid "--authorize"
msgstr "--authorize"

msgid "authorizing, archives"
msgstr "авторизация, архивов"

msgid "Authorize imports signed by the public key passed on standard input.  The public key must be in ``s-expression advanced format''---i.e., the same format as the @file{signing-key.pub} file."
msgstr "Авторизовать импорт, подписанный публичным ключом, поступивший на стандартный ввод. Публичный ключ должен быть в формате s-expression, то есть в таком же формате, как файл @file{signing-key.pub}."

msgid "The list of authorized keys is kept in the human-editable file @file{/etc/guix/acl}.  The file contains @url{https://people.csail.mit.edu/rivest/Sexp.txt, ``advanced-format s-expressions''} and is structured as an access-control list in the @url{https://theworld.com/~cme/spki.txt, Simple Public-Key Infrastructure (SPKI)}."
msgstr "Список авторизованных ключей хранится в файле @file{/etc/guix/acl}, доступном для редактирования человеком. Файл содержит @url{http://people.csail.mit.edu/rivest/Sexp.txt, s-expression расширенного формата}, и он структурирован в виде списка контроля доступа в @url{http://theworld.com/~cme/spki.txt, Simple Public-Key Infrastructure (SPKI)}."

msgid "--extract=@var{directory}"
msgstr "--extract=@var{directory}"

msgid "-x @var{directory}"
msgstr "-x @var{directory}"

msgid "Read a single-item archive as served by substitute servers (@pxref{Substitutes}) and extract it to @var{directory}.  This is a low-level operation needed in only very narrow use cases; see below."
msgstr "Читать архив, представляющий один элемент, в качестве поставленного серверами подстановки (@pxref{Substitutes}) и извлечь его в директорию @var{directory}. Это низкоуровневая операция, необходимая только в очень редких случаях, смотрите ниже."

msgid "For example, the following command extracts the substitute for Emacs served by @code{@value{SUBSTITUTE-SERVER-1}} to @file{/tmp/emacs}:"
msgstr "Например, следующая команда распаковывает подстановку Emacs, поставленную @code{@value{SUBSTITUTE-SERVER-1}} в @file{/tmp/emacs}:"

msgid ""
"$ wget -O - \\\n"
"  https://@value{SUBSTITUTE-SERVER-1}/nar/gzip/@dots{}-emacs-24.5 \\\n"
"  | gunzip | guix archive -x /tmp/emacs\n"
msgstr ""
"$ wget -O - \\\n"
"  https://@value{SUBSTITUTE-SERVER-1}/nar/gzip/@dots{}-emacs-24.5 \\\n"
"  | gunzip | guix archive -x /tmp/emacs\n"

msgid "Single-item archives are different from multiple-item archives produced by @command{guix archive --export}; they contain a single store item, and they do @emph{not} embed a signature.  Thus this operation does @emph{no} signature verification and its output should be considered unsafe."
msgstr "Архивы, представляющие один элемент, отличаются от архивов, содержащих множество элементов, производимых @command{guix archive --export}. Они содержат один элемент склада, но они @emph{не} включают подпись. Так что эта операция @emph{не} использует верификацию, и его выход должен рассматриваться как небезопасный."

msgid "The primary purpose of this operation is to facilitate inspection of archive contents coming from possibly untrusted substitute servers (@pxref{Invoking guix challenge})."
msgstr "Основная цель этой операции --- упростить просмотр содержимого архива, происходящего, возможно, из недоверенных серверов подстановок."

msgid "--list"
msgstr "--list"

msgid "-t"
msgstr "-t"

msgid "Read a single-item archive as served by substitute servers (@pxref{Substitutes}) and print the list of files it contains, as in this example:"
msgstr "Читать архив, представляющий один элемент, в качестве поставленного серверами подстановки (@pxref{Substitutes}) и распечатайте список файлов, которые он содержит, как в этом примере:"

msgid ""
"$ wget -O - \\\n"
"  https://@value{SUBSTITUTE-SERVER-1}/nar/lzip/@dots{}-emacs-26.3 \\\n"
"  | lzip -d | guix archive -t\n"
msgstr ""
"$ wget -O - \\\n"
"  https://@value{SUBSTITUTE-SERVER-1}/nar/lzip/@dots{}-emacs-26.3 \\\n"
"  | lzip -d | guix archive -t\n"

msgid "@command{guix pull}, configuration file"
msgstr "@command{guix pull}, конфигурационный файл"

msgid "configuration of @command{guix pull}"
msgstr "конфигурация @command{guix pull}"

msgid "extending the package collection (channels)"
msgstr "расширение коллекции пакетов (каналов)"

msgid "variant packages (channels)"
msgstr "собственные пакеты (каналы)"

msgid "You can specify @emph{additional channels} to pull from.  To use a channel, write @code{~/.config/guix/channels.scm} to instruct @command{guix pull} to pull from it @emph{in addition} to the default Guix channel(s):"
msgstr "Чтобы использовать канал, напишите @code{~/.config/guix/channels.scm}, чтобы обозначить @command{guix pull} скачивать оттуда @emph{в дополнение} к каналу(-ам) Guix по умолчанию:"

msgid "%default-channels"
msgstr "%default-channels"

msgid ""
";; Add variant packages to those Guix provides.\n"
"(cons (channel\n"
"        (name 'variant-packages)\n"
"        (url \"https://example.org/variant-packages.git\"))\n"
"      %default-channels)\n"
msgstr ""
";; Add my personal packages to those Guix provides.\n"
"(cons (channel\n"
"        (name 'my-personal-packages)\n"
"        (url \"https://example.org/personal-packages.git\"))\n"
"      %default-channels)\n"

msgid "Note that the snippet above is (as always!)@: Scheme code; we use @code{cons} to add a channel the list of channels that the variable @code{%default-channels} is bound to (@pxref{Pairs, @code{cons} and lists,, guile, GNU Guile Reference Manual}).  With this file in place, @command{guix pull} builds not only Guix but also the package modules from your own repository.  The result in @file{~/.config/guix/current} is the union of Guix with your own package modules:"
msgstr "Заметим, что сниппет выше (всегда!)@: код Scheme; мы используем @code{cons} для добавления канала в список каналов, то есть в переменную @code{%default-channels} (@pxref{Pairs, @code{cons} and lists,, guile, GNU Guile Reference Manual}). Если этот файл написан, @command{guix pull} производит сборку не только Guix, но и пакетных модулей из вашего репозитория. В результате в @file{~/.config/guix/current} содержится объединение Guix и ваших собственных пакетных модулей:"

msgid "The channel called @code{guix} specifies where Guix itself---its command-line tools as well as its package collection---should be downloaded.  For instance, suppose you want to update from another copy of the Guix repository at @code{example.org}, and specifically the @code{super-hacks} branch, you can write in @code{~/.config/guix/channels.scm} this specification:"
msgstr "Канал, названный @code{guix}, обозначает, откуда должен скачиваться сам Guix (его инструменты командной строки и коллекция пакетов). Например, предположим вы хотите обновиться из вашей собственной копии репозитория Guix на @code{example.org}, а именно из ветки @code{super-hacks}, тогда можно написать в @code{~/.config/guix/channels.scm} следующую спецификацию:"

msgid ""
";; Tell 'guix pull' to use another repo.\n"
"(list (channel\n"
"        (name 'guix)\n"
"        (url \"https://example.org/another-guix.git\")\n"
"        (branch \"super-hacks\")))\n"
msgstr ""
";; Tell 'guix pull' to use my own repo.\n"
"(list (channel\n"
"        (name 'guix)\n"
"        (url \"https://example.org/my-guix.git\")\n"
"        (branch \"super-hacks\")))\n"

msgid "The resulting @file{channels.scm} file can be passed to the @option{-C} option of @command{guix pull} (@pxref{Invoking guix pull}) or @command{guix time-machine} (@pxref{Invoking guix time-machine}), as in this example:"
msgstr "Полученный файл @file{channels.scm} можно передать в команды @command{guix pull} (@pxref{Invoking guix pull}) или @command{guix time-machine} (@pxref{Invoking guix time-machine}) с опцией @option{-C} , как в этом примере:"

msgid "This gives you super powers, allowing you to track the provenance of binary artifacts with very fine grain, and to reproduce software environments at will---some sort of ``meta reproducibility'' capabilities, if you will.  @xref{Inferiors}, for another way to take advantage of these super powers."
msgstr "Это даёт вам супервозможности, позволяя вам отслеживать и управлять происхождением артефактов бинарников с точной детализацией, также повторять программные окружения --- это воспроизводимость высокого уровня. Смотрите @xref{Inferiors}, чтобы узнать другие преимущества таких супервозможностей."

msgid ""
"(use-modules (gnu packages package-management)\n"
"             (guix channels))\n"
"\n"
msgstr ""
"(use-modules (gnu packages package-management)\n"
"             (guix channels))\n"
"\n"

msgid "channel-authentication"
msgstr "channel-authentication"

msgid "The @command{guix pull} and @command{guix time-machine} commands @dfn{authenticate} the code retrieved from channels: they make sure each commit that is fetched is signed by an authorized developer.  The goal is to protect from unauthorized modifications to the channel that would lead users to run malicious code."
msgstr "@command{guix pull} и @command{guix time-machine} @dfn{аутентифицируют} код, полученный из каналов: они гарантируют, что каждый полученный коммит подписан авторизованным разработчиком.  Цель состоит в том, чтобы защитить канал от несанкционированных изменений, которые могут привести к запуску вредоносного кода пользователями."

msgid "As a user, you must provide a @dfn{channel introduction} in your channels file so that Guix knows how to authenticate its first commit.  A channel specification, including its introduction, looks something along these lines:"
msgstr "Как пользователь, вы должны предоставить @dfn{channel introduction} в вашем файле канала, чтобы Guix знал как авторизовать свой первый коммит. Спецификация канала, включая введения, выглядит как-то так:"

msgid ""
"(channel\n"
"  (name 'some-channel)\n"
"  (url \"https://example.org/some-channel.git\")\n"
"  (introduction\n"
"   (make-channel-introduction\n"
"    \"6f0d8cc0d88abb59c324b2990bfee2876016bb86\"\n"
"    (openpgp-fingerprint\n"
"     \"CABB A931 C0FF EEC6 900D  0CFB 090B 1199 3D9A EBB5\"))))\n"
msgstr ""
"(channel\n"
"  (name 'some-channel)\n"
"  (url \"https://example.org/some-channel.git\")\n"
"  (introduction\n"
"   (make-channel-introduction\n"
"    \"6f0d8cc0d88abb59c324b2990bfee2876016bb86\"\n"
"    (openpgp-fingerprint\n"
"     \"CABB A931 C0FF EEC6 900D  0CFB 090B 1199 3D9A EBB5\"))))\n"

msgid "The specification above shows the name and URL of the channel.  The call to @code{make-channel-introduction} above specifies that authentication of this channel starts at commit @code{6f0d8cc@dots{}}, which is signed by the OpenPGP key with fingerprint @code{CABB A931@dots{}}."
msgstr "В приведенной выше спецификации указано имя и URL-адрес канала.  Вызов @code{make-channel-introduction} выше указывает, что аутентификация этого канала начинается с коммита @code{6f0d8cc@dots{}}, который подписывается ключом OpenPGP с отпечатком @code{CABB A931@dots{}}."

msgid "For the main channel, called @code{guix}, you automatically get that information from your Guix installation.  For other channels, include the channel introduction provided by the channel authors in your @file{channels.scm} file.  Make sure you retrieve the channel introduction from a trusted source since that is the root of your trust."
msgstr "Для основного канала, называемого @code{guix}, вы автоматически получаете эту информацию из вашей установки Guix.  Для других каналов, укажите introduction для канала, предоставленное авторами канала, в ваш файл @file{channels.scm}.  Убедитесь, что вы получили introduction канала из надежного источника, так как это основа вашего доверия."

msgid "If you're curious about the authentication mechanics, read on!"
msgstr "Если вам любопытены механизмы авторизации, читайте дальше!"

msgid "When running @command{guix pull}, Guix will first compile the definitions of every available package.  This is an expensive operation for which substitutes (@pxref{Substitutes}) may be available.  The following snippet in @file{channels.scm} will ensure that @command{guix pull} uses the latest commit with available substitutes for the package definitions: this is done by querying the continuous integration server at @url{https://ci.guix.gnu.org}."
msgstr "При запуске @command{guix pull} Guix сначала скомпилирует определения каждого доступного пакета.  Это тяжелая операция, для которой могут быть доступны заменители (@pxref{Substitutes}).  Следующий фрагмент в @file{channels.scm} гарантирует, что @command{guix pull} использует последний коммит с доступными заменами для определений пакетов: это делается путем запроса к серверу непрерывной интеграции по адресу @url {https://ci.guix.gnu.org}."

msgid ""
"(use-modules (guix ci))\n"
"\n"
msgstr ""
"(use-package-modules guile emacs)\n"
"\n"

msgid ""
"(list (channel-with-substitutes-available\n"
"       %default-guix-channel\n"
"       \"https://ci.guix.gnu.org\"))\n"
msgstr ""
"(list (channel-with-substitutes-available\n"
"       %default-guix-channel\n"
"       \"https://ci.guix.gnu.org\"))\n"

msgid "Note that this does not mean that all the packages that you will install after running @command{guix pull} will have available substitutes.  It only ensures that @command{guix pull} will not try to compile package definitions.  This is particularly useful when using machines with limited resources."
msgstr "Учтите, что это не означает, что все пакеты, которые вы установите после запуска @command{guix pull}, будут иметь доступные заменители.  Это только гарантирует, что @command{guix pull} не будет пытаться скомпилировать определения пакетов.  Это особенно полезно при использовании машин с ограниченными ресурсами."

msgid "personal packages (channels)"
msgstr "собственные пакеты (каналы)"

msgid "channels, for personal packages"
msgstr "каналы, для собственных пакетов"

msgid "git commit\n"
msgstr "git commit\n"

msgid "As a channel author, consider bundling authentication material with your channel so that users can authenticate it.  @xref{Channel Authentication}, and @ref{Specifying Channel Authorizations}, for info on how to do it."
msgstr "Как автор канала, рассмотрите возможность объединения материалов для аутентификации с вашим каналом, чтобы пользователи могли его аутентифицировать.  @xref{Channel Authentication} и @ref{Specifying Channel Authorizations} для получения информации о том, как это сделать."

msgid ""
"$EDITOR ~/.config/guix/channels.scm\n"
"guix pull\n"
msgstr ""
"$EDITOR ~/.config/guix/channels.scm\n"
"guix pull\n"

msgid "Before publishing a channel, please consider contributing your package definitions to Guix proper (@pxref{Contributing}).  Guix as a project is open to free software of all sorts, and packages in Guix proper are readily available to all Guix users and benefit from the project's quality assurance process."
msgstr "Перед публикацией канала, пожалуйста, рассмотрите возможность поделиться вашими определениями пакетов со сборником Guix (@pxref{Contributing}). Guix, как проект, открыт свободному программному обеспечению любого назначения, и пакеты в сборнике Guix готовы и доступны для использования всеми пользователями Guix и прошли проверку качества."

msgid "Corollary: if you're using an external channel and that channel breaks, please @emph{report the issue to the channel authors}, not to the Guix project."
msgstr "Вывод: если вы используете внешний канал, и этот канал ломается, пожалуйста, @emph{заявите об этой проблеме авторам каналв}, но не в проект Guix."

msgid "You've been warned! Having said this, we believe external channels are a practical way to exert your freedom to augment Guix' package collection and to share your improvements, which are basic tenets of @uref{https://www.gnu.org/philosophy/free-sw.html, free software}.  Please email us at @email{guix-devel@@gnu.org} if you'd like to discuss this."
msgstr "Вы предупреждены! Обозначив это, мы верим, что внешние каналы --- это способ для вас проявлять свою свободу и вместе с тем расширять коллекцию пакетов Guix и делиться улучшениями, что является основными догматами @uref{https://www.gnu.org/philosophy/free-sw.ru.html, свободного программного обеспечения}. Пожалуйста, свяжитесь с нами по e-mail @email{guix-devel@@gnu.org}, если вы хотите обсудить это."

msgid "subdirectory, channels"
msgstr "подкаталог, каналы"

msgid "As a channel author, you may want to keep your channel modules in a sub-directory.  If your modules are in the sub-directory @file{guix}, you must add a meta-data file @file{.guix-channel} that contains:"
msgstr "Как автор канала, вы можете хранить модули канала в подкаталоге. Если ваши модули находятся в подкаталоге @file{guix}, вы должны добавить файл метаданных @file{.guix-channel}, который содержит:"

msgid ""
"(channel\n"
"  (version 0)\n"
"  (directory \"guix\"))\n"
msgstr ""
"(channel\n"
"  (version 0)\n"
"  (directory \"guix\"))\n"

msgid "dependencies, channels"
msgstr "зависимости, каналы"

msgid "meta-data, channels"
msgstr "метаданные, каналы"

msgid "Channel authors may decide to augment a package collection provided by other channels.  They can declare their channel to be dependent on other channels in a meta-data file @file{.guix-channel}, which is to be placed in the root of the channel repository."
msgstr "Авторы канала могут решить расширить коллекцию пакетов пакетами, которые поставляются другими каналами. Они могут объявить, что их канал зависит от других каналов, в файле метаданных @file{.guix-channel}, который нужно разместить в корне репозитория канала."

msgid "The meta-data file should contain a simple S-expression like this:"
msgstr "Файл метаданных должен содержать простое выражение S-expression как это:"

msgid ""
"(channel\n"
" (version 0)\n"
" (dependencies\n"
"  (channel\n"
"   (name some-collection)\n"
"   (url \"https://example.org/first-collection.git\")\n"
"\n"
msgstr ""
"(channel\n"
" (version 0)\n"
" (dependencies\n"
"  (channel\n"
"   (name 'some-collection)\n"
"   (url \"https://example.org/first-collection.git\")\n"
"\n"

msgid ""
"   ;; The 'introduction' bit below is optional: you would\n"
"   ;; provide it for dependencies that can be authenticated.\n"
"   (introduction\n"
"    (channel-introduction\n"
"      (version 0)\n"
"      (commit \"a8883b58dc82e167c96506cf05095f37c2c2c6cd\")\n"
"      (signer \"CABB A931 C0FF EEC6 900D  0CFB 090B 1199 3D9A EBB5\"))))\n"
"  (channel\n"
"   (name some-other-collection)\n"
"   (url \"https://example.org/second-collection.git\")\n"
"   (branch \"testing\"))))\n"
msgstr ""
"   ;; The 'introduction' bit below is optional: you would\n"
"   ;; provide it for dependencies that can be authenticated.\n"
"   (introduction\n"
"    (channel-introduction\n"
"      (version 0)\n"
"      (commit \"a8883b58dc82e167c96506cf05095f37c2c2c6cd\")\n"
"      (signer \"CABB A931 C0FF EEC6 900D  0CFB 090B 1199 3D9A EBB5\"))))\n"
"  (channel\n"
"   (name 'some-other-collection)\n"
"   (url \"https://example.org/second-collection.git\")\n"
"   (branch \"testing\"))))\n"

msgid "In the above example this channel is declared to depend on two other channels, which will both be fetched automatically.  The modules provided by the channel will be compiled in an environment where the modules of all these declared channels are available."
msgstr "В примере выше объявлен канал, который зависит от двух других каналов, из которых оба будут скачаны автоматически. Модули, предоставляемые каналом, будут скомпилированы в окружении, в котором доступны модули всех этих каналов."

msgid "For the sake of reliability and maintainability, you should avoid dependencies on channels that you don't control, and you should aim to keep the number of dependencies to a minimum."
msgstr "В целях воспроизводимости и сопровождения вы должны избегать зависимостей от каналов, которые вы не контролируете, и вы должны стремиться минимизировать число зависимостей."

msgid "channel authorizations"
msgstr "авторизации канала"

msgid "channel-authorizations"
msgstr "channel-authorizations"

msgid "As we saw above, Guix ensures the source code it pulls from channels comes from authorized developers.  As a channel author, you need to specify the list of authorized developers in the @file{.guix-authorizations} file in the channel's Git repository.  The authentication rule is simple: each commit must be signed by a key listed in the @file{.guix-authorizations} file of its parent commit(s)@footnote{Git commits form a @dfn{directed acyclic graph} (DAG).  Each commit can have zero or more parents; ``regular'' commits have one parent and merge commits have two parent commits.  Read @uref{https://eagain.net/articles/git-for-computer-scientists/, @i{Git for Computer Scientists}} for a great overview.} The @file{.guix-authorizations} file looks like this:"
msgstr "Как мы видели выше, Guix гарантирует, что исходный код, который он получает из каналов, поступает от авторизованных разработчиков.  Как автор канала, вам необходимо указать список авторизованных разработчиков в файле @file{.guix-authorizations} в репозитории Git канала.  Правило аутентификации простое: каждый коммит должен быть подписан ключом, указанным в файле @file{.guix-authorizations} его родительского коммита(ов) @footnote{Git коммитит из @dfn{directed acyclic graph}(DAG).  У каждого коммита может быть ноль или более родителей; ``обычные'' коммиты имеют одного родителя, а ``merge'' коммиты имеют два родительских коммита.  Прочтите @uref{https://eagain.net/articles/git-for-computer-scientists/, @i{Git for Computer Scientists}}, чтобы получить больше информации.} файл @file{.guix-authorizations} выглядит так:"

msgid ""
";; Example '.guix-authorizations' file.\n"
"\n"
msgstr ""
";; Пример '.guix-authorizations' файла.\n"
"\n"

msgid ""
"(authorizations\n"
" (version 0)               ;current file format version\n"
"\n"
msgstr ""
"(authorizations\n"
" (version 0)               ;current file format version\n"
"\n"

msgid ""
" ((\"AD17 A21E F8AE D8F1 CC02  DBD9 F8AE D8F1 765C 61E3\"\n"
"   (name \"alice\"))\n"
"  (\"2A39 3FFF 68F4 EF7A 3D29  12AF 68F4 EF7A 22FB B2D5\"\n"
"   (name \"bob\"))\n"
"  (\"CABB A931 C0FF EEC6 900D  0CFB 090B 1199 3D9A EBB5\"\n"
"   (name \"charlie\"))))\n"
msgstr ""
" ((\"AD17 A21E F8AE D8F1 CC02  DBD9 F8AE D8F1 765C 61E3\"\n"
"   (name \"alice\"))\n"
"  (\"2A39 3FFF 68F4 EF7A 3D29  12AF 68F4 EF7A 22FB B2D5\"\n"
"   (name \"bob\"))\n"
"  (\"CABB A931 C0FF EEC6 900D  0CFB 090B 1199 3D9A EBB5\"\n"
"   (name \"charlie\"))))\n"

msgid "Each fingerprint is followed by optional key/value pairs, as in the example above.  Currently these key/value pairs are ignored."
msgstr "За каждым отпечатком следуют необязательные пары ключ/значение, как в примере выше.  В настоящее время эти пары ключ/значение игнорируются."

msgid "This authentication rule creates a chicken-and-egg issue: how do we authenticate the first commit? Related to that: how do we deal with channels whose repository history contains unsigned commits and lack @file{.guix-authorizations}? And how do we fork existing channels?"
msgstr "Это правило аутентификации создает проблему с курицей и яйцом: как мы аутентифицируем первый коммит? В связи с этим: как нам поступать с каналами, история репозитория которых содержит неподписанные коммиты и не имеет @file{.guix-authorizations}? И как нам разветвлять существующие каналы?"

msgid "channel introduction"
msgstr "введение канала"

msgid "Additionally, your channel must provide all the OpenPGP keys that were ever mentioned in @file{.guix-authorizations}, stored as @file{.key} files, which can be either binary or ``ASCII-armored''.  By default, those @file{.key} files are searched for in the branch named @code{keyring} but you can specify a different branch name in @code{.guix-channel} like so:"
msgstr "Кроме того, ваш канал должен предоставлять все ключи OpenPGP, которые когда-либо упоминались в @file{.guix-authorizations}, хранящиеся как файлы @file{.key}, которые могут быть либо двоичными, либо ``ASCII-armored''.  По умолчанию эти файлы @file{.key} ищутся в ветке с именем @code{keyring}, но вы можете указать другое имя ветки в @code{.guix-channel} следующим образом:"

msgid ""
"(channel\n"
"  (version 0)\n"
"  (keyring-reference \"my-keyring-branch\"))\n"
msgstr ""
"(channel\n"
"  (version 0)\n"
"  (keyring-reference \"my-keyring-branch\"))\n"

msgid "To summarize, as the author of a channel, there are three things you have to do to allow users to authenticate your code:"
msgstr "Подытоживая, как автор канала, вы должны сделать три вещи, чтобы позволить другим пользователям авторизовать ваш код:"

msgid "Export the OpenPGP keys of past and present committers with @command{gpg --export} and store them in @file{.key} files, by default in a branch named @code{keyring} (we recommend making it an @dfn{orphan branch})."
msgstr "Экспортируйте ключи OpenPGP прошлых и нынешних коммиттеров с помощью @command{gpg --export} и сохраните их в файлах @file{.key}, по умолчанию в ветке с именем @code{keyring} (мы рекомендуем сделать это в @dfn{orphan branch})."

msgid "Introduce an initial @file{.guix-authorizations} in the channel's repository.  Do that in a signed commit (@pxref{Commit Access}, for information on how to sign Git commits)."
msgstr "Добавьте @file{.guix-authorizations} в репозиторий канала.  Сделайте это в подписанном коммите (@pxref{Commit Access}, чтобы узнать, как подписывать коммиты Git)."

msgid "Advertise the channel introduction, for instance on your channel's web page.  The channel introduction, as we saw above, is the commit/key pair---i.e., the commit that introduced @file{.guix-authorizations}, and the fingerprint of the OpenPGP used to sign it."
msgstr "Рекламируйте channel introduction, например, на веб-странице вашего канала.  Channel introduction, как мы видели выше, - это пара коммит/ключ, то есть коммит, который представляет @file{.guix-authorizations}, и отпечаток OpenPGP, использованный для его подписи."

msgid "guix git authenticate @var{commit} @var{signer}\n"
msgstr "guix git authenticate @var{commit} @var{signer}\n"

msgid "where @var{commit} and @var{signer} are your channel introduction.  @xref{Invoking guix git authenticate}, for details."
msgstr "где @var{commit} и @var{signer} являются вашим channel introduction.  @xref{Invoking guix git authenticate}, подробнее."

msgid "Publishing a signed channel requires discipline: any mistake, such as an unsigned commit or a commit signed by an unauthorized key, will prevent users from pulling from your channel---well, that's the whole point of authentication! Pay attention to merges in particular: merge commits are considered authentic if and only if they are signed by a key present in the @file{.guix-authorizations} file of @emph{both} branches."
msgstr "Публикация подписанного канала требует дисциплины: любая ошибка, такая как неподписанная фиксация или фиксация, подписанная неавторизованным ключом, не позволит пользователям pull'ить с вашего канала - в этом весь смысл аутентификации! Обратите внимание на merge, в частности: merge коммиты считаются аутентичными, если и только если они подписаны ключом, присутствующим в файле @file{.guix-authorizations} @emph{обоих} веток."

msgid "primary URL, channels"
msgstr "основной URL, каналы"

msgid "Channel authors can indicate the primary URL of their channel's Git repository in the @file{.guix-channel} file, like so:"
msgstr "Авторы каналов могут указать основной URL-адрес репозитория Git своего канала в файле @file{.guix-channel}, например:"

msgid ""
"(channel\n"
"  (version 0)\n"
"  (url \"https://example.org/guix.git\"))\n"
msgstr ""
"(channel\n"
"  (version 0)\n"
"  (url \"https://example.org/guix.git\"))\n"

msgid "This allows @command{guix pull} to determine whether it is pulling code from a mirror of the channel; when that is the case, it warns the user that the mirror might be stale and displays the primary URL@.  That way, users cannot be tricked into fetching code from a stale mirror that does not receive security updates."
msgstr "Это позволяет @command{guix pull} определять, pull'ит ли он код из зеркала канала; в этом случае он предупреждает пользователя о том, что зеркало может быть устаревшим, и отображает основной URL-адрес.  Таким образом, пользователей нельзя обмануть, заставив их получить код с устаревшего зеркала, которое не получает обновлений безопасности."

msgid "This feature only makes sense for authenticated repositories, such as the official @code{guix} channel, for which @command{guix pull} ensures the code it fetches is authentic."
msgstr "Эта функция имеет смысл только для аутентифицированных репозиториев, таких как официальный канал @code{guix}, для которого @command{guix pull} гарантирует, что полученный код аутентичен."

msgid "news, for channels"
msgstr "новости, для каналов"

msgid "Channel authors may occasionally want to communicate to their users information about important changes in the channel.  You'd send them all an email, but that's not convenient."
msgstr "Авторы канала могут захотеть сообщить своим пользователям информацию о важных изменениях в канале. Вы можете отправить им письмо по электронной почте, но это не удобно."

msgid "Instead, channels can provide a @dfn{news file}; when the channel users run @command{guix pull}, that news file is automatically read and @command{guix pull --news} can display the announcements that correspond to the new commits that have been pulled, if any."
msgstr "Вместо этого каналы могут предоставлять @dfn{файл новостей}; когда пользователи канала запускают @command{guix pull}, этот файл новостей автоматически читается, и @command{guix pull --news} может отображать объявления, которые соответствуют новым зафиксированным коммитам, если таковые имеются."

msgid "To do that, channel authors must first declare the name of the news file in their @file{.guix-channel} file:"
msgstr "Для этого авторы каналов должны сначала объявить имя файла новостей в своем файле @file{.guix-channel}:"

msgid ""
"(channel\n"
"  (version 0)\n"
"  (news-file \"etc/news.txt\"))\n"
msgstr ""
"(channel\n"
"  (version 0)\n"
"  (news-file \"etc/news.txt\"))\n"

msgid "The news file itself, @file{etc/news.txt} in this example, must look something like this:"
msgstr "Сам файл новостей, @file{etc/news.txt} в этом примере, должен выглядеть примерно так:"

msgid ""
"(channel-news\n"
"  (version 0)\n"
"  (entry (tag \"the-bug-fix\")\n"
"         (title (en \"Fixed terrible bug\")\n"
"                (fr \"Oh la la\"))\n"
"         (body (en \"@@emph@{Good news@}!  It's fixed!\")\n"
"               (eo \"Certe ĝi pli bone funkcias nun!\")))\n"
"  (entry (commit \"bdcabe815cd28144a2d2b4bc3c5057b051fa9906\")\n"
"         (title (en \"Added a great package\")\n"
"                (ca \"Què vol dir guix?\"))\n"
"         (body (en \"Don't miss the @@code@{hello@} package!\"))))\n"
msgstr ""
"(channel-news\n"
"  (version 0)\n"
"  (entry (tag \"the-bug-fix\")\n"
"         (title (en \"Fixed terrible bug\")\n"
"                (fr \"Oh la la\"))\n"
"         (body (en \"@@emph@{Good news@}!  It's fixed!\")\n"
"               (eo \"Certe ĝi pli bone funkcias nun!\")))\n"
"  (entry (commit \"bdcabe815cd28144a2d2b4bc3c5057b051fa9906\")\n"
"         (title (en \"Added a great package\")\n"
"                (ca \"Què vol dir guix?\"))\n"
"         (body (en \"Don't miss the @@code@{hello@} package!\"))))\n"

msgid "While the news file is using the Scheme syntax, avoid naming it with a @file{.scm} extension or else it will get picked up when building the channel and yield an error since it is not a valid module.  Alternatively, you can move the channel module to a subdirectory and store the news file in another directory."
msgstr "В то время как файл новостей использует синтаксис Scheme, избегайте называть его расширением @file{.scm}, иначе он будет выбран при построении канала и выдаст ошибку, поскольку это недопустимый модуль.  Кроме того, вы можете переместить модуль канала в подкаталог и сохранить файл новостей в другом каталоге."

msgid "The file consists of a list of @dfn{news entries}.  Each entry is associated with a commit or tag: it describes changes made in this commit, possibly in preceding commits as well.  Users see entries only the first time they obtain the commit the entry refers to."
msgstr "Файл состоит из списка @dfn{news entries}. Каждая запись связана с коммитом или тегом: она описывает изменения, сделанные в этом коммите, возможно, также и в предыдущих коммитах. Пользователи видят записи только при первом получении коммита, на который ссылается запись."

msgid "The @code{title} field should be a one-line summary while @code{body} can be arbitrarily long, and both can contain Texinfo markup (@pxref{Overview,,, texinfo, GNU Texinfo}).  Both the title and body are a list of language tag/message tuples, which allows @command{guix pull} to display news in the language that corresponds to the user's locale."
msgstr "Поле @code{title} должно быть однострочным, а @code{body} может быть произвольно длинным, и оба могут содержать Texinfo разметку (@pxref{Overview,,, texinfo, GNU Texinfo}). И заголовок, и тело являются списком языковых тегов/кортежей сообщений, что позволяет комманде @command{guix pull} отображать новости на языке, соответствующем языку пользователя."

msgid "If you want to translate news using a gettext-based workflow, you can extract translatable strings with @command{xgettext} (@pxref{xgettext Invocation,,, gettext, GNU Gettext Utilities}).  For example, assuming you write news entries in English first, the command below creates a PO file containing the strings to translate:"
msgstr "Если вы хотите перевести новости, используя рабочий процесс на основе gettext, вы можете извлечь переводимые строки с помощью @command{xgettext} (@pxref{xgettext Invocation,,, gettext, GNU Gettext Utilities}). Например, если вы сначала пишете новости на английском языке, команда ниже создает PO-файл, содержащий строки для перевода:"

msgid "xgettext -o news.po -l scheme -ken etc/news.txt\n"
msgstr "xgettext -o news.po -l scheme -ken etc/news.txt\n"

msgid "To sum up, yes, you could use your channel as a blog.  But beware, this is @emph{not quite} what your users might expect."
msgstr "Подводя итог, да, вы можете использовать свой канал в качестве блога. Но будьте осторожны, это @emph{не совсем} то, что могут ожидать ваши пользователи."

msgid "software development"
msgstr "разработка программного обеспечения"

msgid "If you are a software developer, Guix provides tools that you should find helpful---independently of the language you're developing in.  This is what this chapter is about."
msgstr "Если вы являетесь разработчиком программного обеспечения, Guix предоставляет инструменты, которые вы можете найти полезными, независимо от языка разработки. Об этом данный раздел."

msgid "Invoking @command{guix shell}"
msgstr "Вызов @command{guix shell}"

msgid "reproducible build environments"
msgstr "воспроизводимые окружения сборки"

msgid "development environments"
msgstr "окружения разработки"

msgid "guix environment"
msgstr "guix environment"

msgid "guix shell"
msgstr "guix shell"

msgid "environment, package build environment"
msgstr "окружение сборки пакета"

msgid "guix shell [@var{options}] [@var{package}@dots{}]\n"
msgstr "guix shell [@var{options}] [@var{package}@dots{}]\n"

msgid "Sometimes an interactive shell session is not desired.  An arbitrary command may be invoked by placing the @code{--} token to separate the command from the rest of the arguments."
msgstr "Иногда интерактивная сессия оболочки не нужна. Можно вызвать произвольную команду при указании токена @code{--}, который отделяет команду от остальных аргументов."

msgid "guix shell python python-numpy -- python3\n"
msgstr "guix shell python python-numpy -- python3\n"

msgid "guix shell --development inkscape\n"
msgstr "guix shell --development inkscape\n"

msgid "guix shell\n"
msgstr "guix shell\n"

msgid "guix shell --container emacs gcc-toolchain\n"
msgstr "guix shell --container emacs gcc-toolchain\n"

msgid ""
"guix shell --container --network --no-cwd ungoogled-chromium \\\n"
"  --preserve='^XAUTHORITY$' --expose=\"$@{XAUTHORITY@}\" \\\n"
"  --preserve='^DISPLAY$' -- chromium\n"
msgstr ""
"guix shell --container --network --no-cwd ungoogled-chromium \\\n"
"  --preserve='^XAUTHORITY$' --expose=\"$@{XAUTHORITY@}\" \\\n"
"  --preserve='^DISPLAY$' -- chromium\n"

msgid "GUIX_ENVIRONMENT"
msgstr "GUIX_ENVIRONMENT"

msgid "@command{guix shell} defines the @env{GUIX_ENVIRONMENT} variable in the shell it spawns; its value is the file name of the profile of this environment.  This allows users to, say, define a specific prompt for development environments in their @file{.bashrc} (@pxref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}):"
msgstr "@command{guix shell} определяет переменную @code{GUIX_ENVIRONMENT} в оболочке, которую создаёт; её значением является имя файла профиля этого окружения. Это позволяет пользователям, скажем, определить специфичные значения окружений разработки в @file{.bashrc} (@pxref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}):"

msgid ""
"if [ -n \"$GUIX_ENVIRONMENT\" ]\n"
"then\n"
"    export PS1=\"\\u@@\\h \\w [dev]\\$ \"\n"
"fi\n"
msgstr ""
"if [ -n \"$GUIX_ENVIRONMENT\" ]\n"
"then\n"
"    export PS1=\"\\u@@\\h \\w [dev]\\$ \"\n"
"fi\n"

msgid "...@: or to browse the profile:"
msgstr "...@: или просмотеть профиль:"

msgid "$ ls \"$GUIX_ENVIRONMENT/bin\"\n"
msgstr "$ ls \"$GUIX_ENVIRONMENT/bin\"\n"

msgid "The available options are summarized below."
msgstr "Доступные опции резюмированы ниже."

msgid "--check"
msgstr "--check"

msgid "shell-development-option"
msgstr "shell-development-option"

msgid "guix shell -D guile autoconf automake libtool\n"
msgstr "guix shell -D guile autoconf automake libtool\n"

msgid "--expression=@var{expr}"
msgstr "--expression=@var{expr}"

msgid "-e @var{expr}"
msgstr "-e @var{expr}"

msgid "Create an environment for the package or list of packages that @var{expr} evaluates to."
msgstr "Создать окружение для пакета или списка пакетов, которые соответствуют выражению @var{expr}."

msgid "For example, running:"
msgstr "Например, запуск:"

msgid "guix shell -D -e '(@@ (gnu packages maths) petsc-openmpi)'\n"
msgstr "guix shell -D -e '(@@ (gnu packages maths) petsc-openmpi)'\n"

msgid "starts a shell with the environment for this specific variant of the PETSc package."
msgstr "запускает оболочку с окружением для этого специфического варианта пакета PETSc."

msgid "Running:"
msgstr "Запуск:"

msgid "guix shell -e '(@@ (gnu) %base-packages)'\n"
msgstr "guix shell -e '(@@ (gnu) %base-packages)'\n"

msgid "starts a shell with all the base system packages available."
msgstr "стартует оболочку со всеми доступными базовыми пакетами."

msgid "The above commands only use the default output of the given packages.  To select other outputs, two element tuples can be specified:"
msgstr "Команды выше используют только выход по умолчанию обозначенных пакетов. Чтобы выбрать другие выходы, можно указать два элемента кортежей:"

msgid "guix shell -e '(list (@@ (gnu packages bash) bash) \"include\")'\n"
msgstr "guix shell -e '(list (@@ (gnu packages bash) bash) \"include\")'\n"

msgid "--file=@var{file}"
msgstr "--file=@var{file}"

msgid "@verbatiminclude environment-gdb.scm\n"
msgstr "@verbatiminclude environment-gdb.scm\n"

msgid "guix shell -D -f gdb-devel.scm\n"
msgstr "guix shell -D -f gdb-devel.scm\n"

msgid "Create an environment for the packages contained in the manifest object returned by the Scheme code in @var{file}.  This option can be repeated several times, in which case the manifests are concatenated."
msgstr "Создать окружение для пакетов, содержащихся в объекте манифеста, возвращаемого кодом Scheme в файле @var{file}."

msgid "This is similar to the same-named option in @command{guix package} (@pxref{profile-manifest, @option{--manifest}}) and uses the same manifest files."
msgstr "Это то же, что опция с таким же именем в @command{guix package} (@pxref{profile-manifest, @option{--manifest}}) и использует такие же файлы манифестов."

msgid ""
"guix shell --export-manifest \\\n"
"  -D guile git emacs emacs-geiser emacs-geiser-guile\n"
msgstr ""
"guix shell --export-manifest \\\n"
"  -D guile git emacs emacs-geiser emacs-geiser-guile\n"

msgid "Create an environment containing the packages installed in @var{profile}.  Use @command{guix package} (@pxref{Invoking guix package}) to create and manage profiles."
msgstr "Создает окружение, содержащее пакеты, установленные в @var{profile}.  Используйте @command{guix package} (@pxref{Invoking guix package}) для создания и управления профилями."

msgid "--pure"
msgstr "--pure"

msgid "Unset existing environment variables when building the new environment, except those specified with @option{--preserve} (see below).  This has the effect of creating an environment in which search paths only contain package inputs."
msgstr "Сброс существующих переменных окружения при сборке нового окружения, кроме обозначенных в опции @option{--preserve} (смотрите ниже). Эффект этой опции --- создание окружения, в котором пути поиска содержат только входные данные пакета."

msgid "--preserve=@var{regexp}"
msgstr "--preserve=@var{regexp}"

msgid "-E @var{regexp}"
msgstr "-E @var{regexp}"

msgid "When used alongside @option{--pure}, preserve the environment variables matching @var{regexp}---in other words, put them on a ``white list'' of environment variables that must be preserved.  This option can be repeated several times."
msgstr "При использовании вместе с @option{--pure}, оставить содержимое переменных окружения, соответствующих выражению @var{regexp} --- другими словами, включить их в \"белый список\" переменных окружения, которые не должны обнуляться. Эту опцию можно повторять несколько раз."

msgid ""
"guix shell --pure --preserve=^SLURM openmpi @dots{} \\\n"
"  -- mpirun @dots{}\n"
msgstr ""
"guix shell --pure --preserve=^SLURM openmpi @dots{} \\\n"
"  -- mpirun @dots{}\n"

msgid "This example runs @command{mpirun} in a context where the only environment variables defined are @env{PATH}, environment variables whose name starts with @samp{SLURM}, as well as the usual ``precious'' variables (@env{HOME}, @env{USER}, etc.)."
msgstr "Этот пример запускает @command{mpirun} в контексте, в котором определены только следующие переменные окружения: @env{PATH}, переменные окружения, чьи имена начинаются с @samp{SLURM}, а также обычные \"дорогие\" переменные (@env{HOME}, @env{USER}, и т.д.)."

msgid "--search-paths"
msgstr "--search-paths"

msgid "Display the environment variable definitions that make up the environment."
msgstr "Отобразить определения переменных окружения, которые составляют окружение."

msgid "Attempt to build for @var{system}---e.g., @code{i686-linux}."
msgstr "Попытаться собрать систему @var{system}, то есть @code{i686-linux}."

msgid "--container"
msgstr "--container"

msgid "-C"
msgstr "-C"

msgid "container"
msgstr "container"

msgid "Run @var{command} within an isolated container.  The current working directory outside the container is mapped inside the container.  Additionally, unless overridden with @option{--user}, a dummy home directory is created that matches the current user's home directory, and @file{/etc/passwd} is configured accordingly."
msgstr "Запустить @var{command} в изолированном контейнере. Текущая рабочая директория за пределами контейнера отображается внутри контейнера. В дополнение, если это не переопределено опцией @code{--user}, тогда настраивается фиктивная домашняя директория, которая совпадает с домашней директорией текущего пользователя, а также соответствующий файл @file{/etc/passwd}."

msgid "The spawned process runs as the current user outside the container.  Inside the container, it has the same UID and GID as the current user, unless @option{--user} is passed (see below)."
msgstr "Порождаемый процесс снаружи предстаёт как запущенный от текущего пользователя. Внутри контейнера он имеет такие же UID и GID, что и текущий пользователь, если не обозначена @option{--user} (смотрите ниже)."

msgid "--network"
msgstr "--network"

msgid "For containers, share the network namespace with the host system.  Containers created without this flag only have access to the loopback device."
msgstr "Разделять пространство сетевых имён контейнера с хостящей системой. Контейнеры, созданные без этого флага, могут только иметь доступ к петлевому устройству."

msgid "--link-profile"
msgstr "--link-profile"

msgid "-P"
msgstr "-P"

msgid "For containers, link the environment profile to @file{~/.guix-profile} within the container and set @code{GUIX_ENVIRONMENT} to that.  This is equivalent to making @file{~/.guix-profile} a symlink to the actual profile within the container.  Linking will fail and abort the environment if the directory already exists, which will certainly be the case if @command{guix shell} was invoked in the user's home directory."
msgstr "Связать профиль окружения контейнера с @file{~/.guix-profile} внутри контейнера. Это эквивалент запуска команды @command{ln -s $GUIX_ENVIRONMENT ~/.guix-profile} внутри контейнера. Связывание завершится ошибкой и отменит создание окружения, если директория уже существует, что, конечно, будет происходить, если @command{guix shell} вызвана в домашней директории пользователя."

msgid "Certain packages are configured to look in @file{~/.guix-profile} for configuration files and data;@footnote{For example, the @code{fontconfig} package inspects @file{~/.guix-profile/share/fonts} for additional fonts.} @option{--link-profile} allows these programs to behave as expected within the environment."
msgstr "Определённые пакеты сконфигурированы, чтобы смотреть конфигурационные файлы и данные в @code{~/.guix-profile};@footnote{Например, пакет @code{fontconfig} просматривает @file{~/.guix-profile/share/fonts} для дополнительных шрифтов.} @code{--link-profile} позволяет этим программам вести себя ожидаемо внутри окружения."

msgid "--user=@var{user}"
msgstr "--user=@var{user}"

msgid "-u @var{user}"
msgstr "-u @var{user}"

msgid "For containers, use the username @var{user} in place of the current user.  The generated @file{/etc/passwd} entry within the container will contain the name @var{user}, the home directory will be @file{/home/@var{user}}, and no user GECOS data will be copied.  Furthermore, the UID and GID inside the container are 1000.  @var{user} need not exist on the system."
msgstr "Использовать в контейнере имя пользователя @var{user} вместо текущего пользователя. Созданная внутри контейнера запись @file{/etc/passwd} будет содержать имя @var{user}, домашняя директория будет @file{/home/@var{user}}, но не будут копированы пользовательские данные GECOS. Более того, внутри контейнера UID и GID будут 1000.  @var{user} не обязательно должен существовать в системе."

msgid "Additionally, any shared or exposed path (see @option{--share} and @option{--expose} respectively) whose target is within the current user's home directory will be remapped relative to @file{/home/USER}; this includes the automatic mapping of the current working directory."
msgstr "В дополнение, любой разделяемый или расширяемый путь (смотрите @code{--share} и @code{--expose} соответственно), чьи цели находятся в домашней директории пользователя, будут отображены соответственно в @file{/home/USER}; это включает автоматическое отображение текущей рабочей директории."

msgid ""
"# will expose paths as /home/foo/wd, /home/foo/test, and /home/foo/target\n"
"cd $HOME/wd\n"
"guix shell --container --user=foo \\\n"
"     --expose=$HOME/test \\\n"
"     --expose=/tmp/target=$HOME/target\n"
msgstr ""
"# will expose paths as /home/foo/wd, /home/foo/test, and /home/foo/target\n"
"cd $HOME/wd\n"
"guix shell --container --user=foo \\\n"
"     --expose=$HOME/test \\\n"
"     --expose=/tmp/target=$HOME/target\n"

msgid "While this will limit the leaking of user identity through home paths and each of the user fields, this is only one useful component of a broader privacy/anonymity solution---not one in and of itself."
msgstr "Это ограничит утечку данных идентификации пользователя через домашние пути и каждое из полей пользователя. Это один единственный компонент расширенного решения приватности/анонимности --- ничто не войдёт, ничто не выйдет."

msgid "--no-cwd"
msgstr "--no-cwd"

msgid "For containers, the default behavior is to share the current working directory with the isolated container and immediately change to that directory within the container.  If this is undesirable, @option{--no-cwd} will cause the current working directory to @emph{not} be automatically shared and will change to the user's home directory within the container instead.  See also @option{--user}."
msgstr "Для контейнеров стандартным поведением является разделение текущего рабочего каталога с изолированным контейнером и немедленное переключение на этот каталог в контейнере. Если это нежелательно, @code{--no-cwd} приведет к автоматическому доступу к текущему рабочему каталогу @emph{not}, который изменится на домашний каталог пользователя в контейнере. Смотрите также @code{--user}."

msgid "--expose=@var{source}[=@var{target}]"
msgstr "--expose=@var{source}[=@var{target}]"

msgid "--share=@var{source}[=@var{target}]"
msgstr "--share=@var{source}[=@var{target}]"

msgid "For containers, @option{--expose} (resp. @option{--share}) exposes the file system @var{source} from the host system as the read-only (resp. writable) file system @var{target} within the container.  If @var{target} is not specified, @var{source} is used as the target mount point in the container."
msgstr "Расширить файловую систему контейнера источником @var{source} из хостящей системы в качестве файловой системы только для чтения с целью @var{target} внутри контейнера.  Если цель @var{target} не задана, источник @var{source} используется как целевая точка монтирования в контейнере."

msgid "The example below spawns a Guile REPL in a container in which the user's home directory is accessible read-only via the @file{/exchange} directory:"
msgstr "Пример ниже порождает Guile REPL в контейнере, в котором домашняя директория пользователя доступна только для чтения через директорию @file{/exchange}:"

msgid "guix shell --container --expose=$HOME=/exchange guile -- guile\n"
msgstr "guix shell --container --expose=$HOME=/exchange guile -- guile\n"

msgid "--symlink=@var{spec}"
msgstr "--symlink=@var{spec}"

msgid "-S @var{spec}"
msgstr "-S @var{spec}"

msgid "map the daemon's socket (by default @file{/var/guix/daemon-socket/socket}) inside the container;"
msgstr "отобразит сокет демона (по умолчанию @file{/var/guix/daemon-socket/socket}) внутри контейнера;"

msgid "--rebuild-cache"
msgstr "--rebuild-cache"

msgid "--root=@var{file}"
msgstr "--root=@var{file}"

msgid "-r @var{file}"
msgstr "-r @var{file}"

msgid "persistent environment"
msgstr "постоянное окружение"

msgid "garbage collector root, for environments"
msgstr "корень сборщика мусора, для окружений"

msgid "Make @var{file} a symlink to the profile for this environment, and register it as a garbage collector root."
msgstr "Создать символическую ссылку @var{file} на профиль этого окружения и зарегистрировать её как корень сборщика мусора."

msgid "This is useful if you want to protect your environment from garbage collection, to make it ``persistent''."
msgstr "Это полезно, если вы хотите защитить своё окружение от сборщика мусора, сделать его \"постоянным\"."

msgid "@command{guix shell} also supports all of the common build options that @command{guix build} supports (@pxref{Common Build Options}) as well as package transformation options (@pxref{Package Transformation Options})."
msgstr "@command{guix shell} также поддерживает все обычные опции сборки, которые поддерживает команда @command{guix build} (@pxref{Common Build Options}), а также опции трансформации пакета (@pxref{Package Transformation Options})."

msgid "Invoking @command{guix environment}"
msgstr "Вызов @command{guix environment}"

msgid "guix environment @var{options} @var{package}@dots{}\n"
msgstr "guix environment @var{options} @var{package}@dots{}\n"

msgid "The following example spawns a new shell set up for the development of GNU@tie{}Guile:"
msgstr "Следующий пример порождает новую оболочку, установленную для разработки GNU@tie{}Guile:"

msgid "guix environment guile\n"
msgstr "guix environment guile\n"

msgid "If the needed dependencies are not built yet, @command{guix environment} automatically builds them.  The environment of the new shell is an augmented version of the environment that @command{guix environment} was run in.  It contains the necessary search paths for building the given package added to the existing environment variables.  To create a ``pure'' environment, in which the original environment variables have been unset, use the @option{--pure} option@footnote{Users sometimes wrongfully augment environment variables such as @env{PATH} in their @file{~/.bashrc} file.  As a consequence, when @command{guix environment} launches it, Bash may read @file{~/.bashrc}, thereby introducing ``impurities'' in these environment variables.  It is an error to define such environment variables in @file{.bashrc}; instead, they should be defined in @file{.bash_profile}, which is sourced only by log-in shells.  @xref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}, for details on Bash start-up files.}."
msgstr "Если необходимые зависимости еще не собраны, @command{guix environment} автоматически построит их.  Среда новой оболочки - это расширенная версия среды, в которой была запущена @command{guix environment}.  Она содержит необходимые пути поиска для сборки данного пакета, добавленные к существующим переменным среды.  Чтобы создать ``чистую'' среду, в которой исходные переменные среды не были установлены, используйте параметр @option{--pure} @footnote{Пользователи иногда ошибочно изменяют переменные среды, такие как @env{PATH}, в своем @file{~/.bashrc} файле.  Как следствие, когда @command{guix environment} запускает его, Bash может читать @file{~/.bashrc}, тем самым вводя ``примеси'' в эти переменные среды.  Ошибочно определять такие переменные среды в @file{.bashrc}; вместо этого они должны быть определены в @file{.bash_profile}, источником которого являются только оболочки входа в систему.  @xref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}, для получения подробной информации о файлах запуска Bash.}."

msgid "Exiting from a Guix environment is the same as exiting from the shell, and will place the user back in the old environment before @command{guix environment} was invoked.  The next garbage collection (@pxref{Invoking guix gc}) will clean up packages that were installed from within the environment and are no longer used outside of it."
msgstr "Выход из окружения Guix аналогичен выходу из оболочки и возвращает пользователя в старое окружение до вызова @command{guix environment}.  Следующая сборка мусора (@pxref{Invoking guix gc}) очистит пакеты, которые были установлены в окружении и больше не используются за ее пределами."

msgid "@command{guix environment} defines the @env{GUIX_ENVIRONMENT} variable in the shell it spawns; its value is the file name of the profile of this environment.  This allows users to, say, define a specific prompt for development environments in their @file{.bashrc} (@pxref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}):"
msgstr "@command{guix environment} определяет переменную @code{GUIX_ENVIRONMENT} в оболочке, которую создаёт; её значением является имя файла профиля этого окружения. Это позволяет пользователям, скажем, определить специфичные значения окружений разработки в @file{.bashrc} (@pxref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}):"

msgid "Additionally, more than one package may be specified, in which case the union of the inputs for the given packages are used.  For example, the command below spawns a shell where all of the dependencies of both Guile and Emacs are available:"
msgstr "Дополним, что может быть указано более одного пакета, в таком случае используется объединённые входные данные для указанных пакетов. Например, команда ниже порождает оболочку, в котором доступны все зависимости, как Guile, так и Emacs:"

msgid "guix environment guile emacs\n"
msgstr "guix environment guile emacs\n"

msgid "Sometimes an interactive shell session is not desired.  An arbitrary command may be invoked by placing the @code{--} token to separate the command from the rest of the arguments:"
msgstr "Иногда интерактивная сессия оболочки не нужна. Можно вызвать произвольную команду при указании токена @code{--}, который отделяет команду от остальных аргументов:"

msgid "guix environment guile -- make -j4\n"
msgstr "guix environment guile -- make -j4\n"

msgid "Furthermore, one might want the dependencies of a package and also some additional packages that are not build-time or runtime dependencies, but are useful when developing nonetheless.  Because of this, the @option{--ad-hoc} flag is positional.  Packages appearing before @option{--ad-hoc} are interpreted as packages whose dependencies will be added to the environment.  Packages appearing after are interpreted as packages that will be added to the environment directly.  For example, the following command creates a Guix development environment that additionally includes Git and strace:"
msgstr "Более того, возможно, вам потребуются зависимости пакета, а также некоторые дополнительные пакеты, которые не являются зависимостями процесса сборки или процесса исполнения (работы), но важны при разработке. Для этого и указан флаш @code{--ad-hoc}. Пакеты, обозначенные до @code{--ad-hoc} интерпретируются как пакеты, чьи зависимости будут добавлены в окружение. Пакеты, которые обозначены после @code{--ad-hoc}, интерпретируются как пакеты, которые будут добавлены в окружение непосредственно. Например, следующая команда создаёт окружение разработки Guix, которая в дополнение включает Git и strace:"

msgid "guix environment --pure guix --ad-hoc git strace\n"
msgstr "guix environment guix --ad-hoc git strace\n"

msgid "Sometimes it is desirable to isolate the environment as much as possible, for maximal purity and reproducibility.  In particular, when using Guix on a host distro that is not Guix System, it is desirable to prevent access to @file{/usr/bin} and other system-wide resources from the development environment.  For example, the following command spawns a Guile REPL in a ``container'' where only the store and the current working directory are mounted:"
msgstr "Иногда возникает необходимость изолировать окружение настолько, насколькоо возможно, для максимальной чистоты и воспроизводимости. В частности, при использовании Guix на дистрибутиве, отличном от системы Guix, желательно предотвращать доступ из окружения разработки к @file{/usr/bin} и другим ресурсам системы. Например, следующая команда порождает Guile REPL в \"контейнере\", в котором монтированы только склад и текущая рабочая директория:"

msgid "guix environment --ad-hoc --container guile -- guile\n"
msgstr "guix environment --ad-hoc --container guile -- guile\n"

msgid "The @option{--container} option requires Linux-libre 3.19 or newer."
msgstr "Опция @code{--container} требует Linux-libre 3.19 или новее."

msgid "certificates"
msgstr "Сертификаты X.509"

msgid "Another typical use case for containers is to run security-sensitive applications such as a web browser.  To run Eolie, we must expose and share some files and directories; we include @code{nss-certs} and expose @file{/etc/ssl/certs/} for HTTPS authentication; finally we preserve the @env{DISPLAY} environment variable since containerized graphical applications won't display without it."
msgstr "Другой типичный вариант использования контейнеров - запуск приложений, чувствительных к безопасности, таких как веб-браузер.  Чтобы запустить Eolie, мы должны предоставить доступ к некоторым файлам и каталогам; мы используем @code{nss-certs} и предоставляем @file{/etc /ssl /certs/} для аутентификации HTTPS; наконец, мы сохраняем переменную среды @env{DISPLAY}, поскольку контейнерные графические приложения не будут отображаться без нее."

msgid ""
"guix environment --preserve='^DISPLAY$' --container --network \\\n"
"  --expose=/etc/machine-id \\\n"
"  --expose=/etc/ssl/certs/ \\\n"
"  --share=$HOME/.local/share/eolie/=$HOME/.local/share/eolie/ \\\n"
"  --ad-hoc eolie nss-certs dbus --  eolie\n"
msgstr ""
"guix environment --preserve='^DISPLAY$' --container --network \\\n"
"  --expose=/etc/machine-id \\\n"
"  --expose=/etc/ssl/certs/ \\\n"
"  --share=$HOME/.local/share/eolie/=$HOME/.local/share/eolie/ \\\n"
"  --ad-hoc eolie nss-certs dbus --  eolie\n"

msgid "When this option is omitted, the environment is protected from garbage collection only for the duration of the @command{guix environment} session.  This means that next time you recreate the same environment, you could have to rebuild or re-download packages.  @xref{Invoking guix gc}, for more on GC roots."
msgstr "Если эта опция пропущена, окружеие защищено от сборщика мусора только на время сессии @command{guix environment}. Это означает, что в следующий раз, когда вы создадите такое же окружение, вам потребуется пересобирать и скачивать пакеты заново. @xref{Invoking guix gc}, for more on GC roots."

msgid "guix environment -e '(@@ (gnu packages maths) petsc-openmpi)'\n"
msgstr "guix environment -e '(@@ (gnu packages maths) petsc-openmpi)'\n"

msgid "guix environment --ad-hoc -e '(@@ (gnu) %base-packages)'\n"
msgstr "guix environment --ad-hoc -e '(@@ (gnu) %base-packages)'\n"

msgid "guix environment --ad-hoc -e '(list (@@ (gnu packages bash) bash) \"include\")'\n"
msgstr "guix environment --ad-hoc -e '(list (@@ (gnu packages bash) bash) \"include\")'\n"

msgid "--load=@var{file}"
msgstr "--load=@var{file}"

msgid "-l @var{file}"
msgstr "-l @var{file}"

msgid "Create an environment for the package or list of packages that the code within @var{file} evaluates to."
msgstr "Создать окружение для пакета или списка пакетов, код которых задан в файле @var{file}."

msgid "--ad-hoc"
msgstr "--ad-hoc"

msgid "Include all specified packages in the resulting environment, as if an @i{ad hoc} package were defined with them as inputs.  This option is useful for quickly creating an environment without having to write a package expression to contain the desired inputs."
msgstr "Включить все указанные пакеты в результирующее окружение, если бы целевой (лат. @i{ad hoc}) пакет имел бы их как входные данные. Эта опция полезна для быстрого создания окружения без необходимости писать выражение типа пакет, содержащее желаемые входные данные."

msgid "For instance, the command:"
msgstr "Например, команда:"

msgid "guix environment --ad-hoc guile guile-sdl -- guile\n"
msgstr "guix environment --ad-hoc guile guile-sdl -- guile\n"

msgid "runs @command{guile} in an environment where Guile and Guile-SDL are available."
msgstr "запускает @command{guile} в окружении, в котором доступны Guile и Guile-SDL."

msgid "Note that this example implicitly asks for the default output of @code{guile} and @code{guile-sdl}, but it is possible to ask for a specific output---e.g., @code{glib:bin} asks for the @code{bin} output of @code{glib} (@pxref{Packages with Multiple Outputs})."
msgstr "Отметим, что этот пример явно запрашивает выходы @code{guile} и @code{guile-sdl} по умолчанию, но возможно запросить специфичный выход, то есть @code{glib:bin} запрашивает выход @code{bin} из @code{glib} (@pxref{Packages with Multiple Outputs})."

msgid "This option may be composed with the default behavior of @command{guix environment}.  Packages appearing before @option{--ad-hoc} are interpreted as packages whose dependencies will be added to the environment, the default behavior.  Packages appearing after are interpreted as packages that will be added to the environment directly."
msgstr "Эта опция может сочетаться с поведением по умолчанию @command{guix environment}. Пакеты, которые появляются до @code{--ad-hoc} интерпретируются как пакеты, чьи зависимости будут добавлены в окружение (поведение по умолчанию). Пакеты, которые появляются после этой опции, интерпретируются как пакеты, которые будут добавлены в окружение непосредственно."

msgid ""
"guix environment --pure --preserve=^SLURM --ad-hoc openmpi @dots{} \\\n"
"  -- mpirun @dots{}\n"
msgstr ""
"guix environment --pure --preserve=^SLURM --ad-hoc openmpi @dots{} \\\n"
"  -- mpirun @dots{}\n"

msgid "For containers, link the environment profile to @file{~/.guix-profile} within the container and set @code{GUIX_ENVIRONMENT} to that.  This is equivalent to making @file{~/.guix-profile} a symlink to the actual profile within the container.  Linking will fail and abort the environment if the directory already exists, which will certainly be the case if @command{guix environment} was invoked in the user's home directory."
msgstr "Связать профиль окружения контейнера с @file{~/.guix-profile} внутри контейнера. Это эквивалент запуска команды @command{ln -s $GUIX_ENVIRONMENT ~/.guix-profile} внутри контейнера. Связывание завершится ошибкой и отменит создание окружения, если директория уже существует, что, конечно, будет происходить, если @command{guix environment} вызвана в домашней директории пользователя."

msgid ""
"# will expose paths as /home/foo/wd, /home/foo/test, and /home/foo/target\n"
"cd $HOME/wd\n"
"guix environment --container --user=foo \\\n"
"     --expose=$HOME/test \\\n"
"     --expose=/tmp/target=$HOME/target\n"
msgstr ""
"# will expose paths as /home/foo/wd, /home/foo/test, and /home/foo/target\n"
"cd $HOME/wd\n"
"guix environment --container --user=foo \\\n"
"     --expose=$HOME/test \\\n"
"     --expose=/tmp/target=$HOME/target\n"

msgid "guix environment --container --expose=$HOME=/exchange --ad-hoc guile -- guile\n"
msgstr "guix environment --container --expose=$HOME=/exchange --ad-hoc guile -- guile\n"

msgid "@command{guix environment} also supports all of the common build options that @command{guix build} supports (@pxref{Common Build Options}) as well as package transformation options (@pxref{Package Transformation Options})."
msgstr "@command{guix environment} также поддерживает все обычные опции сборки, которые поддерживает команда @command{guix build} (@pxref{Common Build Options}), а также опции трансформации пакета (@pxref{Package Transformation Options})."

msgid "Invoking @command{guix pack}"
msgstr "Вызов @command{guix pack}"

msgid "Occasionally you want to pass software to people who are not (yet!)  lucky enough to be using Guix.  You'd tell them to run @command{guix package -i @var{something}}, but that's not possible in this case.  This is where @command{guix pack} comes in."
msgstr "Иногда бывает необходимо передать программу людям, которые (ещё!) не являются счастливыми обладателями Guix. Вы могли бы им рекомендовать заустить @command{guix package -i @var{something}}, но в данном случае это не подхлдит. Тогда @command{guix pack} решает вопрос."

msgid "If you are looking for ways to exchange binaries among machines that already run Guix, @pxref{Invoking guix copy}, @ref{Invoking guix publish}, and @ref{Invoking guix archive}."
msgstr "Если вы ищете способ обмена бинарниками между машинами, работающими с Guix, @pxref{Invoking guix copy}, @ref{Invoking guix publish} и @ref{Invoking guix archive}."

msgid "pack"
msgstr "упаковка"

msgid "bundle"
msgstr "набор"

msgid "application bundle"
msgstr "набор приложений"

msgid "software bundle"
msgstr "набор приложений"

msgid "The @command{guix pack} command creates a shrink-wrapped @dfn{pack} or @dfn{software bundle}: it creates a tarball or some other archive containing the binaries of the software you're interested in, and all its dependencies.  The resulting archive can be used on any machine that does not have Guix, and people can run the exact same binaries as those you have with Guix.  The pack itself is created in a bit-reproducible fashion, so anyone can verify that it really contains the build results that you pretend to be shipping."
msgstr "Команда @command{guix pack} создаёт обёрнутый @dfn{набор} или @dfn{программный набор}: она создаёт архив tarball или другой архив, содержащий исполняемые файлы программного обеспечения, которое вас интересует, а также все его зависимости. Результирующий архив может использоваться на любой машине, которая не имеет Guix, а люди могут запустить совершенно такие же бинарники, как у вас в Guix. Набор создаётся со свойством воспроизводимости до бита, так что любой может проверить, что он действительно содержит результаты сборок, которые вы поставляете."

msgid "For example, to create a bundle containing Guile, Emacs, Geiser, and all their dependencies, you can run:"
msgstr "Например, чтобы создать набор, содержащий Guile, Emacs, Geiser и все их зависимости, можно запустить:"

msgid ""
"$ guix pack guile emacs emacs-geiser\n"
"@dots{}\n"
"/gnu/store/@dots{}-pack.tar.gz\n"
msgstr ""
"$ guix pack guile emacs geiser\n"
"@dots{}\n"
"/gnu/store/@dots{}-pack.tar.gz\n"

msgid "The result here is a tarball containing a @file{/gnu/store} directory with all the relevant packages.  The resulting tarball contains a @dfn{profile} with the three packages of interest; the profile is the same as would be created by @command{guix package -i}.  It is this mechanism that is used to create Guix's own standalone binary tarball (@pxref{Binary Installation})."
msgstr "Результатом будет архив tarball, содержащий директорию @file{/gnu/store} со всеми соответствующими пакетами. Результирующий архив содержат @dfn{профиль} с тремя запрошенными пакетами; профиль представляет то же самое, что можно создать командой @command{guix package -i}. Это механизм, который используется, собственно, для создания автономного (standalone) бинарного архива Guix (@pxref{Binary Installation})."

msgid "Users of this pack would have to run @file{/gnu/store/@dots{}-profile/bin/guile} to run Guile, which you may find inconvenient.  To work around it, you can create, say, a @file{/opt/gnu/bin} symlink to the profile:"
msgstr "Пользователи этого пакета должны запускать @file{/gnu/store/@dots{}-profile/bin/guile} для запуска Guile, что может быть не удобно. Чтобы исправить это, можно создать, например, символическую ссылку @file{/opt/gnu/bin} на профиль:"

msgid "guix pack -S /opt/gnu/bin=bin guile emacs emacs-geiser\n"
msgstr "guix pack -S /opt/gnu/bin=bin guile emacs geiser\n"

msgid "That way, users can happily type @file{/opt/gnu/bin/guile} and enjoy."
msgstr "Так пользователи смогут благополучно напечатать @file{/opt/gnu/bin/guile}, и всё хорошо."

msgid "relocatable binaries, with @command{guix pack}"
msgstr "перемещаемые бинарники, с @command{guix pack}"

msgid "What if the recipient of your pack does not have root privileges on their machine, and thus cannot unpack it in the root file system? In that case, you will want to use the @option{--relocatable} option (see below).  This option produces @dfn{relocatable binaries}, meaning they can be placed anywhere in the file system hierarchy: in the example above, users can unpack your tarball in their home directory and directly run @file{./opt/gnu/bin/guile}."
msgstr "Что если получатель вашего пакета не имеет привилегий root на своей машине, и поэтому не может распаковать его в корне файловой системы? В таком случае вам стоит использовать опцию @code{--relocatable} (смотрите ниже). Эта опция производит @dfn{перемещаемые бинарники}, в том плане, что они могут размещаться где угодно в иерархии файловой системы: в примере выше пользователи могут распаковать ваш архив в свои домашние директории и напрямую запустить @file{./opt/gnu/bin/guile}."

msgid "Docker, build an image with guix pack"
msgstr "Docker, сборка образа с помощью guix pack"

msgid "Alternatively, you can produce a pack in the Docker image format using the following command:"
msgstr "В качестве альтернативы можно производить пакет в формате образа Docker, используя следующую команду:"

msgid "guix pack -f docker -S /bin=bin guile guile-readline\n"
msgstr "guix pack -f docker guile emacs geiser\n"

msgid "The result is a tarball that can be passed to the @command{docker load} command, followed by @code{docker run}:"
msgstr "Результатом будет архив, который можно передать команде @command{docker load}, followed by @code{docker run}:"

msgid ""
"docker load < @var{file}\n"
"docker run -ti guile-guile-readline /bin/guile\n"
msgstr ""
"docker load < @var{file}\n"
"docker run -ti guile-guile-readline /bin/guile\n"

msgid "Singularity, build an image with guix pack"
msgstr "Singularity, сборка образа с помощью guix pack"

msgid "SquashFS, build an image with guix pack"
msgstr "SquashFS, сборка образа с помощью guix pack"

msgid "Yet another option is to produce a SquashFS image with the following command:"
msgstr "Ещё одна опция производит образ SquashFS следующей командой:"

msgid "guix pack -f squashfs bash guile emacs emacs-geiser\n"
msgstr "guix pack -f squashfs guile emacs geiser\n"

msgid "The result is a SquashFS file system image that can either be mounted or directly be used as a file system container image with the @uref{https://www.sylabs.io/docs/, Singularity container execution environment}, using commands like @command{singularity shell} or @command{singularity exec}."
msgstr "Результатом будет образ файловой системы SquashFS, который может непосредственно монтироваться как образ, содержащий контейнер файловой системы, с помощью @uref{https://www.sylabs.io/docs/, контейнерного окружения Singularity}, используя команды типа @command{singularity shell} или @command{singularity exec}."

msgid ""
"file=$(guix pack -f appimage --entry-point=bin/guile guile)\n"
"$file --help\n"
msgstr ""
"file=$(guix pack -f appimage --entry-point=bin/guile guile)\n"
"$file --help\n"

msgid "Several command-line options allow you to customize your pack:"
msgstr "Несколько опций командной строки позволяют вам переделывать ваш пакет:"

msgid "Produce a pack in the given @var{format}."
msgstr "Произвести пакет в указанном формате @var{format}."

msgid "The available formats are:"
msgstr "Возможные форматы:"

msgid "tarball"
msgstr "tarball"

msgid "This is the default format.  It produces a tarball containing all the specified binaries and symlinks."
msgstr "Это формат по умолчанию. Он производит архив tarball, содержащий все заданные бинарники и символические ссылки."

msgid "docker"
msgstr "docker"

msgid "squashfs"
msgstr "squashfs"

msgid "This produces a SquashFS image containing all the specified binaries and symlinks, as well as empty mount points for virtual file systems like procfs."
msgstr "Это создает образ SquashFS, содержащий все указанные двоичные файлы и символические ссылки, а также пустые точки монтирования для виртуальных файловых систем, таких как procfs."

msgid "Singularity @emph{requires} you to provide @file{/bin/sh} in the image.  For that reason, @command{guix pack -f squashfs} always implies @code{-S /bin=bin}.  Thus, your @command{guix pack} invocation must always start with something like:"
msgstr "Singularity @emph{требует}, чтобы вы указали @file{/bin /sh} в образе.  По этой причине @command{guix pack -f squashfs} всегда подразумевает @code{-S /bin=bin}.  Таким образом, вызов @command{guix pack} всегда должен начинаться с чего-то вроде:"

msgid "guix pack -f squashfs bash @dots{}\n"
msgstr "guix pack -f squashfs guile emacs geiser\n"

msgid "If you forget the @code{bash} (or similar) package, @command{singularity run} and @command{singularity exec} will fail with an unhelpful ``no such file or directory'' message."
msgstr "Если вы забудете пакет @code{bash} (или аналогичный), @command{singularity run} и @command{singularity exec} выдаст бесполезное сообщение ``нет такого файла или каталога''."

msgid "deb"
msgstr "deb"

msgid "guix pack -f deb -C xz -S /usr/bin/hello=bin/hello hello\n"
msgstr "guix pack -f deb -C xz -S /usr/bin/hello=bin/hello hello\n"

msgid "relocatable binaries"
msgstr "перемещаемые двоичные файлы"

msgid "--relocatable"
msgstr "--relocatable"

msgid "Produce @dfn{relocatable binaries}---i.e., binaries that can be placed anywhere in the file system hierarchy and run from there."
msgstr "Создавать @dfn{relocatable binaries} --- то есть двоичные файлы, которые можно разместить в любом месте иерархии файловой системы и запускать оттуда."

msgid "When this option is passed once, the resulting binaries require support for @dfn{user namespaces} in the kernel Linux; when passed @emph{twice}@footnote{Here's a trick to memorize it: @code{-RR}, which adds PRoot support, can be thought of as the abbreviation of ``Really Relocatable''.  Neat, isn't it?}, relocatable binaries fall to back to other techniques if user namespaces are unavailable, and essentially work anywhere---see below for the implications."
msgstr "Когда эта опция передается один раз, конечные двоичные файлы требуют поддержки @dfn{user namespaces} в ядре Linux; при передаче @emph{дважды}@footnote{Вот трюк, чтобы запомнить его: @code{-RR}, который добавляет поддержку PRoot, можно рассматривать как сокращение от ``Really Relocatable''.  Удобно, не правда ли?}, Relocatable двоичные файлы возвращаются к другим методам, если пользовательские пространства имен недоступны, и по существу работают где угодно - см. ниже что под этим подразумевается."

msgid "For example, if you create a pack containing Bash with:"
msgstr "Например, если вы создаете пакет, содержащий Bash, с помощью:"

msgid "guix pack -RR -S /mybin=bin bash\n"
msgstr "guix pack -RR -S /mybin=bin bash\n"

msgid "...@: you can copy that pack to a machine that lacks Guix, and from your home directory as a normal user, run:"
msgstr "...@: вы можете скопировать этот пакет на машину, на которой отсутствует Guix, и из своего домашнего каталога как обычный пользователь запустите:"

msgid ""
"tar xf pack.tar.gz\n"
"./mybin/sh\n"
msgstr ""
"tar xf pack.tar.gz\n"
"./mybin/sh\n"

msgid "In that shell, if you type @code{ls /gnu/store}, you'll notice that @file{/gnu/store} shows up and contains all the dependencies of @code{bash}, even though the machine actually lacks @file{/gnu/store} altogether! That is probably the simplest way to deploy Guix-built software on a non-Guix machine."
msgstr "В этой оболочке, если вы наберете @code{ls /gnu/store}, вы заметите, что отобразятся @file{/gnu/store} и содержатся все зависимости @code{bash}, даже если на машине нет @file{/gnu/store}! Это, вероятно, самый простой способ установить программное обеспечение, созданное с помощью Guix, на машине, отличной от Guix."

msgid "By default, relocatable binaries rely on the @dfn{user namespace} feature of the kernel Linux, which allows unprivileged users to mount or change root.  Old versions of Linux did not support it, and some GNU/Linux distributions turn it off."
msgstr "По умолчанию relocatable двоичные файлы полагаются на функцию @dfn{user namespace} ядра Linux, которая позволяет непривилегированным пользователям монтировать или изменять root.  Старые версии Linux не поддерживали его, а некоторые дистрибутивы GNU/Linux его отключили."

msgid "To produce relocatable binaries that work even in the absence of user namespaces, pass @option{--relocatable} or @option{-R} @emph{twice}.  In that case, binaries will try user namespace support and fall back to another @dfn{execution engine} if user namespaces are not supported.  The following execution engines are supported:"
msgstr "Чтобы создать relocatable двоичные файлы, которые работают даже при отсутствии пользовательских пространств имен, передайте @option{--relocatable} или @option{-R} @emph{дважды}.  В этом случае двоичные файлы будут пытаться использовать пространство имен пользователей и возвращаться к другому @dfn{механизму выполнения}, если пространства имен пользователей не поддерживаются.  Поддерживаются следующие механизмы выполнения:"

msgid "default"
msgstr "default"

msgid "Try user namespaces and fall back to PRoot if user namespaces are not supported (see below)."
msgstr "Попробовать использовать пространства имен пользователей и вернуться к PRoot, если пространства имен пользователей не поддерживаются (см. ниже)."

msgid "performance"
msgstr "performance"

msgid "Try user namespaces and fall back to Fakechroot if user namespaces are not supported (see below)."
msgstr "Попробовать использовать пространства имен пользователей и вернуться к Fakechroot, если пространства имен пользователей не поддерживаются (см. ниже)."

msgid "userns"
msgstr "userns"

msgid "Run the program through user namespaces and abort if they are not supported."
msgstr "Запустить программу через пользовательские пространства имен и прервать, если они не поддерживаются."

msgid "proot"
msgstr "proot"

msgid "Run through PRoot.  The @uref{https://proot-me.github.io/, PRoot} program provides the necessary support for file system virtualization.  It achieves that by using the @code{ptrace} system call on the running program.  This approach has the advantage to work without requiring special kernel support, but it incurs run-time overhead every time a system call is made."
msgstr "Запустить PRoot.  Программа @uref{https://proot-me.github.io/, PRoot} обеспечивает необходимую поддержку виртуализации файловой системы.  Это достигается с помощью системного вызова @code{ptrace} в запущенной программе.  Преимущество этого подхода заключается в том, что это не требует специальной поддержки ядра, но это требует дополнительных затрат времени выполнения каждый раз, когда выполняется системный вызов."

msgid "fakechroot"
msgstr "fakechroot"

msgid "Run through Fakechroot.  @uref{https://github.com/dex4er/fakechroot/, Fakechroot} virtualizes file system accesses by intercepting calls to C library functions such as @code{open}, @code{stat}, @code{exec}, and so on.  Unlike PRoot, it incurs very little overhead.  However, it does not always work: for example, some file system accesses made from within the C library are not intercepted, and file system accesses made @i{via} direct syscalls are not intercepted either, leading to erratic behavior."
msgstr "Запустить Fakechroot. @uref{https://github.com/dex4er/fakechroot/, Fakechroot} виртуализирует доступ к файловой системе путем перехвата вызовов функций библиотеки C, таких как @code{open}, @code{stat}, @code{exec} и т.п.  В отличие от PRoot, накладных расходов очень мало.  Однако это не всегда работает: например, некоторые обращения к файловой системе, сделанные из библиотеки C, не перехватываются, а обращения к файловой системе, сделанные через прямые системные вызовы, также не перехватываются, что приводит к нестабильному поведению."

msgid "GUIX_EXECUTION_ENGINE"
msgstr "GUIX_EXECUTION_ENGINE"

msgid "When running a wrapped program, you can explicitly request one of the execution engines listed above by setting the @env{GUIX_EXECUTION_ENGINE} environment variable accordingly."
msgstr "При запуске обернутой программы вы можете явно запросить один из механизмов выполнения, перечисленных выше, установив соответствующую переменную среды @env{GUIX_EXECUTION_ENGINE}."

msgid "--entry-point=@var{command}"
msgstr "--commit=@var{commit}"

msgid "Use @var{command} as the @dfn{entry point} of the resulting pack, if the pack format supports it---currently @code{docker}, @code{appimage}, and @code{squashfs} (Singularity) support it.  @var{command} must be relative to the profile contained in the pack."
msgstr "Используйте @var{command} в качестве @dfn{точки входа} конечного пакета, если формат пакета поддерживает это --- в настоящее время @code{docker}, @code{appimage} и @code{squashfs} (Singularity) поддерживают это.  @var{command} должна относиться к профилю, содержащемуся в пакете."

msgid "The entry point specifies the command that tools like @code{docker run} or @code{singularity run} automatically start by default.  For example, you can do:"
msgstr "Точка входа указывает команду, которую по умолчанию автоматически запускают такие инструменты, как @code{docker run} или @code{singularity run}.  Например, вы можете сделать:"

msgid "guix pack -f docker --entry-point=bin/guile guile\n"
msgstr "guix pack -f docker guile emacs geiser\n"

msgid "The resulting pack can easily be loaded and @code{docker run} with no extra arguments will spawn @code{bin/guile}:"
msgstr "Полученный пакет может быть легко импортирован, и запущен через @code{docker run} без дополнительных аргументов, пораждая @code{bin/guile}:"

msgid ""
"docker load -i pack.tar.gz\n"
"docker run @var{image-id}\n"
msgstr ""
"docker load -i pack.tar.gz\n"
"docker run @var{image-id}\n"

msgid "Consider the package @var{expr} evaluates to."
msgstr "Процедура, при выполнении которой возвращается пакет."

msgid "This has the same purpose as the same-named option in @command{guix build} (@pxref{Additional Build Options, @option{--expression} in @command{guix build}})."
msgstr "Это то же, что опция с таким же именем в @command{guix package} (@pxref{profile-manifest, @option{--manifest}}) и использует такие же файлы манифестов."

msgid "Use the packages contained in the manifest object returned by the Scheme code in @var{file}.  This option can be repeated several times, in which case the manifests are concatenated."
msgstr "Использовать пакеты, содержащиеся в объекте манифеста, возвращенном кодом Scheme в @var{file}.  Эта опция может быть указана несколько раз, и в этом случае манифесты объединяются."

msgid "This has a similar purpose as the same-named option in @command{guix package} (@pxref{profile-manifest, @option{--manifest}}) and uses the same manifest files.  It allows you to define a collection of packages once and use it both for creating profiles and for creating archives for use on machines that do not have Guix installed.  Note that you can specify @emph{either} a manifest file @emph{or} a list of packages, but not both."
msgstr "Она служит для того же, что и одноименная опция в @command{guix package} (@pxref{profile-manifest, @option{--manifest}}) и использует те же файлы манифеста.  Она позволяет вам один раз определить набор пакетов и использовать его как для создания профилей, так и для создания архивов для использования на машинах, на которых не установлен Guix.  Обратите внимание, что вы можете указать @emph{либо} файл манифеста @emph{либо} список пакетов, но не то и другое вместе."

msgid "--target=@var{triplet}"
msgstr "--target=@var{triplet}"

msgid "cross-compilation"
msgstr "кросс-компиляция"

msgid "Cross-build for @var{triplet}, which must be a valid GNU triplet, such as @code{\"aarch64-linux-gnu\"} (@pxref{Specifying target triplets, GNU configuration triplets,, autoconf, Autoconf})."
msgstr "Cross-сборка для @var{triplet}, который должен быть допустимым GNU triplet, например @code{\\ \"aarch64-linux-gnu\\\"} (@pxref{Specifying target triplets, GNU configuration triplets,, autoconf, Autoconf})."

msgid "--compression=@var{tool}"
msgstr "--compression=@var{tool}"

msgid "-C @var{tool}"
msgstr "-C @var{tool}"

msgid "Compress the resulting tarball using @var{tool}---one of @code{gzip}, @code{zstd}, @code{bzip2}, @code{xz}, @code{lzip}, or @code{none} for no compression."
msgstr "Архивировать логи сборки методом @var{type}. Это один из: @code{gzip}, @code{bzip2} или @code{none}."

msgid "Add the symlinks specified by @var{spec} to the pack.  This option can appear several times."
msgstr "Добавить в пакет символические ссылки, указанные в @var{spec}.  Эта опция может быть указана несколько раз."

msgid "@var{spec} has the form @code{@var{source}=@var{target}}, where @var{source} is the symlink that will be created and @var{target} is the symlink target."
msgstr "@var{spec} имеет вид @code{@var{source}=@var{target}}, где @var{source} - это символическая ссылка, которая будет создана, а @var{target} - это цель символьной ссылки."

msgid "For instance, @code{-S /opt/gnu/bin=bin} creates a @file{/opt/gnu/bin} symlink pointing to the @file{bin} sub-directory of the profile."
msgstr "Например, @code{-S /opt/gnu/bin=bin} создает символическую ссылку @file{/opt/gnu/bin}, указывающую на подкаталог @file{bin} профиля."

msgid "--save-provenance"
msgstr "--save-provenance"

msgid "Save provenance information for the packages passed on the command line.  Provenance information includes the URL and commit of the channels in use (@pxref{Channels})."
msgstr "Сохранить информацию о происхождении пакетов, переданных в командной строке.  Информация о происхождении включает в себя URL и фиксацию используемых каналов (@pxref{Channels})."

msgid "Provenance information is saved in the @file{/gnu/store/@dots{}-profile/manifest} file in the pack, along with the usual package metadata---the name and version of each package, their propagated inputs, and so on.  It is useful information to the recipient of the pack, who then knows how the pack was (supposedly) obtained."
msgstr "Информация о происхождении сохраняется в файле @file{/gnu/store/@dots{}-profile/manifest} в пакете вместе с обычными метаданными пакета - названием и версией каждого пакета, их propagated inputs и т.п.  Это полезная информация для получателя pack, который исходя из нее знает, как (предположительно) был собран pack."

msgid "This option is not enabled by default because, like timestamps, provenance information contributes nothing to the build process.  In other words, there is an infinity of channel URLs and commit IDs that can lead to the same pack.  Recording such ``silent'' metadata in the output thus potentially breaks the source-to-binary bitwise reproducibility property."
msgstr "Этот параметр не включен по умолчанию, поскольку, как и временные метки, информация о происхождении не влияет на процесс сборки.  Другими словами, существует бесконечное количество URL-адресов каналов и ID коммитов, которые могут привести к одному и тому же pack.  Таким образом, запись таких ``тихих'' метаданных в output потенциально нарушает свойство побитовой воспроизводимости."

msgid "garbage collector root, for packs"
msgstr "корни сборщика мусора"

msgid "Make @var{file} a symlink to the resulting pack, and register it as a garbage collector root."
msgstr "Создать символическую ссылку @var{file} на профиль этого окружения и зарегистрировать её как корень сборщика мусора."

msgid "--localstatedir"
msgstr "--localstatedir"

msgid "--profile-name=@var{name}"
msgstr "--profile-name=@var{name}"

msgid "Include the ``local state directory'', @file{/var/guix}, in the resulting pack, and notably the @file{/var/guix/profiles/per-user/root/@var{name}} profile---by default @var{name} is @code{guix-profile}, which corresponds to @file{~root/.guix-profile}."
msgstr "Включите в конечный пакет ``локальный каталог состояния'', @file{/var/guix} и, в частности, профиль @file{/var/guix/profiles/per-user/root/@var{name}} --- по умолчанию @var{name} - это @code{guix-profile}, что соответствует @file{~root/.guix-profile}."

msgid "@file{/var/guix} contains the store database (@pxref{The Store}) as well as garbage-collector roots (@pxref{Invoking guix gc}).  Providing it in the pack means that the store is ``complete'' and manageable by Guix; not providing it in the pack means that the store is ``dead'': items cannot be added to it or removed from it after extraction of the pack."
msgstr "@file{/var/guix} содержит базу данных store (@pxref{The Store}), а также корни сборщика мусора (@pxref{Invoking guix gc}).  Предоставление ее в pack означает, что store является ``полным'' и управляемым Guix; отсутствие в pack означает, что store ``мертв'': пакеты нельзя добавить в него или удалить из него после извлечения pack."

msgid "One use case for this is the Guix self-contained binary tarball (@pxref{Binary Installation})."
msgstr "Одним из вариантов использования является включающий себя двоичный архив Guix (@pxref{Binary Installation})."

msgid "--derivation"
msgstr "--derivation"

msgid "-d"
msgstr "-d"

msgid "Print the name of the derivation that builds the pack."
msgstr "Выведите имя derivation, которая создает pack."

msgid "Use the bootstrap binaries to build the pack.  This option is only useful to Guix developers."
msgstr "Использовать bootstrap бинарники для сборки пакета.  Эта опция полезна только разработчикам Guix."

msgid "In addition, @command{guix pack} supports all the common build options (@pxref{Common Build Options}) and all the package transformation options (@pxref{Package Transformation Options})."
msgstr "Кроме того, @command{guix pack} поддерживает все стандартные параметры сборки (@pxref{Common Build Options}) и все параметры преобразования пакетов (@pxref{Package Transformation Options})."

msgid "GCC"
msgstr "GCC"

msgid "ld-wrapper"
msgstr "ld-wrapper"

msgid "linker wrapper"
msgstr "ld-wrapper"

msgid "toolchain, for C development"
msgstr "Разработка программного обеспечения"

msgid "toolchain, for Fortran development"
msgstr "инструменты, для разработки на Fortran"

msgid "If you need a complete toolchain for compiling and linking C or C++ source code, use the @code{gcc-toolchain} package.  This package provides a complete GCC toolchain for C/C++ development, including GCC itself, the GNU C Library (headers and binaries, plus debugging symbols in the @code{debug} output), Binutils, and a linker wrapper."
msgstr "Guix предлагает индивидуальные пакеты компиляторов, как например, @code{gcc}. Но если вам необходим полный набор инструментов (тулчейн) для компиляции и линковки исходного кода, тогда то, что вам действительно нужно, --- это пакет @code{gcc-toolchain}. Этот пакет предоставляет полный тулчейн GCC для разработки C/C++, включая сам GCC, библиотеку GNU C (заголовки и бинарники, а также отладочные символы в выходе @code{debug}), Binutils и набор линковщика."

msgid "The wrapper's purpose is to inspect the @code{-L} and @code{-l} switches passed to the linker, add corresponding @code{-rpath} arguments, and invoke the actual linker with this new set of arguments.  You can instruct the wrapper to refuse to link against libraries not in the store by setting the @env{GUIX_LD_WRAPPER_ALLOW_IMPURITIES} environment variable to @code{no}."
msgstr "Цель оболочки --- проверять опции @code{-L} и @code{-l}, направленные линковщику, и соответствующие аргументы @code{-rpath}, и вызывать соответствующий линковщик с этим новым набором аргументов. Вы можете указать оболочке отклонять линковку с библиотеками, находящимися не на складе, установив переменную окружения @code{GUIX_LD_WRAPPER_ALLOW_IMPURITIES} в значение @code{no}."

msgid "The package @code{gfortran-toolchain} provides a complete GCC toolchain for Fortran development.  For other languages, please use @samp{guix search gcc toolchain} (@pxref{guix-search,, Invoking guix package})."
msgstr "Пакет @code{gfortran-toolchain} предоставляет полный набор инструментов GCC для разработки Fortran.  Для других языков используйте @samp{guix search gcc toolchain} (@pxref{guix-search,, Invoking guix package})."

msgid "Invoking @command{guix git authenticate}"
msgstr "Вызов @command{guix package}"

msgid "The @command{guix git authenticate} command authenticates a Git checkout following the same rule as for channels (@pxref{channel-authentication, channel authentication}).  That is, starting from a given commit, it ensures that all subsequent commits are signed by an OpenPGP key whose fingerprint appears in the @file{.guix-authorizations} file of its parent commit(s)."
msgstr "Команда @command{guix git Authenticate} аутентифицирует проверку Git по тому же правилу, что и для каналов (@pxref{channel-authentication, channel authentication}).  То есть, начиная с данного коммита, он гарантирует, что все последующие коммиты подписаны ключом OpenPGP, отпечаток которого указан в файле @file{.guix-authorizations} его родительского коммита(ов)."

msgid "You will find this command useful if you maintain a channel.  But in fact, this authentication mechanism is useful in a broader context, so you might want to use it for Git repositories that have nothing to do with Guix."
msgstr "Вы найдете эту команду полезной, если будете поддерживать канал.  Но на самом деле этот механизм аутентификации полезен в более широком контексте, поэтому вы можете использовать его для репозиториев Git, которые не имеют ничего общего с Guix."

msgid "guix git authenticate @var{commit} @var{signer} [@var{options}@dots{}]\n"
msgstr "guix environment @var{options} @var{package}@dots{}\n"

msgid "--repository=@var{directory}"
msgstr "--extract=@var{directory}"

msgid "-r @var{directory}"
msgstr "-x @var{directory}"

msgid "Open the Git repository in @var{directory} instead of the current directory."
msgstr "Открыть репозиторий Git в @var{directory} вместо текущего каталога."

msgid "--keyring=@var{reference}"
msgstr "--expression=@var{expr}"

msgid "-k @var{reference}"
msgstr "-F @var{free}"

msgid "Load OpenPGP keyring from @var{reference}, the reference of a branch such as @code{origin/keyring} or @code{my-keyring}.  The branch must contain OpenPGP public keys in @file{.key} files, either in binary form or ``ASCII-armored''.  By default the keyring is loaded from the branch named @code{keyring}."
msgstr "Загрузить связку ключей OpenPGP из @var{reference}, ссылки на branch, например @code{origin/keyring} или @code{my-keyring}.  branch должна содержать открытые ключи OpenPGP в файлах @file{.key} либо в двоичной форме, либо в ``ASCII-armored'' виде.  По умолчанию связка ключей загружается из branch с именем @code{keyring}."

msgid "Display commit signing statistics upon completion."
msgstr "Отобразить статистику подписания commit'ов по завершению."

msgid "--cache-key=@var{key}"
msgstr "--search=@var{regexp}"

msgid "Previously-authenticated commits are cached in a file under @file{~/.cache/guix/authentication}.  This option forces the cache to be stored in file @var{key} in that directory."
msgstr "Ранее аутентифицированные коммиты кэшируются в файле под @file{~/.cache/guix/authentication}.  Эта опция заставляет хранить кеш в файле @var{key} в этом каталоге."

msgid "--historical-authorizations=@var{file}"
msgstr "--install-from-file=@var{file}"

msgid "By default, any commit whose parent commit(s) lack the @file{.guix-authorizations} file is considered inauthentic.  In contrast, this option considers the authorizations in @var{file} for any commit that lacks @file{.guix-authorizations}.  The format of @var{file} is the same as that of @file{.guix-authorizations} (@pxref{channel-authorizations, @file{.guix-authorizations} format})."
msgstr "По умолчанию любой коммит, родительский коммит которого не содержит файла @file{.guix-authorizations}, считается недостоверным.  Напротив, эта опция учитывает авторизацию в @var{file} для любого коммита, в котором отсутствует @file{.guix-authorizations}.  Формат @var{file} такой же, как у @file{.guix-authorizations} (@pxref{channel-authorizations, @file{.guix-authorizations} format})."

msgid "GNU Guix provides several Scheme programming interfaces (APIs) to define, build, and query packages.  The first interface allows users to write high-level package definitions.  These definitions refer to familiar packaging concepts, such as the name and version of a package, its build system, and its dependencies.  These definitions can then be turned into concrete build actions."
msgstr "GNU Guix предоставляет несколько Scheme программных интерфейсов (API) для определения, сборки и запроса пакетов.  Первый интерфейс позволяет пользователям писать высокоуровневые определения пакетов.  Эти определения относятся к знакомым концепциям упаковки, таким как имя и версия пакета, его система сборки и зависимости.  Затем эти определения можно превратить в конкретные действия по сборке."

msgid "Build actions are performed by the Guix daemon, on behalf of users.  In a standard setup, the daemon has write access to the store---the @file{/gnu/store} directory---whereas users do not.  The recommended setup also has the daemon perform builds in chroots, under specific build users, to minimize interference with the rest of the system."
msgstr "Действия по сборке выполняются демоном Guix от имени пользователей.  В стандартной настройке демон имеет доступ на запись в хранилище---каталог @file{/gnu/store}---, в то время как пользователи не имеют.  Рекомендуемая установка также предусматривает, что демон выполняет сборки в chroot, под определенными пользователями сборки, чтобы минимизировать влияние на остальную систему."

msgid "Lower-level APIs are available to interact with the daemon and the store.  To instruct the daemon to perform a build action, users actually provide it with a @dfn{derivation}.  A derivation is a low-level representation of the build actions to be taken, and the environment in which they should occur---derivations are to package definitions what assembly is to C programs.  The term ``derivation'' comes from the fact that build results @emph{derive} from them."
msgstr "Доступны API нижнего уровня для взаимодействия с демоном и хранилищем.  Чтобы дать демону команду выполнить действие сборки, пользователи фактически предоставляют ему @dfn{derivation}. Derivation - это низкоуровневое представление действий сборки, которые должны быть предприняты, и среды, в которой они должны происходить - derivation'ы относятся к определениям пакетов, как сборка для программ на C.  Термин ``derivation'' происходит от того факта, что результаты сборки @emph{производные} от них."

msgid "From a programming viewpoint, the package definitions of the GNU distribution are provided by Guile modules in the @code{(gnu packages @dots{})} name space@footnote{Note that packages under the @code{(gnu packages @dots{})} module name space are not necessarily ``GNU packages''.  This module naming scheme follows the usual Guile module naming convention: @code{gnu} means that these modules are distributed as part of the GNU system, and @code{packages} identifies modules that define packages.} (@pxref{Modules, Guile modules,, guile, GNU Guile Reference Manual}).  For instance, the @code{(gnu packages emacs)} module exports a variable named @code{emacs}, which is bound to a @code{<package>} object (@pxref{Defining Packages})."
msgstr "С точки зрения программирования, определения пакетов дистрибутива GNU предоставляются модулями Guile в пространстве имен @code{(gnu packages @dots{})} @footnote{Обратите внимание, что пакеты в @code{(gnu packages @dots{})} пространстве имен модуля не обязательно являются ``пакетами GNU''.  Эта схема именования модулей соответствует обычному соглашению об именах модулей Guile: @code{gnu} означает, что эти модули распространяются как часть системы GNU, а @code{packages} идентифицирует модули, которые определяют пакеты.} (@pxref{Modules, Guile modules,, guile, GNU Guile Reference Manual})).  Например, модуль @code{(gnu packages emacs)} экспортирует переменную с именем @code{emacs}, которая привязана к @code{<package>} объекту (@pxref{Defining Packages})."

msgid "The @code{(gnu packages @dots{})} module name space is automatically scanned for packages by the command-line tools.  For instance, when running @code{guix install emacs}, all the @code{(gnu packages @dots{})} modules are scanned until one that exports a package object whose name is @code{emacs} is found.  This package search facility is implemented in the @code{(gnu packages)} module."
msgstr "Пространство имен модуля @code{(gnu packages @dots{})} автоматически сканируется на наличие пакетов с помощью инструментов командной строки.  Например, при запуске @code{guix install emacs} все модули @code{(gnu packages @dots{})} сканируются до тех пор, пока не будет найден тот, который экспортирует объект пакета с именем @code{emacs}.  Это средство поиска пакетов реализовано в модуле @code{(gnu packages)}."

msgid "package module search path"
msgstr "путь для поиска пакетных модулей"

msgid "Users can store package definitions in modules with different names---e.g., @code{(my-packages emacs)}@footnote{Note that the file name and module name must match.  For instance, the @code{(my-packages emacs)} module must be stored in a @file{my-packages/emacs.scm} file relative to the load path specified with @option{--load-path} or @env{GUIX_PACKAGE_PATH}.  @xref{Modules and the File System,,, guile, GNU Guile Reference Manual}, for details.}.  There are two ways to make these package definitions visible to the user interfaces:"
msgstr "Пользователи могут хранить определения пакетов в модулях с разными именами - например, @code{(my-packages emacs)} @footnote{Обратите внимание, что имя файла и имя модуля должны совпадать.  Например, модуль @code{(my-packages emacs)} должен храниться в файле @file{my-packages/emacs.scm} относительно пути загрузки, указанного с помощью @option{--load-path} или @env{GUIX_PACKAGE_PATH}.  @xref{Modules and the File System,,, guile, GNU Guile Reference Manual}, для подробностей.}.  Есть два способа сделать эти определения пакетов видимыми для пользовательских интерфейсов:"

msgid "By adding the directory containing your package modules to the search path with the @code{-L} flag of @command{guix package} and other commands (@pxref{Common Build Options}), or by setting the @env{GUIX_PACKAGE_PATH} environment variable described below."
msgstr "Добавить каталог, содержащий модули вашего пакета, в пути поиска с помощью флага @code{-L} команды @command{guix package} и другие команды (@pxref{Common Build Options}) или указать переменную окружения @env{GUIX_PACKAGE_PATH}, описанную ниже."

msgid "By defining a @dfn{channel} and configuring @command{guix pull} so that it pulls from it.  A channel is essentially a Git repository containing package modules.  @xref{Channels}, for more information on how to define and use channels."
msgstr "Определить @dfn{канал} и настроить @command{guix pull} так, чтобы он учитывал его.  Канал - это, по сути, репозиторий Git, содержащий модули пакетов.  @xref{Channels}, чтобы узнать больше о том, как определять и использовать каналы."

msgid "@env{GUIX_PACKAGE_PATH} works similarly to other search path variables:"
msgstr "@env{GUIX_PACKAGE_PATH} работает аналогично другим переменным пути поиска:"

msgid "{Environment Variable} GUIX_PACKAGE_PATH"
msgstr "{Environment Variable} GUIX_PACKAGE_PATH"

msgid "This is a colon-separated list of directories to search for additional package modules.  Directories listed in this variable take precedence over the own modules of the distribution."
msgstr "Это список каталогов, разделенных двоеточиями, для поиска дополнительных модулей пакета.  Каталоги, перечисленные в этой переменной, имеют приоритет над собственными модулями дистрибутива."

msgid "The distribution is fully @dfn{bootstrapped} and @dfn{self-contained}: each package is built based solely on other packages in the distribution.  The root of this dependency graph is a small set of @dfn{bootstrap binaries}, provided by the @code{(gnu packages bootstrap)} module.  For more information on bootstrapping, @pxref{Bootstrapping}."
msgstr "Дистрибутив полностью @dfn{bootstrapped} и @dfn{самодостаточный}: каждый пакет построен исключительно на основе других пакетов в дистрибутиве.  Корнем этого графа зависимостей является небольшой набор @dfn{bootstrap бинарный файлы}, предоставляемых модулем @code{(gnu packages bootstrap)}.  Для получения дополнительной информации о начальной загрузке @pxref{Bootstrapping}."

msgid "The high-level interface to package definitions is implemented in the @code{(guix packages)} and @code{(guix build-system)} modules.  As an example, the package definition, or @dfn{recipe}, for the GNU Hello package looks like this:"
msgstr "Интерфейс высокого уровня к определениям пакетов реализован в модулях @code{(guix packages)} и @code{(guix build-system)}.  Например, определение пакета или @dfn{рецепта} для пакета GNU Hello выглядит так:"

msgid ""
"(define-module (gnu packages hello)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix download)\n"
"  #:use-module (guix build-system gnu)\n"
"  #:use-module (guix licenses)\n"
"  #:use-module (gnu packages gawk))\n"
"\n"
msgstr ""
"(define-module (gnu packages hello)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix download)\n"
"  #:use-module (guix build-system gnu)\n"
"  #:use-module (guix licenses)\n"
"  #:use-module (gnu packages gawk))\n"
"\n"

msgid ""
"(define-public hello\n"
"  (package\n"
"    (name \"hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (arguments '(#:configure-flags '(\"--enable-silent-rules\")))\n"
"    (inputs (list gawk))\n"
"    (synopsis \"Hello, GNU world: An example GNU package\")\n"
"    (description \"Guess what GNU Hello prints!\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"
msgstr ""
"(define-public hello\n"
"  (package\n"
"    (name \"hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (arguments '(#:configure-flags '(\"--enable-silent-rules\")))\n"
"    (inputs (list gawk))\n"
"    (synopsis \"Hello, GNU world: An example GNU package\")\n"
"    (description \"Guess what GNU Hello prints!\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"

msgid "Without being a Scheme expert, the reader may have guessed the meaning of the various fields here.  This expression binds the variable @code{hello} to a @code{<package>} object, which is essentially a record (@pxref{SRFI-9, Scheme records,, guile, GNU Guile Reference Manual}).  This package object can be inspected using procedures found in the @code{(guix packages)} module; for instance, @code{(package-name hello)} returns---surprise!---@code{\"hello\"}."
msgstr "Не будучи Scheme экспертом, вы можете догадаться о значении различных полей.  Это выражение связывает переменную @code{hello} с объектом @code{<package>}, который по сути является record (@pxref{SRFI-9, Scheme records,, guile, GNU Guile Reference Manual}).  Этот объект пакета можно проверить с помощью процедур из модуля @code{(guix packages)}; например, @code{(package-name hello)} возвращает---сюрприз!---@code{\"hello\"}."

msgid "With luck, you may be able to import part or all of the definition of the package you are interested in from another repository, using the @code{guix import} command (@pxref{Invoking guix import})."
msgstr "Если повезет, вы сможете импортировать часть или все определение интересующего вас пакета из другого репозитория с помощью команды @code{guix import} (@pxref{Invoking guix import})."

msgid "In the example above, @code{hello} is defined in a module of its own, @code{(gnu packages hello)}.  Technically, this is not strictly necessary, but it is convenient to do so: all the packages defined in modules under @code{(gnu packages @dots{})} are automatically known to the command-line tools (@pxref{Package Modules})."
msgstr "В приведенном выше примере @code{hello} определен в собственном модуле @code{(gnu packages hello)}.  Технически в этом нет строгой необходимости, но это удобно: все пакеты, определенные в модулях под @code{(gnu packages @dots{})}, автоматически становятся известны инструментам командной строки (@pxref{Package Modules})."

msgid "There are a few points worth noting in the above package definition:"
msgstr "В приведенном выше определении пакета стоит отметить несколько моментов:"

msgid "The @code{source} field of the package is an @code{<origin>} object (@pxref{origin Reference}, for the complete reference).  Here, the @code{url-fetch} method from @code{(guix download)} is used, meaning that the source is a file to be downloaded over FTP or HTTP."
msgstr "Поле @code{source} пакета представляет собой объект @code{<origin>} (@pxref{origin Reference}, for the complete reference).  Здесь используется метод @code{url-fetch} из @code{(guix download)}, что означает, что источником является файл, который нужно загрузить через FTP или HTTP."

msgid "The @code{mirror://gnu} prefix instructs @code{url-fetch} to use one of the GNU mirrors defined in @code{(guix download)}."
msgstr "Префикс @code{mirror://gnu} указывает @code{url-fetch} использовать одно из зеркал GNU, определенных в @code{(guix download)}."

msgid "The @code{sha256} field specifies the expected SHA256 hash of the file being downloaded.  It is mandatory, and allows Guix to check the integrity of the file.  The @code{(base32 @dots{})} form introduces the base32 representation of the hash.  You can obtain this information with @code{guix download} (@pxref{Invoking guix download}) and @code{guix hash} (@pxref{Invoking guix hash})."
msgstr "Поле @code{sha256} указывает ожидаемый хэш SHA256 загружаемого файла.  Это обязательно и позволяет Guix проверять целостность файла.  Форма @code{(base32 @dots{})} указывает представление хеша в формате base32.  Вы можете получить эту информацию с помощью @code{guix download} (@pxref{Invoking guix download}) @code{guix hash} (@pxref{Invoking guix hash})."

msgid "patches"
msgstr "патчи"

msgid "When needed, the @code{origin} form can also have a @code{patches} field listing patches to be applied, and a @code{snippet} field giving a Scheme expression to modify the source code."
msgstr "При необходимости форма @code{origin} может также иметь поле @code{patches} со списком исправлений, которые необходимо применить, и поле @code{snippet}, содержащее Scheme выражение для изменения исходного кода."

msgid "GNU Build System"
msgstr "Система сборки GNU"

msgid "The @code{build-system} field specifies the procedure to build the package (@pxref{Build Systems}).  Here, @code{gnu-build-system} represents the familiar GNU Build System, where packages may be configured, built, and installed with the usual @code{./configure && make && make check && make install} command sequence."
msgstr "Поле @code{build-system} указывает процедуру сборки пакета (@pxref{Build Systems}).  Здесь @code{gnu-build-system} представляет знакомую систему сборки GNU, в которой пакеты могут быть настроены, собраны и установлены с помощью обычной последовательности команд @code{./configure && make && make check && make install}."

msgid "When you start packaging non-trivial software, you may need tools to manipulate those build phases, manipulate files, and so on.  @xref{Build Utilities}, for more on this."
msgstr "Когда вы начинаете упаковывать нетривиальное программное обеспечение, вам могут потребоваться инструменты для управления этими этапами сборки, управления файлами и т.д. @xref{Build Utilities}, чтобы узнать об этом подробнее."

msgid "The @code{arguments} field specifies options for the build system (@pxref{Build Systems}).  Here it is interpreted by @code{gnu-build-system} as a request run @file{configure} with the @option{--enable-silent-rules} flag."
msgstr "Поле @code{arguments} определяет параметры для системы сборки (@pxref{Build Systems}).  В примере это интерпретируется @code{gnu-build-system} как запуск запроса @file{configure} с флагом @option{--enable-silent-rules}."

msgid "quote"
msgstr "quote"

msgid "quoting"
msgstr "цитирование"

msgid "'"
msgstr "'"

msgid "backquote (quasiquote)"
msgstr "обратная цитата (квазицитата)"

msgid "`"
msgstr "`"

msgid "quasiquote"
msgstr "quasiquote"

msgid "comma (unquote)"
msgstr "запятая (не цитирование)"

msgid ","
msgstr ","

msgid "unquote"
msgstr "unquote"

msgid "The hash-colon (@code{#:}) sequence defines a Scheme @dfn{keyword} (@pxref{Keywords,,, guile, GNU Guile Reference Manual}), and @code{#:configure-flags} is a keyword used to pass a keyword argument to the build system (@pxref{Coding With Keywords,,, guile, GNU Guile Reference Manual})."
msgstr "Последовательность хэш-двоеточие (@code{#:}) определяет Scheme @dfn{ключевое слово} (@pxref{Keywords,,, guile, GNU Guile Reference Manual}), а @code{#:configure-flags} - это ключевое слово, используемое для передачи аргумента ключевого слова системе сборки (@pxref{Coding With Keywords,,, guile, GNU Guile Reference Manual})."

msgid "Note that GCC, Coreutils, Bash, and other essential tools do not need to be specified as inputs here.  Instead, @code{gnu-build-system} takes care of ensuring that they are present (@pxref{Build Systems})."
msgstr "Обратите внимание, что GCC, Coreutils, Bash и другие важные инструменты не нужно указывать здесь в качестве inputs.  Вместо этого @code{gnu-build-system} позаботится об их наличии (@pxref{Build Systems})."

msgid "However, any other dependencies need to be specified in the @code{inputs} field.  Any dependency not specified here will simply be unavailable to the build process, possibly leading to a build failure."
msgstr "Однако любые другие зависимости необходимо указать в поле @code{inputs}.  Любая не указанная здесь зависимость будет просто недоступна для процесса сборки, что может привести к сбою сборки."

msgid "@xref{package Reference}, for a full description of possible fields."
msgstr "@xref{package Reference}, для полного описания возможных полей."

msgid "Once a package definition is in place, the package may actually be built using the @code{guix build} command-line tool (@pxref{Invoking guix build}), troubleshooting any build failures you encounter (@pxref{Debugging Build Failures}).  You can easily jump back to the package definition using the @command{guix edit} command (@pxref{Invoking guix edit}).  @xref{Packaging Guidelines}, for more information on how to test package definitions, and @ref{Invoking guix lint}, for information on how to check a definition for style conformance."
msgstr "После того, как определение пакета введено, пакет может быть фактически собран с помощью инструмента командной строки @code{guix build} (@pxref{Invoking guix build}), устраняя любые возникающие ошибки сборки (@pxref{Debugging Build Failures}).  Вы можете легко вернуться к определению пакета с помощью команды @command{guix edit} (@pxref{Invoking guix edit}).  @xref{Packaging Guidelines} для получения дополнительной информации о том, как тестировать определения пакетов, и @ref{Invoking guix lint} для получения информации о том, как проверить определение на соответствие стилю."

msgid "GUIX_PACKAGE_PATH"
msgstr "GUIX_PACKAGE_PATH"

msgid "Lastly, @pxref{Channels}, for information on how to extend the distribution by adding your own package definitions in a ``channel''."
msgstr "Наконец, @pxref{Channels}, чтобы узнать, как расширить дистрибутив, добавив собственные определения пакетов в ``канал''."

msgid "Finally, updating the package definition to a new upstream version can be partly automated by the @command{guix refresh} command (@pxref{Invoking guix refresh})."
msgstr "Наконец, обновление определения пакета до новой исходной версии можно частично автоматизировать с помощью команды @command{guix refresh} (@pxref{Invoking guix refresh})."

msgid "Behind the scenes, a derivation corresponding to the @code{<package>} object is first computed by the @code{package-derivation} procedure.  That derivation is stored in a @file{.drv} file under @file{/gnu/store}.  The build actions it prescribes may then be realized by using the @code{build-derivations} procedure (@pxref{The Store})."
msgstr "За кулисами derivation, соответствующая объекту @code{<package>}, сначала вычисляется с помощью процедуры @code{package-diveration}.  Этот вывод хранится в файле @file{.drv} в каталоге @file{/gnu/store}.  Действия сборки, которые он предписывает, затем могут быть реализованы с помощью процедуры @code{build-derivations} (@pxref{The Store})."

msgid "Return the @code{<derivation>} object of @var{package} for @var{system} (@pxref{Derivations})."
msgstr "Возвращает the @code{<derivation>} объект @var{package} для @var{system} (@pxref{Derivations})."

msgid "@var{package} must be a valid @code{<package>} object, and @var{system} must be a string denoting the target system type---e.g., @code{\"x86_64-linux\"} for an x86_64 Linux-based GNU system.  @var{store} must be a connection to the daemon, which operates on the store (@pxref{The Store})."
msgstr "@var{package} должен быть допустимым объектом @code{<package>}, а @var{system} должен быть строкой, обозначающей тип системы---например, @code{\"x86_64-linux\"} для системы GNU на базе x86_64 Linux.  @var{store} должен быть подключен к демону, который работает с хранилищем (@pxref{The Store})."

msgid "Similarly, it is possible to compute a derivation that cross-builds a package for some other system:"
msgstr "Точно так же можно вычислить derivation, которая cross собирает пакет для некоторой другой системы:"

msgid "@var{target} must be a valid GNU triplet denoting the target hardware and operating system, such as @code{\"aarch64-linux-gnu\"} (@pxref{Specifying Target Triplets,,, autoconf, Autoconf})."
msgstr "@var{target} должен быть допустимым GNU triplet'ом, обозначающим желамое оборудование и операционную систему, например @code{\"aarch64-linux-gnu\"} (@pxref{Specifying Target Triplets,,, autoconf, Autoconf})."

msgid "Once you have package definitions, you can easily define @emph{variants} of those packages.  @xref{Defining Package Variants}, for more on that."
msgstr "Когда у вас есть определения пакетов, вы можете легко определить @emph{варианты} этих пакетов.  См. @xref{Defining Package Variants}, чтобы узнать об этом подробнее."

msgid "@code{package} Reference"
msgstr "@code{package} Ссылка"

msgid "This section summarizes all the options available in @code{package} declarations (@pxref{Defining Packages})."
msgstr "В этом разделе перечислены все параметры, доступные в объявлениях @code{package} (@pxref{Defining Packages})."

msgid "{Data Type} package"
msgstr "{Тип данных} package"

msgid "This is the data type representing a package recipe."
msgstr "Это тип данных, представляющий рецепт пакета."

msgid "The name of the package, as a string."
msgstr "Название пакета в виде строки."

msgid "version"
msgstr "version"

msgid "source"
msgstr "source"

msgid "An object telling how the source code for the package should be acquired.  Most of the time, this is an @code{origin} object, which denotes a file fetched from the Internet (@pxref{origin Reference}).  It can also be any other ``file-like'' object such as a @code{local-file}, which denotes a file from the local file system (@pxref{G-Expressions, @code{local-file}})."
msgstr "Объект, указывающий, как должен быть получен исходный код пакета.  В большинстве случаев это объект @code{origin}, который обозначает файл, полученный из Интернета (@pxref{origin Reference}).  Это также может быть любой другой объект, подобный файлу, например @code{local-file}, который представляет собой файл из локальной файловой системы (@pxref{G-Expressions, @code{local-file}})."

msgid "build-system"
msgstr "система сборки"

msgid "The build system that should be used to build the package (@pxref{Build Systems})."
msgstr "Система сборки, которую следует использовать для сборки пакета (@pxref{Build Systems})."

msgid "@code{arguments} (default: @code{'()})"
msgstr "@code{arguments} (default: @code{'()})"

msgid "The arguments that should be passed to the build system (@pxref{Build Systems}).  This is a list, typically containing sequential keyword-value pairs, as in this example:"
msgstr "Аргументы, которые должны быть переданы системе сборки (@pxref{Build Systems}).  Это список, обычно содержащий последовательные пары ключевое слово-значение, как в этом примере:"

msgid "@code{inputs} (default: @code{'()})"
msgstr "@code{inputs} (default: @code{'()})"

msgid "@code{native-inputs} (default: @code{'()})"
msgstr "@code{native-inputs} (default: @code{'()})"

msgid "@code{propagated-inputs} (default: @code{'()})"
msgstr "@code{propagated-inputs} (default: @code{'()})"

msgid "inputs, of packages"
msgstr "входные данные пакетов"

msgid ""
"(list libffi libunistring\n"
"      `(,glib \"bin\"))      ;the \"bin\" output of GLib\n"
msgstr ""
"(list libffi libunistring\n"
"      `(,glib \"bin\"))      ;the \"bin\" output of GLib\n"

msgid ""
";; Old input style (deprecated).\n"
"`((\"libffi\" ,libffi)\n"
"  (\"libunistring\" ,libunistring)\n"
"  (\"glib:bin\" ,glib \"bin\"))  ;the \"bin\" output of GLib\n"
msgstr ""
";; Old input style (deprecated).\n"
"`((\"libffi\" ,libffi)\n"
"  (\"libunistring\" ,libunistring)\n"
"  (\"glib:bin\" ,glib \"bin\"))  ;the \"bin\" output of GLib\n"

msgid "cross compilation, package dependencies"
msgstr "кросс-компиляция, зависимости пакетов"

msgid "The distinction between @code{native-inputs} and @code{inputs} is necessary when considering cross-compilation.  When cross-compiling, dependencies listed in @code{inputs} are built for the @emph{target} architecture; conversely, dependencies listed in @code{native-inputs} are built for the architecture of the @emph{build} machine."
msgstr "Различие между @code{native-inputs} и @code{inputs} необходимо при рассмотрении кросс-компиляции.  При кросс-компиляции зависимости, перечисленные в @code{input}, создаются для архитектуры @emph{target}; и наоборот, зависимости, перечисленные в @code{native-inputs}, созданы для архитектуры машины, выполняющей @emph{сборку}."

msgid "@code{native-inputs} is typically used to list tools needed at build time, but not at run time, such as Autoconf, Automake, pkg-config, Gettext, or Bison.  @command{guix lint} can report likely mistakes in this area (@pxref{Invoking guix lint})."
msgstr "@code{native-inputs} обычно используется для перечисления инструментов, необходимых во время сборки, но не во время выполнения, таких как Autoconf, Automake, pkg-config, Gettext или Bison.  @command{guix lint} может сообщить о вероятных ошибках в этой области (@pxref{Invoking guix lint})."

msgid "package-propagated-inputs"
msgstr "package-propagated-inputs"

msgid "Lastly, @code{propagated-inputs} is similar to @code{inputs}, but the specified packages will be automatically installed to profiles (@pxref{Features, the role of profiles in Guix}) alongside the package they belong to (@pxref{package-cmd-propagated-inputs, @command{guix package}}, for information on how @command{guix package} deals with propagated inputs)."
msgstr "Наконец, @code{propagated-inputs} похоже на @code{inputs}, но указанные пакеты будут автоматически установлены в профили (@pxref{Features, the role of profiles in Guix}) вместе с пакетом, которому они принадлежат (@pxref{package-cmd-propagated-inputs, @command{guix package}}, for information on how @command{guix package} deals with propagated inputs)."

msgid "For example this is necessary when packaging a C/C++ library that needs headers of another library to compile, or when a pkg-config file refers to another one @i{via} its @code{Requires} field."
msgstr "Например, это необходимо при упаковке библиотеки C/C++, которой для компиляции требуются заголовки другой библиотеки, или когда файл pkg-config ссылается на другое поле через его @code{Requires}."

msgid "Another example where @code{propagated-inputs} is useful is for languages that lack a facility to record the run-time search path akin to the @code{RUNPATH} of ELF files; this includes Guile, Python, Perl, and more.  When packaging libraries written in those languages, ensure they can find library code they depend on at run time by listing run-time dependencies in @code{propagated-inputs} rather than @code{inputs}."
msgstr "Другой пример использования @code{propagated-inputs} - это языки, в которых отсутствует возможность записывать путь поиска во время выполнения, аналогичный @code{RUNPATH} файлов ELF; сюда входят Guile, Python, Perl и другие.  При упаковке библиотек, написанных на этих языках, убедитесь, что они могут найти код библиотеки, от которого они зависят, во время выполнения, указав зависимости времени выполнения в @code{propagated-inputs}, а не в @code{inputs}."

msgid "@code{outputs} (default: @code{'(\"out\")})"
msgstr "@code{outputs} (default: @code{'(\"out\")})"

msgid "The list of output names of the package.  @xref{Packages with Multiple Outputs}, for typical uses of additional outputs."
msgstr "Список выходных имен пакета.  @xref{Packages with Multiple Outputs}, для типичного использования дополнительных выходов."

msgid "@code{native-search-paths} (default: @code{'()})"
msgstr "@code{native-search-paths} (default: @code{'()})"

msgid "@code{search-paths} (default: @code{'()})"
msgstr "@code{search-paths} (по умолчанию: @code{'()})"

msgid "@code{replacement} (default: @code{#f})"
msgstr "@code{replacement} (по умолчанию: @code{#f})"

msgid "This must be either @code{#f} or a package object that will be used as a @dfn{replacement} for this package.  @xref{Security Updates, grafts}, for details."
msgstr "Это должен быть либо @code{#f}, либо объект пакета, который будет использоваться как @dfn{замена} для этого пакета.  @xref{Security Updates, grafts}, чтобы узнать подробности."

msgid "synopsis"
msgstr "synopsis"

msgid "A one-line description of the package."
msgstr "Описание пакета в одну строку."

msgid "description"
msgstr "description"

msgid "license"
msgstr "лицензия"

msgid "license, of packages"
msgstr "лицензии пакетов"

msgid "The license of the package; a value from @code{(guix licenses)}, or a list of such values."
msgstr "Лицензия пакета; значение из @code{(guix licenses)} или список таких значений."

msgid "home-page"
msgstr "home-page"

msgid "The URL to the home-page of the package, as a string."
msgstr "URL-адрес домашней страницы пакета в виде строки."

msgid "@code{supported-systems} (default: @code{%supported-systems})"
msgstr "@code{port} (default: @code{22})"

msgid "The list of systems supported by the package, as strings of the form @code{architecture-kernel}, for example @code{\"x86_64-linux\"}."
msgstr "Список систем, поддерживаемых пакетом, в виде строк вида @code{architecture-kernel}, например @code{\"x86_64-linux\"}."

msgid "@code{location} (default: source location of the @code{package} form)"
msgstr "@code{location} (по умолчанию: исходное местоположение формы @code{package})"

msgid "The source location of the package.  It is useful to override this when inheriting from another package, in which case this field is not automatically corrected."
msgstr "Исходное расположение пакета.  Это полезно переопределить при наследовании от другого пакета, и в этом случае это поле не корректируется автоматически."

msgid "When used in the @emph{lexical scope} of a package field definition, this identifier resolves to the package being defined."
msgstr "При использовании в @emph{lexical scope} определения поля пакета этот идентификатор преобразуется в определяемый пакет."

msgid "The example below shows how to add a package as a native input of itself when cross-compiling:"
msgstr "В приведенном ниже примере показано, как добавить пакет в качестве собственного ввода при кросс-компиляции:"

msgid ""
"(package\n"
"  (name \"guile\")\n"
"  ;; ...\n"
"\n"
msgstr ""
"(package\n"
"  (name \"guile\")\n"
"  ;; ...\n"
"\n"

msgid "It is an error to refer to @code{this-package} outside a package definition."
msgstr "Ссылка на @code{this-package} вне определения пакета является ошибкой."

msgid "{Procedure} package-development-inputs package [system] [#:target #f]"
msgstr "{Procedure} package-development-inputs package [system] [#:target #f]"

msgid ""
"(use-modules (gnu packages base) (guix packages))\n"
"\n"
msgstr ""
"(use-modules (gnu packages base) (guix packages))\n"
"\n"

msgid ""
"hello\n"
"@result{} #<package hello@@2.10 gnu/packages/base.scm:79 7f585d4f6790>\n"
"\n"
msgstr ""
"hello\n"
"@result{} #<package hello@@2.10 gnu/packages/base.scm:79 7f585d4f6790>\n"
"\n"

msgid ""
"(package-direct-inputs hello)\n"
"@result{} ()\n"
"\n"
msgstr ""
"(package-direct-inputs hello)\n"
"@result{} ()\n"
"\n"

msgid ""
"(package-development-inputs hello)\n"
"@result{} ((\"source\" @dots{}) (\"tar\" #<package tar@@1.32 @dots{}>) @dots{})\n"
msgstr ""
"(package-development-inputs hello)\n"
"@result{} ((\"source\" @dots{}) (\"tar\" #<package tar@@1.32 @dots{}>) @dots{})\n"

msgid "Because packages are regular Scheme objects that capture a complete dependency graph and associated build procedures, it is often useful to write procedures that take a package and return a modified version thereof according to some parameters.  Below are a few examples."
msgstr "Поскольку пакеты являются обычными Scheme объектами, которые захватывают полный граф зависимостей и связанные процедуры сборки, часто бывает полезно написать процедуры, которые принимают пакет и возвращают его измененную версию в соответствии с некоторыми параметрами.  Ниже приведены несколько примеров."

msgid "tool chain, choosing a package's tool chain"
msgstr "tool chain, выбор инструментов пакета"

msgid "Return a variant of @var{package} that uses @var{toolchain} instead of the default GNU C/C++ toolchain.  @var{toolchain} must be a list of inputs (label/package tuples) providing equivalent functionality, such as the @code{gcc-toolchain} package."
msgstr "Вернуть вариант @var{package}, в котором используется @var{toolchain} вместо стандартного набора инструментов GNU C/C++.  @var{toolchain} должен быть списком входов (кортежи меток/пакетов), обеспечивающих эквивалентную функциональность, например, пакет @code{gcc-toolchain}."

msgid "The example below returns a variant of the @code{hello} package built with GCC@tie{}10.x and the rest of the GNU tool chain (Binutils and the GNU C Library) instead of the default tool chain:"
msgstr "Пример ниже возвращает вариант пакета @code{hello}, созданный с помощью GCC@tie{}10.x и остальной части GNU утилит (Binutils и библиотеки GNU C) вместо цепочки инструментов по умолчанию:"

msgid ""
"(let ((toolchain (specification->package \"gcc-toolchain@@10\")))\n"
"  (package-with-c-toolchain hello `((\"toolchain\" ,toolchain))))\n"
msgstr ""
"(let ((toolchain (specification->package \"gcc-toolchain@@10\")))\n"
"  (package-with-c-toolchain hello `((\"toolchain\" ,toolchain))))\n"

msgid "The build tool chain is part of the @dfn{implicit inputs} of packages---it's usually not listed as part of the various ``inputs'' fields and is instead pulled in by the build system.  Consequently, this procedure works by changing the build system of @var{package} so that it pulls in @var{toolchain} instead of the defaults.  @xref{Build Systems}, for more on build systems."
msgstr "Инструменты сборки являются частью @dfn{неявных входных данных} пакетов - обычно они не указываются как часть различных полей ``входных данных'', а вместо этого извлекается системой сборки.  Следовательно, эта процедура работает путем изменения системы сборки @var{package}, так что она использует @var{toolchain} вместо значений по умолчанию.  @xref{Build Systems}, чтобы узнать больше о системах сборки."

msgid "@code{origin} Reference"
msgstr "@code{origin} Справка"

msgid "This section documents @dfn{origins}.  An @code{origin} declaration specifies data that must be ``produced''---downloaded, usually---and whose content hash is known in advance.  Origins are primarily used to represent the source code of packages (@pxref{Defining Packages}).  For that reason, the @code{origin} form allows you to declare patches to apply to the original source code as well as code snippets to modify it."
msgstr "Этот раздел документирует @dfn{origins}.  Объявление @code{origin} определяет данные, которые должны быть ``произведены''---обычно загружены---и чей хэш содержимого известен заранее.  Origins в основном используются для представления исходного кода пакетов (@pxref{Defining Packages}).  По этой причине форма @code{origin} позволяет вам объявлять исправления для применения к исходному коду, а также фрагменты кода для его изменения."

msgid "{Data Type} origin"
msgstr "{Тип данных} origin"

msgid "This is the data type representing a source code origin."
msgstr "Это тип данных, представляющий источник исходного кода."

msgid "uri"
msgstr "uri"

msgid "An object containing the URI of the source.  The object type depends on the @code{method} (see below).  For example, when using the @var{url-fetch} method of @code{(guix download)}, the valid @code{uri} values are: a URL represented as a string, or a list thereof."
msgstr "Объект, содержащий URI источника.  Тип объекта зависит от @code{method} (см. ниже).  Например, при использовании метода @var{url-fetch} для @code{(guix download)} допустимые значения @code{uri}: URL, представленный в виде строки, или их список."

msgid "fixed-output derivations, for download"
msgstr "derivation'ы с фиксированным выводом, для загрузки"

msgid "method"
msgstr "method"

msgid "A monadic procedure that handles the given URI@.  The procedure must accept at least three arguments: the value of the @code{uri} field and the hash algorithm and hash value specified by the @code{hash} field.  It must return a store item or a derivation in the store monad (@pxref{The Store Monad}); most methods return a fixed-output derivation (@pxref{Derivations})."
msgstr "Монадическая процедура, обрабатывающая данный URI.  Процедура должна принимать по крайней мере три аргумента: значение поля @code{uri}, а также алгоритм хеширования и значение хеш-функции, указанные в поле @code{hash}.  Она должна возвращать элемент store или derivation в store монаде (@pxref{The Store Monad}); большинство методов возвращают derivation с фиксированным выводом (@pxref{Derivations})."

msgid "Commonly used methods include @code{url-fetch}, which fetches data from a URL, and @code{git-fetch}, which fetches data from a Git repository (see below)."
msgstr "Обычно используемые методы включают @code{url-fetch}, который извлекает данные из URL-адреса, и @code{git-fetch}, который извлекает данные из репозитория Git (см. ниже)."

msgid "sha256"
msgstr "sha256"

msgid "A bytevector containing the SHA-256 hash of the source.  This is equivalent to providing a @code{content-hash} SHA256 object in the @code{hash} field described below."
msgstr "Байт-вектор, содержащий хэш SHA-256 источника.  Это эквивалент предоставлению объекта SHA256 @code{content-hash} в поле @code{hash}, описанном ниже."

msgid "hash"
msgstr "hash"

msgid "The @code{content-hash} object of the source---see below for how to use @code{content-hash}."
msgstr "Объект @code{content-hash} источника---см. ниже, как использовать @code{content-hash}."

msgid "You can obtain this information using @code{guix download} (@pxref{Invoking guix download}) or @code{guix hash} (@pxref{Invoking guix hash})."
msgstr "Вы можете получить эту информацию, используя @code{guix download} (@pxref{Invoking guix download}) или @code{guix hash} (@pxref{Invoking guix hash})."

msgid "@code{file-name} (default: @code{#f})"
msgstr "@code{file-name} (по умолчанию: @code{#f})"

msgid "The file name under which the source code should be saved.  When this is @code{#f}, a sensible default value will be used in most cases.  In case the source is fetched from a URL, the file name from the URL will be used.  For version control checkouts, it is recommended to provide the file name explicitly because the default is not very descriptive."
msgstr "Имя файла, под которым должен быть сохранен исходный код.  Когда это @code{#f}, в большинстве случаев будет использоваться разумное значение по умолчанию.  В случае, если источник извлекается из URL-адреса, будет использоваться имя файла из URL-адреса.  Для проверок контроля версий рекомендуется явно указывать имя файла, поскольку значение по умолчанию не очень информативно."

msgid "@code{patches} (default: @code{'()})"
msgstr "@code{patches} (по умолчанию: @code{'()})"

msgid "A list of file names, origins, or file-like objects (@pxref{G-Expressions, file-like objects}) pointing to patches to be applied to the source."
msgstr "Список имен файлов, источников или объектов подобных файлами (@pxref{G-Expressions, file-like objects}), указывающих на исправления, которые будут применены к источнику."

msgid "This list of patches must be unconditional.  In particular, it cannot depend on the value of @code{%current-system} or @code{%current-target-system}."
msgstr "Данный список исправлений должен быть безвариативным.  В частности, он не может зависеть от значения @code{%current-system} или @code{%current-target-system}."

msgid "@code{snippet} (default: @code{#f})"
msgstr "@code{snippet} (по умолчанию: @code{#f})"

msgid "A G-expression (@pxref{G-Expressions}) or S-expression that will be run in the source directory.  This is a convenient way to modify the source, sometimes more convenient than a patch."
msgstr "G-выражение (@pxref{G-Expressions}) или S-выражение, которое будет выполнено в исходном каталоге.  Это удобный способ изменить исходный код, иногда более удобный, чем патч."

msgid "@code{patch-flags} (default: @code{'(\"-p1\")})"
msgstr "@code{patch-flags} (по умолчанию: @code{'(\"-p1\")})"

msgid "A list of command-line flags that should be passed to the @code{patch} command."
msgstr "Список флагов командной строки, которые следует передать команде @code{patch}."

msgid "@code{patch-inputs} (default: @code{#f})"
msgstr "@code{patch-inputs} (по умолчанию: @code{#f})\""

msgid "Input packages or derivations to the patching process.  When this is @code{#f}, the usual set of inputs necessary for patching are provided, such as GNU@tie{}Patch."
msgstr "Входные пакеты или derivation'ы для процесса исправления.  Когда это @code{#f}, предоставляется обычный набор входных данных, необходимых для исправления, например GNU@tie{}Patch."

msgid "@code{modules} (default: @code{'()})"
msgstr "@code{modules} (по умолчанию: @code{'()})"

msgid "A list of Guile modules that should be loaded during the patching process and while running the code in the @code{snippet} field."
msgstr "Список модулей Guile, которые должны быть загружены в процессе установки исправлений и при выполнении кода, в поле @code{snippet}."

msgid "@code{patch-guile} (default: @code{#f})"
msgstr "@code{patch-guile} (по умолчанию: @code{#f})"

msgid "The Guile package that should be used in the patching process.  When this is @code{#f}, a sensible default is used."
msgstr "Пакет Guile, который следует использовать в процессе установки исправлений.  Когда это @code{#f}, используется разумное значение по умолчанию."

msgid "{Data Type} content-hash @var{value} [@var{algorithm}]"
msgstr "{Тип данных} content-hash @var{value} [@var{algorithm}]"

msgid "Construct a content hash object for the given @var{algorithm}, and with @var{value} as its hash value.  When @var{algorithm} is omitted, assume it is @code{sha256}."
msgstr "Создать объект хэша содержимого для заданного @var{algorithm} и с @var{value} в качестве его хеш-значения.  Если @var{algorithm} опущен, предполагается, что это @code{sha256}."

msgid "@var{value} can be a literal string, in which case it is base32-decoded, or it can be a bytevector."
msgstr "@var{value} может быть буквальной строкой, и в этом случае она декодируется с помощью base32, или может быть байтовым вектором."

msgid "The following forms are all equivalent:"
msgstr "Следующие зависимости необязательны:"

msgid ""
"(content-hash \"05zxkyz9bv3j9h0xyid1rhvh3klhsmrpkf3bcs6frvlgyr2gwilj\")\n"
"(content-hash \"05zxkyz9bv3j9h0xyid1rhvh3klhsmrpkf3bcs6frvlgyr2gwilj\"\n"
"              sha256)\n"
"(content-hash (base32\n"
"               \"05zxkyz9bv3j9h0xyid1rhvh3klhsmrpkf3bcs6frvlgyr2gwilj\"))\n"
"(content-hash (base64 \"kkb+RPaP7uyMZmu4eXPVkM4BN8yhRd8BTHLslb6f/Rc=\")\n"
"              sha256)\n"
msgstr ""
"(content-hash \"05zxkyz9bv3j9h0xyid1rhvh3klhsmrpkf3bcs6frvlgyr2gwilj\")\n"
"(content-hash \"05zxkyz9bv3j9h0xyid1rhvh3klhsmrpkf3bcs6frvlgyr2gwilj\"\n"
"              sha256)\n"
"(content-hash (base32\n"
"               \"05zxkyz9bv3j9h0xyid1rhvh3klhsmrpkf3bcs6frvlgyr2gwilj\"))\n"
"(content-hash (base64 \"kkb+RPaP7uyMZmu4eXPVkM4BN8yhRd8BTHLslb6f/Rc=\")\n"
"              sha256)\n"

msgid "Technically, @code{content-hash} is currently implemented as a macro.  It performs sanity checks at macro-expansion time, when possible, such as ensuring that @var{value} has the right size for @var{algorithm}."
msgstr "Технически @code{content-hash} в настоящее время реализован как макрос.  Он выполняет проверки работоспособности во время раскрытия макроса, когда это возможно, например, гарантирует, что @var{value} имеет правильный размер для @var{algorithm}."

msgid "As we have seen above, how exactly the data an origin refers to is retrieved is determined by its @code{method} field.  The @code{(guix download)} module provides the most common method, @code{url-fetch}, described below."
msgstr "Как мы видели выше, то, как именно извлекаются данные, на которые ссылается источник, определяется его полем @code{method}.  Модуль @code{(guix download)} предоставляет наиболее распространенный метод @code{url-fetch}, описанный ниже."

msgid "When one of the URL starts with @code{mirror://}, then its host part is interpreted as the name of a mirror scheme, taken from @file{%mirror-file}."
msgstr "Когда один из URL-адресов начинается с @code{mirror://}, тогда его хост-часть интерпретируется как имя схемы зеркала, взятой из @file{%mirror-file}."

msgid "Alternatively, when URL starts with @code{file://}, return the corresponding file name in the store."
msgstr "В качестве альтернативного варианта, если URL-адрес начинается с @code{file://}, вернуть соответствующее имя файла в store."

msgid "Likewise, the @code{(guix git-download)} module defines the @code{git-fetch} origin method, which fetches data from a Git version control repository, and the @code{git-reference} data type to describe the repository and revision to fetch."
msgstr "Аналогичным образом, модуль @code{(guix git-download)} определяет метод источника @code{git-download}, который извлекает данные из репозитория управления версиями Git, и тип данных @code{git-reference} для описания репозиторий и ревизия для загрузки."

msgid "Return a fixed-output derivation that fetches @var{ref}, a @code{<git-reference>} object.  The output is expected to have recursive hash @var{hash} of type @var{hash-algo} (a symbol).  Use @var{name} as the file name, or a generic name if @code{#f}."
msgstr "Вернуть derivation с фиксированным выводом, которая выбирает объект @var{ref}, @code{<git-reference>}.  Ожидается, что на выходе будет рекурсивный хеш @var{hash} типа @var{hash-algo} (символ).  Использовать @var{name} в качестве имени файла или общее имя, если @code{#f}."

msgid "{Data Type} git-reference"
msgstr "{Тип данных} build-machine"

msgid "This data type represents a Git reference for @code{git-fetch} to retrieve."
msgstr "Управление конфигурацией операционной системы."

msgid "url"
msgstr "url"

msgid "The URL of the Git repository to clone."
msgstr "URL-адрес репозитория Git для клонирования."

msgid "commit"
msgstr "commit"

msgid "@code{recursive?} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "This Boolean indicates whether to recursively fetch Git sub-modules."
msgstr "Это логическое значение (boolean) указывает, нужно ли рекурсивно получать подмодули Git."

msgid "The example below denotes the @code{v2.10} tag of the GNU@tie{}Hello repository:"
msgstr "Пример ниже обозначает тег @code{v2.10} репозитория GNU@tie{}Hello:"

msgid ""
"(git-reference\n"
"  (url \"https://git.savannah.gnu.org/git/hello.git\")\n"
"  (commit \"v2.10\"))\n"
msgstr ""
"(git-reference\n"
"  (url \"https://git.savannah.gnu.org/git/hello.git\")\n"
"  (commit \"v2.10\"))\n"

msgid "This is equivalent to the reference below, which explicitly names the commit:"
msgstr "Это эквивалентно приведенной ниже ссылке, которая явно называет коммит:"

msgid ""
"(git-reference\n"
"  (url \"https://git.savannah.gnu.org/git/hello.git\")\n"
"  (commit \"dc7dc56a00e48fe6f231a58f6537139fe2908fb9\"))\n"
msgstr ""
"(git-reference\n"
"  (url \"https://git.savannah.gnu.org/git/hello.git\")\n"
"  (commit \"dc7dc56a00e48fe6f231a58f6537139fe2908fb9\"))\n"

msgid "For Mercurial repositories, the module @code{(guix hg-download)} defines the @code{hg-fetch} origin method and @code{hg-reference} data type for support of the Mercurial version control system."
msgstr "Для репозиториев Mercurial, модуль @code{(guix hg-download)} определяет метод @code{hg-fetch} и тип данных @code{hg-reference} для поддержки системы контроля версий Mercurial."

msgid "changeset"
msgstr "changeset"

msgid "Return a fixed-output derivation that fetches @var{ref}, a @code{<svn-reference>} object.  The output is expected to have recursive hash @var{hash} of type @var{hash-algo} (a symbol).  Use @var{name} as the file name, or a generic name if @code{#f}."
msgstr "Вернуть derivation с фиксированным выводом, которая выбирает объект @var{ref}, @code{<svn-reference>}.  Ожидается, что на выходе будет рекурсивный хеш @var{hash} типа @var{hash-algo} (символ).  Использовать @var{name} в качестве имени файла или общее имя, если @code{#f}."

msgid "revision"
msgstr "revision"

msgid "Return a fixed-output derivation that fetches @var{ref}, a @code{<bzr-reference>} object.  The output is expected to have recursive hash @var{hash} of type @var{hash-algo} (a symbol).  Use @var{name} as the file name, or a generic name if @code{#f}."
msgstr "Вернуть derivation с фиксированным выводом, которая выбирает объект @var{ref}, @code{<bzr-reference>}.  Ожидается, что на выходе будет рекурсивный хеш @var{hash} типа @var{hash-algo} (символ).  Использовать @var{name} в качестве имени файла или общее имя, если @code{#f}."

msgid "Return a fixed-output derivation that fetches @var{ref}, a @code{<cvs-reference>} object.  The output is expected to have recursive hash @var{hash} of type @var{hash-algo} (a symbol).  Use @var{name} as the file name, or a generic name if @code{#f}."
msgstr "Вернуть derivation с фиксированным выводом, которая выбирает объект @var{ref}, @code{<cvs-reference>}.  Ожидается, что на выходе будет рекурсивный хеш @var{hash} типа @var{hash-algo} (символ).  Использовать @var{name} в качестве имени файла или общее имя, если @code{#f}."

msgid "module"
msgstr "module"

msgid "customizing packages"
msgstr "настройка, пакетов"

msgid "variants, of packages"
msgstr "вариантов пакетов"

msgid "One of the nice things with Guix is that, given a package definition, you can easily @emph{derive} variants of that package---for a different upstream version, with different dependencies, different compilation options, and so on.  Some of these custom packages can be defined straight from the command line (@pxref{Package Transformation Options}).  This section describes how to define package variants in code.  This can be useful in ``manifests'' (@pxref{Writing Manifests})  and in your own package collection (@pxref{Creating a Channel}), among others!"
msgstr "Одна из приятных вещей в Guix заключается в том, что, учитывая определение пакета, вы можете легко @emph{наследовать} варианты этого пакета---для другой версии, с разными зависимостями, разными параметрами компиляции и так далее.  Некоторые из этих пользовательских пакетов можно определить прямо из командной строки (@pxref{Package Transformation Options}).  В этом разделе описывается, как определять варианты пакета в коде.  Это также может быть полезно в ``манифестах'' (@pxref{Writing Manifests}) и в вашей собственной коллекции пакетов (@pxref{Creating a Channel})!"

msgid "inherit, for package definitions"
msgstr "наследование для описаниях пакетов"

msgid "As discussed earlier, packages are first-class objects in the Scheme language.  The @code{(guix packages)} module provides the @code{package} construct to define new package objects (@pxref{package Reference}).  The easiest way to define a package variant is using the @code{inherit} keyword together with @code{package}.  This allows you to inherit from a package definition while overriding the fields you want."
msgstr "Как обсуждалось ранее, пакеты---это объекты первого класса на языке Scheme.  Модуль @code{(guix packages)} предоставляет конструкцию @code{package} для определения новых объектов пакета (@pxref{package Reference}).  Самый простой способ определить вариант пакета---использовать ключевое слово @code{inherit} вместе с @code{package}.  Это позволяет вам наследовать от определения пакета, переопределяя нужные поля."

msgid "For example, given the @code{hello} variable, which contains a definition for the current version of GNU@tie{}Hello, here's how you would define a variant for version 2.2 (released in 2006, it's vintage!):"
msgstr "Например, учитывая переменную @code{hello}, которая содержит определение для текущей версии GNU@tie{}Hello, вот как вы могли бы определить вариант для версии 2.2 (выпущенной в 2006 году, это винтаж!):"

msgid ""
"(use-modules (gnu packages base))    ;for 'hello'\n"
"\n"
msgstr ""
"(use-modules (gnu packages guile))  ;for 'guile-json'\n"
"\n"

msgid ""
"(define hello-2.2\n"
"  (package\n"
"    (inherit hello)\n"
"    (version \"2.2\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0lappv4slgb5spyqbh6yl5r013zv72yqg2pcl30mginf3wdqd8k9\"))))))\n"
msgstr ""
"(define hello-2.2\n"
"  (package\n"
"    (inherit hello)\n"
"    (version \"2.2\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0lappv4slgb5spyqbh6yl5r013zv72yqg2pcl30mginf3wdqd8k9\"))))))\n"

msgid "You can just as well define variants with a different set of dependencies than the original package.  For example, the default @code{gdb} package depends on @code{guile}, but since that is an optional dependency, you can define a variant that removes that dependency like so:"
msgstr "Вы также можете определить варианты с другим набором зависимостей, чем исходный пакет.  Например, пакет @code{gdb} по умолчанию зависит от @code{guile}, но поскольку это необязательная зависимость, вы можете определить вариант, который удаляет эту зависимость следующим образом:"

msgid "(delete @var{name}@dots{})"
msgstr "(delete @var{name}@dots{})"

msgid "In some cases, you may find it useful to write functions (``procedures'', in Scheme parlance) that return a package based on some parameters.  For example, consider the @code{luasocket} library for the Lua programming language.  We want to create @code{luasocket} packages for major versions of Lua.  One way to do that is to define a procedure that takes a Lua package and returns a @code{luasocket} package that depends on it:"
msgstr "В некоторых случаях вам может быть полезно написать функции (``процедуры'' Scheme), которые возвращают пакет на основе некоторых параметров.  Например, рассмотрим библиотеку @code{luasocket} для языка программирования Lua.  Мы хотим создать пакеты @code{luasocket} для основных версий Lua.  Один из способов сделать это---определить процедуру, которая принимает пакет Lua и возвращает зависящий от него пакет @code{luasocket}:"

msgid ""
"(define (make-lua-socket name lua)\n"
"  ;; Return a luasocket package built with LUA.\n"
"  (package\n"
"    (name name)\n"
"    (version \"3.0\")\n"
"    ;; several fields omitted\n"
"    (inputs (list lua))\n"
"    (synopsis \"Socket library for Lua\")))\n"
"\n"
msgstr ""
"(define (make-lua-socket name lua)\n"
"  ;; Return a luasocket package built with LUA.\n"
"  (package\n"
"    (name name)\n"
"    (version \"3.0\")\n"
"    ;; several fields omitted\n"
"    (inputs (list lua))\n"
"    (synopsis \"Socket library for Lua\")))\n"
"\n"

msgid ""
"(define-public lua5.1-socket\n"
"  (make-lua-socket \"lua5.1-socket\" lua-5.1))\n"
"\n"
msgstr ""
"(define-public lua5.1-socket\n"
"  (make-lua-socket \"lua5.1-socket\" lua-5.1))\n"
"\n"

msgid ""
"(define-public lua5.2-socket\n"
"  (make-lua-socket \"lua5.2-socket\" lua-5.2))\n"
msgstr ""
"(define-public lua5.2-socket\n"
"  (make-lua-socket \"lua5.2-socket\" lua-5.2))\n"

msgid "Here we have defined packages @code{lua5.1-socket} and @code{lua5.2-socket} by calling @code{make-lua-socket} with different arguments.  @xref{Procedures,,, guile, GNU Guile Reference Manual}, for more info on procedures.  Having top-level public definitions for these two packages means that they can be referred to from the command line (@pxref{Package Modules})."
msgstr "Здесь мы определили пакеты @code{lua5.1-socket} и @code{lua5.2-socket}, вызвав @code{make-lua-socket} с разными аргументами.  См. @xref{Procedures,,, guile, GNU Guile Reference Manual}, для получения дополнительной информации о процедурах.  Наличие общедоступных определений верхнего уровня для этих двух пакетов означает, что на них можно ссылаться из командной строки (@pxref{Package Modules})."

msgid "package transformations"
msgstr "пакетные преобразования"

msgid "These are pretty simple package variants.  As a convenience, the @code{(guix transformations)} module provides a high-level interface that directly maps to the more sophisticated package transformation options (@pxref{Package Transformation Options}):"
msgstr "Это довольно простые варианты пакета.  Для удобства модуль @code{(guix transformations)} предоставляет высокоуровневый интерфейс, который напрямую сопоставляется с более сложными параметрами преобразования пакетов (@pxref{Package Transformation Options}):"

msgid "Return a procedure that, when passed an object to build (package, derivation, etc.), applies the transformations specified by @var{opts} and returns the resulting objects.  @var{opts} must be a list of symbol/string pairs such as:"
msgstr "Возвращает процедуру, которая при передаче объекта для сборки (пакета, производной и т. д.), применяет преобразования, указанные в @var{opts}, и возвращает результирующие объекты.  @var{opts} должен быть списком пар символ/строка, например:"

msgid ""
"((with-branch . \"guile-gcrypt=master\")\n"
" (without-tests . \"libgcrypt\"))\n"
msgstr ""
"((with-branch . \"guile-gcrypt=master\")\n"
"(without-tests . \"libgcrypt\"))\n"

msgid "Each symbol names a transformation and the corresponding string is an argument to that transformation."
msgstr "Каждый символ именует преобразование, а соответствующая строка (string) является аргументом этого преобразования."

msgid "For instance, a manifest equivalent to this command:"
msgstr "Например, команда:"

msgid ""
"guix build guix \\\n"
"  --with-branch=guile-gcrypt=master \\\n"
"  --with-debug-info=zlib\n"
msgstr ""
"guix build guix \\\n"
"  --with-branch=guile-gcrypt=master \\\n"
"  --with-debug-info=zlib\n"

msgid "... would look like this:"
msgstr "Вывод должен быть таким:"

msgid ""
"(use-modules (guix transformations))\n"
"\n"
msgstr ""
"(use-package-modules guile emacs)\n"
"\n"

msgid ""
"(define transform\n"
"  ;; The package transformation procedure.\n"
"  (options->transformation\n"
"   '((with-branch . \"guile-gcrypt=master\")\n"
"     (with-debug-info . \"zlib\"))))\n"
"\n"
msgstr ""
"(define transform\n"
"  ;; The package transformation procedure.\n"
"  (options->transformation\n"
"   '((with-branch . \"guile-gcrypt=master\")\n"
"     (with-debug-info . \"zlib\"))))\n"
"\n"

msgid ""
"(packages->manifest\n"
" (list (transform (specification->package \"guix\"))))\n"
msgstr ""
"(packages->manifest\n"
"(list (transform (specification->package \"guix\"))))\n"

msgid "input rewriting"
msgstr "перезапись input"

msgid "dependency graph rewriting"
msgstr "перезапись дерева зависимостей"

msgid "The @code{options->transformation} procedure is convenient, but it's perhaps also not as flexible as you may like.  How is it implemented? The astute reader probably noticed that most package transformation options go beyond the superficial changes shown in the first examples of this section: they involve @dfn{input rewriting}, whereby the dependency graph of a package is rewritten by replacing specific inputs by others."
msgstr "Процедура @code{options-> transformation} удобна, но, возможно, не так гибка, как вам хотелось бы.  Как это реализовано? Проницательный читатель, вероятно, заметил, что большинство вариантов преобразования пакетов выходят за рамки поверхностных изменений, показанных в первых примерах этого раздела: они включают @dfn{перезапись входных данных}, в результате чего граф зависимостей пакета переписывается путем замены определенных входных данных другими."

msgid "Dependency graph rewriting, for the purposes of swapping packages in the graph, is what the @code{package-input-rewriting} procedure in @code{(guix packages)} implements."
msgstr "Перезапись графа зависимостей для замены пакетов в графе реализуется процедурой @code{package-input-rewriting} в @code{(guix packages)}."

msgid "{Procedure} package-input-rewriting replacements [rewrite-name] @"
msgstr "{Процедура Scheme} package-input-rewriting replacements [rewrite-name] @"

msgid "[#:deep? #t] [#:recursive? #f] Return a procedure that, when passed a package, replaces its direct and indirect dependencies, including implicit inputs when @var{deep?} is true, according to @var{replacements}.  @var{replacements} is a list of package pairs; the first element of each pair is the package to replace, and the second one is the replacement."
msgstr "[#:deep? #t] [#:recursive? #f] Возвращает процедуру, которая при передаче пакета заменяет его прямые и косвенные зависимости, включая неявные входы, когда @var{deep?} истинна, согласно @var{replacements}.  @var{replacements} - это список пар пакетов; первый элемент каждой пары - это заменяемый пакет, а второй - заменяющий."

msgid "Optionally, @var{rewrite-name} is a one-argument procedure that takes the name of a package and returns its new name after rewrite."
msgstr "При необходимости, @var{rewrite-name} - это процедура с одним аргументом, которая принимает имя пакета и возвращает его новое имя после перезаписи."

msgid "Consider this example:"
msgstr "Рассмотрим пример:"

msgid ""
"(define libressl-instead-of-openssl\n"
"  ;; This is a procedure to replace OPENSSL by LIBRESSL,\n"
"  ;; recursively.\n"
"  (package-input-rewriting `((,openssl . ,libressl))))\n"
"\n"
msgstr ""
"(define libressl-instead-of-openssl\n"
"  ;; This is a procedure to replace OPENSSL by LIBRESSL,\n"
"  ;; recursively.\n"
"  (package-input-rewriting `((,openssl . ,libressl))))\n"
"\n"

msgid ""
"(define git-with-libressl\n"
"  (libressl-instead-of-openssl git))\n"
msgstr ""
"(define git-with-libressl\n"
"  (libressl-instead-of-openssl git))\n"

msgid "Here we first define a rewriting procedure that replaces @var{openssl} with @var{libressl}.  Then we use it to define a @dfn{variant} of the @var{git} package that uses @var{libressl} instead of @var{openssl}.  This is exactly what the @option{--with-input} command-line option does (@pxref{Package Transformation Options, @option{--with-input}})."
msgstr "Здесь мы сначала определяем процедуру перезаписи, которая заменяет @var{openssl} на @var{libressl}.  Затем мы используем это, чтобы определить @dfn{вариант} пакета @var{git}, который использует @var{libressl} вместо @var{openssl}.  Это именно то, что делает параметр командной строки @option{--with-input} (@pxref{Package Transformation Options, @option{--with-input}})."

msgid "The following variant of @code{package-input-rewriting} can match packages to be replaced by name rather than by identity."
msgstr "Следующий вариант @code{package-input-rewriting} может сопоставлять пакеты, подлежащие замене, по имени, а не по идентификатору."

msgid "The example above could be rewritten this way:"
msgstr "Приведенный выше пример можно переписать так:"

msgid ""
"(define libressl-instead-of-openssl\n"
"  ;; Replace all the packages called \"openssl\" with LibreSSL.\n"
"  (package-input-rewriting/spec `((\"openssl\" . ,(const libressl)))))\n"
msgstr ""
"(define libressl-instead-of-openssl\n"
"  ;; Replace all the packages called \"openssl\" with LibreSSL.\n"
"  (package-input-rewriting/spec `((\"openssl\" . ,(const libressl)))))\n"

msgid "The key difference here is that, this time, packages are matched by spec and not by identity.  In other words, any package in the graph that is called @code{openssl} will be replaced."
msgstr "Ключевое отличие здесь в том, что на этот раз пакеты сопоставляются по спецификации, а не по идентичности.  Другими словами, любой пакет в графе, который называется @code{openssl}, будет заменен."

msgid "A more generic procedure to rewrite a package dependency graph is @code{package-mapping}: it supports arbitrary changes to nodes in the graph."
msgstr "Более общая процедура для перезаписи графа зависимостей пакетов - это @code{package-mapping}: она поддерживает произвольные изменения узлов в графе."

msgid "Return a procedure that, given a package, applies @var{proc} to all the packages depended on and returns the resulting package.  The procedure stops recursion when @var{cut?} returns true for a given package.  When @var{deep?} is true, @var{proc} is applied to implicit inputs as well."
msgstr "Вернуть процедуру, которая для данного пакета применяет @var{proc} ко всем зависимым пакетам и возвращает полученный пакет.  Процедура останавливает рекурсию, когда @var{cut?} возвращает истину для данного пакета.  Когда @var{deep?} истинно, @var{proc} также применяется к неявным входным данным."

msgid ""
"(use-modules (guix packages)\n"
"             (gnu packages gdb)               ;for 'gdb'\n"
"             (gnu packages version-control))  ;for 'git'\n"
"\n"
msgstr ""
"(use-modules (guix packages)\n"
"             (gnu packages gdb)               ;для 'gdb'\n"
"             (gnu packages version-control))  ;для 'git'\n"
"\n"

msgid ""
";; Define a variant of GDB without a dependency on Guile.\n"
"(define gdb-sans-guile\n"
"  (package\n"
"    (inherit gdb)\n"
"    (inputs (modify-inputs (package-inputs gdb)\n"
"              (delete \"guile\")))))\n"
"\n"
msgstr ""
";; Определить вариант GDB без зависимости от Guile.\n"
"(define gdb-sans-guile\n"
"  (package\n"
"    (inherit gdb)\n"
"    (inputs (modify-inputs (package-inputs gdb)\n"
"              (delete \"guile\")))))\n"
"\n"

msgid "The available fields are the following:"
msgstr "Доступны следующие поля:"

msgid "build system"
msgstr "система сборки"

msgid "Each package definition specifies a @dfn{build system} and arguments for that build system (@pxref{Defining Packages}).  This @code{build-system} field represents the build procedure of the package, as well as implicit dependencies of that build procedure."
msgstr "В каждом определении пакета указывается @dfn{система сборки} и аргументы для этой системы сборки (@pxref{Defining Packages}).  Это поле @code{build-system} представляет процедуру сборки пакета, а также неявные зависимости этой процедуры сборки."

msgid "Build systems are @code{<build-system>} objects.  The interface to create and manipulate them is provided by the @code{(guix build-system)} module, and actual build systems are exported by specific modules."
msgstr "Системы сборки - это объекты @code{<build-system>}.  Интерфейс для их создания и управления ими предоставляется модулем @code{(guix build-system)}, а фактические системы сборки экспортируются определенными модулями."

msgid "bag (low-level package representation)"
msgstr "мешок (низкоуровневое представление пакета)"

msgid "Under the hood, build systems first compile package objects to @dfn{bags}.  A @dfn{bag} is like a package, but with less ornamentation---in other words, a bag is a lower-level representation of a package, which includes all the inputs of that package, including some that were implicitly added by the build system.  This intermediate representation is then compiled to a derivation (@pxref{Derivations}).  The @code{package-with-c-toolchain} is an example of a way to change the implicit inputs that a package's build system pulls in (@pxref{package Reference, @code{package-with-c-toolchain}})."
msgstr "Под капотом системы сборки сначала компилируют объекты пакета в @dfn{bag}.  @dfn{bag} похож на пакет, но с меньшим количеством украшений---другими словами, bag - это представление пакета нижнего уровня, которое включает в себя все входные данные этого пакета, включая те, которые были неявно добавлены система сборки.  Это промежуточное представление затем компилируется в derivation (@pxref{Derivations}).  @code{package-with-c-toolchain} - это пример способа изменить неявные входные данные, которые использует система сборки пакета (@pxref{package Reference, @code{package-with-c-toolchain}})."

msgid "Build systems accept an optional list of @dfn{arguments}.  In package definitions, these are passed @i{via} the @code{arguments} field (@pxref{Defining Packages}).  They are typically keyword arguments (@pxref{Optional Arguments, keyword arguments in Guile,, guile, GNU Guile Reference Manual}).  The value of these arguments is usually evaluated in the @dfn{build stratum}---i.e., by a Guile process launched by the daemon (@pxref{Derivations})."
msgstr "Системы сборки принимают необязательный список из @dfn{arguments}.  В определениях пакетов они передаются через поле @code{arguments} (@pxref{Defining Packages}).  Обычно это аргументы ключевого слова (@pxref{Optional Arguments, keyword arguments in Guile,, guile, GNU Guile Reference Manual}).  Значение этих аргументов обычно оценивается в @dfn{build stratum}---то есть процессом Guile, запущенным демоном (@pxref{Derivations})."

msgid "The main build system is @code{gnu-build-system}, which implements the standard build procedure for GNU and many other packages.  It is provided by the @code{(guix build-system gnu)} module."
msgstr "Основная система сборки - это @code{gnu-build-system}, которая реализует стандартную процедуру сборки для GNU и многих других пакетов.  Она предоставляется модулем @code{(guix build-system gnu)}."

msgid "@code{gnu-build-system} represents the GNU Build System, and variants thereof (@pxref{Configuration, configuration and makefile conventions,, standards, GNU Coding Standards})."
msgstr "@code{gnu-build-system} представляет систему сборки GNU и ее варианты (@pxref{Configuration, configuration and makefile conventions,, standards, GNU Coding Standards})."

msgid "build phases"
msgstr "build phases"

msgid "In a nutshell, packages using it are configured, built, and installed with the usual @code{./configure && make && make check && make install} command sequence.  In practice, a few additional steps are often needed.  All these steps are split up in separate @dfn{phases}.  @xref{Build Phases}, for more info on build phases and ways to customize them."
msgstr "Вкратце, пакеты, использующие его, настраиваются, собираются и устанавливаются с помощью обычной последовательности команд @code{./ configure && make && make check && make install}. На практике часто требуется несколько дополнительных шагов.  Все эти шаги разбиты на отдельные @dfn{фазы}.  @xref{Build Phases}, чтобы узнать больше о фазах сборки и способах их настройки."

msgid "In addition, this build system ensures that the ``standard'' environment for GNU packages is available.  This includes tools such as GCC, libc, Coreutils, Bash, Make, Diffutils, grep, and sed (see the @code{(guix build-system gnu)} module for a complete list).  We call these the @dfn{implicit inputs} of a package, because package definitions do not have to mention them."
msgstr "Кроме того, эта система сборки гарантирует, что доступна ``стандартная'' среда для пакетов GNU.  Сюда входят такие инструменты, как GCC, libc, Coreutils, Bash, Make, Diffutils, grep и sed (полный список см. в модуле @code{(guix build-system gnu)}).  Мы называем их @dfn{неявными входами} пакета, потому что в определениях пакетов они не упоминаются."

msgid "This build system supports a number of keyword arguments, which can be passed @i{via} the @code{arguments} field of a package.  Here are some of the main parameters:"
msgstr "Эта система сборки поддерживает ряд ключевых аргументов, которые можно передать через поле @code{arguments} пакета.  Вот некоторые из основных параметров:"

msgid "#:phases"
msgstr "build phases"

msgid "This argument specifies build-side code that evaluates to an alist of build phases.  @xref{Build Phases}, for more information."
msgstr "Считать список каналов из файла @var{file} вместо @file{~/.config/guix/channels.scm}. @var{file} должен содержать код Scheme, который определяет список объектов \"канал\". См.  @xref{Channels} для подробной информации."

msgid "#:configure-flags"
msgstr "Конфигурирование системы"

msgid "This is a list of flags (strings) passed to the @command{configure} script.  @xref{Defining Packages}, for an example."
msgstr "Это список флагов (строк), переданных в сценарий (script) @command{configure}. См. @xref{Defining Packages}."

msgid "#:make-flags"
msgstr "#:make-flags"

msgid "This list of strings contains flags passed as arguments to @command{make} invocations in the @code{build}, @code{check}, and @code{install} phases."
msgstr "Этот список строк содержит флаги, передаваемые в качестве аргументов для вызовов @command{make} на этапах @code{build}, @code{check} и @code{install}."

msgid "#:out-of-source?"
msgstr "#:out-of-source?"

msgid "This Boolean, @code{#f} by default, indicates whether to run builds in a build directory separate from the source tree."
msgstr "Это логическое значение, @code{#f} по умолчанию, указывает, следует ли запускать сборки в каталоге сборки отдельно от исходников."

msgid "When it is true, the @code{configure} phase creates a separate build directory, changes to that directory, and runs the @code{configure} script from there.  This is useful for packages that require it, such as @code{glibc}."
msgstr "Когда это значение истинно, на этапе @code{configure} создается отдельный каталог сборки, происходит переход в этот каталог и оттуда запускается сценарий @code{configure}.  Это полезно для пакетов, которым это необходимо, таких как @code{glibc}."

msgid "#:tests?"
msgstr "#:tests?"

msgid "#:test-target"
msgstr "#:test-target"

msgid "#:parallel-build?"
msgstr "#:parallel-build?"

msgid "#:parallel-tests?"
msgstr "#:parallel-tests?"

msgid "#:validate-runpath?"
msgstr "#:validate-runpath?"

msgid "#:substitutable?"
msgstr "#:substitutable?"

msgid "#:allowed-references"
msgstr "--references"

msgid "#:disallowed-references"
msgstr "--references"

msgid "Other @code{<build-system>} objects are defined to support other conventions and tools used by free software packages.  They inherit most of @code{gnu-build-system}, and differ mainly in the set of inputs implicitly added to the build process, and in the list of phases executed.  Some of these build systems are listed below."
msgstr "Другие объекты @code{<build-system>} определены для поддержки других соглашений и инструментов, используемых пакетами свободного программного обеспечения.  Они наследуют большую часть @code{gnu-build-system} и различаются в основном набором входных данных, неявно добавляемых в процесс сборки, и списком выполняемых фаз.  Некоторые из этих систем сборки перечислены ниже."

msgid "This variable is exported by @code{(guix build-system ant)}.  It implements the build procedure for Java packages that can be built with @url{https://ant.apache.org/, Ant build tool}."
msgstr "Эта переменная экспортируется @code{(guix build-system ant)}.  Она реализует процедуру сборки пакетов Java, которые можно собрать с помощью @url{https://ant.apache.org/, Ant build tool}."

msgid "It adds both @code{ant} and the @dfn{Java Development Kit} (JDK) as provided by the @code{icedtea} package to the set of inputs.  Different packages can be specified with the @code{#:ant} and @code{#:jdk} parameters, respectively."
msgstr "Она добавляет к набору входных данных как @code{ant}, так и @dfn{Java Development Kit} (JDK), предоставленные пакетом @code{icedtea}.  Различные пакеты можно указать с помощью параметров @code{#:ant} и @code{#:jdk} соответственно."

msgid "When the original package does not provide a suitable Ant build file, the parameter @code{#:jar-name} can be used to generate a minimal Ant build file @file{build.xml} with tasks to build the specified jar archive.  In this case the parameter @code{#:source-dir} can be used to specify the source sub-directory, defaulting to ``src''."
msgstr "Когда исходный пакет не предоставляет подходящий файл сборки Ant, параметр @code{#:jar-name} можно использовать для создания минимального файла сборки Ant @file{build.xml} с задачами для создания указанного архива jar.  В этом случае параметр @code{#:source-dir} можно использовать для указания подкаталога источника, по умолчанию - src."

msgid "The @code{#:main-class} parameter can be used with the minimal ant buildfile to specify the main class of the resulting jar.  This makes the jar file executable.  The @code{#:test-include} parameter can be used to specify the list of junit tests to run.  It defaults to @code{(list \"**/*Test.java\")}.  The @code{#:test-exclude} can be used to disable some tests.  It defaults to @code{(list \"**/Abstract*.java\")}, because abstract classes cannot be run as tests."
msgstr "Параметр @code{#:main-class} можно использовать с минимальным файлом сборки ant для указания основного класса результирующего jar-файла.  Это делает файл jar исполняемым.  Параметр @code{#:test-include} можно использовать для указания списка запускаемых тестов junit.  По умолчанию это @code{(list \"**/*Test.java\")}.  @code{#:test-exclude} можно использовать для отключения некоторых тестов.  По умолчанию это @code{(list \"**/Abstract*.java\")}, потому что абстрактные классы не могут быть запущены как тесты."

msgid "The parameter @code{#:build-target} can be used to specify the Ant task that should be run during the @code{build} phase.  By default the ``jar'' task will be run."
msgstr "Параметр @code{#:build-target} можно использовать для указания задачи Ant, которая должна выполняться на этапе @code{build}.  По умолчанию будет запущена задача jar."

msgid "Android NDK build system"
msgstr "система сборки Android NDK"

msgid "This variable is exported by @code{(guix build-system android-ndk)}.  It implements a build procedure for Android NDK (native development kit)  packages using a Guix-specific build process."
msgstr "Эта переменная экспортируется @code{(guix build-system android-ndk)}.  Она реализует процедуру сборки пакетов Android NDK (собственный комплект разработки) с использованием процесса сборки, специфичного для Guix."

msgid "The build system assumes that packages install their public interface (header) files to the subdirectory @file{include} of the @code{out} output and their libraries to the subdirectory @file{lib} the @code{out} output."
msgstr "Система сборки предполагает, что пакеты устанавливают свои файлы общедоступного интерфейса (заголовки) в подкаталог @file{include} вывода @code{out}, а их библиотеки - в подкаталог @file{lib} вывода @code{out}."

msgid "It's also assumed that the union of all the dependencies of a package has no conflicting files."
msgstr "Также предполагается, что объединение всех зависимостей пакета не имеет конфликтующих файлов."

msgid "For the time being, cross-compilation is not supported - so right now the libraries and header files are assumed to be host tools."
msgstr "В настоящее время кросс-компиляция не поддерживается, поэтому сейчас предполагается, что библиотеки и файлы заголовков являются хост-инструментами."

msgid "These variables, exported by @code{(guix build-system asdf)}, implement build procedures for Common Lisp packages using @url{https://common-lisp.net/project/asdf/, ``ASDF''}.  ASDF is a system definition facility for Common Lisp programs and libraries."
msgstr "Эти переменные, экспортированные @code{(guix build-system asdf)}, реализуют процедуры сборки для пакетов Common Lisp с использованием @url{https://common-lisp.net/project/asdf/, ``ASDF''}.  ASDF - это средство определения системы для программ и библиотек Common Lisp."

msgid "The @code{asdf-build-system/source} system installs the packages in source form, and can be loaded using any common lisp implementation, via ASDF@.  The others, such as @code{asdf-build-system/sbcl}, install binary systems in the format which a particular implementation understands.  These build systems can also be used to produce executable programs, or lisp images which contain a set of packages pre-loaded."
msgstr "Система @code{asdf-build-system/source} устанавливает пакеты в исходной форме и может быть загружена с использованием любой распространенной реализации Lisp через ASDF.  Другие, такие как @code{asdf-build-system/sbcl}, устанавливают двоичные системы в формате, понятном конкретной реализации.  Эти системы сборки также могут использоваться для создания исполняемых программ или образов lisp, которые содержат набор предварительно загруженных пакетов."

msgid "The build system uses naming conventions.  For binary packages, the package name should be prefixed with the lisp implementation, such as @code{sbcl-} for @code{asdf-build-system/sbcl}."
msgstr "В системе сборки используются соглашения об именах.  Для бинарных пакетов перед именем пакета должен стоять префикс реализации lisp, например @code{sbcl-} для @code{asdf-build-system/sbcl}."

msgid "Additionally, the corresponding source package should be labeled using the same convention as Python packages (@pxref{Python Modules}), using the @code{cl-} prefix."
msgstr "Кроме того, соответствующий исходный пакет должен быть помечен с использованием того же соглашения, что и пакеты Python (@pxref{Python Modules}), с использованием префикса @code{cl-}."

msgid "In order to create executable programs and images, the build-side procedures @code{build-program} and @code{build-image} can be used.  They should be called in a build phase after the @code{create-asdf-configuration} phase, so that the system which was just built can be used within the resulting image.  @code{build-program} requires a list of Common Lisp expressions to be passed as the @code{#:entry-program} argument."
msgstr "Для создания исполняемых программ и образов можно использовать процедуры сборки @code{build-program} и @code{build-image}.  Их следует вызывать в фазе сборки после фазы @code{create-symlinks}, чтобы только что созданную систему можно было использовать в полученном образе.  @code{build-program} требует, чтобы список выражений Common Lisp был передан в качестве аргумента @code{#:entry-program}."

msgid "By default, all the @file{.asd} files present in the sources are read to find system definitions.  The @code{#:asd-files} parameter can be used to specify the list of @file{.asd} files to read.  Furthermore, if the package defines a system for its tests in a separate file, it will be loaded before the tests are run if it is specified by the @code{#:test-asd-file} parameter.  If it is not set, the files @code{<system>-tests.asd}, @code{<system>-test.asd}, @code{tests.asd}, and @code{test.asd} will be tried if they exist."
msgstr "Если система не определена в собственном файле @file{.asd} с тем же именем, тогда следует использовать параметр @code{#:asd-file}, чтобы указать, в каком файле определена система.  Кроме того, если пакет определяет систему для своих тестов в отдельном файле, он будет загружен перед запуском тестов, если он указан параметром @code{#:test-asd-file}.  Если он не установлен, будут попробованы файлы @code{<system>-tests.asd}, @code{<system>-test.asd}, @code{tests.asd} и @code{test.asd}, если они есть."

msgid "If for some reason the package must be named in a different way than the naming conventions suggest, or if several systems must be compiled, the @code{#:asd-systems} parameter can be used to specify the list of system names."
msgstr "Если по какой-то причине пакет должен быть назван иначе, чем это предлагается в соглашениях об именах, можно использовать параметр @code{#:asd-system-name} для указания имени системы."

msgid "Rust programming language"
msgstr "Язык программирования Rust"

msgid "Cargo (Rust build system)"
msgstr "Cargo (система сборки Rust)"

msgid "This variable is exported by @code{(guix build-system cargo)}.  It supports builds of packages using Cargo, the build tool of the @uref{https://www.rust-lang.org, Rust programming language}."
msgstr "Эта переменная экспортируется @code{(guix build-system cargo)}.  Она поддерживает сборку пакетов с использованием Cargo, инструмента сборки @uref{https://www.rust-lang.org, языка программирования Rust}."

msgid "This build system adds @code{chicken} to the package inputs, as well as the packages of @code{gnu-build-system}."
msgstr "Эта система сборки добавляет @code{chicken} к входным данным (inputs) пакета, а также к пакетам @code{gnu-build-system}."

msgid "For example, if you are packaging the @code{srfi-1} egg:"
msgstr "Например, если вы создаете пакет, содержащий Bash, с помощью:"

msgid "(arguments '(#:egg-name \"srfi-1\"))\n"
msgstr "(arguments '(#:egg-name \"srfi-1\"))\n"

msgid "This variable is exported by @code{(guix build-system copy)}.  It supports builds of simple packages that don't require much compiling, mostly just moving files around."
msgstr "Эта переменная экспортируется в @code{(guix build-system copy)}.  Она поддерживает сборку простых пакетов, которые не требуют большой компиляции, в основном просто перемещения файлов."

msgid "It adds much of the @code{gnu-build-system} packages to the set of inputs.  Because of this, the @code{copy-build-system} does not require all the boilerplate code often needed for the @code{trivial-build-system}."
msgstr "Она добавляет большую часть пакетов @code{gnu-build-system} в набор входных данных.  По этой причине @code{copy-build-system} не требуется весь шаблонный код, часто необходимый для @code{trivial-build-system}."

msgid "To further simplify the file installation process, an @code{#:install-plan} argument is exposed to let the packager specify which files go where.  The install plan is a list of @code{(@var{source} @var{target} [@var{filters}])}.  @var{filters} are optional."
msgstr "Чтобы еще больше упростить процесс установки файла, предоставляется аргумент @code{#:install-plan}, позволяющий упаковщику указывать, какие файлы куда установить.  План установки представляет собой список @code{(@var{source} @var{target} [@var{filters}])}.  @var{filters} необязательны."

msgid "When @var{source} matches a file or directory without trailing slash, install it to @var{target}."
msgstr "Когда @var{source} соответствует файл или каталог без косой черты, установить его в @var{target}."

msgid "If @var{target} has a trailing slash, install @var{source} basename beneath @var{target}."
msgstr "Если @var{target} имеет косую черту в конце, установить @var{source} basename ниже @var{target}."

msgid "Otherwise install @var{source} as @var{target}."
msgstr "В противном случае установите @var{source} как @var{target}."

msgid "When @var{source} is a directory with a trailing slash, or when @var{filters} are used,"
msgstr "Когда @var{source} - это каталог с косой чертой в конце или когда используются @var{filters},"

msgid "the trailing slash of @var{target} is implied with the same meaning as above."
msgstr "завершающая косая черта @var{target} подразумевается с тем же значением, что и выше."

msgid "Without @var{filters}, install the full @var{source} @emph{content} to @var{target}."
msgstr "Без @var{filter} установить @emph{содержимое} @var{source} в @var{target}."

msgid "With @var{filters} among @code{#:include}, @code{#:include-regexp}, @code{#:exclude},"
msgstr "С @var{filters} среди @code{#:include}, @code{#:include-regexp}, @code{#:exclude},"

msgid "@code{#:exclude-regexp}, only select files are installed depending on the filters.  Each filters is specified by a list of strings."
msgstr "@code{#:exclude-regexp}, установить только избранные файлы в зависимости от фильтров.  Каждый фильтр определяется списком строк."

msgid "With @code{#:include}, install all the files which the path suffix matches"
msgstr "С помощью @code{#:include} установите все файлы, суффикс пути которых соответствует"

msgid "at least one of the elements in the given list."
msgstr "хотя бы одному из элементов в данном списке."

msgid "With @code{#:include-regexp}, install all the files which the"
msgstr "С помощью @code{#:include-regex} установить все файлы,"

msgid "subpaths match at least one of the regular expressions in the given list."
msgstr "подкаталоги которых соответствуют хотя бы одному из регулярных выражений в данном списке."

msgid "The @code{#:exclude} and @code{#:exclude-regexp} filters"
msgstr "Фильтры @code{#:exclude} и @code{#:exclude-regexp}"

msgid "are the complement of their inclusion counterpart.  Without @code{#:include} flags, install all files but those matching the exclusion filters.  If both inclusions and exclusions are specified, the exclusions are done on top of the inclusions."
msgstr "являются дополнением к своим аналогам включения.  Без флагов @code{#:include} установить все файлы, кроме тех, которые соответствуют фильтрам исключения.  Если указаны и включения, и исключения, то исключения выполняются поверх включений."

msgid "In all cases, the paths relative to @var{source} are preserved within @var{target}."
msgstr "В любом случае пути, относительные к @var{source}, сохраняются в @var{target}."

msgid "Examples:"
msgstr "Примеры:"

msgid "@code{(\"foo/bar\" \"share/my-app/\")}: Install @file{bar} to @file{share/my-app/bar}."
msgstr "@code{(\"foo/bar\" \"share/my-app/\")}: Установить @file{bar} в @file{share/my-app/bar}."

msgid "@code{(\"foo/bar\" \"share/my-app/baz\")}: Install @file{bar} to @file{share/my-app/baz}."
msgstr "@code{(\"foo/bar\" \"share/my-app/baz\")}: Установить @file{bar} в @file{share/my-app/baz}."

msgid "@code{(\"foo/\" \"share/my-app\")}: Install the content of @file{foo} inside @file{share/my-app},"
msgstr "@code{(\"foo/\" \"share/my-app\")}: Установить содержимое @file{foo} в @file{share/my-app},"

msgid "e.g., install @file{foo/sub/file} to @file{share/my-app/sub/file}."
msgstr "например, установить @file{foo/sub/file} в @file{share/my-app/sub/file}."

msgid "@code{(\"foo/\" \"share/my-app\" #:include (\"sub/file\"))}: Install only @file{foo/sub/file} to"
msgstr "@code{(\"foo/\" \"share/my-app\" #:include (\"sub/file\"))}: Установить только @file{foo/sub/file} в"

msgid "@file{share/my-app/sub/file}."
msgstr "@file{share/my-app/sub/file}."

msgid "@code{(\"foo/sub\" \"share/my-app\" #:include (\"file\"))}: Install @file{foo/sub/file} to"
msgstr "@code{(\"foo/sub\" \"share/my-app\" #:include (\"file\"))}: Установить @file{foo/sub/file} в"

msgid "@file{share/my-app/file}."
msgstr "@file{share/my-app/file}."

msgid "Clojure (programming language)"
msgstr "Clojure (язык программирования)"

msgid "simple Clojure build system"
msgstr "простая система сборки Clojure"

msgid "This variable is exported by @code{(guix build-system clojure)}.  It implements a simple build procedure for @uref{https://clojure.org/, Clojure} packages using plain old @code{compile} in Clojure.  Cross-compilation is not supported yet."
msgstr "Эта переменная экспортируется @code{(guix build-system clojure)}.  Она реализует простую процедуру сборки пакетов @uref{https://clojure.org/, Clojure} с использованием простого старого @code{compile} в Clojure.  Кросс-компиляция пока не поддерживается."

msgid "It adds @code{clojure}, @code{icedtea} and @code{zip} to the set of inputs.  Different packages can be specified with the @code{#:clojure}, @code{#:jdk} and @code{#:zip} parameters, respectively."
msgstr "Она добавляет @code{clojure}, @code{icedtea} и @code{zip} к набору входных данных.  Различные пакеты можно указать с помощью параметров @code{#:clojure}, @code{#:jdk} и @code{#:zip} соответственно."

msgid "A list of source directories, test directories and jar names can be specified with the @code{#:source-dirs}, @code{#:test-dirs} and @code{#:jar-names} parameters, respectively.  Compile directory and main class can be specified with the @code{#:compile-dir} and @code{#:main-class} parameters, respectively.  Other parameters are documented below."
msgstr "Список исходных каталогов, тестовых каталогов и имен jar-файлов можно указать с помощью параметров @code{#:source-dirs}, @code{#:test-dirs} и @code{#:jar-names} соответственно.  Каталог компиляции и основной класс можно указать с помощью параметров @code{#:compile-dir} и @code{#:main-class} соответственно.  Остальные параметры описаны ниже."

msgid "This build system is an extension of @code{ant-build-system}, but with the following phases changed:"
msgstr "Эта система сборки является расширением @code{ant-build-system}, но со следующими изменениями:"

msgid "build"
msgstr "build"

msgid "This phase calls @code{compile} in Clojure to compile source files and runs @command{jar} to create jars from both source files and compiled files according to the include list and exclude list specified in @code{#:aot-include} and @code{#:aot-exclude}, respectively.  The exclude list has priority over the include list.  These lists consist of symbols representing Clojure libraries or the special keyword @code{#:all} representing all Clojure libraries found under the source directories.  The parameter @code{#:omit-source?} decides if source should be included into the jars."
msgstr "На этом этапе вызывается @code{compile} в Clojure для компиляции исходных файлов и запускается @command{jar} для создания jar-файлов как из исходных файлов, так и из скомпилированных файлов в соответствии со списком включения и списком исключений, указанным в @code{#:aot-include} и @code{#:aot-exclude} соответственно.  Список исключений имеет приоритет над списком включения.  Эти списки состоят из символов, представляющих библиотеки Clojure, или специального ключевого слова @code{#:all}, представляющего все библиотеки Clojure, находящиеся в исходных каталогах.  Параметр @code{#:omit-source?} определяет, следует ли включать исходники в jar-файлы."

msgid "This phase runs tests according to the include list and exclude list specified in @code{#:test-include} and @code{#:test-exclude}, respectively.  Their meanings are analogous to that of @code{#:aot-include} and @code{#:aot-exclude}, except that the special keyword @code{#:all} now stands for all Clojure libraries found under the test directories.  The parameter @code{#:tests?} decides if tests should be run."
msgstr "На этом этапе выполняются тесты в соответствии со списком включения и списком исключений, указанными в @code{#:test-include} и @code{#:test-exclude} соответственно.  Их значения аналогичны значениям @code{#:aot-include} и @code{#:aot-exclude}, за исключением того, что специальное ключевое слово @code{#:all} теперь обозначает все библиотеки Clojure, находящиеся в каталогах test.  Параметр @code{#:tests?} определяет, нужно ли запускать тесты."

msgid "install"
msgstr "install"

msgid "This phase installs all jars built previously."
msgstr "На этом этапе устанавливаются все созданные ранее jars."

msgid "Apart from the above, this build system also contains an additional phase:"
msgstr "Помимо вышесказанного, эта система сборки также содержит дополнительную фазу:"

msgid "install-doc"
msgstr "install-doc"

msgid "This phase installs all top-level files with base name matching @code{%doc-regex}.  A different regex can be specified with the @code{#:doc-regex} parameter.  All files (recursively) inside the documentation directories specified in @code{#:doc-dirs} are installed as well."
msgstr "На этом этапе устанавливаются все файлы верхнего уровня с базовым именем, совпадающим с @code{%doc-regex}.  Другое регулярное выражение можно указать с помощью параметра @code{#:doc-regex}.  Все файлы (рекурсивно) в каталогах документации, указанные в @code{#:doc-dirs}, также устанавливаются."

msgid "This variable is exported by @code{(guix build-system cmake)}.  It implements the build procedure for packages using the @url{https://www.cmake.org, CMake build tool}."
msgstr "Эта переменная экспортируется @code{(guix build-system cmake)}.  Она реализует процедуру сборки пакетов с использованием @url{https://www.cmake.org, инструмента сборки CMake}."

msgid "This variable is exported by @code{(guix build-system dune)}.  It supports builds of packages using @uref{https://dune.build/, Dune}, a build tool for the OCaml programming language.  It is implemented as an extension of the @code{ocaml-build-system} which is described below.  As such, the @code{#:ocaml} and @code{#:findlib} parameters can be passed to this build system."
msgstr "Эта переменная экспортируется в @code{(guix build-system dune)}.  Она поддерживает сборку пакетов с использованием @uref{https://dune.build/, Dune}, инструмента сборки для языка программирования OCaml.  Она реализована как расширение @code{ocaml-build-system}, описанную ниже.  Таким образом, в эту систему сборки можно передать параметры @code{#:ocaml} и @code{#:findlib}."

msgid "It automatically adds the @code{dune} package to the set of inputs.  Which package is used can be specified with the @code{#:dune} parameter."
msgstr "Она автоматически добавляет пакет @code{dune} в набор входных данных.  Какой пакет используется, можно указать с помощью параметра @code{#:dune}."

msgid "There is no @code{configure} phase because dune packages typically don't need to be configured.  The @code{#:build-flags} parameter is taken as a list of flags passed to the @code{dune} command during the build."
msgstr "Фаза @code{configure} отсутствует, потому что dune пакеты обычно не нужно настраивать.  Параметр @code{#:build-flags} используется как список флагов, переданных команде @code{dune} во время сборки."

msgid "The @code{#:jbuild?} parameter can be passed to use the @code{jbuild} command instead of the more recent @code{dune} command while building a package.  Its default value is @code{#f}."
msgstr "Параметр @code{#:jbuild?} можно передать для использования команды @code{jbuild} вместо более новой команды @code{dune} при сборке пакета.  Его значение по умолчанию - @code{#f}."

msgid "The @code{#:package} parameter can be passed to specify a package name, which is useful when a package contains multiple packages and you want to build only one of them.  This is equivalent to passing the @code{-p} argument to @code{dune}."
msgstr "Параметр @code{#:package} может быть передан для указания имени пакета, что полезно, когда пакет содержит несколько пакетов, и вы хотите создать только один из них.  Это эквивалентно передаче аргумента @code{-p} в @code{dune}."

msgid "This variable is exported by @code{(guix build-system go)}.  It implements a build procedure for Go packages using the standard @url{https://golang.org/cmd/go/#hdr-Compile_packages_and_dependencies, Go build mechanisms}."
msgstr "Эта переменная экспортируется @code{(guix build-system go)}.  Онf реализует процедуру сборки пакетов Go с использованием стандартного @url{https://golang.org/cmd/go/#hdr-Compile_packages_and_dependencies, механизмов сборки Go}."

msgid "The user is expected to provide a value for the key @code{#:import-path} and, in some cases, @code{#:unpack-path}.  The @url{https://golang.org/doc/code.html#ImportPaths, import path} corresponds to the file system path expected by the package's build scripts and any referring packages, and provides a unique way to refer to a Go package.  It is typically based on a combination of the package source code's remote URI and file system hierarchy structure.  In some cases, you will need to unpack the package's source code to a different directory structure than the one indicated by the import path, and @code{#:unpack-path} should be used in such cases."
msgstr "Ожидается, что пользователь предоставит значение для ключа @code{#:import-path} и, в некоторых случаях, @code{#:unpack-path}.  @url{https://golang.org/doc/code.html#ImportPaths, import path} соответствует пути к файловой системе, ожидаемому сценариями сборки пакета и любыми ссылочными пакетами, и обеспечивает уникальный способ ссылки на Go пакет.  Обычно он основан на комбинации удаленного URI исходного кода пакета и иерархической структуры файловой системы.  В некоторых случаях вам нужно будет распаковать исходный код пакета в другую структуру каталогов, отличную от той, которая указана в пути импорта, и в таких случаях следует использовать @code{#:unpack-path}."

msgid "Packages that provide Go libraries should install their source code into the built output.  The key @code{#:install-source?}, which defaults to @code{#t}, controls whether or not the source code is installed.  It can be set to @code{#f} for packages that only provide executable files."
msgstr "Пакеты, которые предоставляют библиотеки Go, должны устанавливать свой исходный код во встроенные выходные данные.  Ключ @code{#:install-source?}, который по умолчанию равен @code{#t}, определяет, установливается ли исходный код.  Для пакетов, которые предоставляют только исполняемые файлы, может быть установлено значение @code{#f}."

msgid "This variable is exported by @code{(guix build-system glib-or-gtk)}.  It is intended for use with packages making use of GLib or GTK+."
msgstr "Эта переменная экспортируется в @code{(guix build-system glib-or-gtk)}.  Она предназначена для использования с пакетами, использующими GLib или GTK+."

msgid "This build system adds the following two phases to the ones defined by @code{gnu-build-system}:"
msgstr "Эта система сборки добавляет следующие две фазы к тем, которые определены в @code{gnu-build-system}:"

msgid "glib-or-gtk-wrap"
msgstr "glib-or-gtk-wrap"

msgid "The phase @code{glib-or-gtk-wrap} ensures that programs in @file{bin/} are able to find GLib ``schemas'' and @uref{https://developer.gnome.org/gtk3/stable/gtk-running.html, GTK+ modules}.  This is achieved by wrapping the programs in launch scripts that appropriately set the @env{XDG_DATA_DIRS} and @env{GTK_PATH} environment variables."
msgstr "Фаза @code{glib-or-gtk-wrap} гарантирует, что программы в @file{bin/} смогут найти GLib ``schemas'' и @uref{https://developer.gnome.org/gtk3/stable /gtk-running.html, модули GTK+}.  Это достигается путем включения программ в сценарии запуска, которые соответствующим образом устанавливают переменные среды @env{XDG_DATA_DIRS} и @env{GTK_PATH}."

msgid "It is possible to exclude specific package outputs from that wrapping process by listing their names in the @code{#:glib-or-gtk-wrap-excluded-outputs} parameter.  This is useful when an output is known not to contain any GLib or GTK+ binaries, and where wrapping would gratuitously add a dependency of that output on GLib and GTK+."
msgstr "Можно исключить определенные выходные данные пакета из этого процесса упаковки, указав их имена в параметре @code{#:glib-or-gtk-wrap-excluded-output}.  Это полезно, когда известно, что выходной файл не содержит двоичных файлов GLib или GTK+, и где wrapping может произвольно добавить зависимость этого вывода от GLib и GTK+."

msgid "glib-or-gtk-compile-schemas"
msgstr "glib-or-gtk-compile-schemas"

msgid "The phase @code{glib-or-gtk-compile-schemas} makes sure that all @uref{https://developer.gnome.org/gio/stable/glib-compile-schemas.html, GSettings schemas} of GLib are compiled.  Compilation is performed by the @command{glib-compile-schemas} program.  It is provided by the package @code{glib:bin} which is automatically imported by the build system.  The @code{glib} package providing @command{glib-compile-schemas} can be specified with the @code{#:glib} parameter."
msgstr "Фаза @code{glib-or-gtk-compile-schemas} гарантирует, что все @uref{https://developer.gnome.org/gio/stable/glib-compile-schemas.html, GSettings schemas} в GLib скомпилированы.  Компиляция выполняется программой @command{glib-compile-schemas}.  Она предоставляется пакетом @code{glib:bin}, который автоматически импортируется системой сборки.  Пакет @code{glib}, предоставляющий @command{glib-compile-schemas}, можно указать с помощью параметра @code{#:glib}."

msgid "Both phases are executed after the @code{install} phase."
msgstr "Обе фазы выполняются после фазы @code{install}."

msgid "This build system is for Guile packages that consist exclusively of Scheme code and that are so lean that they don't even have a makefile, let alone a @file{configure} script.  It compiles Scheme code using @command{guild compile} (@pxref{Compilation,,, guile, GNU Guile Reference Manual}) and installs the @file{.scm} and @file{.go} files in the right place.  It also installs documentation."
msgstr "Эта система сборки предназначена для пакетов Guile, которые состоят исключительно из кода Scheme и настолько скудны, что у них даже нет make-файла, не говоря уже о сценарии @file{configure}.  Она компилирует Scheme код с помощью @command{guild compile} (@pxref{Compilation,,, guile, GNU Guile Reference Manual}) и устанавливает файлы @file{.scm} и @file{.go} в нужное место.  Она также устанавливает документацию."

msgid "This build system supports cross-compilation by using the @option{--target} option of @samp{guild compile}."
msgstr "Эта система сборки поддерживает кросс-компиляцию с использованием параметра @option{--target} в @samp{guild compile}."

msgid "Packages built with @code{guile-build-system} must provide a Guile package in their @code{native-inputs} field."
msgstr "Пакеты, созданные с помощью @code{guile-build-system}, должны содержать пакет Guile в поле @code{native-inputs}."

msgid "This variable is exported by @code{(guix build-system julia)}.  It implements the build procedure used by @uref{https://julialang.org/, julia} packages, which essentially is similar to running @samp{julia -e 'using Pkg; Pkg.add(package)'} in an environment where @env{JULIA_LOAD_PATH} contains the paths to all Julia package inputs.  Tests are run by calling @code{/test/runtests.jl}."
msgstr "Эта переменная экспортируется в @code{(guix build-system julia)}.  Она реализует процедуру сборки, используемую пакетами @uref{https://julialang.org/, julia}, которая по сути аналогична запуску @samp{julia -e 'используя Pkg; Pkg.add(package)'} в среде, где @env{JULIA_LOAD_PATH} содержит пути ко всем входным данным пакета Julia.  Тесты запускаются с @code{Pkg.test}."

msgid "This variable is exported by @code{(guix build-system maven)}.  It implements a build procedure for @uref{https://maven.apache.org, Maven} packages.  Maven is a dependency and lifecycle management tool for Java.  A user of Maven specifies dependencies and plugins in a @file{pom.xml} file that Maven reads.  When Maven does not have one of the dependencies or plugins in its repository, it will download them and use them to build the package."
msgstr "Эта переменная экспортируется в @code{(guix build-system maven)}.  Она реализует процедуру сборки пакетов @uref{https://maven.apache.org, Maven}.  Maven - это инструмент для управления зависимостями и жизненным циклом Java.  Пользователь Maven указывает зависимости и плагины в файле @file{pom.xml}, который читает Maven.  Когда Maven не имеет одной из зависимостей или плагинов в своем репозитории, он загружает их и использует для сборки пакета."

msgid "The maven build system ensures that maven will not try to download any dependency by running in offline mode.  Maven will fail if a dependency is missing.  Before running Maven, the @file{pom.xml} (and subprojects) are modified to specify the version of dependencies and plugins that match the versions available in the guix build environment.  Dependencies and plugins must be installed in the fake maven repository at @file{lib/m2}, and are symlinked into a proper repository before maven is run.  Maven is instructed to use that repository for the build and installs built artifacts there.  Changed files are copied to the @file{lib/m2} directory of the package output."
msgstr "Система сборки maven гарантирует, что maven не будет пытаться загрузить какие-либо зависимости, работая в offline режиме.  Maven завершится ошибкой, если зависимость отсутствует.  Перед запуском Maven @file{pom.xml} (и подпроекты) модифицируются, чтобы указать версию зависимостей и плагинов, которые соответствуют версиям, доступным в среде сборки guix.  Зависимости и плагины должны быть установлены в поддельном репозитории maven по адресу @file{lib/m2} и перед запуском maven привязаны к соответствующему репозиторию.  Maven получает указание использовать этот репозиторий для сборки и устанавливает туда созданные артефакты.  Измененные файлы копируются в каталог @file{lib/m2} выходных данных пакета."

msgid "You can specify a @file{pom.xml} file with the @code{#:pom-file} argument, or let the build system use the default @file{pom.xml} file in the sources."
msgstr "Вы можете указать файл @file{pom.xml} с аргументом @code{#:pom-file} или позволить системе сборки использовать файл @file{pom.xml} по умолчанию в источниках."

msgid "In case you need to specify a dependency's version manually, you can use the @code{#:local-packages} argument.  It takes an association list where the key is the groupId of the package and its value is an association list where the key is the artifactId of the package and its value is the version you want to override in the @file{pom.xml}."
msgstr "Если вам нужно указать версию зависимости вручную, вы можете использовать аргумент @code{#:local-packages}.  Он принимает список ассоциаций, где ключ - это groupId пакета, а его значение - это список ассоциаций, где ключ - это artifactId пакета, а его значение - это версия, которую вы хотите переопределить в @file{pom.xml}."

msgid "Some packages use dependencies or plugins that are not useful at runtime nor at build time in Guix.  You can alter the @file{pom.xml} file to remove them using the @code{#:exclude} argument.  Its value is an association list where the key is the groupId of the plugin or dependency you want to remove, and the value is a list of artifactId you want to remove."
msgstr "Некоторые пакеты используют зависимости или плагины, которые не используются ни во время выполнения, ни во время сборки в Guix.  Вы можете изменить файл @file{pom.xml}, чтобы удалить их, используя аргумент @code{#:exclude}.  Его значение - это список ассоциаций, где ключ - это groupId плагина или зависимости, которые вы хотите удалить, а значение - это список artifactId, которые вы хотите удалить."

msgid "You can override the default @code{jdk} and @code{maven} packages with the corresponding argument, @code{#:jdk} and @code{#:maven}."
msgstr "Вы можете переопределить пакеты по умолчанию @code{jdk} и @code{maven} с помощью соответствующего аргумента, @code{#:jdk} и @code{#:maven}."

msgid "The @code{#:maven-plugins} argument is a list of maven plugins used during the build, with the same format as the @code{inputs} fields of the package declaration.  Its default value is @code{(default-maven-plugins)} which is also exported."
msgstr "Аргумент @code{#:maven-plugins} - это список подключаемых модулей maven, используемых во время сборки, в том же формате, что и поля @code{inputs} в объявлении пакета.  Его значение по умолчанию - @code{(default-maven-plugins)}, которое также экспортируется."

msgid "This variable is exported by @code{(guix build-system minify)}.  It implements a minification procedure for simple JavaScript packages."
msgstr "Эта переменная экспортируется в @code{(guix build-system minify)}.  Она реализует процедуру минификации для простых пакетов JavaScript."

msgid "It adds @code{uglify-js} to the set of inputs and uses it to compress all JavaScript files in the @file{src} directory.  A different minifier package can be specified with the @code{#:uglify-js} parameter, but it is expected that the package writes the minified code to the standard output."
msgstr "Он добавляет @code{uglify-js} к набору входных данных и использует его для сжатия всех файлов JavaScript в каталоге @file{src}.  Другой minifier пакет можно указать с помощью параметра @code{#:uglify-js}, но ожидается, что этот пакет запишет минимизированный код в стандартный вывод."

msgid "When the input JavaScript files are not all located in the @file{src} directory, the parameter @code{#:javascript-files} can be used to specify a list of file names to feed to the minifier."
msgstr "Когда не все входные файлы JavaScript находятся в каталоге @file{src}, можно использовать параметр @code{#:javascript-files}, чтобы указать список имен файлов для передачи в minifier."

msgid "This variable is exported by @code{(guix build-system ocaml)}.  It implements a build procedure for @uref{https://ocaml.org, OCaml} packages, which consists of choosing the correct set of commands to run for each package.  OCaml packages can expect many different commands to be run.  This build system will try some of them."
msgstr "Эта переменная экспортируется в @code{(guix build-system ocaml)}.  Она реализует процедуру сборки пакетов @uref{https://ocaml.org, OCaml}, которая заключается в выборе правильного набора команд для запуска для каждого пакета.  Пакеты OCaml могут ожидать выполнения множества различных команд.  Эта система сборки попробует некоторые из них."

msgid "When the package has a @file{setup.ml} file present at the top-level, it will run @code{ocaml setup.ml -configure}, @code{ocaml setup.ml -build} and @code{ocaml setup.ml -install}.  The build system will assume that this file was generated by @uref{http://oasis.forge.ocamlcore.org/, OASIS} and will take care of setting the prefix and enabling tests if they are not disabled.  You can pass configure and build flags with the @code{#:configure-flags} and @code{#:build-flags}.  The @code{#:test-flags} key can be passed to change the set of flags used to enable tests.  The @code{#:use-make?} key can be used to bypass this system in the build and install phases."
msgstr "Если в пакете есть файл @file{setup.ml} на верхнем уровне, он будет запускать @code{ocaml setup.ml -configure}, @code{ocaml setup.ml -build} и @code{ocaml setup.ml -install}. Система сборки предполагает, что этот файл был сгенерирован @uref{http://oasis.forge.ocamlcore.org/, OASIS}, и позаботится об установке префикса и включении тестов, если они не отключены.  Вы можете передать флаги конфигурации и сборки с помощью @code{#:configure-flags} и @code{#:build-flags}.  Ключ @code{#:test-flags} может быть передан для изменения набора флагов, используемых для включения тестов.  Ключ @code{#:use-make?} можно использовать для обхода этой системы на этапах сборки и установки."

msgid "When the package has a @file{configure} file, it is assumed that it is a hand-made configure script that requires a different argument format than in the @code{gnu-build-system}.  You can add more flags with the @code{#:configure-flags} key."
msgstr "Когда в пакете есть файл @file{configure}, предполагается, что это созданный вручную скрипт настройки, для которого требуется другой формат аргументов, чем в @code{gnu-build-system}.  Вы можете добавить дополнительные флаги с помощью клавиши @code{#:configure-flags}."

msgid "When the package has a @file{Makefile} file (or @code{#:use-make?} is @code{#t}), it will be used and more flags can be passed to the build and install phases with the @code{#:make-flags} key."
msgstr "Когда в пакете есть файл @file{Makefile} (или @code{#:use-make?} - это @code{#t}), он будет использоваться, и дополнительные флаги могут быть переданы на этапы сборки и установки с @code{#:make-flags} ключом."

msgid "Finally, some packages do not have these files and use a somewhat standard location for its build system.  In that case, the build system will run @code{ocaml pkg/pkg.ml} or @code{ocaml pkg/build.ml} and take care of providing the path to the required findlib module.  Additional flags can be passed via the @code{#:build-flags} key.  Install is taken care of by @command{opam-installer}.  In this case, the @code{opam} package must be added to the @code{native-inputs} field of the package definition."
msgstr "Наконец, некоторые пакеты не имеют этих файлов и используют стандартное расположение для своей системы сборки.  В этом случае система сборки запустит @code{ocaml pkg/pkg.ml} или @code{ocaml pkg/build.ml} и позаботится о предоставлении пути к необходимому модулю findlib.  Дополнительные флаги можно передать с помощью ключа @code{#:build-flags}.  Об установке позаботится @command{opam-installer}.  В этом случае пакет @code{opam} необходимо добавить в поле @code{native-inputs} в определении пакета."

msgid "Note that most OCaml packages assume they will be installed in the same directory as OCaml, which is not what we want in guix.  In particular, they will install @file{.so} files in their module's directory, which is usually fine because it is in the OCaml compiler directory.  In guix though, these libraries cannot be found and we use @env{CAML_LD_LIBRARY_PATH}.  This variable points to @file{lib/ocaml/site-lib/stubslibs} and this is where @file{.so} libraries should be installed."
msgstr "Обратите внимание, что большинство пакетов OCaml предполагают, что они будут установлены в том же каталоге, что и OCaml, что не является тем, что мы хотим в guix.  В частности, они устанавливают файлы @file{.so} в каталог своего модуля, что обычно нормально, потому что он находится в каталоге компилятора OCaml.  Однако в guix эти библиотеки нельзя найти, и мы используем @env{CAML_LD_LIBRARY_PATH}.  Эта переменная указывает на @file{lib/ocaml/site-lib/stubslibs}, и именно здесь должны быть установлены библиотеки @file{.so}."

msgid "This variable is exported by @code{(guix build-system python)}.  It implements the more or less standard build procedure used by Python packages, which consists in running @code{python setup.py build} and then @code{python setup.py install --prefix=/gnu/store/@dots{}}."
msgstr "Эта переменная экспортируется в @code{(guix build-system python)}.  Она реализует более или менее стандартную процедуру сборки, используемую пакетами Python, которая заключается в запуске @code{python setup.py build}, а затем @code{python setup.py install --prefix=/gnu/store/@dots{}}."

msgid "Which Python package is used to perform the build can be specified with the @code{#:python} parameter.  This is a useful way to force a package to be built for a specific version of the Python interpreter, which might be necessary if the package is only compatible with a single interpreter version."
msgstr "Какой пакет Python используется для сборки, можно указать с помощью параметра @code{#:python}.  Это полезный способ принудительно создать пакет для определенной версии интерпретатора Python, что может потребоваться, если пакет совместим только с одной версией интерпретатора."

msgid "By default guix calls @code{setup.py} under control of @code{setuptools}, much like @command{pip} does.  Some packages are not compatible with setuptools (and pip), thus you can disable this by setting the @code{#:use-setuptools?} parameter to @code{#f}."
msgstr "По умолчанию guix вызывает @code{setup.py} под управлением @code{setuptools}, как и @command{pip}.  Некоторые пакеты несовместимы с setuptools (и pip), поэтому вы можете отключить это, установив для параметра @code{#:use-setuptools?} значение @code{#f}."

msgid "This variable is exported by @code{(guix build-system perl)}.  It implements the standard build procedure for Perl packages, which either consists in running @code{perl Build.PL --prefix=/gnu/store/@dots{}}, followed by @code{Build} and @code{Build install}; or in running @code{perl Makefile.PL PREFIX=/gnu/store/@dots{}}, followed by @code{make} and @code{make install}, depending on which of @code{Build.PL} or @code{Makefile.PL} is present in the package distribution.  Preference is given to the former if both @code{Build.PL} and @code{Makefile.PL} exist in the package distribution.  This preference can be reversed by specifying @code{#t} for the @code{#:make-maker?} parameter."
msgstr "Эта переменная экспортируется в @code{(guix build-system perl)}.  Она реализует стандартную процедуру сборки для пакетов Perl, которая заключается либо в запуске @code{perl Build.PL --prefix=/gnu/store/@dots{}}, за которым следуют @code{Build} и @code{Build install}; или при запуске @code{perl Makefile.PL PREFIX=/gnu/store/@dots{}}, за которым следуют @code{make} и @code{make install}, в зависимости от того, какой из @code{Build.PL} или @code{Makefile.PL} присутствует в дистрибутиве пакета.  Предпочтение отдается первому, если в дистрибутиве пакета есть и @code{Build.PL}, и @code{Makefile.PL}.  Это предпочтение можно отменить, указав @code{#t} для параметра @code{#:make-maker?}."

msgid "The initial @code{perl Makefile.PL} or @code{perl Build.PL} invocation passes flags specified by the @code{#:make-maker-flags} or @code{#:module-build-flags} parameter, respectively."
msgstr "Первоначальный вызов @code{perl Makefile.PL} или @code{perl Build.PL} передает флаги, указанные в параметре @code{#:make-maker-flags} или @code{#:module-build-flags}, соответственно."

msgid "Which Perl package is used can be specified with @code{#:perl}."
msgstr "Какой пакет Perl используется, можно указать с помощью @code{#:perl}."

msgid "This variable is exported by @code{(guix build-system renpy)}.  It implements the more or less standard build procedure used by Ren'py games, which consists of loading @code{#:game} once, thereby creating bytecode for it."
msgstr "Эта переменная экспортируется в @code{(guix build-system python)}.  Она реализует более или менее стандартную процедуру сборки, используемую пакетами Python, которая заключается в запуске @code{python setup.py build}, а затем @code{python setup.py install --prefix=/gnu/store/@dots{}}."

msgid "This variable is exported by @code{(guix build-system qt)}.  It is intended for use with applications using Qt or KDE."
msgstr "Эта переменная экспортируется в @code{(guix build-system qt)}.  Она предназначена для использования с приложениями, использующими Qt или KDE."

msgid "This build system adds the following two phases to the ones defined by @code{cmake-build-system}:"
msgstr "Эта система сборки добавляет следующие две фазы к тем, которые определены в @code{cmake-build-system}:"

msgid "check-setup"
msgstr "check-setup"

msgid "The phase @code{check-setup} prepares the environment for running the checks as commonly used by Qt test programs.  For now this only sets some environment variables: @code{QT_QPA_PLATFORM=offscreen}, @code{DBUS_FATAL_WARNINGS=0} and @code{CTEST_OUTPUT_ON_FAILURE=1}."
msgstr "Фаза @code{check-setup} подготавливает среду к запуску проверок, которые обычно используются тестовыми программами Qt.  Пока это устанавливает только некоторые переменные среды: @code{QT_QPA_PLATFORM=offscreen}, @code{DBUS_FATAL_WARNINGS=0} и @code{CTEST_OUTPUT_ON_FAILURE=1}."

msgid "This phase is added before the @code{check} phase.  It's a separate phase to ease adjusting if necessary."
msgstr "Этот этап добавляется перед этапом @code{check}.  Это отдельный этап для облегчения настройки."

msgid "qt-wrap"
msgstr "qt-wrap"

msgid "The phase @code{qt-wrap} searches for Qt5 plugin paths, QML paths and some XDG in the inputs and output.  In case some path is found, all programs in the output's @file{bin/}, @file{sbin/}, @file{libexec/} and @file{lib/libexec/} directories are wrapped in scripts defining the necessary environment variables."
msgstr "Фаза @code{qt-wrap} ищет пути к плагинам Qt5, пути QML и некоторый XDG во входных и выходных данных.  Если путь найден, все программы в выходных каталогах @file{bin/}, @file{sbin/}, @file{libexec/} и @file{lib/libexec/} заключены в сценарии, определяющие необходимые environment переменные."

msgid "It is possible to exclude specific package outputs from that wrapping process by listing their names in the @code{#:qt-wrap-excluded-outputs} parameter.  This is useful when an output is known not to contain any Qt binaries, and where wrapping would gratuitously add a dependency of that output on Qt, KDE, or such."
msgstr "Можно исключить определенные выходные данные пакета из этого процесса упаковки, указав их имена в параметре @code{#:qt-wrap-excluded-output}.  Это полезно, когда известно, что вывод не содержит никаких двоичных файлов Qt, и когда обертка может произвольно добавить зависимость этого вывода от Qt, KDE и т.п."

msgid "This phase is added after the @code{install} phase."
msgstr "Эта фаза добавляется после фазы @code{install}."

msgid "This variable is exported by @code{(guix build-system r)}.  It implements the build procedure used by @uref{https://r-project.org, R} packages, which essentially is little more than running @samp{R CMD INSTALL --library=/gnu/store/@dots{}} in an environment where @env{R_LIBS_SITE} contains the paths to all R package inputs.  Tests are run after installation using the R function @code{tools::testInstalledPackage}."
msgstr "Эта переменная экспортируется в @code{(guix build-system r)}.  Она реализует процедуру сборки, используемую пакетами @uref{https://r-project.org, R}, которая, по сути, немного больше, чем запуск @samp{R CMD INSTALL --library=/gnu/store/@dots{}} в среде, где @env{R_LIBS_SITE} содержит пути ко всем входам пакета R.  Тесты запускаются после установки с использованием R-функции @code{tools::testInstalledPackage}."

msgid "This variable is exported by @code{(guix build-system rakudo)}.  It implements the build procedure used by @uref{https://rakudo.org/, Rakudo} for @uref{https://perl6.org/, Perl6} packages.  It installs the package to @code{/gnu/store/@dots{}/NAME-VERSION/share/perl6} and installs the binaries, library files and the resources, as well as wrap the files under the @code{bin/} directory.  Tests can be skipped by passing @code{#f} to the @code{tests?} parameter."
msgstr "Эта переменная экспортируется @code{(guix build-system rakudo)}. Которая реализует систем сборки, используемую @uref{https://rakudo.org/, Rakudo} для @uref{https://perl6.org/, Perl6} пакетов. Она устанавливает: пакет в @code{/gnu/store/@dots{}/NAME-VERSION/share/perl6}; двоичные файлы, библиотеки и ресурсы; помещает файлы в @code{bin/}. Тесты можно пропустить, передав @code{#f} параметру @code{tests?}."

msgid "Which rakudo package is used can be specified with @code{rakudo}.  Which perl6-tap-harness package used for the tests can be specified with @code{#:prove6} or removed by passing @code{#f} to the @code{with-prove6?} parameter.  Which perl6-zef package used for tests and installing can be specified with @code{#:zef} or removed by passing @code{#f} to the @code{with-zef?} parameter."
msgstr "Какой пакет rakudo используется, можно указать с помощью @code{rakudo}.  Какой пакет perl6-tap-harness, используемый для тестов, можно указать с помощью @code{#:verify6} или удалить, передав @code{#f} в параметр @code{with-verify6?}.  Какой пакет perl6-zef, используемый для тестирования и установки, можно указать с помощью @code{#:zef} или удалить, передав @code{#f} в параметр @code{with-zef?}."

msgid "bootstrap"
msgstr "bootstrap"

msgid "This variable is exported by @code{(guix build-system texlive)}.  It is used to build TeX packages in batch mode with a specified engine.  The build system sets the @env{TEXINPUTS} variable to find all TeX source files in the inputs."
msgstr "Эта переменная экспортируется в @code{(guix build-system texlive)}.  Она используется для сборки пакетов TeX в batch режиме с указанным движком.  Система сборки устанавливает переменную @env{TEXINPUTS} для поиска всех исходных файлов TeX во входных данных."

msgid "This variable is exported by @code{(guix build-system ruby)}.  It implements the RubyGems build procedure used by Ruby packages, which involves running @code{gem build} followed by @code{gem install}."
msgstr "Эта переменная экспортируется в @code{(guix build-system ruby)}.  Она реализует процедуру сборки RubyGems, используемую пакетами Ruby, которая включает запуск @code{gem build}, за которым следует @code{gem install}."

msgid "The @code{source} field of a package that uses this build system typically references a gem archive, since this is the format that Ruby developers use when releasing their software.  The build system unpacks the gem archive, potentially patches the source, runs the test suite, repackages the gem, and installs it.  Additionally, directories and tarballs may be referenced to allow building unreleased gems from Git or a traditional source release tarball."
msgstr "Поле @code{source} пакета, использующего эту систему сборки, обычно ссылается на gem архив, поскольку это формат, который разработчики Ruby используют при выпуске своего программного обеспечения.  Система сборки распаковывает gem архив, потенциально исправляет исходный код, запускает набор тестов, переупаковывает gem и устанавливает его.  Кроме того, на каталоги и архивы можно ссылаться, чтобы можно было создавать unreleased gem'ы из Git или традиционного архива с исходным кодом."

msgid "Which Ruby package is used can be specified with the @code{#:ruby} parameter.  A list of additional flags to be passed to the @command{gem} command can be specified with the @code{#:gem-flags} parameter."
msgstr "Какой пакет Ruby используется, можно указать с помощью параметра @code{#:ruby}.  Список дополнительных флагов, передаваемых команде @command{gem}, можно указать с помощью параметра @code{#:gem-flags}."

msgid "This variable is exported by @code{(guix build-system waf)}.  It implements a build procedure around the @code{waf} script.  The common phases---@code{configure}, @code{build}, and @code{install}---are implemented by passing their names as arguments to the @code{waf} script."
msgstr "Эта переменная экспортируется в @code{(guix build-system waf)}.  Она реализует процедуру сборки вокруг сценария @code{waf}.  Общие этапы---@code{configure}, @code{build} и @code{install}---реализуются путем передачи их имен в качестве аргументов сценарию @code{waf}."

msgid "The @code{waf} script is executed by the Python interpreter.  Which Python package is used to run the script can be specified with the @code{#:python} parameter."
msgstr "Скрипт @code{waf} выполняется интерпретатором Python. Какой пакет Python используется для запуска сценария, можно указать с помощью параметра @code{#:python}."

msgid "This variable is exported by @code{(guix build-system scons)}.  It implements the build procedure used by the SCons software construction tool.  This build system runs @code{scons} to build the package, @code{scons test} to run tests, and then @code{scons install} to install the package."
msgstr "Эта переменная экспортируется в @code{(guix build-system scons)}.  Она реализует процедуру сборки, используемую инструментом сборки программного обеспечения SCons.  Эта система сборки запускает @code{scons} для сборки пакета, @code{scons test} для запуска тестов и затем @code{scons install} для установки пакета."

msgid "Additional flags to be passed to @code{scons} can be specified with the @code{#:scons-flags} parameter.  The default build and install targets can be overridden with @code{#:build-targets} and @code{#:install-targets} respectively.  The version of Python used to run SCons can be specified by selecting the appropriate SCons package with the @code{#:scons} parameter."
msgstr "Дополнительные флаги, передаваемые в @code{scons}, можно указать с помощью параметра @code{#:scons-flags}.  Цели сборки и установки по умолчанию могут быть переопределены с помощью @code{#:build-target} и @code{#:install-target} соответственно.  Версия Python, используемая для запуска SCons, может быть указана путем выбора соответствующего пакета SCons с параметром @code{#:scons}."

msgid "This variable is exported by @code{(guix build-system haskell)}.  It implements the Cabal build procedure used by Haskell packages, which involves running @code{runhaskell Setup.hs configure --prefix=/gnu/store/@dots{}} and @code{runhaskell Setup.hs build}.  Instead of installing the package by running @code{runhaskell Setup.hs install}, to avoid trying to register libraries in the read-only compiler store directory, the build system uses @code{runhaskell Setup.hs copy}, followed by @code{runhaskell Setup.hs register}.  In addition, the build system generates the package documentation by running @code{runhaskell Setup.hs haddock}, unless @code{#:haddock? #f} is passed.  Optional Haddock parameters can be passed with the help of the @code{#:haddock-flags} parameter.  If the file @code{Setup.hs} is not found, the build system looks for @code{Setup.lhs} instead."
msgstr "Эта переменная экспортируется в @code{(guix build-system haskell)}.  Она реализует процедуру сборки Cabal, используемую пакетами Haskell, которая включает запуск @code{runhaskell Setup.hs configure --prefix=/gnu/store/@dots{}} и @code{runhaskell Setup.hs build}.  Вместо установки пакета путем запуска @code{runhaskell Setup.hs install}, чтобы избежать попыток регистрации библиотек в каталоге хранилища компилятора только для чтения, система сборки использует @code{runhaskell Setup.hs copy}, за которым следует @code{runhaskell Setup.hs register}.  Кроме того, система сборки генерирует документацию по пакету, запуская @code{runhaskell Setup.hs haddock}, если только @code{#:haddock? #f} пройден.  Дополнительные параметры можно передать с помощью параметра @code{#:haddock-flags}.  Если файл @code{Setup.hs} не найден, система сборки вместо этого ищет @code{Setup.lhs}."

msgid "Which Haskell compiler is used can be specified with the @code{#:haskell} parameter which defaults to @code{ghc}."
msgstr "Какой компилятор Haskell используется, можно указать с помощью параметра @code{#:haskell}, который по умолчанию равен @code{ghc}."

msgid "This variable is exported by @code{(guix build-system dub)}.  It implements the Dub build procedure used by D packages, which involves running @code{dub build} and @code{dub run}.  Installation is done by copying the files manually."
msgstr "Эта переменная экспортируется в @code{(guix build-system dub)}.  Она реализует процедуру сборки Dub, используемую пакетами D, которая включает запуск @code{dub build} и @code{dub run}.  Установка осуществляется путем копирования файлов вручную."

msgid "Which D compiler is used can be specified with the @code{#:ldc} parameter which defaults to @code{ldc}."
msgstr "Какой компилятор D используется, можно указать с помощью параметра @code{#:ldc}, который по умолчанию равен @code{ldc}."

msgid "emacs-build-system"
msgstr "emacs-build-system"

msgid "This variable is exported by @code{(guix build-system emacs)}.  It implements an installation procedure similar to the packaging system of Emacs itself (@pxref{Packages,,, emacs, The GNU Emacs Manual})."
msgstr "Эта переменная экспортируется в @code{(guix build-system emacs)}.  Она реализует процедуру установки, аналогичную системе упаковки самого Emacs (@pxref{Packages,,, emacs, The GNU Emacs Manual})."

msgid "It first creates the @code{@code{package}-autoloads.el} file, then it byte compiles all Emacs Lisp files.  Differently from the Emacs packaging system, the Info documentation files are moved to the standard documentation directory and the @file{dir} file is deleted.  The Elisp package files are installed directly under @file{share/emacs/site-lisp}."
msgstr "Сначала она создает файл @code{@code{package}-autoloads.el}, а затем байт-компилирует все файлы Emacs Lisp.  В отличие от системы упаковки Emacs, файлы документации Info перемещаются в стандартный каталог документации, а файл @file{dir} удаляется.  Файлы пакета Elisp устанавливаются непосредственно в @file{share/emacs/site-lisp}."

msgid "This variable is exported by @code{(guix build-system font)}.  It implements an installation procedure for font packages where upstream provides pre-compiled TrueType, OpenType, etc.@: font files that merely need to be copied into place.  It copies font files to standard locations in the output directory."
msgstr "Эта переменная экспортируется в @code{(guix build-system font)}.  Она реализует процедуру установки для пакетов шрифтов, в которой upstream предоставляет предварительно скомпилированные файлы TrueType, OpenType и т.д.@: файлы шрифтов, которые необходимо просто скопировать на место.  Она копирует файлы шрифтов в стандартные места выходного каталога."

msgid "This variable is exported by @code{(guix build-system meson)}.  It implements the build procedure for packages that use @url{https://mesonbuild.com, Meson} as their build system."
msgstr "Эта переменная экспортируется в @code{(guix build-system meson)}.  Она реализует процедуру сборки для пакетов, которые используют @url{https://mesonbuild.com, Meson} в качестве своей системы сборки."

msgid "It adds both Meson and @uref{https://ninja-build.org/, Ninja} to the set of inputs, and they can be changed with the parameters @code{#:meson} and @code{#:ninja} if needed."
msgstr "Она добавляет к набору входов как Meson, так и @uref{https://ninja-build.org/, Ninja}, при необходимости их можно изменить с помощью параметров @code{#:meson} и @code{#:ninja}."

msgid "This build system is an extension of @code{gnu-build-system}, but with the following phases changed to some specific for Meson:"
msgstr "Эта система сборки является расширением @code{gnu-build-system}, но со следующими фазами, измененными на некоторые специфичные для Meson:"

msgid "The phase runs @code{meson} with the flags specified in @code{#:configure-flags}.  The flag @option{--buildtype} is always set to @code{debugoptimized} unless something else is specified in @code{#:build-type}."
msgstr "На этапе выполняется @code{meson} с флагами, указанными в @code{#:configure-flags}.  Флаг @option{--buildtype} всегда установлен на @code{debugoptimized}, если что-то еще не указано в @code{#:build-type}."

msgid "The phase runs @code{ninja} to build the package in parallel by default, but this can be changed with @code{#:parallel-build?}."
msgstr "На этапе выполняется @code{ninja} для параллельной сборки пакета по умолчанию, но это можно изменить с помощью @code{#:parallel-build?}."

msgid "The phase runs @code{ninja install} and can not be changed."
msgstr "Фаза выполняется @code{ninja install} и не может быть изменен."

msgid "Apart from that, the build system also adds the following phases:"
msgstr "Помимо этого, система сборки также добавляет следующие фазы:"

msgid "fix-runpath"
msgstr "fix-runpath"

msgid "This phase is the phase provided by @code{glib-or-gtk-build-system}, and it is not enabled by default.  It can be enabled with @code{#:glib-or-gtk?}."
msgstr "Эта фаза предоставляется @code{glib-or-gtk-build-system} и по умолчанию не включена.  Ее можно включить с помощью @code{#:glib-or-gtk?}."

msgid "@code{linux-module-build-system} allows building Linux kernel modules."
msgstr "@code{linux-module-build-system} позволяет создавать модули ядра Linux."

msgid "This build system is an extension of @code{gnu-build-system}, but with the following phases changed:"
msgstr "Эта система сборки является расширением @code{gnu-build-system}, но со следующими изменениями:"

msgid "This phase configures the environment so that the Linux kernel's Makefile can be used to build the external kernel module."
msgstr "На этой фазе среда настраивается таким образом, чтобы Makefile ядра Linux можно было использовать для сборки внешнего модуля ядра."

msgid "This phase uses the Linux kernel's Makefile in order to build the external kernel module."
msgstr "На этой фазе используется Makefile ядра Linux для сборки внешнего модуля ядра."

msgid "This phase uses the Linux kernel's Makefile in order to install the external kernel module."
msgstr "На этой фазе используется Makefile ядра Linux для установки внешнего модуля ядра."

msgid "It is possible and useful to specify the Linux kernel to use for building the module (in the @code{arguments} form of a package using the @code{linux-module-build-system}, use the key @code{#:linux} to specify it)."
msgstr "Возможно и полезно указать ядро Linux, которое будет использоваться для сборки модуля (в форме @code{arguments} пакета с использованием @code{linux-module-build-system} используйте ключ @code{#:linux}, чтобы указать это)."

msgid "This variable is exported by @code{(guix build-system node)}.  It implements the build procedure used by @uref{https://nodejs.org, Node.js}, which implements an approximation of the @code{npm install} command, followed by an @code{npm test} command."
msgstr "Эта переменная экспортируется в @code{(guix build-system node)}.  Она реализует процедуру сборки, используемую @uref{https://nodejs.org, Node.js}, которая реализует аппроксимацию команды @code{npm install}, за которой следует команда @code{npm test}."

msgid "Which Node.js package is used to interpret the @code{npm} commands can be specified with the @code{#:node} parameter which defaults to @code{node}."
msgstr "Какой пакет Node.js используется для интерпретации команд @code{npm}, можно указать с помощью параметра @code{#:node}, который по умолчанию равен @code{node}."

msgid "Lastly, for packages that do not need anything as sophisticated, a ``trivial'' build system is provided.  It is trivial in the sense that it provides basically no support: it does not pull any implicit inputs, and does not have a notion of build phases."
msgstr "Наконец, для пакетов, которым не нужно ничего столь же сложного, предоставляется ``trivial'' система сборки.  Она тривиальна в том смысле, что она практически не оказывает поддержки при сборке: она не извлекает никаких неявных входных данных и не имеет понятия о этапах сборки."

msgid "This variable is exported by @code{(guix build-system trivial)}."
msgstr "Эта переменная экспортируется @code{(guix build-system trivial)}."

msgid "This build system requires a @code{#:builder} argument.  This argument must be a Scheme expression that builds the package output(s)---as with @code{build-expression->derivation} (@pxref{Derivations, @code{build-expression->derivation}})."
msgstr "Эта система сборки требует аргумента @code{#:builder}.  Этот аргумент должен быть Scheme выражением, которое строит выходные данные пакета---как с @code{build-expression->derivation} (@pxref{Derivations, @code{build-expression->derivation}})."

msgid "build phases, for packages"
msgstr "входные данные, для пакетов Python"

msgid "Almost all package build systems implement a notion @dfn{build phases}: a sequence of actions that the build system executes, when you build the package, leading to the installed byproducts in the store.  A notable exception is the ``bare-bones'' @code{trivial-build-system} (@pxref{Build Systems})."
msgstr "Почти все системы сборки пакетов реализуют понятие @dfn{фазы сборки}: последовательность действий, которые система сборки выполняет при сборке пакета, что приводит к установке побочных продуктов в store.  Заметным исключением является ``bare-bones'' @code{trivial-build-system} (@pxref{Build Systems})."

msgid "Unpack the source tarball, and change the current directory to the extracted source tree.  If the source is actually a directory, copy it to the build tree, and enter that directory."
msgstr "Распаковать архив исходных текстов и измените текущий каталог на извлеченное дерево исходных текстов.  Если источник на самом деле является каталогом, скопировать его в дерево сборки и войдите в этот каталог."

msgid "patch-source-shebangs"
msgstr "patch-source-shebangs"

msgid "Patch shebangs encountered in source files so they refer to the right store file names.  For instance, this changes @code{#!/bin/sh} to @code{#!/gnu/store/@dots{}-bash-4.3/bin/sh}."
msgstr "Изменить shebang, встречающиеся в исходных файлах, чтобы они ссылались на правильные имена файлов хранилища.  Например, это изменяет @code{#!/bin/sh} на @code{#!/gnu/store/@dots{}-bash-4.3/bin/sh}."

msgid "Run the @file{configure} script with a number of default options, such as @option{--prefix=/gnu/store/@dots{}}, as well as the options specified by the @code{#:configure-flags} argument."
msgstr "Запустить сценарий @file{configure} с несколькими параметрами по умолчанию, такими как @option{--prefix=/gnu/store/@dots{}}, а также параметрами, указанными в @code{#:configure-flags} аргументе."

msgid "Run @code{make} with the list of flags specified with @code{#:make-flags}.  If the @code{#:parallel-build?} argument is true (the default), build with @code{make -j}."
msgstr "Запустить @code{make} со списком флагов, указанным с помощью @code{#:make-flags}.  Если аргумент @code{#:parallel-build?} истинен (по умолчанию), выполнить сборку с @code{make -j}."

msgid "Run @code{make check}, or some other target specified with @code{#:test-target}, unless @code{#:tests? #f} is passed.  If the @code{#:parallel-tests?} argument is true (the default), run @code{make check -j}."
msgstr "Запустить @code{make check} или другой target, указанный с помощью @code{#:test-target}, если только @code{#:tests? #f} пройден.  Если аргумент @code{#:parallel-tests?} истинен (по умолчанию), запустить @code{make check -j}."

msgid "Run @code{make install} with the flags listed in @code{#:make-flags}."
msgstr "Запустить @code{make install} с флагами, перечисленными в @code{#:make-flags}."

msgid "patch-shebangs"
msgstr "patch-shebangs"

msgid "Patch shebangs on the installed executable files."
msgstr "Изменить shebangs на установленные исполняемые файлы."

msgid "Strip debugging symbols from ELF files (unless @code{#:strip-binaries?} is false), copying them to the @code{debug} output when available (@pxref{Installing Debugging Files})."
msgstr "Удалить символы отладки из файлов ELF (если @code{#:strip-binaries?} не является ложным), скопировав их в выходные данные @code{debug}, если они доступны (@pxref{Installing Debugging Files})."

msgid "phase-validate-runpath"
msgstr "phase-validate-runpath"

msgid "validate-runpath"
msgstr "validate-runpath"

msgid "Other build systems have similar phases, with some variations.  For example, @code{cmake-build-system} has same-named phases but its @code{configure} phases runs @code{cmake} instead of @code{./configure}.  Others, such as @code{python-build-system}, have a wholly different list of standard phases.  All this code runs on the @dfn{build side}: it is evaluated when you actually build the package, in a dedicated build process spawned by the build daemon (@pxref{Invoking guix-daemon})."
msgstr "Как обсуждалось в предыдущем разделе, эти системы сборки предоставляют стандартный список фаз.  Для @code{gnu-build-system} стандартные фазы включают фазу @code{unpack} для распаковки архива исходного кода, фазу @command{configure} для запуска @code{./configure}, @code{build} фаза для запуска @command{make} и (среди прочего) фазу @code{install} для запуска @command{make install}; @pxref{Build Systems}, чтобы получить более подробное представление об этих фазах.  Точно так же @code{cmake-build-system} наследует эти фазы, но его фаза @code{configure} запускает @command{cmake} вместо @command{./configure}.  Другие системы сборки, такие как @code{python-build-system}, имеют совершенно другой список стандартных фаз.  Весь этот код выполняется на @dfn{build side}: он выполняется, когда вы фактически собираете пакет, в отдельном процессе сборки, порожденном демоном сборки (@pxref{Invoking guix-daemon})."

msgid "Build phases are represented as association lists or ``alists'' (@pxref{Association Lists,,, guile, GNU Guile Reference Manual}) where each key is a symbol for the name of the phase and the associated value is a procedure that accepts an arbitrary number of arguments.  By convention, those procedures receive information about the build in the form of @dfn{keyword parameters}, which they can use or ignore."
msgstr "Этапы сборки представлены в виде ассоциативных списков или ``alists'' (@pxref{Association Lists,,, guile, GNU Guile Reference Manual}), где каждый ключ является символом имени фазы, а соответствующее значение - процедурой, которая принимает произвольное количество аргументов.  По соглашению эти процедуры получают информацию о сборке в виде @dfn{ключевых параметров}, которые они могут использовать или игнорировать."

msgid "%standard-phases"
msgstr "%standard-phases"

msgid "For example, here is how @code{(guix build gnu-build-system)} defines @code{%standard-phases}, the variable holding its alist of build phases@footnote{We present a simplified view of those build phases, but do take a look at @code{(guix build gnu-build-system)} to see all the details!}:"
msgstr "Например, вот как @code{(guix build gnu-build-system)} определяет @code{%standard-phase}, переменную, содержащую список фаз сборки @footnote{Мы представляем упрощенное представление этих фаз сборки, но обязательно взгляните на @code{(guix build gnu-build-system)}, чтобы увидеть все подробности!}:"

msgid "This shows how @code{%standard-phases} is defined as a list of symbol/procedure pairs (@pxref{Pairs,,, guile, GNU Guile Reference Manual}).  The first pair associates the @code{unpack} procedure with the @code{unpack} symbol---a name; the second pair defines the @code{configure} phase similarly, and so on.  When building a package that uses @code{gnu-build-system} with its default list of phases, those phases are executed sequentially.  You can see the name of each phase started and completed in the build log of packages that you build."
msgstr "Это показывает, как @code{%standard-phase} определяется как список пар символ/процедура (@pxref{Pairs,,, guile, GNU Guile Reference Manual}).  Первая пара связывает процедуру @code{unpack} с символом @code{unpack}---именем; вторая пара аналогичным образом определяет фазу @code{configure} и так далее.  При сборке пакета, который использует @code{gnu-build-system} со списком фаз по умолчанию, эти фазы выполняются последовательно.  Вы можете увидеть название каждой фазы, запущенной и завершенной, в журнале сборки пакетов, которые вы собираете."

msgid "Let's now look at the procedures themselves.  Each one is defined with @code{define*}: @code{#:key} lists keyword parameters the procedure accepts, possibly with a default value, and @code{#:allow-other-keys} specifies that other keyword parameters are ignored (@pxref{Optional Arguments,,, guile, GNU Guile Reference Manual})."
msgstr "Теперь посмотрим на сами процедуры.  Каждая из них определяется с помощью @code{define*}: @code{#:key} перечисляет параметры ключевого слова, которые принимает процедура, возможно, со значением по умолчанию, а @code{#:allow-other-keys} указывает, что другие параметры ключевого слова являются игнорируется (@pxref{Optional Arguments,,, guile, GNU Guile Reference Manual})."

msgid "The @code{unpack} procedure honors the @code{source} parameter, which the build system uses to pass the file name of the source tarball (or version control checkout), and it ignores other parameters.  The @code{configure} phase only cares about the @code{outputs} parameter, an alist mapping package output names to their store file name (@pxref{Packages with Multiple Outputs}).  It extracts the file name of for @code{out}, the default output, and passes it to @command{./configure} as the installation prefix, meaning that @command{make install} will eventually copy all the files in that directory (@pxref{Configuration, configuration and makefile conventions,, standards, GNU Coding Standards}).  @code{build} and @code{install} ignore all their arguments.  @code{check} honors the @code{test-target} argument, which specifies the name of the Makefile target to run tests; it prints a message and skips tests when @code{tests?} is false."
msgstr "Процедура @code{unpack} учитывает параметр @code{source}, который система сборки использует для передачи имени файла исходного архива (или checkout контроля версий), и игнорирует другие параметры.  Фаза @code{configure} касается только параметра @code{output}, списка имен выходных пакетов, отображающих имена файлов хранилища (@pxref{Packages with Multiple Outputs}).  Она извлекает имя файла для @code{out}, вывода по умолчанию, и передает его @command{./configure} в качестве префикса установки, что означает, что @command{make install} в конечном итоге скопирует все файлы в этом каталоге (@pxref{Configuration, configuration and makefile conventions,, standards, GNU Coding Standards}).  @code{build} и @code{install} игнорируют все свои аргументы.  @code{check} учитывает аргумент @code{test-target}, который указывает имя цели Makefile для запуска тестов; она печатает сообщение и пропускает тесты, если @code{tests?} ложно."

msgid "build phases, customizing"
msgstr "build phases, customizing"

msgid "The list of phases used for a particular package can be changed with the @code{#:phases} parameter of the build system.  Changing the set of build phases boils down to building a new alist of phases based on the @code{%standard-phases} alist described above.  This can be done with standard alist procedures such as @code{alist-delete} (@pxref{SRFI-1 Association Lists,,, guile, GNU Guile Reference Manual}); however, it is more convenient to do so with @code{modify-phases} (@pxref{Build Utilities, @code{modify-phases}})."
msgstr "Список фаз, используемых для конкретного пакета, можно изменить с помощью параметра @code{#:phase} системы сборки.  Изменение набора фаз сборки сводится к созданию нового списка фаз на основе списка @code{%standard-phase}, описанного выше.  Это можно сделать с помощью стандартных процедур списков, таких как @code{alist-delete} (@pxref{SRFI-1 Association Lists,,, guile, GNU Guile Reference Manual}); однако это удобнее делать с помощью @code{modify-phase} (@pxref{Build Utilities, @code{modify-phases}})."

msgid "Here is an example of a package definition that removes the @code{configure} phase of @code{%standard-phases} and inserts a new phase before the @code{build} phase, called @code{set-prefix-in-makefile}:"
msgstr "Вот пример определения пакета, который удаляет фазу @code{configure} из @code{%standard-phase} и вставляет новую фазу перед фазой @code{build}, которая называется @code{set-prefix-in- makefile}:"

msgid "code staging"
msgstr "staging кода"

msgid "staging, of code"
msgstr "форматировние, кода"

msgid "Keep in mind that build phases are code evaluated at the time the package is actually built.  This explains why the whole @code{modify-phases} expression above is quoted (it comes after the @code{#~} or hash-tilde): it is @dfn{staged} for later execution.  @xref{G-Expressions}, for an explanation of code staging and the @dfn{code strata} involved."
msgstr "Имейте в виду, что фазы сборки - это код, выполняемый во время фактической сборки пакета.  Это объясняет, почему приведенное выше выражение @code{modify-phase} целиком (оно идет после @code{#~} или хэш-тильда): это @dfn{staged} для последующего выполнения.  @xref{G-Expressions} для объяснения staging кода и задействованных @dfn{code strata}."

msgid "As soon as you start writing non-trivial package definitions (@pxref{Defining Packages}) or other build actions (@pxref{G-Expressions}), you will likely start looking for helpers for ``shell-like'' actions---creating directories, copying and deleting files recursively, manipulating build phases, and so on.  The @code{(guix build utils)} module provides such utility procedures."
msgstr "Как только вы начнете писать нетривиальные определения пакетов (@pxref{Defining Packages}) или другие действия сборки (@pxref{G-Expressions}), вы, скорее всего, начнете искать помощников для действий, подобных оболочке---создание каталогов, рекурсивное копирование и удаление файлов, управление этапами сборки и т.д.  Модуль @code{(guix build utils)} предоставляет такие служебные процедуры."

msgid "Most build systems load @code{(guix build utils)} (@pxref{Build Systems}).  Thus, when writing custom build phases for your package definitions, you can usually assume those procedures are in scope."
msgstr "Большинство систем сборки загружают @code{(guix build utils)} (@pxref{Build Systems}).  Таким образом, при написании настраиваемых фаз сборки для определений пакетов вы обычно можете предположить, что эти процедуры входят в область действия."

msgid "When writing G-expressions, you can import @code{(guix build utils)} on the ``build side'' using @code{with-imported-modules} and then put it in scope with the @code{use-modules} form (@pxref{Using Guile Modules,,, guile, GNU Guile Reference Manual}):"
msgstr "При написании G-выражений вы можете импортировать @code{(guix build utils)} на ``стороне сборки'', используя @code{with-import-modules}, а затем поместить его в область видимости с помощью формы @code{use-modules} (@pxref{Using Guile Modules,,, guile, GNU Guile Reference Manual}):"

msgid "The remainder of this section is the reference for most of the utility procedures provided by @code{(guix build utils)}."
msgstr "Оставшаяся часть этого раздела является справочником по большинству служебных процедур, предоставляемых @code{(guix build utils)}."

msgid "Dealing with Store File Names"
msgstr "Работа с именами файлов в store"

msgid "This section documents procedures that deal with store file names."
msgstr "В этом разделе описаны процедуры, относящиеся к именам файлов в store."

msgid "Return the directory name of the store."
msgstr "Проверить целостность склада."

msgid "Return true if @var{file} is in the store."
msgstr "Возвращает true, если объект @var{obj} --- это пакет ранней версии."

msgid "Strip the @file{/gnu/store} and hash from @var{file}, a store file name.  The result is typically a @code{\"@var{package}-@var{version}\"} string."
msgstr "Удалиnm @file{/gnu/store} и хэш из @var{file}, имени файла в store.  Результатом обычно является строка @code{\"@var{package}-@var{version}\"}."

msgid "Given @var{name}, a package name like @code{\"foo-0.9.1b\"}, return two values: @code{\"foo\"} and @code{\"0.9.1b\"}.  When the version part is unavailable, @var{name} and @code{#f} are returned.  The first hyphen followed by a digit is considered to introduce the version part."
msgstr "Учитывая @var{name}, имя пакета, такое как @code{\"foo-0.9.1b\"}, возвращает два значения: @code{\"foo\"} и @code{\"0.9.1b\"}.  Если часть версии недоступна, возвращаются @var{name} и @code{#f}.  Считается, что первый дефис, за которым следует цифра, обозначает часть версии."

msgid "File Types"
msgstr "Файловые системы"

msgid "The procedures below deal with files and file types."
msgstr "Нижеперечисленные процедуры работают с файлами и типами файлов."

msgid "Return @code{#t} if @var{dir} exists and is a directory."
msgstr "Вернуть @code{#t}, если @var{dir} существует и является каталогом."

msgid "Return @code{#t} if @var{file} exists and is executable."
msgstr "Вернуть @code{#t}, если @var{file} существует и исполняемый файл."

msgid "Return @code{#t} if @var{file} is a symbolic link (aka. a ``symlink'')."
msgstr "Вернуть @code{#t}, если @var{file} является символической ссылкой (также известной как ``символическая ссылка'')."

msgid "Return @code{#t} if @var{file} is, respectively, an ELF file, an @code{ar} archive (such as a @file{.a} static library), or a gzip file."
msgstr "Вернуть @code{#t}, если @var{file} является, соответственно, файлом ELF, архивом @code{ar} (например, статической библиотекой @file{.a}) или файлом gzip."

msgid "If @var{file} is a gzip file, reset its embedded timestamp (as with @command{gzip --no-name}) and return true.  Otherwise return @code{#f}.  When @var{keep-mtime?} is true, preserve @var{file}'s modification time."
msgstr "Если @var{file} является файлом gzip, сбросить его timestamp (как в случае @command{gzip --no-name}) и вернуть истину.  В противном случае вернуть @code{#f}.  Когда @var{keep-mtime?} истинна, сохранить время модификации @var{file}."

msgid "File Manipulation"
msgstr "Управление файлами"

msgid "The following procedures and macros help create, modify, and delete files.  They provide functionality comparable to common shell utilities such as @command{mkdir -p}, @command{cp -r}, @command{rm -r}, and @command{sed}.  They complement Guile's extensive, but low-level, file system interface (@pxref{POSIX,,, guile, GNU Guile Reference Manual})."
msgstr "Следующие процедуры и макросы помогают создавать, изменять и удалять файлы.  Они обеспечивают функциональность, сопоставимую с такими обычными утилитами оболочки, как @command{mkdir -p}, @command{cp -r}, @command{rm -r} и @command{sed}.  Они дополняют обширный, но низкоуровневый интерфейс файловой системы Guile (@pxref{POSIX,,, guile, GNU Guile Reference Manual})."

msgid "Run @var{body} with @var{directory} as the process's current directory."
msgstr "Запустить @var{body} с @var{directory} в качестве текущего каталога процесса."

msgid "Essentially, this macro changes the current directory to @var{directory} before evaluating @var{body}, using @code{chdir} (@pxref{Processes,,, guile, GNU Guile Reference Manual}).  It changes back to the initial directory when the dynamic extent of @var{body} is left, be it @i{via} normal procedure return or @i{via} a non-local exit such as an exception."
msgstr "По сути, этот макрос изменяет текущий каталог на @var{directory} перед вычислением @var{body}, используя @code{chdir} (@pxref{Processes,,, guile, GNU Guile Reference Manual}).  Она возвращается в исходный каталог, когда остается динамический extent @var{body}, будь то через возврат нормальной процедуры или через нелокальный выход, такой как исключение."

msgid "Create directory @var{dir} and all its ancestors."
msgstr "Создать каталог @var{dir} и всех его предков."

msgid "Create @var{directory} if it does not exist and copy @var{file} in there under the same name."
msgstr "Создать @var{каталог}, если он не существует, и скопировать туда @var{file} под тем же именем."

msgid "Make @var{file} writable for its owner."
msgstr "Сделать @var{file} доступным для записи его владельцу."

msgid "Here, anytime a line of @var{file} contains @code{hello}, it is replaced by @code{good morning}.  Anytime a line of @var{file} matches the second regexp, @code{all} is bound to the complete match, @code{letters} is bound to the first sub-expression, and @code{end} is bound to the last one."
msgstr "Здесь, когда строка @var{file} содержит @code{hello}, она заменяется на @code{good morning}.  Каждый раз, когда строка @var{file} соответствует второму регулярному выражению, @code{all} привязывается к полному совпадению, @code{letters} привязано к первому подвыражению, а @code{end} привязано к последнему."

msgid "When one of the @var{match-var} is @code{_}, no variable is bound to the corresponding match substring."
msgstr "Когда одно из @var{match-var} - @code{_}, никакая переменная не связана с соответствующей подстрокой соответствия."

msgid "Alternatively, @var{file} may be a list of file names, in which case they are all subject to the substitutions."
msgstr "В качестве альтернативы @var{file} может быть списком имен файлов, и в этом случае все они могут быть заменены."

msgid "Be careful about using @code{$} to match the end of a line; by itself it won't match the terminating newline of a line.  For example, to match a whole line ending with a backslash, one needs a regex like @code{\"(.*)\\\\\\\\\\n$\"}."
msgstr "Будьте осторожны с использованием @code{$} для поиска конца строки; само по себе он не будет соответствовать завершению новой строки в строке.  Например, для поиска целой строки, заканчивающейся обратной косой чертой, нужен регекс типа @code{\"(.*)\\\\\\\\\\n$\"}."

msgid "File Search"
msgstr "Файловые системы"

msgid "file, searching"
msgstr "файл, поиск"

msgid "This section documents procedures to search and filter files."
msgstr "В этом разделе описаны процедуры поиска и фильтрации файлов."

msgid "Return a predicate that returns true when passed a file name whose base name matches @var{regexp}."
msgstr "Вернуть предикат, который возвращает истину при передаче имени файла, базовое имя которого совпадает с @var{regexp}."

msgid "[#:stat lstat] [#:directories? #f] [#:fail-on-error? #f] Return the lexicographically sorted list of files under @var{dir} for which @var{pred} returns true.  @var{pred} is passed two arguments: the absolute file name, and its stat buffer; the default predicate always returns true.  @var{pred} can also be a regular expression, in which case it is equivalent to @code{(file-name-predicate @var{pred})}.  @var{stat} is used to obtain file information; using @code{lstat} means that symlinks are not followed.  If @var{directories?} is true, then directories will also be included.  If @var{fail-on-error?} is true, raise an exception upon error."
msgstr "[#:stat lstat] [#:directories? #f] [#:fail-on-error? #f] Возвращает лексикографически отсортированный список файлов в @var{dir}, для которых @var{pred} возвращает истину.  @var{pred} передается два аргумента: абсолютное имя файла и его буфер статистики; предикат по умолчанию всегда возвращает истину.  @var{pred} также может быть регулярным выражением, в этом случае оно эквивалентно @code{(file-name-predicate @var{pred})}.  @var{stat} используется для получения информации о файле; использование @code{lstat} означает, что символические ссылки не соблюдаются.  Если @var{directories?} истина, то каталоги также будут включены.  Если @var{fail-on-error?} истина, генерировать исключение при ошибке."

msgid "Here are a few examples where we assume that the current directory is the root of the Guix source tree:"
msgstr "Вот несколько примеров, в которых мы предполагаем, что текущий каталог является корнем дерева исходников Guix:"

msgid "Return the complete file name for @var{program} as found in @code{$PATH}, or @code{#f} if @var{program} could not be found."
msgstr "Вернуть полное имя файла для @var{program}, как в @code{$PATH}, или @code{#f}, если @var{program} не найдена."

msgid "The @code{(guix build utils)} also contains tools to manipulate build phases as used by build systems (@pxref{Build Systems}).  Build phases are represented as association lists or ``alists'' (@pxref{Association Lists,,, guile, GNU Guile Reference Manual}) where each key is a symbol naming the phase and the associated value is a procedure (@pxref{Build Phases})."
msgstr "@code{(guix build utils)} также содержит инструменты для управления фазами сборки, которые используются системами сборки (@pxref{Build Systems}).  Фазы сборки представлены в виде ассоциативных списков или ``alists'' (@pxref{Association Lists,,, guile, GNU Guile Reference Manual}), где каждый ключ представляет собой символ, обозначающий фазу, а связанное значение представляет собой процедуру (@pxref{Build Phases})."

msgid "Guile core and the @code{(srfi srfi-1)} module both provide tools to manipulate alists.  The @code{(guix build utils)} module complements those with tools written with build phases in mind."
msgstr "Ядро Guile и модуль @code{(srfi srfi-1)} предоставляют инструменты для управления списками.  Модуль @code{(guix build utils)} дополняет их инструментами, написанными с учетом фаз сборки."

msgid "build phases, modifying"
msgstr "build phases, modifying"

msgid "Modify @var{phases} sequentially as per each @var{clause}, which may have one of the following forms:"
msgstr "Изменить @var{phases} последовательно в соответствии с каждым @var{clause}, которое может иметь одну из следующих форм:"

msgid ""
"(delete @var{old-phase-name})\n"
"(replace @var{old-phase-name} @var{new-phase})\n"
"(add-before @var{old-phase-name} @var{new-phase-name} @var{new-phase})\n"
"(add-after @var{old-phase-name} @var{new-phase-name} @var{new-phase})\n"
msgstr ""
"(delete @var{old-phase-name})\n"
"(replace @var{old-phase-name} @var{new-phase})\n"
"(add-before @var{old-phase-name} @var{new-phase-name} @var{new-phase})\n"
"(add-after @var{old-phase-name} @var{new-phase-name} @var{new-phase})\n"

msgid "Where every @var{phase-name} above is an expression evaluating to a symbol, and @var{new-phase} an expression evaluating to a procedure."
msgstr "Где каждая @var{phase-name} выше - это выражение, преобразующееся в символ, а @var{new-phase} - выражение, преобразующееся в процедуру."

msgid "The example below is taken from the definition of the @code{grep} package.  It adds a phase to run after the @code{install} phase, called @code{fix-egrep-and-fgrep}.  That phase is a procedure (@code{lambda*} is for anonymous procedures) that takes a @code{#:outputs} keyword argument and ignores extra keyword arguments (@pxref{Optional Arguments,,, guile, GNU Guile Reference Manual}, for more on @code{lambda*} and optional and keyword arguments.)  The phase uses @code{substitute*} to modify the installed @file{egrep} and @file{fgrep} scripts so that they refer to @code{grep} by its absolute file name:"
msgstr "Пример ниже взят из определения пакета @code{grep}.  Он добавляет фазу для запуска после фазы @code{install}, которая называется @code{fix-egrep-and-fgrep}.  Эта фаза представляет собой процедуру (@code{lambda*} обозначает анонимную процедуру), которая принимает аргумент ключевого слова @code{#:output} и игнорирует дополнительные аргументы ключевого слова (@pxref{Optional Arguments,,, guile, GNU Guile Reference Manual}, for more on @code{lambda*} and optional and keyword arguments.)  В фазе используется @code{substitute*} для изменения установленных сценариев @file{egrep} и @file{fgrep}, чтобы они ссылались на @code{grep} по абсолютному имени файла:"

msgid "In the example below, phases are modified in two ways: the standard @code{configure} phase is deleted, presumably because the package does not have a @file{configure} script or anything similar, and the default @code{install} phase is replaced by one that manually copies the executable files to be installed:"
msgstr "В приведенном ниже примере фазы изменяются двумя способами: стандартная фаза @code{configure} удаляется, предположительно потому, что в пакете нет сценария @file{configure} или чего-то подобного, и фаза @code{install} по умолчанию заменяется файлом, который вручную копирует устанавливаемые исполняемые файлы:"

msgid "Conceptually, the @dfn{store} is the place where derivations that have been built successfully are stored---by default, @file{/gnu/store}.  Sub-directories in the store are referred to as @dfn{store items} or sometimes @dfn{store paths}.  The store has an associated database that contains information such as the store paths referred to by each store path, and the list of @emph{valid} store items---results of successful builds.  This database resides in @file{@var{localstatedir}/guix/db}, where @var{localstatedir} is the state directory specified @i{via} @option{--localstatedir} at configure time, usually @file{/var}."
msgstr "Концептуально @dfn{store} - это место, где хранятся успешно построенные derivation'ы - по умолчанию @file{/gnu/store}.  Подкаталоги в store называются @dfn{store items} или иногда @dfn{store paths}.  У store есть связанная база данных, которая содержит такую информацию, как store paths, на которые ссылается каждый store path, и список @emph{валидных} store item'ов---результаты успешных сборок.  Эта база данных находится в @file{@var{localstatedir}/guix/db}, где @var{localstatedir} - это каталог состояний, указанный через @option{--localstatedir} во время configure, обычно @file{/var}."

msgid "The store is @emph{always} accessed by the daemon on behalf of its clients (@pxref{Invoking guix-daemon}).  To manipulate the store, clients connect to the daemon over a Unix-domain socket, send requests to it, and read the result---these are remote procedure calls, or RPCs."
msgstr "Демон @emph{всегда} обращается к store от имени своих клиентов (@pxref{Invoking guix-daemon}).  Чтобы управлять store, клиенты подключаются к демону через сокет домена Unix, отправляют ему запросы и читают результат - это вызовы удаленных процедур или RPC."

msgid "Users must @emph{never} modify files under @file{/gnu/store} directly.  This would lead to inconsistencies and break the immutability assumptions of Guix's functional model (@pxref{Introduction})."
msgstr "Пользователи должны @emph{никогда} напрямую изменять файлы в @file{/gnu/store}.  Это приведет к несоответствиям и нарушит предположения о неизменности функциональной модели Guix (@pxref{Introduction})."

msgid "@xref{Invoking guix gc, @command{guix gc --verify}}, for information on how to check the integrity of the store and attempt recovery from accidental modifications."
msgstr "@xref{Invoking guix gc, @command{guix gc --verify}}, для получения информации о том, как проверить целостность store и попытаться восстановить его после случайных изменений."

msgid "The @code{(guix store)} module provides procedures to connect to the daemon, and to perform RPCs.  These are described below.  By default, @code{open-connection}, and thus all the @command{guix} commands, connect to the local daemon or to the URI specified by the @env{GUIX_DAEMON_SOCKET} environment variable."
msgstr "Модуль @code{(guix store)} предоставляет процедуры для подключения к демону и выполнения RPC.  Они описаны ниже.  По умолчанию @code{open-connection} и, следовательно, все команды @command{guix} подключаются к локальному демону или к URI, указанному в переменной среды @env{GUIX_DAEMON_SOCKET}."

msgid "{Environment Variable} GUIX_DAEMON_SOCKET"
msgstr "{Environment Variable} GUIX_DAEMON_SOCKET"

msgid "When set, the value of this variable should be a file name or a URI designating the daemon endpoint.  When it is a file name, it denotes a Unix-domain socket to connect to.  In addition to file names, the supported URI schemes are:"
msgstr "Если установлено, значение этой переменной должно быть именем файла или URI, обозначающим конечную точку демона.  Когда это имя файла, оно обозначает сокет домена Unix, к которому нужно подключиться.  Помимо имен файлов, поддерживаются следующие схемы URI:"

msgid "unix"
msgstr "unix"

msgid "These are for Unix-domain sockets.  @code{file:///var/guix/daemon-socket/socket} is equivalent to @file{/var/guix/daemon-socket/socket}."
msgstr "Это для сокетов домена Unix.  @code{file:///var/guix/daemon-socket/socket} эквивалентен @file{/var/guix/daemon-socket/socket}."

msgid "These URIs denote connections over TCP/IP, without encryption nor authentication of the remote host.  The URI must specify the host name and optionally a port number (by default port 44146 is used):"
msgstr "Эти URI обозначают соединения через TCP/IP без шифрования и аутентификации удаленного хоста.  В URI необходимо указать имя хоста и, возможно, номер порта (по умолчанию используется порт 44146):"

msgid "guix://master.guix.example.org:1234\n"
msgstr "guix://master.guix.example.org:1234\n"

msgid "This setup is suitable on local networks, such as clusters, where only trusted nodes may connect to the build daemon at @code{master.guix.example.org}."
msgstr "Эта настройка подходит для локальных сетей, таких как кластеры, где только доверенные узлы могут подключаться к демону сборки по адресу @code{master.guix.example.org}."

msgid "The @option{--listen} option of @command{guix-daemon} can be used to instruct it to listen for TCP connections (@pxref{Invoking guix-daemon, @option{--listen}})."
msgstr "Параметр @option{--listen} команды @command{guix-daemon} можно использовать для указания ему прослушивать TCP-соединения (@pxref{Invoking guix-daemon, @option{--listen}})."

msgid "ssh"
msgstr "ssh"

msgid "SSH access to build daemons"
msgstr "доступ к демонам сборки по ssh"

msgid "These URIs allow you to connect to a remote daemon over SSH@.  This feature requires Guile-SSH (@pxref{Requirements}) and a working @command{guile} binary in @env{PATH} on the destination machine.  It supports public key and GSSAPI authentication.  A typical URL might look like this:"
msgstr "Эти URI позволяют подключаться к удаленному демону через SSH.  Для этой функции требуется Guile-SSH (@pxref{Requirements}) и рабочий @command{guile} binary файл в @env{PATH} на конечном компьютере.  Он поддерживает открытый ключ и аутентификацию GSSAPI.  Типичный URL-адрес может выглядеть так:"

msgid "ssh://charlie@@guix.example.org:22\n"
msgstr "ssh://charlie@@guix.example.org:22\n"

msgid "As for @command{guix copy}, the usual OpenSSH client configuration files are honored (@pxref{Invoking guix copy})."
msgstr "Что касается @command{guix copy}, учитываются обычные файлы конфигурации клиента OpenSSH (@pxref{Invoking guix copy})."

msgid "Additional URI schemes may be supported in the future."
msgstr "В будущем могут поддерживаться дополнительные схемы URI."

msgid "The ability to connect to remote build daemons is considered experimental as of @value{VERSION}.  Please get in touch with us to share any problems or suggestions you may have (@pxref{Contributing})."
msgstr "Возможность подключения к демонам удаленной сборки считается экспериментальной с @value{VERSION}.  Пожалуйста, свяжитесь с нами, чтобы поделиться любыми проблемами или предложениями, которые могут у вас возникнуть (@pxref{Contributing})."

msgid "Connect to the daemon over the Unix-domain socket at @var{uri} (a string).  When @var{reserve-space?} is true, instruct it to reserve a little bit of extra space on the file system so that the garbage collector can still operate should the disk become full.  Return a server object."
msgstr "Подключится к демону через сокет домена Unix по адресу @var{uri} (строка).  Когда @var{reserve-space?} истинна, указать ему, чтобы он зарезервировал немного дополнительного места в файловой системе, чтобы сборщик мусора мог работать, если диск заполнится.  Вернуть объект сервера."

msgid "@var{file} defaults to @code{%default-socket-path}, which is the normal location given the options that were passed to @command{configure}."
msgstr "@var{file} по умолчанию - @code{%default-socket-path}, что является обычным расположением с учетом параметров, переданных в @command{configure}."

msgid "Close the connection to @var{server}."
msgstr "Закрыть соединение с @var{server}."

msgid "This variable is bound to a SRFI-39 parameter, which refers to the port where build and error logs sent by the daemon should be written."
msgstr "Эта переменная привязана к параметру SRFI-39, который относится к порту, на который должны быть записаны журналы сборки и ошибок, отправляемые демоном."

msgid "Procedures that make RPCs all take a server object as their first argument."
msgstr "Процедуры, которые заставляют все RPC принимать объект сервера в качестве своего первого аргумента."

msgid "Return @code{#t} when @var{path} designates a valid store item and @code{#f} otherwise (an invalid item may exist on disk but still be invalid, for instance because it is the result of an aborted or failed build)."
msgstr "Возвращать @code{#t}, когда @var{path} обозначает допустимый элемент хранилища, и @code{#f} в противном случае (недопустимый элемент может существовать на диске, но по-прежнему быть недопустимым, например, потому что он является результатом прерывания или неудачной сборки)."

msgid "A @code{&store-protocol-error} condition is raised if @var{path} is not prefixed by the store directory (@file{/gnu/store})."
msgstr "Условие @code{&store-protocol-error} возникает, если @var{path} не имеет префикса в каталоге store (@file{/gnu/store})."

msgid "Add @var{text} under file @var{name} in the store, and return its store path.  @var{references} is the list of store paths referred to by the resulting store path."
msgstr "Добавить @var{text} в файл @var{name} в store и вернуть его store path.  @var{references} - это список store path'ы, на которые ссылается конечный store path."

msgid "Note that the @code{(guix monads)} module provides a monad as well as monadic versions of the above procedures, with the goal of making it more convenient to work with code that accesses the store (@pxref{The Store Monad})."
msgstr "Обратите внимание, что модуль @code{(guix monads)} предоставляет как монаду, так и монадические версии вышеупомянутых процедур с целью сделать более удобной работу с кодом, который обращается к store (@pxref{The Store Monad})."

msgid "This section is currently incomplete."
msgstr "Этот раздел в настоящее время не завершен."

msgid "Low-level build actions and the environment in which they are performed are represented by @dfn{derivations}.  A derivation contains the following pieces of information:"
msgstr "Действия низкоуровневой сборки и среда, в которой они выполняются, представлены через @dfn{derivations}.  Derivation содержит следующую информацию:"

msgid "The outputs of the derivation---derivations produce at least one file or directory in the store, but may produce more."
msgstr "The outputs of the derivation---derivations создают по крайней мере один файл или каталог в store, но могут создавать и больше."

msgid "The system type targeted by the derivation---e.g., @code{x86_64-linux}."
msgstr "Тип системы, на который нацелена derivation - например, @code{x86_64-linux}."

msgid "The file name of a build script in the store, along with the arguments to be passed."
msgstr "Имя файла скрипта сборки в store вместе с передаваемыми аргументами."

msgid "A list of environment variables to be defined."
msgstr "Список переменных среды, которые необходимо определить."

msgid "Derivations allow clients of the daemon to communicate build actions to the store.  They exist in two forms: as an in-memory representation, both on the client- and daemon-side, and as files in the store whose name end in @file{.drv}---these files are referred to as @dfn{derivation paths}.  Derivations paths can be passed to the @code{build-derivations} procedure to perform the build actions they prescribe (@pxref{The Store})."
msgstr "Derivation'ы позволяют клиентам демона передавать действия сборки в store.  Они существуют в двух формах: как представление в памяти, как на стороне клиента, так и на стороне демона, и в виде файлов в хранилище, имена которых заканчиваются на @file{.drv} - эти файлы называются @dfn{derivation paths}.  Derivation paths могут быть переданы в процедуру @code{build-derivations} для выполнения действий сборки, которые они предписывают (@pxref{The Store})."

msgid "Operations such as file downloads and version-control checkouts for which the expected content hash is known in advance are modeled as @dfn{fixed-output derivations}.  Unlike regular derivations, the outputs of a fixed-output derivation are independent of its inputs---e.g., a source code download produces the same result regardless of the download method and tools being used."
msgstr "Такие операции, как загрузка файлов и проверка версий, для которых заранее известен ожидаемый хэш содержимого, моделируются как @dfn{fixed-output derivations}.  В отличие от обычных дериваций, выходные данные деривации с фиксированным выходом не зависят от его входных данных - например, загрузка исходного кода дает тот же результат независимо от метода загрузки и используемых инструментов."

msgid "The outputs of derivations---i.e., the build results---have a set of @dfn{references}, as reported by the @code{references} RPC or the @command{guix gc --references} command (@pxref{Invoking guix gc}).  References are the set of run-time dependencies of the build results.  References are a subset of the inputs of the derivation; this subset is automatically computed by the build daemon by scanning all the files in the outputs."
msgstr "Outputs of derivations---то есть результаты сборки---имеют множество @dfn{references}, в соответствии с указаниями RPC @code{references} или команды @command{guix gc --references} (@pxref{Invoking guix gc}).  References - это набор run-time зависимостей результатов сборки.  References - это подмножество входных данных derivation; это подмножество автоматически вычисляется демоном сборки путем сканирования всех файлов в выходных данных."

msgid "The @code{(guix derivations)} module provides a representation of derivations as Scheme objects, along with procedures to create and otherwise manipulate derivations.  The lowest-level primitive to create a derivation is the @code{derivation} procedure:"
msgstr "Модуль @code{(guix diverations)} предоставляет представление derivation'ов в виде Scheme объектов, а также процедуры для создания derivation'ов и других манипуляций с ними.  Самым низкоуровневым примитивом для создания derivation'а является процедура @code{derivation}:"

msgid "When @var{hash} and @var{hash-algo} are given, a @dfn{fixed-output derivation} is created---i.e., one whose result is known in advance, such as a file download.  If, in addition, @var{recursive?} is true, then that fixed output may be an executable file or a directory and @var{hash} must be the hash of an archive containing this output."
msgstr "Когда заданы @var{hash} и @var{hash-algo}, создается @dfn{fixed-output derivation} - то есть результат, который известен заранее, например, загрузка файла.  Кроме того, если @var{recursive?} истинна, то этот фиксированный вывод может быть исполняемым файлом или каталогом, а @var{hash} должен быть хешем архива, содержащего этот вывод."

msgid "When @var{references-graphs} is true, it must be a list of file name/store path pairs.  In that case, the reference graph of each store path is exported in the build environment in the corresponding file, in a simple text format."
msgstr "Когда @var{links-graphs} истинна, данная переменная должна быть списком из пар имя файла и путь к store.  В этом случае граф ссылок каждого store path экспортируется в среду сборки в соответствующий файл в простом текстовом формате."

msgid "When @var{allowed-references} is true, it must be a list of store items or outputs that the derivation's output may refer to.  Likewise, @var{disallowed-references}, if true, must be a list of things the outputs may @emph{not} refer to."
msgstr "Когда @var{allowed-links} истинна, данная переменная должна быть списком store item'ов или выходных данных, на которые может ссылаться выход derivation'а.  Аналогично, @var{disallowed-links}, если она истинна, данная переменная должна быть списком сущностей, на которые @emph{не} могут ссылаться выходные данные."

msgid "When @var{leaked-env-vars} is true, it must be a list of strings denoting environment variables that are allowed to ``leak'' from the daemon's environment to the build environment.  This is only applicable to fixed-output derivations---i.e., when @var{hash} is true.  The main use is to allow variables such as @code{http_proxy} to be passed to derivations that download files."
msgstr "Когда @var{leaked-env-vars} истинна, данная переменная должна быть списком строк, обозначающих переменные среды, которым разрешено ``просачиваться'' из среды демона в среду сборки.  Это применимо только к fixed-output derivation'ам, т.е. когда @var{hash} истинна.  Основное использование - разрешить передачу таких переменных, как @code{http_proxy}, derivation'ам, которые загружают файлы."

msgid "When @var{local-build?} is true, declare that the derivation is not a good candidate for offloading and should rather be built locally (@pxref{Daemon Offload Setup}).  This is the case for small derivations where the costs of data transfers would outweigh the benefits."
msgstr "Когда @var{local-build?} истинна, объявить, что производная не является хорошим кандидатом для offload и должна быть собрана локально (@pxref{Daemon Offload Setup}).  Это справедливо для небольших derivation'ов, когда затраты на передачу данных перевешивают выгоды."

msgid "When @var{substitutable?} is false, declare that substitutes of the derivation's output should not be used (@pxref{Substitutes}).  This is useful, for instance, when building packages that capture details of the host CPU instruction set."
msgstr "Когда @var{substitutable?} ложно, объявить, что substitutes derivation'ов не должны использоваться (@pxref{Substitutes}).  Это полезно, например, при создании пакетов, которые фиксируют подробности набора команд центрального процессора."

msgid "@var{properties} must be an association list describing ``properties'' of the derivation.  It is kept as-is, uninterpreted, in the derivation."
msgstr "@var{properties} должна быть списком ассоциаций, описывающих ``свойства'' derivation'а.  При выводе они сохраняются как есть, без интерпретации."

msgid "Here's an example with a shell script as its builder, assuming @var{store} is an open connection to the daemon, and @var{bash} points to a Bash executable in the store:"
msgstr "Вот пример со shell скриптом в качестве его builder'а, предполагая, что @var{store} является открытым соединением с демоном, а @var{bash} указывает на исполняемый файл Bash в store:"

msgid ""
"(use-modules (guix utils)\n"
"             (guix store)\n"
"             (guix derivations))\n"
"\n"
msgstr ""
"(use-modules (guix utils)\n"
"             (guix store)\n"
"             (guix derivations))\n"
"\n"

msgid ""
"(let ((builder   ; add the Bash script to the store\n"
"        (add-text-to-store store \"my-builder.sh\"\n"
"                           \"echo hello world > $out\\n\" '())))\n"
"  (derivation store \"foo\"\n"
"              bash `(\"-e\" ,builder)\n"
"              #:inputs `((,bash) (,builder))\n"
"              #:env-vars '((\"HOME\" . \"/homeless\"))))\n"
"@result{} #<derivation /gnu/store/@dots{}-foo.drv => /gnu/store/@dots{}-foo>\n"
msgstr ""
"(let ((builder   ; add the Bash script to the store\n"
"        (add-text-to-store store \"my-builder.sh\"\n"
"                           \"echo hello world > $out\\n\" '())))\n"
"  (derivation store \"foo\"\n"
"              bash `(\"-e\" ,builder)\n"
"              #:inputs `((,bash) (,builder))\n"
"              #:env-vars '((\"HOME\" . \"/homeless\"))))\n"
"@result{} #<derivation /gnu/store/@dots{}-foo.drv => /gnu/store/@dots{}-foo>\n"

msgid "As can be guessed, this primitive is cumbersome to use directly.  A better approach is to write build scripts in Scheme, of course! The best course of action for that is to write the build code as a ``G-expression'', and to pass it to @code{gexp->derivation}.  For more information, @pxref{G-Expressions}."
msgstr "Как можно догадаться, этот примитив неудобно использовать напрямую.  Конечно, лучший подход - писать скрипты сборки на Scheme!  Лучше всего для этого написать код сборки как ``G-выражение'' и передать его в @code{gexp->derivation}.  Для получения дополнительной информации, @pxref{G-Expressions}."

msgid "Once upon a time, @code{gexp->derivation} did not exist and constructing derivations with build code written in Scheme was achieved with @code{build-expression->derivation}, documented below.  This procedure is now deprecated in favor of the much nicer @code{gexp->derivation}."
msgstr "Когда-то давно @code{gexp->derivation} не существовала, и построение derivation'ов с помощью кода сборки, написанного на Scheme, достигалось с помощью @code{build-expression->derivation}, описанной ниже.  Эта процедура теперь устарела и заменена более приятным @code{gexp->derivation}."

msgid "@var{exp} is evaluated in an environment where @code{%outputs} is bound to a list of output/path pairs, and where @code{%build-inputs} is bound to a list of string/output-path pairs made from @var{inputs}.  Optionally, @var{env-vars} is a list of string pairs specifying the name and value of environment variables visible to the builder.  The builder terminates by passing the result of @var{exp} to @code{exit}; thus, when @var{exp} returns @code{#f}, the build is considered to have failed."
msgstr "@var{exp} выполняется в среде, где @code{%output} привязан к списку пар output/path, а где @code{%build-inputs} привязан к списку пар строка/output-path сделаными из @var{input}.  Необязательно, @var{env-vars} - это список пар строк, определяющих имя и значение переменных среды, видимых builder'у.  Builder завершает работу, передавая результат @var{exp} в @code{exit}; таким образом, когда @var{exp} возвращает @code{#f}, сборка считается неудачной."

msgid "@var{exp} is built using @var{guile-for-build} (a derivation).  When @var{guile-for-build} is omitted or is @code{#f}, the value of the @code{%guile-for-build} fluid is used instead."
msgstr "@var{exp} собирается с использованием @var{guile-for-build} (derivation). Когда @var{guile-for-build} опущена или равна @code{#f}, вместо этого используется значение fluid'а @code{%guile-for-build}."

msgid "See the @code{derivation} procedure for the meaning of @var{references-graphs}, @var{allowed-references}, @var{disallowed-references}, @var{local-build?}, and @var{substitutable?}."
msgstr "См. в процедуре @code{derivation} значение @var{references-graphs}, @var{allowed-references}, @var{disallowed-references}, @var{local-build?} и @var{substitutable?}."

msgid "Here's an example of a single-output derivation that creates a directory containing one file:"
msgstr "Вот пример single-output derivation'а, которая создает каталог, содержащий один файл:"

msgid ""
"(let ((builder '(let ((out (assoc-ref %outputs \"out\")))\n"
"                  (mkdir out)    ; create /gnu/store/@dots{}-goo\n"
"                  (call-with-output-file (string-append out \"/test\")\n"
"                    (lambda (p)\n"
"                      (display '(hello guix) p))))))\n"
"  (build-expression->derivation store \"goo\" builder))\n"
"\n"
msgstr ""
"(let ((builder '(let ((out (assoc-ref %outputs \"out\")))\n"
"                  (mkdir out)    ; create /gnu/store/@dots{}-goo\n"
"                  (call-with-output-file (string-append out \"/test\")\n"
"                    (lambda (p)\n"
"                      (display '(hello guix) p))))))\n"
"  (build-expression->derivation store \"goo\" builder))\n"
"\n"

msgid "@result{} #<derivation /gnu/store/@dots{}-goo.drv => @dots{}>\n"
msgstr "@result{} #<derivation /gnu/store/@dots{}-goo.drv => @dots{}>\n"

msgid "The procedures that operate on the store described in the previous sections all take an open connection to the build daemon as their first argument.  Although the underlying model is functional, they either have side effects or depend on the current state of the store."
msgstr "Все процедуры, которые работают с store, описанные в предыдущих разделах, принимают открытое соединение с демоном сборки в качестве первого аргумента.  Хотя основная модель является функциональной, они либо имеют побочные эффекты, либо зависят от текущего состояния store."

msgid "The former is inconvenient: the connection to the build daemon has to be carried around in all those functions, making it impossible to compose functions that do not take that parameter with functions that do.  The latter can be problematic: since store operations have side effects and/or depend on external state, they have to be properly sequenced."
msgstr "Первое неудобно: соединение с демоном сборки должно поддерживаться во всех этих функциях, что делает невозможным составление функций, которые не принимают этот параметр, с функциями, которые его принимают.  Последнее может быть проблематичным: поскольку операции store имеют побочные эффекты и/или зависят от внешнего состояния, они должны быть правильно упорядочены."

msgid "monadic values"
msgstr "монадические значения"

msgid "monadic functions"
msgstr "монадические функции"

msgid "This is where the @code{(guix monads)} module comes in.  This module provides a framework for working with @dfn{monads}, and a particularly useful monad for our uses, the @dfn{store monad}.  Monads are a construct that allows two things: associating ``context'' with values (in our case, the context is the store), and building sequences of computations (here computations include accesses to the store).  Values in a monad---values that carry this additional context---are called @dfn{monadic values}; procedures that return such values are called @dfn{monadic procedures}."
msgstr "Здесь на помощь приходит модуль @code{(guix monads)}.  Этот модуль предоставляет основу для работы с @dfn{monads} и особенно полезную монаду для наших целей - @dfn{store monad}.  Монады - это конструкции, которая позволяют две вещи: связывать ``контекст'' со значениями (в нашем случае контекст - это store) и строить последовательности вычислений (здесь вычисления включают доступ к store).  Значения в монаде---значения, которые несут этот дополнительный контекст---называются @dfn{монадическими значениями}; процедуры, возвращающие такие значения, называются @dfn{монадическими процедурами}."

msgid "Consider this ``normal'' procedure:"
msgstr "Рассмотрим эту ``нормальную'' процедуру:"

msgid ""
"(define (sh-symlink store)\n"
"  ;; Return a derivation that symlinks the 'bash' executable.\n"
"  (let* ((drv (package-derivation store bash))\n"
"         (out (derivation->output-path drv))\n"
"         (sh  (string-append out \"/bin/bash\")))\n"
"    (build-expression->derivation store \"sh\"\n"
"                                  `(symlink ,sh %output))))\n"
msgstr ""
"(define (sh-symlink store)\n"
"  ;; Return a derivation that symlinks the 'bash' executable.\n"
"  (let* ((drv (package-derivation store bash))\n"
"         (out (derivation->output-path drv))\n"
"         (sh  (string-append out \"/bin/bash\")))\n"
"    (build-expression->derivation store \"sh\"\n"
"                                  `(symlink ,sh %output))))\n"

msgid "Using @code{(guix monads)} and @code{(guix gexp)}, it may be rewritten as a monadic function:"
msgstr "Используя @code{(guix monads)} и @code{(guix gexp)}, ее можно переписать как монадическую функцию:"

msgid ""
"(define (sh-symlink)\n"
"  ;; Same, but return a monadic value.\n"
"  (mlet %store-monad ((drv (package->derivation bash)))\n"
"    (gexp->derivation \"sh\"\n"
"                      #~(symlink (string-append #$drv \"/bin/bash\")\n"
"                                 #$output))))\n"
msgstr ""
"(define (sh-symlink)\n"
"  ;; Same, but return a monadic value.\n"
"  (mlet %store-monad ((drv (package->derivation bash)))\n"
"    (gexp->derivation \"sh\"\n"
"                      #~(symlink (string-append #$drv \"/bin/bash\")\n"
"                                 #$output))))\n"

msgid "There are several things to note in the second version: the @code{store} parameter is now implicit and is ``threaded'' in the calls to the @code{package->derivation} and @code{gexp->derivation} monadic procedures, and the monadic value returned by @code{package->derivation} is @dfn{bound} using @code{mlet} instead of plain @code{let}."
msgstr "Во второй версии следует отметить несколько моментов: параметр @code{store} теперь является неявным и является ``threaded'' в вызовах @code{package->derivation} и @code{gexp->derivation} монадические процедуры, а монадическим значением, возвращаемым @code{package->derivation}, является @dfn{bound} с использованием @code{mlet} вместо простого @code{let}."

msgid "As it turns out, the call to @code{package->derivation} can even be omitted since it will take place implicitly, as we will see later (@pxref{G-Expressions}):"
msgstr "Оказывается, вызов @code{package->derivation} можно даже опустить, поскольку она будет выполняться неявно, как мы увидим позже (@pxref{G-Expressions}):"

msgid ""
"(define (sh-symlink)\n"
"  (gexp->derivation \"sh\"\n"
"                    #~(symlink (string-append #$bash \"/bin/bash\")\n"
"                               #$output)))\n"
msgstr ""
"(define (sh-symlink)\n"
"  (gexp->derivation \"sh\"\n"
"                    #~(symlink (string-append #$bash \"/bin/bash\")\n"
"                               #$output)))\n"

msgid "Calling the monadic @code{sh-symlink} has no effect.  As someone once said, ``you exit a monad like you exit a building on fire: by running''.  So, to exit the monad and get the desired effect, one must use @code{run-with-store}:"
msgstr "Вызов монадического @code{sh-symlink} ни на что не влияет.  Как кто-то однажды сказал: ``Вы выходите из монады, как вы выходите из горящего здания: by running''.  Итак, чтобы выйти из монады и получить желаемый эффект, нужно использовать @code{run-with-store}:"

msgid ""
"(run-with-store (open-connection) (sh-symlink))\n"
"@result{} /gnu/store/...-sh-symlink\n"
msgstr ""
"(run-with-store (open-connection) (sh-symlink))\n"
"@result{} /gnu/store/...-sh-symlink\n"

msgid ""
"scheme@@(guile-user)> ,run-in-store (package->derivation hello)\n"
"$1 = #<derivation /gnu/store/@dots{}-hello-2.9.drv => @dots{}>\n"
msgstr ""
"scheme@@(guile-user)> ,run-in-store (package->derivation hello)\n"
"$1 = #<derivation /gnu/store/@dots{}-hello-2.9.drv => @dots{}>\n"

msgid "The latter enters a recursive REPL, where all the return values are automatically run through the store:"
msgstr "Последний входит в рекурсивный REPL, где все возвращаемые значения автоматически проходят через хранилище:"

msgid ""
"scheme@@(guile-user)> ,enter-store-monad\n"
"store-monad@@(guile-user) [1]> (package->derivation hello)\n"
"$2 = #<derivation /gnu/store/@dots{}-hello-2.9.drv => @dots{}>\n"
"store-monad@@(guile-user) [1]> (text-file \"foo\" \"Hello!\")\n"
"$3 = \"/gnu/store/@dots{}-foo\"\n"
"store-monad@@(guile-user) [1]> ,q\n"
"scheme@@(guile-user)>\n"
msgstr ""
"scheme@@(guile-user)> ,enter-store-monad\n"
"store-monad@@(guile-user) [1]> (package->derivation hello)\n"
"$2 = #<derivation /gnu/store/@dots{}-hello-2.9.drv => @dots{}>\n"
"store-monad@@(guile-user) [1]> (text-file \"foo\" \"Hello!\")\n"
"$3 = \"/gnu/store/@dots{}-foo\"\n"
"store-monad@@(guile-user) [1]> ,q\n"
"scheme@@(guile-user)>\n"

msgid "Note that non-monadic values cannot be returned in the @code{store-monad} REPL."
msgstr "Обратите внимание, что немонадические значения не могут быть возвращены в REPL @code{store-monad}."

msgid "The main syntactic forms to deal with monads in general are provided by the @code{(guix monads)} module and are described below."
msgstr "Основные синтаксические формы для работы с монадами в целом предоставляются модулем @code{(guix monads)} и описаны ниже."

msgid "Return a monadic value that encapsulates @var{val}."
msgstr "Возвращает монадическое значение, инкапсулирующее @var{val}."

msgid ""
"(run-with-state\n"
"    (with-monad %state-monad\n"
"      (>>= (return 1)\n"
"           (lambda (x) (return (+ 1 x)))\n"
"           (lambda (x) (return (* 2 x)))))\n"
"  'some-state)\n"
"\n"
msgstr ""
"(run-with-state\n"
"    (with-monad %state-monad\n"
"      (>>= (return 1)\n"
"           (lambda (x) (return (+ 1 x)))\n"
"           (lambda (x) (return (* 2 x)))))\n"
"  'some-state)\n"
"\n"

msgid ""
"@result{} 4\n"
"@result{} some-state\n"
msgstr ""
"@result{} 4\n"
"@result{} some-state\n"

msgid ""
"(define (square x)\n"
"  (mlet %state-monad ((count (current-state)))\n"
"    (mbegin %state-monad\n"
"      (set-current-state (+ 1 count))\n"
"      (return (* x x)))))\n"
"\n"
msgstr ""
"(define (square x)\n"
"  (mlet %state-monad ((count (current-state)))\n"
"    (mbegin %state-monad\n"
"      (set-current-state (+ 1 count))\n"
"      (return (* x x)))))\n"
"\n"

msgid ""
"(run-with-state (sequence %state-monad (map square (iota 3))) 0)\n"
"@result{} (0 1 4)\n"
"@result{} 3\n"
msgstr ""
"(run-with-state (sequence %state-monad (map square (iota 3))) 0)\n"
"@result{} (0 1 4)\n"
"@result{} 3\n"

msgid "Return the current state as a monadic value."
msgstr "Вернуть текущее состояние в виде монадического значения."

msgid ""
"(run-with-store (open-connection)\n"
"  (mlet %store-monad ((a (interned-file \"README\"))\n"
"                      (b (interned-file \"README\" \"LEGU-MIN\")))\n"
"    (return (list a b))))\n"
"\n"
msgstr ""
"(run-with-store (open-connection)\n"
"  (mlet %store-monad ((a (interned-file \"README\"))\n"
"                      (b (interned-file \"README\" \"LEGU-MIN\")))\n"
"    (return (list a b))))\n"
"\n"

msgid ""
"(define build-exp\n"
"  #~(begin\n"
"      (mkdir #$output)\n"
"      (chdir #$output)\n"
"      (symlink (string-append #$coreutils \"/bin/ls\")\n"
"               \"list-files\")))\n"
msgstr ""
"(define build-exp\n"
"  #~(begin\n"
"      (mkdir #$output)\n"
"      (chdir #$output)\n"
"      (symlink (string-append #$coreutils \"/bin/ls\")\n"
"               \"list-files\")))\n"

msgid "cross compilation"
msgstr "кросс-компиляция"

msgid ""
"(gexp->derivation \"vi\"\n"
"   #~(begin\n"
"       (mkdir #$output)\n"
"       (mkdir (string-append #$output \"/bin\"))\n"
"       (system* (string-append #+coreutils \"/bin/ln\")\n"
"                \"-s\"\n"
"                (string-append #$emacs \"/bin/emacs\")\n"
"                (string-append #$output \"/bin/vi\")))\n"
"   #:target \"aarch64-linux-gnu\")\n"
msgstr ""
"(gexp->derivation \"vi\"\n"
"   #~(begin\n"
"       (mkdir #$output)\n"
"       (mkdir (string-append #$output \"/bin\"))\n"
"       (system* (string-append #+coreutils \"/bin/ln\")\n"
"                \"-s\"\n"
"                (string-append #$emacs \"/bin/emacs\")\n"
"                (string-append #$output \"/bin/vi\")))\n"
"   #:target \"aarch64-linux-gnu\")\n"

msgid "imported modules, for gexps"
msgstr "импортированные модули, для gexps"

msgid "with-imported-modules"
msgstr "with-imported-modules"

msgid ""
"(let ((build (with-imported-modules '((guix build utils))\n"
"               #~(begin\n"
"                   (use-modules (guix build utils))\n"
"                   (mkdir-p (string-append #$output \"/bin\"))))))\n"
"  (gexp->derivation \"empty-dir\"\n"
"                    #~(begin\n"
"                        #$build\n"
"                        (display \"success!\\n\")\n"
"                        #t)))\n"
msgstr ""
"(let ((build (with-imported-modules '((guix build utils))\n"
"               #~(begin\n"
"                   (use-modules (guix build utils))\n"
"                   (mkdir-p (string-append #$output \"/bin\"))))))\n"
"  (gexp->derivation \"empty-dir\"\n"
"                    #~(begin\n"
"                        #$build\n"
"                        (display \"success!\\n\")\n"
"                        #t)))\n"

msgid ""
"(use-modules (guix modules))   ;for 'source-module-closure'\n"
"\n"
msgstr ""
"(use-modules (guix modules))   ;for 'source-module-closure'\n"
"\n"

msgid ""
"(use-modules (gnu packages guile))  ;for 'guile-json'\n"
"\n"
msgstr ""
"(use-modules (gnu packages guile))  ;for 'guile-json'\n"
"\n"

msgid ""
"(with-extensions (list guile-json)\n"
"  (gexp->derivation \"something-with-json\"\n"
"                    #~(begin\n"
"                        (use-modules (json))\n"
"                        @dots{})))\n"
msgstr ""
"(with-extensions (list guile-json)\n"
"  (gexp->derivation \"something-with-json\"\n"
"                    #~(begin\n"
"                        (use-modules (json))\n"
"                        @dots{})))\n"

msgid "#$@var{obj}"
msgstr "#$@var{obj}"

msgid ""
"`((guix build utils)\n"
"  (guix gcrypt)\n"
"  ((guix config) => ,(scheme-file \"config.scm\"\n"
"                                  #~(define-module @dots{}))))\n"
msgstr ""
"`((guix build utils)\n"
"  (guix gcrypt)\n"
"  ((guix config) => ,(scheme-file \"config.scm\"\n"
"                                  #~(define-module @dots{}))))\n"

msgid ""
"(define (profile.sh)\n"
"  ;; Return the name of a shell script in the store that\n"
"  ;; initializes the 'PATH' environment variable.\n"
"  (text-file* \"profile.sh\"\n"
"              \"export PATH=\" coreutils \"/bin:\"\n"
"              grep \"/bin:\" sed \"/bin\\n\"))\n"
msgstr ""
"(define (profile.sh)\n"
"  ;; Return the name of a shell script in the store that\n"
"  ;; initializes the 'PATH' environment variable.\n"
"  (text-file* \"profile.sh\"\n"
"              \"export PATH=\" coreutils \"/bin:\"\n"
"              grep \"/bin:\" sed \"/bin\\n\"))\n"

msgid ""
"(mixed-text-file \"profile\"\n"
"                 \"export PATH=\" coreutils \"/bin:\" grep \"/bin\")\n"
msgstr ""
"(mixed-text-file \"profile\"\n"
"                 \"export PATH=\" coreutils \"/bin:\" grep \"/bin\")\n"

msgid "This is the declarative counterpart of @code{text-file*}."
msgstr "Это декларативный аналог @code{text-file*}."

msgid ""
"(file-union \"etc\"\n"
"            `((\"hosts\" ,(plain-file \"hosts\"\n"
"                                    \"127.0.0.1 localhost\"))\n"
"              (\"bashrc\" ,(plain-file \"bashrc\"\n"
"                                     \"alias ls='ls --color=auto'\"))))\n"
msgstr ""
"(file-union \"etc\"\n"
"            `((\"hosts\" ,(plain-file \"hosts\"\n"
"                                    \"127.0.0.1 localhost\"))\n"
"              (\\\"bashrc\\\" ,(plain-file \"bashrc\"\n"
"                                     \"alias ls='ls --color=auto'\"))))\n"

msgid "(directory-union \"guile+emacs\" (list guile emacs))\n"
msgstr "(directory-union \"guile+emacs\" (list guile emacs))\n"

msgid "As an example, consider this gexp:"
msgstr "В качестве примера рассмотрим этот gexp:"

msgid ""
"(gexp->script \"run-uname\"\n"
"              #~(system* #$(file-append coreutils\n"
"                                        \"/bin/uname\")))\n"
msgstr ""
"(gexp->script \"run-uname\"\n"
"              #~(system* #$(file-append coreutils\n"
"                                        \"/bin/uname\")))\n"

msgid "The same effect could be achieved with:"
msgstr "Такого же эффекта можно добиться с помощью:"

msgid ""
"(gexp->script \"run-uname\"\n"
"              #~(system* (string-append #$coreutils\n"
"                                        \"/bin/uname\")))\n"
msgstr ""
"(gexp->script \"run-uname\"\n"
"              #~(system* (string-append #$coreutils\n"
"                                        \"/bin/uname\")))\n"

msgid "Bind @var{system} to the currently targeted system---e.g., @code{\"x86_64-linux\"}---within @var{body}."
msgstr "Привязать @var{system} к текущей целевой системе---например, @code{\\\"x86_64-linux\\\"}---в @var{body}."

msgid ""
"#~(system*\n"
"   #+(let-system system\n"
"       (cond ((string-prefix? \"armhf-\" system)\n"
"              (file-append qemu \"/bin/qemu-system-arm\"))\n"
"             ((string-prefix? \"x86_64-\" system)\n"
"              (file-append qemu \"/bin/qemu-system-x86_64\"))\n"
"             (else\n"
"              (error \"dunno!\"))))\n"
"   \"-net\" \"user\" #$image)\n"
msgstr ""
"#~(system*\n"
"   #+(let-system system\n"
"       (cond ((string-prefix? \"armhf-\" system)\n"
"              (file-append qemu \"/bin/qemu-system-arm\"))\n"
"             ((string-prefix? \"x86_64-\" system)\n"
"              (file-append qemu \"/bin/qemu-system-x86_64\"))\n"
"             (else\n"
"              (error \"dunno!\"))))\n"
"   \"-net\" \"user\" #$image)\n"

msgid ""
"(with-parameters ((%current-system \"i686-linux\"))\n"
"  coreutils)\n"
msgstr ""
"(with-parameters ((%current-system \"i686-linux\"))\n"
"  coreutils)\n"

msgid "{Monadic Procedure} lower-object @var{obj} [@var{system}] @"
msgstr "{Monadic Procedure} lower-object @var{obj} [@var{system}] @"

msgid "Invoking @command{guix repl}"
msgstr "Вызов @command{guix repl}"

msgid "REPL, read-eval-print loop, script"
msgstr "цикл чтение-вычисление-вывод"

msgid "guix repl @var{options} [@var{file} @var{args}]\n"
msgstr "guix repl @var{options} [@var{file} @var{args}]\n"

msgid "guix repl my-script.scm\n"
msgstr "guix repl my-script.scm\n"

msgid "guix repl -- my-script.scm --input=foo.txt\n"
msgstr "guix repl -- my-script.scm --input=foo.txt\n"

msgid ""
"@code{#!/usr/bin/env -S guix repl --}\n"
"@code{!#}\n"
msgstr ""
"@code{#!/usr/bin/env -S guix repl --}\n"
"@code{!#}\n"

msgid ""
"$ guix repl\n"
"scheme@@(guile-user)> ,use (gnu packages base)\n"
"scheme@@(guile-user)> coreutils\n"
"$1 = #<package coreutils@@8.29 gnu/packages/base.scm:327 3e28300>\n"
msgstr ""
"$ guix repl\n"
"scheme@@(guile-user)> ,use (gnu packages base)\n"
"scheme@@(guile-user)> coreutils\n"
"$1 = #<package coreutils@@8.29 gnu/packages/base.scm:327 3e28300>\n"

msgid "--list-types"
msgstr "--list-types"

msgid "--type=@var{type}"
msgstr "--type=@var{type}"

msgid "machine"
msgstr "компьютер"

msgid "--listen=tcp:37146"
msgstr "--listen=tcp:37146"

msgid "--listen=unix:/tmp/socket"
msgstr "--listen=unix:/tmp/socket"

msgid "--load-path=@var{directory}"
msgstr "--load-path=@var{directory}"

msgid "-L @var{directory}"
msgstr "-L @var{directory}"

msgid "This section describes Guix command-line utilities.  Some of them are primarily targeted at developers and users who write new package definitions, while others are more generally useful.  They complement the Scheme programming interface of Guix in a convenient way."
msgstr "В этом разделе описаны утилиты командной строки Guix. Некоторые из них в первую очередь нацелены на разработчиков и пользователей, которые пишут новые определения пакетов, в то время как другие полезны в целом. Они удобно дополняют программный интерфейс Scheme в Guix."

msgid "package building"
msgstr "сборка пакета"

msgid "guix build"
msgstr "guix build"

msgid "The @command{guix build} command builds packages or derivations and their dependencies, and prints the resulting store paths.  Note that it does not modify the user's profile---this is the job of the @command{guix package} command (@pxref{Invoking guix package}).  Thus, it is mainly useful for distribution developers."
msgstr "Команда @command{guix build} собирает пакеты или производные и их зависимости и выводит полученные пути в хранилище (store paths). Обратите внимание, что она не изменяет профиль пользователя---это задача команды @command{guix package} (@pxref{Invoking guix package}). Таким образом, это в основном полезно для разработчиков дистрибутива."

msgid "guix build @var{options} @var{package-or-derivation}@dots{}\n"
msgstr "guix build @var{options} @var{package-or-derivation}@dots{}\n"

msgid "As an example, the following command builds the latest versions of Emacs and of Guile, displays their build logs, and finally displays the resulting directories:"
msgstr "В качестве примера следующая команда собирает последние версии Emacs и Guile, отображает их логи и, наконец, отображает полученные директории:"

msgid "guix build emacs guile\n"
msgstr "guix build emacs guile\n"

msgid "Similarly, the following command builds all the available packages:"
msgstr "Аналогичным образом следующая команда собирает все доступные пакеты:"

msgid "@var{package-or-derivation} may be either the name of a package found in the software distribution such as @code{coreutils} or @code{coreutils@@8.20}, or a derivation such as @file{/gnu/store/@dots{}-coreutils-8.19.drv}.  In the former case, a package with the corresponding name (and optionally version) is searched for among the GNU distribution modules (@pxref{Package Modules})."
msgstr "@var{package-or-derivation} может быть именем пакета, найденного в дистрибутиве программного обеспечения, например @code{coreutils} или @code{coreutils@@8.20}, или производным, например @file{/gnu/store/@dots{}-coreutils-8.19.drv}. В первом случае пакет с соответствующим именем (и, возможно, версией) ищется среди модулей дистрибутива GNU (@pxref{Package Modules})."

msgid "Alternatively, the @option{--expression} option may be used to specify a Scheme expression that evaluates to a package; this is useful when disambiguating among several same-named packages or package variants is needed."
msgstr "В качестве альтернативы можно использовать параметр @option{--expression}, чтобы указать выражение на языке Scheme, оценивающее пакет; это полезно, когда требуется устранение неоднозначности между несколькими пакетами с одинаковыми именами или вариантами пакетов."

msgid "There may be zero or more @var{options}.  The available options are described in the subsections below."
msgstr "Может быть ноль или больше @var{options}. Доступные параметры описаны в подразделах ниже."

msgid "A number of options that control the build process are common to @command{guix build} and other commands that can spawn builds, such as @command{guix package} or @command{guix archive}.  These are the following:"
msgstr "Ряд параметров, управляющих процессом сборки, является общим для @command{guix build} и других команд, которые могут порождать сборки, например @command{guix package} или @command{guix archive}. Это следующие:"

msgid "This allows users to define their own packages and make them visible to the command-line tools."
msgstr "Это позволяет пользователям определять свои собственные пакеты и делать их видимыми для инструментов командной строки."

msgid "--keep-failed"
msgstr "--keep-failed"

msgid "-K"
msgstr "-K"

msgid "Keep the build tree of failed builds.  Thus, if a build fails, its build tree is kept under @file{/tmp}, in a directory whose name is shown at the end of the build log.  This is useful when debugging build issues.  @xref{Debugging Build Failures}, for tips and tricks on how to debug build issues."
msgstr "Сохраните дерево сборки неудачных попыток сборки. Таким образом, в случае сбоя сборки ее дерево сборки сохраняется в @file{/tmp}, в каталоге, имя которого отображается в конце журнала сборки. Это полезно при отладке проблем сборки. @xref{Debugging Build Failures}, советы и рекомендации по отладке проблем сборки."

msgid "This option implies @option{--no-offload}, and it has no effect when connecting to a remote daemon with a @code{guix://} URI (@pxref{The Store, the @env{GUIX_DAEMON_SOCKET} variable})."
msgstr "Этот параметр предполагает @option{--no-offload} и не действует при подключении к удалённому демону с URI @code{guix://} (@pxref{The Store, the @env{GUIX_DAEMON_SOCKET}}."

msgid "--keep-going"
msgstr "--keep-going"

msgid "-k"
msgstr "-k"

msgid "Keep going when some of the derivations fail to build; return only once all the builds have either completed or failed."
msgstr "Продолжайте, когда некоторые из производных не удается построить; возвращайтесь только после того, как все сборки будут завершены или не пройдены."

msgid "The default behavior is to stop as soon as one of the specified derivations has failed."
msgstr "Поведение по умолчанию---остановка, как только одна из указанных производных не удалась."

msgid "Do not build the derivations."
msgstr "Не собирайте производные."

msgid "fallback-option"
msgstr "fallback-option"

msgid "--fallback"
msgstr "--fallback"

msgid "When substituting a pre-built binary fails, fall back to building packages locally (@pxref{Substitution Failure})."
msgstr "Если замена предварительно созданного двоичного файла не удалась, процесс возвращается к сборке пакетов локально (@pxref{Substitution Failure})."

msgid "client-substitute-urls"
msgstr "client-substitute-urls"

msgid "Consider @var{urls} the whitespace-separated list of substitute source URLs, overriding the default list of URLs of @command{guix-daemon} (@pxref{daemon-substitute-urls,, @command{guix-daemon} URLs})."
msgstr "Рассмотрим @var{urls} разделенный пробелами список URL-адресов источников замещений, заменяющий список URL-адресов по умолчанию @command{guix-daemon} (@pxref{daemon-substitute-urls,, @command{guix-daemon} URLs})."

msgid "This means that substitutes may be downloaded from @var{urls}, provided they are signed by a key authorized by the system administrator (@pxref{Substitutes})."
msgstr "Это означает, что заменители могут быть загружены с @var{urls}, при условии, что они подписаны ключом, авторизованным системным администратором (@pxref{Substitutes})."

msgid "When @var{urls} is the empty string, substitutes are effectively disabled."
msgstr "Когда @var{urls} является пустой строкой---замены фактически отключены."

msgid "--no-grafts"
msgstr "--no-grafts"

msgid "Do not ``graft'' packages.  In practice, this means that package updates available as grafts are not applied.  @xref{Security Updates}, for more information on grafts."
msgstr "Не ``прививайте'' (graft) пакеты. На практике это означает, что обновления пакетов, доступные в виде прививок, не применяются. Ознакомьтесь с @xref{Security Updates}, чтобы узнать больше о прививках (grafts)."

msgid "--rounds=@var{n}"
msgstr "--rounds=@var{n}"

msgid "Build each derivation @var{n} times in a row, and raise an error if consecutive build results are not bit-for-bit identical."
msgstr "Соберите каждое производное @var{n} раз подряд и вызовите появление ошибки, если последовательные результаты построения не будут побитно идентичны."

msgid "This is a useful way to detect non-deterministic builds processes.  Non-deterministic build processes are a problem because they make it practically impossible for users to @emph{verify} whether third-party binaries are genuine.  @xref{Invoking guix challenge}, for more."
msgstr "Это полезный способ обнаружения недетерминированных процессов сборки. Недетерминированные процессы сборки представляют собой проблему, потому что они делают практически невозможным для пользователей @emph{verify} подлинность сторонних двоичных файлов. Обратитесь к @xref{Invoking guix challenge}, чтобы узнать больше."

msgid "By default, the daemon's setting is honored (@pxref{Invoking guix-daemon, @option{--max-silent-time}})."
msgstr "По умолчанию настройки демона соблюдаются (@pxref{Invoking guix-daemon, @option{--max-silent-time}})."

msgid "By default, the daemon's setting is honored (@pxref{Invoking guix-daemon, @option{--timeout}})."
msgstr "Это ничего не выводит, если демон не был запущен с опцией @option{--cache-failures} (@pxref{Invoking guix-daemon, @option{--cache-failures}})."

msgid "verbosity, of the command-line tools"
msgstr "многословие инструментов командной строки"

msgid "build logs, verbosity"
msgstr "журналы сборки, многословие"

msgid "-v @var{level}"
msgstr "-v @var{level}"

msgid "--verbosity=@var{level}"
msgstr "--verbosity=@var{level}"

msgid "Use the given verbosity @var{level}, an integer.  Choosing 0 means that no output is produced, 1 is for quiet output; 2 is similar to 1 but it additionally displays download URLs; 3 shows all the build log output on standard error."
msgstr "Используйте заданную степень многословия @var{level} (целое число). Выбор 0 означает, что вывод не производится, 1 - для тихого вывода, а 2 показывает весь вывод журнала сборки при стандартной ошибке."

msgid "Allow the use of up to @var{n} CPU cores for the build.  The special value @code{0} means to use as many CPU cores as available."
msgstr "Разрешить использование до @var{n} ядер ЦП для сборки. Специальное значение @code{0} означает использование максимально доступного количества ядер ЦП."

msgid "Allow at most @var{n} build jobs in parallel.  @xref{Invoking guix-daemon, @option{--max-jobs}}, for details about this option and the equivalent @command{guix-daemon} option."
msgstr "Разрешить не более @var{n} сборок параллельно. Обратитесь к @xref{Invoking guix-daemon, @option{--max-jobs}} для получения подробной информации об этой опции и аналогичной опции @command{guix-daemon}."

msgid "--debug=@var{level}"
msgstr "--debug=@var{level}"

msgid "Produce debugging output coming from the build daemon.  @var{level} must be an integer between 0 and 5; higher means more verbose output.  Setting a level of 4 or more may be helpful when debugging setup issues with the build daemon."
msgstr "Создавать отладочные данные, поступающие от демона сборки. @var{level} должен быть целым числом от 0 до 5; чем выше, тем подробнее вывод. Уровнь 4 или выше может быть полезен при отладке проблемы с установкой демона сборки."

msgid "Behind the scenes, @command{guix build} is essentially an interface to the @code{package-derivation} procedure of the @code{(guix packages)} module, and to the @code{build-derivations} procedure of the @code{(guix derivations)} module."
msgstr "За кулисами @command{guix build}, по сути, является интерфейсом к процедуре @code{package-diveration} модуля @code{(guix packages)} и к процедуре @code{build-diverations} модуля @code{(guix derivations)} модуль."

msgid "In addition to options explicitly passed on the command line, @command{guix build} and other @command{guix} commands that support building honor the @env{GUIX_BUILD_OPTIONS} environment variable."
msgstr "Помимо параметров, явно переданных в командной строке, @command{guix build} и другие команды @command{guix}, поддерживающие сборку, учитывают переменную среды @env{GUIX_BUILD_OPTIONS}."

msgid "{Environment Variable} GUIX_BUILD_OPTIONS"
msgstr "{Environment Variable} GUIX_BUILD_OPTIONS"

msgid "Users can define this variable to a list of command line options that will automatically be used by @command{guix build} and other @command{guix} commands that can perform builds, as in the example below:"
msgstr "Пользователи могут определить эту переменную для списка параметров командной строки, которые будут автоматически использоваться @command{guix build} и другими командами @command{guix}, которые могут выполнять сборки, как в примере ниже:"

msgid "$ export GUIX_BUILD_OPTIONS=\"--no-substitutes -c 2 -L /foo/bar\"\n"
msgstr "$ export GUIX_BUILD_OPTIONS=\"--no-substitutes -c 2 -L /foo/bar\"\n"

msgid "These options are parsed independently, and the result is appended to the parsed command-line options."
msgstr "Эти параметры анализируются независимо, а результат добавляется к проанализированным параметрам командной строки."

msgid "package variants"
msgstr "варианты пакета"

msgid "Another set of command-line options supported by @command{guix build} and also @command{guix package} are @dfn{package transformation options}.  These are options that make it possible to define @dfn{package variants}---for instance, packages built from different source code.  This is a convenient way to create customized packages on the fly without having to type in the definitions of package variants (@pxref{Defining Packages})."
msgstr "Другой набор параметров командной строки, поддерживаемых @command{guix build} и @command{guix package} это @dfn{package transformation options}. Это параметры, которые позволяют определять @dfn{package variants}---например, пакеты, созданные из другого исходного кода. Это удобный способ создавать индивидуальные пакеты на лету без необходимости вводить определения вариантов пакета (@pxref{Defining Packages})."

msgid "Package transformation options are preserved across upgrades: @command{guix upgrade} attempts to apply transformation options initially used when creating the profile to the upgraded packages."
msgstr "Параметры преобразования пакета сохраняются при обновлении: @command{guix upgrade} пытается применить параметры преобразования, которые изначально использовались при создании профиля, к обновленным пакетам."

msgid "The available options are listed below.  Most commands support them and also support a @option{--help-transform} option that lists all the available options and a synopsis (these options are not shown in the @option{--help} output for brevity)."
msgstr "Доступные варианты перечислены ниже. Большинство команд поддерживают их, а также поддерживают параметр @option{--help-transform}, в котором перечислены все доступные параметры и их крткое описание (эти параметры не показаны в выводе @option{--help} для краткости)."

msgid "--with-source=@var{source}"
msgstr "--with-source=@var{source}"

msgid "--with-source=@var{package}=@var{source}"
msgstr "--with-source=@var{package}=@var{source}"

msgid "--with-source=@var{package}@@@var{version}=@var{source}"
msgstr "--with-source=@var{package}@@@var{version}=@var{source}"

msgid "Use @var{source} as the source of @var{package}, and @var{version} as its version number.  @var{source} must be a file name or a URL, as for @command{guix download} (@pxref{Invoking guix download})."
msgstr "Используйте @var{source} в качестве источника @var{package} и @var{version} в качестве номера версии. @var{source} должен быть именем файла или URL-адресом, как для @command{guix download} (@pxref{Invoking guix download})."

msgid ""
"$ git clone git://git.sv.gnu.org/guix.git\n"
"$ guix build guix --with-source=guix@@1.0=./guix\n"
msgstr ""
"$ git clone git://git.sv.gnu.org/guix.git\n"
"$ guix build guix --with-source=guix@@1.0=./guix\n"

msgid "--with-input=@var{package}=@var{replacement}"
msgstr "--with-input=@var{package}=@var{replacement}"

msgid "--with-graft=@var{package}=@var{replacement}"
msgstr "--with-graft=@var{package}=@var{replacement}"

msgid "guix build --with-graft=gnutls=gnutls@@3.5.4 wget\n"
msgstr "guix build --with-graft=gnutls=gnutls@@3.5.4 wget\n"

msgid "debugging info, rebuilding"
msgstr "отладка файлов"

msgid "--with-debug-info=@var{package}"
msgstr "--without-tests=@var{package}"

msgid "--with-c-toolchain=@var{package}=@var{toolchain}"
msgstr "--with-commit=@var{package}=@var{commit}"

msgid "--with-git-url=@var{package}=@var{url}"
msgstr "--with-git-url=@var{package}=@var{url}"

msgid "latest commit, building"
msgstr "последний коммит, сборка"

msgid ""
"guix build python-numpy \\\n"
"  --with-git-url=python=https://github.com/python/cpython\n"
msgstr ""
"guix build python-numpy \\\n"
"  --with-git-url=python=https://github.com/python/cpython\n"

msgid "continuous integration"
msgstr "непрерывная интеграция"

msgid "Checkouts are kept in a cache under @file{~/.cache/guix/checkouts} to speed up consecutive accesses to the same repository.  You may want to clean it up once in a while to save disk space."
msgstr "Рабочие копии хранятся в кэше в разделе @file{~/.cache/guix/checkouts} для ускорения последовательных обращений к одному и тому же репозиторию.\tВозможно, вам захочется время от времени очищать его, чтобы сэкономить место на диске."

msgid "--with-branch=@var{package}=@var{branch}"
msgstr "--with-branch=@var{package}=@var{branch}"

msgid "guix build --with-branch=guile-sqlite3=master cuirass\n"
msgstr "guix build --with-branch=guile-sqlite3=master cuirass\n"

msgid "--with-commit=@var{package}=@var{commit}"
msgstr "--with-commit=@var{package}=@var{commit}"

msgid "--with-patch=@var{package}=@var{file}"
msgstr "--with-branch=@var{package}=@var{branch}"

msgid "upstream, latest version"
msgstr "версия пакета"

msgid "--with-latest=@var{package}"
msgstr "--without-tests=@var{package}"

msgid "guix build guix --with-latest=guile-json\n"
msgstr "guix build --with-input=guile=guile@@2.0 guix\n"

msgid "test suite, skipping"
msgstr "набор тестов"

msgid "--without-tests=@var{package}"
msgstr "--without-tests=@var{package}"

msgid "guix install --without-tests=python python-notebook\n"
msgstr "guix install --without-tests=python python-notebook\n"

msgid "The command-line options presented below are specific to @command{guix build}."
msgstr "Параметры командной строки, представленные ниже, относятся к @command{guix build}."

msgid "--quiet"
msgstr "--quiet"

msgid "--manifest=@var{manifest}"
msgstr "--manifest=@var{file}"

msgid "-m @var{manifest}"
msgstr "-m @var{file}"

msgid "package"
msgstr "package"

msgid "Invoking @command{guix edit}"
msgstr "Вызов @command{guix edit}"

msgid "Invoking @command{guix download}"
msgstr "Вызов @command{guix download}"

msgid "--hash=@var{algorithm}"
msgstr "--show=@var{package}"

msgid "-H @var{algorithm}"
msgstr "-f @var{format}"

msgid "Invoking @command{guix hash}"
msgstr "Вызов @command{guix hash}"

msgid "git"
msgstr "git"

msgid "git-fetch"
msgstr "git-fetch"

msgid "Invoking @command{guix import}"
msgstr "Вызов @command{guix import}"

msgid "Currently, the available ``importers'' are:"
msgstr "Возможные форматы:"

msgid "Additional options include:"
msgstr "Дополительные опции включаю:"

msgid "guix import hackage -t -e \"'((\\\"network-uri\\\" . false))\" HTTP\n"
msgstr "guix import hackage -t -e \"'((\\\"network-uri\\\" . false))\" HTTP\n"

msgid "guix import hackage mtl@@2.1.3.1\n"
msgstr "guix import hackage mtl@@2.1.3.1\n"

msgid "--lts-version=@var{version}"
msgstr "--lts-version=@var{version}"

msgid "-l @var{version}"
msgstr "-l @var{version}"

msgid "guix import stackage --lts-version=7.18 HTTP\n"
msgstr "guix import stackage --lts-version=7.18 HTTP\n"

msgid "elpa"
msgstr "elpa"

msgid "--archive=@var{repo}"
msgstr "--archive=@var{repo}"

msgid "-a @var{repo}"
msgstr "-a @var{repo}"

msgid "--pin-versions"
msgstr "версия"

msgid "Invoking @command{guix refresh}"
msgstr "Вызов @command{guix refresh}"

msgid ""
"$ guix refresh\n"
"gnu/packages/gettext.scm:29:13: gettext would be upgraded from 0.18.1.1 to 0.18.2.1\n"
"gnu/packages/glib.scm:77:12: glib would be upgraded from 2.34.3 to 2.37.0\n"
msgstr ""
"$ guix refresh\n"
"gnu/packages/gettext.scm:29:13: gettext would be upgraded from 0.18.1.1 to 0.18.2.1\n"
"gnu/packages/glib.scm:77:12: glib would be upgraded from 2.34.3 to 2.37.0\n"

msgid ""
"$ guix refresh coreutils guile guile-ssh\n"
"gnu/packages/ssh.scm:205:2: warning: no updater for guile-ssh\n"
"gnu/packages/guile.scm:136:12: guile would be upgraded from 2.0.12 to 2.0.13\n"
msgstr ""
"$ guix refresh coreutils guile guile-ssh\n"
"gnu/packages/ssh.scm:205:2: warning: no updater for guile-ssh\n"
"gnu/packages/guile.scm:136:12: guile would be upgraded from 2.0.12 to 2.0.13\n"

msgid ""
"(define-public network-manager\n"
"  (package\n"
"    (name \"network-manager\")\n"
"    ;; @dots{}\n"
"    (properties '((upstream-name . \"NetworkManager\")))))\n"
msgstr ""
"(define-public network-manager\n"
"  (package\n"
"    (name \"network-manager\")\n"
"    ;; @dots{}\n"
"    (properties '((upstream-name . \"NetworkManager\")))))\n"

msgid "The following options are supported:"
msgstr "Поддерживаются следующие варианты:"

msgid ""
"$ guix refresh --recursive coreutils\n"
"gnu/packages/acl.scm:40:13: acl would be upgraded from 2.2.53 to 2.3.1\n"
"gnu/packages/m4.scm:30:12: 1.4.18 is already the latest version of m4\n"
"gnu/packages/xml.scm:68:2: warning: no updater for expat\n"
"gnu/packages/multiprecision.scm:40:12: 6.1.2 is already the latest version of gmp\n"
"@dots{}\n"
msgstr ""
"$ guix refresh --recursive coreutils\n"
"gnu/packages/acl.scm:35:2: warning: no updater for acl\n"
"gnu/packages/m4.scm:30:12: info: 1.4.18 is already the latest version of m4\n"
"gnu/packages/xml.scm:68:2: warning: no updater for expat\n"
"gnu/packages/multiprecision.scm:40:12: info: 6.1.2 is already the latest version of gmp\n"
"@dots{}\n"

msgid "guix refresh -l -e '(@@@@ (gnu packages commencement) glibc-final)'\n"
msgstr "guix refresh -l -e '(@@@@ (gnu packages commencement) glibc-final)'\n"

msgid "--select=[@var{subset}]"
msgstr "--select=[@var{subset}]"

msgid "-s @var{subset}"
msgstr "-s @var{subset}"

msgid "--type=@var{updater}"
msgstr "--type=@var{updater}"

msgid "-t @var{updater}"
msgstr "-t @var{updater}"

msgid "the updater for GNU packages;"
msgstr "средство обновления пакетов GNU;"

msgid "savannah"
msgstr "savannah"

msgid "sourceforge"
msgstr "источник"

msgid "the updater for packages hosted at @uref{https://sourceforge.net, SourceForge};"
msgstr "средство обновления пакетов, размещенных на kernel.org;"

msgid "gnome"
msgstr "gnome"

msgid "the updater for GNOME packages;"
msgstr "средство обновления пакетов GNOME;"

msgid "kde"
msgstr "kde"

msgid "the updater for KDE packages;"
msgstr "средство обновления пакетов KDE;"

msgid "xorg"
msgstr "xorg"

msgid "the updater for X.org packages;"
msgstr "средство обновления пакетов X.org;"

msgid "kernel.org"
msgstr "kernel.org"

msgid "the updater for packages hosted on kernel.org;"
msgstr "средство обновления пакетов, размещенных на kernel.org;"

msgid "the updater for @uref{https://wiki.call-cc.org/eggs/, Egg} packages;"
msgstr "средство обновления пакетов @uref{https://wiki.call-cc.org/eggs/, Egg};"

msgid "github"
msgstr "github"

msgid "the updater for @uref{https://github.com, GitHub} packages."
msgstr "средство обновления пакетов @uref{https://github.com, GitHub}."

msgid ""
"gpg --no-default-keyring --keyring mykeyring.kbx \\\n"
"  --recv-keys @value{OPENPGP-SIGNING-KEY-ID}\n"
msgstr ""
"gpg --no-default-keyring --keyring mykeyring.kbx \\\n"
"  --recv-keys @value{OPENPGP-SIGNING-KEY-ID}\n"

msgid "always"
msgstr "always"

msgid "never"
msgstr "never"

msgid "--key-server=@var{host}"
msgstr "--key-server=@var{host}"

msgid "The available options are listed below."
msgstr "Доступные опции резюмированы ниже."

msgid "format"
msgstr "format"

msgid "inputs"
msgstr "inputs"

msgid "Invoking @command{guix lint}"
msgstr "Вызов @command{guix lint}"

msgid "guix lint"
msgstr "guix lint"

msgid "inputs-should-be-native"
msgstr "inputs-should-be-native"

msgid "mirror-url"
msgstr "mirror-url"

msgid "github-url"
msgstr "github-url"

msgid "source-file-name"
msgstr "source-file-name"

msgid "source-unstable-tarball"
msgstr "source-unstable-tarball"

msgid "Check that the derivation of the given packages can be successfully computed for all the supported systems (@pxref{Derivations})."
msgstr "Вернуть деривацию(-ии), производящие данные элементы склада (@pxref{Derivations})."

msgid "profile-collisions"
msgstr "противоречеия профиля"

msgid "archival"
msgstr "архивирование"

msgid "cve"
msgstr "cve"

msgid "--no-network"
msgstr "--network"

msgid "Invoking @command{guix size}"
msgstr "Вызов @command{guix size}"

msgid "guix size $(guix system build config.scm)\n"
msgstr "guix size $(guix system build config.scm)\n"

msgid ""
"$ guix size coreutils grep sed bash\n"
"store item                               total    self\n"
"/gnu/store/@dots{}-coreutils-8.24          77.8    13.8  13.4%\n"
"/gnu/store/@dots{}-grep-2.22               73.1     0.8   0.8%\n"
"/gnu/store/@dots{}-bash-4.3.42             72.3     4.7   4.6%\n"
"/gnu/store/@dots{}-readline-6.3            67.6     1.2   1.2%\n"
"@dots{}\n"
"total: 102.3 MiB\n"
msgstr ""
"$ guix size coreutils grep sed bash\n"
"store item                               total    self\n"
"/gnu/store/@dots{}-coreutils-8.24          77.8    13.8  13.4%\n"
"/gnu/store/@dots{}-grep-2.22               73.1     0.8   0.8%\n"
"/gnu/store/@dots{}-bash-4.3.42             72.3     4.7   4.6%\n"
"/gnu/store/@dots{}-readline-6.3            67.6     1.2   1.2%\n"
"@dots{}\n"
"total: 102.3 MiB\n"

msgid "The available options are:"
msgstr "Доступные опции:"

msgid "--sort=@var{key}"
msgstr "--sort=@var{key}"

msgid "--map-file=@var{file}"
msgstr "--map-file=@var{file}"

msgid "Invoking @command{guix graph}"
msgstr "Вызов @command{guix graph}"

msgid "DAG"
msgstr "DAG"

msgid "guix graph"
msgstr "guix graph"

msgid "guix graph @var{options} @var{package}@dots{}\n"
msgstr "guix graph @var{options} @var{package}@dots{}\n"

msgid "guix graph coreutils | dot -Tpdf > dag.pdf\n"
msgstr "guix graph coreutils | dot -Tpdf > dag.pdf\n"

msgid "The output looks like this:"
msgstr "Вывод должен быть таким:"

msgid "Nice little graph, no?"
msgstr "Неплохой граф, не так ли?"

msgid "guix graph coreutils | xdot -\n"
msgstr "guix graph coreutils | xdot -\n"

msgid "reverse-package"
msgstr "reverse-package"

msgid "guix graph --type=reverse-package ocaml\n"
msgstr "guix graph --type=reverse-package ocaml\n"

msgid "guix graph --type=bag-emerged coreutils\n"
msgstr "guix graph --type=bag-emerged coreutils\n"

msgid "bag-with-origins"
msgstr "bag-with-origins"

msgid "guix graph -t reverse-bag dune\n"
msgstr "guix graph -t reverse-bag dune\n"

msgid "guix graph -t derivation $(guix system build -d my-config.scm)\n"
msgstr "guix graph -t derivation `guix system build -d my-config.scm`\n"

msgid "guix graph -t module guile | xdot -\n"
msgstr "guix graph -t module guile | xdot -\n"

msgid "guix graph -t references $(readlink -f ~/.guix-profile)\n"
msgstr "guix graph -t references `readlink -f ~/.guix-profile`\n"

msgid "shortest path, between packages"
msgstr "кратчайший путь между пакетами"

msgid ""
"$ guix graph --path emacs libunistring\n"
"emacs@@26.3\n"
"mailutils@@3.9\n"
"libunistring@@0.9.10\n"
"$ guix graph --path -t derivation emacs libunistring\n"
"/gnu/store/@dots{}-emacs-26.3.drv\n"
"/gnu/store/@dots{}-mailutils-3.9.drv\n"
"/gnu/store/@dots{}-libunistring-0.9.10.drv\n"
"$ guix graph --path -t references emacs libunistring\n"
"/gnu/store/@dots{}-emacs-26.3\n"
"/gnu/store/@dots{}-libidn2-2.2.0\n"
"/gnu/store/@dots{}-libunistring-0.9.10\n"
msgstr ""
"$ guix graph --path emacs libunistring\n"
"emacs@@26.3\n"
"mailutils@@3.9\n"
"libunistring@@0.9.10\n"
"$ guix graph --path -t derivation emacs libunistring\n"
"/gnu/store/@dots{}-emacs-26.3.drv\n"
"/gnu/store/@dots{}-mailutils-3.9.drv\n"
"/gnu/store/@dots{}-libunistring-0.9.10.drv\n"
"$ guix graph --path -t references emacs libunistring\n"
"/gnu/store/@dots{}-emacs-26.3\n"
"/gnu/store/@dots{}-libidn2-2.2.0\n"
"/gnu/store/@dots{}-libunistring-0.9.10\n"

msgid "--backend=@var{backend}"
msgstr "--backend=@var{backend}"

msgid "-b @var{backend}"
msgstr "-b @var{backend}"

msgid "--list-backends"
msgstr "--list-backends"

msgid "--path"
msgstr "--paths"

msgid ""
"$ guix graph --path -t references libreoffice llvm\n"
"/gnu/store/@dots{}-libreoffice-6.4.2.2\n"
"/gnu/store/@dots{}-libepoxy-1.5.4\n"
"/gnu/store/@dots{}-mesa-19.3.4\n"
"/gnu/store/@dots{}-llvm-9.0.1\n"
msgstr ""
"$ guix graph --path -t references libreoffice llvm\n"
"/gnu/store/@dots{}-libreoffice-6.4.2.2\n"
"/gnu/store/@dots{}-libepoxy-1.5.4\n"
"/gnu/store/@dots{}-mesa-19.3.4\n"
"/gnu/store/@dots{}-llvm-9.0.1\n"

msgid "guix graph -e '(@@@@ (gnu packages commencement) gnu-make-final)'\n"
msgstr "guix graph -e '(@@@@ (gnu packages commencement) gnu-make-final)'\n"

msgid "Display the graph for @var{system}---e.g., @code{i686-linux}."
msgstr "Вывести граф для @var{system}---например, @code{i686-linux}."

msgid "guix graph git --with-input=openssl=libressl\n"
msgstr "guix graph git --with-input=openssl=libressl\n"

msgid "Invoking @command{guix publish}"
msgstr "Вызов @command{guix publish}"

msgid "guix publish"
msgstr "guix publish"

msgid "guix publish @var{options}@dots{}\n"
msgstr "guix publish @var{options}@dots{}\n"

msgid "guix publish\n"
msgstr "guix publish\n"

msgid "http://example.org/file/hello-2.10.tar.gz/sha256/0ssi1@dots{}ndq1i\n"
msgstr "http://example.org/file/hello-2.10.tar.gz/sha256/0ssi1@dots{}ndq1i\n"

msgid "--compression[=@var{method}[:@var{level}]]"
msgstr "--log-compression=@var{type}"

msgid "--negative-ttl=@var{ttl}"
msgstr "--manifest=@var{file}"

msgid "--cache-bypass-threshold=@var{size}"
msgstr "--search-paths[=@var{kind}]"

msgid "If your host distro uses the Upstart init system:"
msgstr "Если ваш дистрибутив использует систему инициализации Upstart:"

msgid "Invoking @command{guix challenge}"
msgstr "Вызов @command{guix challenge}"

msgid "--diff=@var{mode}"
msgstr "--load=@var{file}"

msgid "@code{simple} (the default)"
msgstr "@code{speed} (default: @code{1.0})"

msgid "Show the list of files that differ."
msgstr "Вывести список живых файлов и директорий склада."

msgid "--verbose"
msgstr "--verbose"

msgid "Invoking @command{guix copy}"
msgstr "Вызов @command{guix copy}"

msgid "Invoking @command{guix container}"
msgstr "Вызов @command{guix container}"

msgid "Invoking @command{guix weather}"
msgstr "Вызов @command{guix weather}"

msgid "guix weather @var{options}@dots{} [@var{packages}@dots{}]\n"
msgstr "guix environment @var{options} @var{package}@dots{}\n"

msgid "This option can be repeated several times, in which case the manifests are concatenated."
msgstr "Создать окружение для пакетов, содержащихся в объекте манифеста, возвращаемого кодом Scheme в файле @var{file}."

msgid "--display-missing"
msgstr "--missing"

msgid "Invoking @command{guix processes}"
msgstr "Вызов @command{guix processes}"

msgid "Additional options are listed below."
msgstr "Доступные опции резюмированы ниже."

msgid "Guix System supports a consistent whole-system configuration mechanism.  By that we mean that all aspects of the global system configuration---such as the available system services, timezone and locale settings, user accounts---are declared in a single place.  Such a @dfn{system configuration} can be @dfn{instantiated}---i.e., effected."
msgstr "Система Guix поддерживает согласованный механизм конфигурации всей системы. Под этим мы подразумеваем, что все аспекты глобальной конфигурации системы - такие как доступные системные службы, настройки часового пояса и локали, учетные записи пользователей - объявляются в одном месте. Такая @dfn{системная конфигурация} может быть @dfn{инстанцирована} - то есть, реализована."

msgid "One of the advantages of putting all the system configuration under the control of Guix is that it supports transactional system upgrades, and makes it possible to roll back to a previous system instantiation, should something go wrong with the new one (@pxref{Features}).  Another advantage is that it makes it easy to replicate the exact same configuration across different machines, or at different points in time, without having to resort to additional administration tools layered on top of the own tools of the system."
msgstr "Одним из преимуществ передачи всей конфигурации системы под контроль Guix является поддержка транзакционных обновлений системы и возможность отката к предыдущей конфигурации системы, если что-то пойдет не так с новыми (@pxref{Features}). Еще одним преимуществом является то, что она позволяет легко воспроизводить точно такую же конфигурацию на разных машинах или в разные моменты времени, не прибегая к дополнительным инструментам администрирования, наложенным поверх собственных инструментов системы."

msgid "This section describes this mechanism.  First we focus on the system administrator's viewpoint---explaining how the system is configured and instantiated.  Then we show how this mechanism can be extended, for instance to support new system services."
msgstr "В данном разделе описывается этот механизм. Сначала мы сосредоточимся на точке зрения системного администратора - объясним, как происходит конфигурирование и инстанцирование системы. Затем мы покажем, как этот механизм может быть расширен, например, для поддержки новых системных сервисов."

msgid "guix system describe\n"
msgstr "guix system describe\n"

msgid "sudo guix system roll-back\n"
msgstr "sudo guix system roll-back\n"

msgid "sudo vs. @command{guix pull}"
msgstr "sudo vs. @command{guix pull}"

msgid "The difference matters here, because @command{guix pull} updates the @command{guix} command and package definitions only for the user it is run as.  This means that if you choose to use @command{guix system reconfigure} in root's login shell, you'll need to @command{guix pull} separately."
msgstr "Разница важна, потому что @command{guix pull} обновляет команду @command{guix} и определения пакетов только для пользователя, от имени которого она запускается. Это означает, что если вы решите использовать @command{guix system reconfigure} от имени root, вам нужно будет запустить @command{guix pull} отдельно."

msgid "The @code{bootloader} field describes the method that will be used to boot your system.  Machines based on Intel processors can boot in ``legacy'' BIOS mode, as in the example above.  However, more recent machines rely instead on the @dfn{Unified Extensible Firmware Interface} (UEFI) to boot.  In that case, the @code{bootloader} field should contain something along these lines:"
msgstr "Поле @code{bootloader} описывает метод, который будет использоваться для загрузки вашей системы. Компьютеры на базе процессоров Intel могут загружаться в \"устаревшем\" режиме BIOS, как в примере выше. Однако более современные машины используют для загрузки @dfn{Unified Extensible Firmware Interface} (UEFI). В этом случае поле @code{bootloader} должно содержать примерно следующее:"

msgid "@xref{Bootloader Configuration}, for more information on the available configuration options."
msgstr "@xref{Bootloader Configuration}, для получения дополнительной информации о доступных параметрах конфигурации."

msgid "The @code{packages} field lists packages that will be globally visible on the system, for all user accounts---i.e., in every user's @env{PATH} environment variable---in addition to the per-user profiles (@pxref{Invoking guix package}).  The @code{%base-packages} variable provides all the tools one would expect for basic user and administrator tasks---including the GNU Core Utilities, the GNU Networking Utilities, the @command{mg} lightweight text editor, @command{find}, @command{grep}, etc.  The example above adds GNU@tie{}Screen to those, taken from the @code{(gnu packages screen)} module (@pxref{Package Modules}).  The @code{(list package output)} syntax can be used to add a specific output of a package:"
msgstr "В поле @code{packages} перечислены пакеты, которые будут глобально видны в системе, для всех учетных записей пользователей - т.е. в переменной окружения @env{PATH} каждого пользователя - в дополнение к профилям для каждого пользователя (@pxref{Invoking guix package}). Переменная @code{%base-packages} предоставляет все инструменты, которые можно ожидать для выполнения основных задач пользователя и администратора, включая GNU Core Utilities, GNU Networking Utilities, легкий текстовый редактор @command{mg}, @command{find}, @command{grep} и т.д. В примере выше к ним добавляется GNU@tie{}Screen, взятый из модуля @code{(gnu packages screen)} (@pxref{Package Modules}). Синтаксис @code{(list паке́т вы́ход)} можно использовать для добавления конкретного вывода пакета:"

msgid ""
"(define %my-services\n"
"  ;; My very own list of services.\n"
"  (modify-services %base-services\n"
"    (guix-service-type config =>\n"
"                       (guix-configuration\n"
"                        (inherit config)\n"
"                        ;; Fetch substitutes from example.org.\n"
"                        (substitute-urls\n"
"                          (list \"https://example.org/guix\"\n"
"                                \"https://ci.guix.gnu.org\"))))\n"
"    (mingetty-service-type config =>\n"
"                           (mingetty-configuration\n"
"                            (inherit config)\n"
"                            ;; Automatically log in as \"guest\".\n"
"                            (auto-login \"guest\")))))\n"
"\n"
msgstr ""
"(define %my-services\n"
"  ;; Мой собственный список служб.\n"
"  (modify-services %base-services\n"
"    (guix-service-type config =>\n"
"                       (guix-configuration\n"
"                        (inherit config)\n"
"                        ;; Достать замещения из example.org.\n"
"                        (substitute-urls\n"
"                          (list \"https://example.org/guix\"\n"
"                                \"https://ci.guix.gnu.org\"))))\n"
"    (mingetty-service-type config =>\n"
"                           (mingetty-configuration\n"
"                            (inherit config)\n"
"                            ;; Автоматически входить как \"guest\".\n"
"                            (auto-login \"guest\")))))\n"
"\n"

msgid "@code{kernel} (default: @code{linux-libre})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{hurd} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{kernel-loadable-modules} (default: '())"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{kernel-arguments} (default: @code{%default-kernel-arguments})"
msgstr "@code{features} (default: @code{'()})"

msgid "bootloader"
msgstr "bootloader"

msgid "@code{firmware} (default: @code{%base-firmware})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{groups} (default: @code{%base-groups})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{issue} (default: @code{%default-issue})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{packages} (default: @code{%base-packages})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{locale-definitions} (default: @code{%default-locale-definitions})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{name-service-switch} (default: @code{%default-nss})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{services} (default: @code{%base-services})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{sudoers-file} (default: @code{%sudoers-specification})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{mount-may-fail?} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "swap space"
msgstr "место на диске"

msgid "@code{clear-on-logout?} (default: @code{#t})"
msgstr "@code{port} (default: @code{22})"

msgid ""
"(modify-services %base-services\n"
"  (mingetty-service-type config =>\n"
"                         (mingetty-configuration\n"
"                          (inherit config)\n"
"                          ;; Automatically log in as \"guest\".\n"
"                          (auto-login \"guest\")\n"
"                          (shepherd-requirement\n"
"                           (cons 'dbus-system\n"
"                                 (mingetty-configuration-shepherd-requirement\n"
"                                  config))))))\n"
msgstr ""
"(modify-services %base-services\n"
"  (mingetty-service-type config =>\n"
"                         (mingetty-configuration\n"
"                          (inherit config)\n"
"                          ;; Автоматически входить как \"guest\".\n"
"                          (auto-login \"guest\")\n"
"                          (shepherd-requirement\n"
"                           (cons 'dbus-system\n"
"                                 (mingetty-configuration-shepherd-requirement\n"
"                                  config))))))\n"

msgid "@code{font-engine} (default: @code{\"pango\"})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{font-size} (default: @code{12})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{caches} (default: @code{%nscd-default-caches})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{authorized-keys} (default: @code{%default-authorized-guix-keys})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{substitute-urls} (default: @code{%default-substitute-urls})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{discover?} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "herd set-http-proxy guix-daemon\n"
msgstr "herd start ssh-daemon\n"

msgid "@code{advertise?} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{compression} (default: @code{'((\"gzip\" 3) (\"zstd\" 3))})"
msgstr "@code{compression-level} (default: @code{3})"

msgid "@code{cache-bypass-threshold} (default: 10 MiB)"
msgstr "@code{port} (default: @code{22})"

msgid "nofile"
msgstr "профиль"

msgid "open file descriptors"
msgstr "Краткие обзоры и описания"

msgid "directory"
msgstr "directory"

msgid "input"
msgstr "input"

msgid "output"
msgstr "output"

msgid "debug?"
msgstr "debug?"

msgid "The available fields of this data type are as follows:"
msgstr "Доступные поля этого типа данных следующие:"

msgid "addresses"
msgstr "addresses"

msgid "destination"
msgstr "destination"

msgid "@code{usb-modeswitch} (default: @code{usb-modeswitch})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{usb-modeswitch-data} (default: @code{usb-modeswitch-data})"
msgstr "@code{port} (default: @code{22})"

msgid "{Data Type} hostapd-configuration"
msgstr "Конфигурирование системы"

msgid "This data type represents the configuration of the hostapd service, with the following fields:"
msgstr "Этот тип данных представляет машины для сборки, на которые демон может разгружать сборки. Важные поля:"

msgid "@code{package} (default: @code{hostapd})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "The hostapd package to use."
msgstr "Используемый пакет hostapd."

msgid "@code{interface} (default: @code{\"wlan0\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{broadcast-ssid?} (default: @code{#t})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{channel} (default: @code{1})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "The WiFi channel to use."
msgstr "Используемый канал Wi-Fi."

msgid "@code{driver} (default: @code{\"nl80211\"})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "{Data Type} nftables-configuration"
msgstr "{Тип данных} build-machine"

msgid "@code{allow-large-adjustment?} (default: @code{#t})"
msgstr "@code{parallel-builds} (default: @code{1})"

msgid "@code{type} (default: @code{'server})"
msgstr "@code{port} (default: @code{22})"

msgid "The address of the server, as a string."
msgstr "Порядок следования устройств имеет значение."

msgid "@code{server} (default: @code{'()})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{servers} (default: @code{%openntp-servers})"
msgstr "@code{features} (default: @code{'()})"

msgid "{Data Type} opendht-configuration"
msgstr "Конфигурирование системы"

msgid "The @code{opendht} package to use."
msgstr "Используемый пакет @code{webssh}."

msgid "@code{control-socket?} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{auto-start?} (default: @code{#t})"
msgstr "@code{auto-start?} (default: @code{#t})"

msgid "@code{address} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{user} (default: @code{\"root\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{modules} (default: @code{%default-modules})"
msgstr "@code{modules} (default: @code{%default-modules})"

msgid "The @code{(gnu services syncthing)} module provides the following services:"
msgstr "Модуль @code{(guix inferior)} предоставляет следующие процедуры для работы с ранними версиями:"

msgid ""
"(service syncthing-service-type\n"
"         (syncthing-configuration (user \"alice\")))\n"
msgstr ""
"(service openssh-service-type\n"
"         (openssh-configuration))\n"

msgid "{Data Type} syncthing-configuration"
msgstr "Конфигурирование системы"

msgid "Data type representing the configuration for @code{syncthing-service-type}."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{syncthing} (default: @var{syncthing})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{syncthing} package to use."
msgstr "пакет @code{syncthing} для использования."

msgid "@code{arguments} (default: @var{'()})"
msgstr "@code{arguments} (default: @code{'()})"

msgid "List of command-line arguments passing to @code{syncthing} binary."
msgstr "Список флагов командной строки, которые следует передать команде @code{patch}."

msgid "@code{logflags} (default: @var{0})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{user} (default: @var{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{group} (default: @var{\"users\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{home} (default: @var{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "path"
msgstr "path"

msgid "@code{openssh} (default @var{openssh})"
msgstr "@code{port} (default: @code{22})"

msgid "{Data Type} autossh-configuration"
msgstr "{Тип данных} build-machine"

msgid "This data type represents the configuration of an AutoSSH service."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{user} (default @code{\"autossh\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{poll} (default @code{600})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{first-poll} (default @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{gate-time} (default @code{30})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{log-level} (default @code{1})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{max-start} (default @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{message} (default @code{\"\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{port} (default @code{\"0\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{ssh-options} (default @code{'()})"
msgstr "@code{features} (default: @code{'()})"

msgid "{Data Type} webssh-configuration"
msgstr "Конфигурирование системы"

msgid "Data type representing the configuration for @code{webssh-service}."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{package} (default: @var{webssh})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{webssh} package to use."
msgstr "Используемый пакет @code{webssh}."

msgid "@code{user-name} (default: @var{\"webssh\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{group-name} (default: @var{\"webssh\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{address} (default: @var{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{port} (default: @var{8888})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{policy} (default: @var{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{known-hosts} (default: @var{'()})"
msgstr "@code{inputs} (default: @code{'()})"

msgid "@code{log-file} (default: @file{\"/var/log/webssh.log\"})"
msgstr "@code{daemon-socket} (default: @code{\"/var/guix/daemon-socket/socket\"})"

msgid "@code{log-level} (default: @var{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "{Data Type} pagekite-configuration"
msgstr "{Data Type} pagekite-configuration"

msgid "Data type representing the configuration of PageKite."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{package} (default: @var{pagekite})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{kitename} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{kitesecret} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{frontend} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{extra-file} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "{Data Type} yggdrasil-configuration"
msgstr "Конфигурирование системы"

msgid "Data type representing the configuration of Yggdrasil."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{package} (default: @code{yggdrasil})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{json-config} (default: @code{'()})"
msgstr "@code{inputs} (default: @code{'()})"

msgid "@code{autoconf?} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{log-to} (default: @code{'stdout})"
msgstr "@code{outputs} (default: @code{'(\"out\")})"

msgid "@code{config-file} (default: @code{\"/etc/yggdrasil-private.conf\"})"
msgstr "@code{features} (default: @code{'()})"

msgid ""
"(service ipfs-service-type\n"
"         (ipfs-configuration\n"
"          (gateway \"/ip4/127.0.0.1/tcp/8880\")\n"
"          (api \"/ip4/127.0.0.1/tcp/8881\")))\n"
msgstr ""
"(service guix-service-type\n"
"         (guix-configuration\n"
"           (build-accounts 5)\n"
"           (use-substitutes? #f)))\n"

msgid "{Data Type} ipfs-configuration"
msgstr "Конфигурирование системы"

msgid "Data type representing the configuration of IPFS."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{package} (default: @code{go-ipfs})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{gateway} (default: @code{\"/ip4/127.0.0.1/tcp/8082\"})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{api} (default: @code{\"/ip4/127.0.0.1/tcp/5001\"})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "keepalived"
msgstr "--keep-failed"

msgid ""
"(service keepalived-service-type\n"
"         (keepalived-configuration\n"
"           (config-file (local-file \"keepalived-master.conf\"))))\n"
msgstr ""
"(service keepalived-service-type\n"
"         (keepalived-configuration\n"
"           (config-file (local-file \"keepalived-master.conf\"))))\n"

msgid ""
"(service keepalived-service-type\n"
"         (keepalived-configuration\n"
"          (config-file (local-file \"keepalived-backup.conf\"))))\n"
msgstr ""
"(service keepalived-service-type\n"
"         (keepalived-configuration\n"
"          (config-file (local-file \"keepalived-backup.conf\"))))\n"

msgid "{Data Type} unattended-upgrade-configuration"
msgstr "{Тип данных} build-machine"

msgid "This data type represents the configuration of the unattended upgrade service.  The following fields are available:"
msgstr "Этот тип данных представляет машины для сборки, на которые демон может разгружать сборки. Важные поля:"

msgid "@code{schedule} (default: @code{\"30 01 * * 0\"})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{channels} (default: @code{#~%default-channels})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{operating-system-file} (default: @code{\"/run/current-system/configuration.scm\"})"
msgstr "@code{daemon-socket} (default: @code{\"/var/guix/daemon-socket/socket\"})"

msgid "@code{system-expiration} (default: @code{(* 3 30 24 3600)})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{maximum-duration} (default: @code{3600})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{log-file} (default: @code{\"/var/log/unattended-upgrade.log\"})"
msgstr "@code{daemon-socket} (default: @code{\"/var/guix/daemon-socket/socket\"})"

msgid "@code{display} (default @code{\":0\"})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{vt} (default @code{\"vt7\"})"
msgstr "@code{port} (default: @code{22})"

msgid "This data type represents the configuration of the SDDM login manager.  The available fields are:"
msgstr "Этот тип данных представляет машины для сборки, на которые демон может разгружать сборки. Важные поля:"

msgid "@code{sddm} (default: @code{sddm})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "The SDDM package to use."
msgstr "Используемый пакет SDDM."

msgid "@code{minimum-uid} (default: 1000)"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{maximum-uid} (default: 2000)"
msgstr "@code{parallel-builds} (default: @code{1})"

msgid ""
"(service cups-service-type\n"
"         (cups-configuration\n"
"           (web-interface? #t)\n"
"           (extensions\n"
"             (list cups-filters epson-inkjet-printer-escpr hplip-minimal))))\n"
msgstr ""
"(service cups-service-type\n"
"         (cups-configuration\n"
"           (web-interface? #t)\n"
"           (extensions\n"
"             (list cups-filters epson-inkjet-printer-escpr hplip-minimal))))\n"

msgid "log"
msgstr "log"

msgid "@code{xfce} (default: @code{xfce})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{mate} (default: @code{mate})"
msgstr "@code{port} (default: @code{22})"

msgid "{Data Type} lxqt-desktop-configuration"
msgstr "Конфигурирование системы"

msgid "Configuration record for the LXQt desktop environment."
msgstr "Конфигурации для среды рабочего стола LXQt."

msgid "@code{lxqt} (default: @code{lxqt})"
msgstr "@code{port} (default: @code{22})"

msgid "The LXQT package to use."
msgstr "Используемый пакет LXQT."

msgid "@code{enlightenment} (default: @code{enlightenment})"
msgstr "@code{features} (default: @code{'()})"

msgid "Possible values:"
msgstr "Возможные значения:"

msgid "@code{keyring} (default: @code{gnome-keyring})"
msgstr "@code{port} (default: @code{22})"

msgid "pam-services"
msgstr "Базовые сервисы"

msgid "{Data Type} pulseaudio-configuration"
msgstr "{Тип данных} build-machine"

msgid "@code{client-conf} (default: @code{'()})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{daemon-conf} (default: @code{'((flat-volumes . no))})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{script-file} (default: @code{(file-append pulseaudio \"/etc/pulse/default.pa\")})"
msgstr "@code{features} (default: @code{'()})"

msgid "{Data Type} postgresql-configuration"
msgstr "Конфигурирование системы"

msgid "Data type representing the configuration for the @code{postgresql-service-type}."
msgstr "Управление конфигурацией операционной системы."

msgid "PostgreSQL package to use for the service."
msgstr "Пакет PostgreSQL для использования в сервисе."

msgid "@code{port} (default: @code{5432})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{config-file} (default: @code{(postgresql-config-file)})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{log-directory} (default: @code{\"/var/log/postgresql\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{data-directory} (default: @code{\"/var/lib/postgresql/data\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{extension-packages} (default: @code{'()})"
msgstr "@code{patches} (по умолчанию: @code{'()})"

msgid "{Data Type} postgresql-config-file"
msgstr "Конфигурирование системы"

msgid "@code{log-destination} (default: @code{\"syslog\"})"
msgstr "@code{compression-level} (default: @code{3})"

msgid "@code{hba-file} (default: @code{%default-postgres-hba})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{ident-file} (default: @code{%default-postgres-ident})"
msgstr "@code{features} (default: @code{'()})"

msgid ""
"(service postgresql-role-service-type\n"
"            (postgresql-role-configuration\n"
"             (roles\n"
"              (list (postgresql-role\n"
"                     (name \"test\")\n"
"                     (create-database? #t))))))\n"
msgstr ""
"(service postgresql-role-service-type\n"
"            (postgresql-role-configuration\n"
"             (roles\n"
"              (list (postgresql-role\n"
"                     (name \"test\")\n"
"                     (create-database? #t))))))\n"

msgid "{Data Type} postgresql-role"
msgstr "Конфигурирование системы"

msgid "The role name."
msgstr "Имя роли."

msgid "@code{permissions} (default: @code{'(createdb login)})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{create-database?} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "{Data Type} postgresql-role-configuration"
msgstr "Конфигурирование системы"

msgid "Data type representing the configuration of @var{postgresql-role-service-type}."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{host} (default: @code{\"/var/run/postgresql\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{log} (default: @code{\"/var/log/postgresql_roles.log\"})"
msgstr "@code{daemon-socket} (default: @code{\"/var/guix/daemon-socket/socket\"})"

msgid "File name of the log file."
msgstr "Имя используемой базы данных."

msgid "@code{roles} (default: @code{'()})"
msgstr "@code{modules} (по умолчанию: @code{'()})"

msgid "Data type representing the configuration of @var{mysql-service-type}."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{socket} (default: @code{\"/run/mysqld/mysqld.sock\"})"
msgstr "@code{daemon-socket} (default: @code{\"/var/guix/daemon-socket/socket\"})"

msgid "@code{extra-environment} (default: @code{#~'()})"
msgstr "@code{features} (default: @code{'()})"

msgid "List of environment variables passed to the @command{mysqld} process."
msgstr "Список переменных среды, которые необходимо определить."

msgid "@code{auto-upgrade?} (default: @code{#t})"
msgstr "@code{port} (default: @code{22})"

msgid "home directory"
msgstr "домашняя директория"

msgid "Getmail service"
msgstr "Почтовые сервисы"

msgid "The getmail package to use."
msgstr "Используемый пакет getmail."

msgid "The getmail configuration file to use."
msgstr "Используемый файл конфигурации getmail."

msgid "CA certificates to use."
msgstr "Сертификаты CA для использования."

msgid "Radicale Service"
msgstr "Почтовые сервисы"

msgid "{Data Type} radicale-configuration"
msgstr "{Data Type} pagekite-configuration"

msgid "The @code{(gnu services messaging)} module provides Guix service definitions for messaging services.  Currently it provides the following services:"
msgstr "Модуль @code{(guix inferior)} предоставляет следующие процедуры для работы с ранними версиями:"

msgid "@code{bitlbee} (default: @code{bitlbee})"
msgstr "@code{port} (default: @code{22})"

msgid "The @code{(gnu services file-sharing)} module provides services that assist with transferring files over peer-to-peer file-sharing networks."
msgstr "Модуль @code{(gnu services file-sharing)} предоставляет следующие сервисы, помогающие с передачей файлов через одноранговые сети."

msgid "Transmission Daemon Service"
msgstr "Сервисы упраления версиями"

msgid "# herd reload transmission-daemon\n"
msgstr "herd start ssh-daemon\n"

msgid "{Data Type} transmission-daemon-configuration"
msgstr "{Тип данных} build-machine"

msgid "The Transmission package to use."
msgstr "Используемый пакет nfs-utils."

msgid ""
"(service sysctl-service-type\n"
"         (sysctl-configuration\n"
"          (settings\n"
"           (\"net.ipv4.tcp_allowed_congestion_control\" .\n"
"            \"reno cubic lp\"))))\n"
msgstr ""
"(service cups-service-type\n"
"         (cups-configuration\n"
"           (web-interface? #t)\n"
"           (extensions\n"
"             (list cups-filters epson-inkjet-printer-escpr hplip-minimal))))\n"

msgid "(service prometheus-node-exporter-service-type)\n"
msgstr "(service openssh-service-type)\n"

msgid "@code{textfile-directory} (default: @code{\"/var/lib/prometheus/node-exporter\"})"
msgstr "@code{port} (default: @code{22})"

msgid "Available @code{vnstat-configuration} fields are:"
msgstr "Доступными полями @code{vnstat-configuration} являются:"

msgid "Here is an example configuration of the @code{directory-server-service-type}:"
msgstr "Вот пример конфигурации @code{directory-server-service-type}:"

msgid "Available @code{directory-server-instance-configuration} fields are:"
msgstr "Доступными полями @code{directory-server-instance-configuration} являются:"

msgid "Available @code{slapd-configuration} fields are:"
msgstr "Доступными полями @code{slapd-configuration} являются:"

msgid "Available @code{backend-userroot-configuration} fields are:"
msgstr "Доступными полями @code{backend-userroot-configuration} являются:"

msgid "@code{lua-package-path} (default: @code{'()})"
msgstr "@code{native-search-paths} (default: @code{'()})"

msgid "@code{lua-package-cpath} (default: @code{'()})"
msgstr "@code{native-search-paths} (default: @code{'()})"

msgid "@code{global-directives} (default: @code{'((events . ()))})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{host} (default: @code{\"127.0.0.1\"})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "Service type for Patchwork."
msgstr "Поделитесь своей работой."

msgid "@code{patchwork} (default: @code{patchwork})"
msgstr "@code{port} (default: @code{22})"

msgid "The Patchwork package to use."
msgstr "Используемый пакет Patchwork."

msgid "@code{static-path}  (default: @code{\"/static/\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{secret-key-file} (default: @code{\"/etc/patchwork/django-secret-key\"})"
msgstr "@code{daemon-socket} (default: @code{\"/var/guix/daemon-socket/socket\"})"

msgid "@code{static-url} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{admins} (default: @code{'()})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{enable-rest-api?} (default: @code{#t})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{enable-xmlrpc?} (default: @code{#t})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{force-https-links?} (default: @code{#t})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{engine} (default: @code{\"django.db.backends.postgresql_psycopg2\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{name} (default: @code{\"patchwork\"})"
msgstr "@code{port} (default: @code{22})"

msgid "The name of the database to use."
msgstr "Имя используемой базы данных."

msgid "@code{password} (default: @code{\"\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{host} (default: @code{\"\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{port} (default: @code{\"\"})"
msgstr "@code{port} (default: @code{22})"

msgid "Mumi, Debbugs Web interface"
msgstr "пользовательские интерфейсы"

msgid "Debbugs, Mumi Web interface"
msgstr "пользовательские интерфейсы"

msgid "{Data Type} mumi-configuration"
msgstr "{Тип данных} build-machine"

msgid "Data type representing the Mumi service configuration.  This type has the following fields:"
msgstr "Тип данных, представляющий конфигурацию сервиса Mumi.  Этот тип имеет следующие поля:"

msgid "@code{mumi} (default: @code{mumi})"
msgstr "@code{port} (default: @code{22})"

msgid "The Mumi package to use."
msgstr "Используемый пакет Mumi."

msgid "@code{mailer?} (default: @code{#true})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{socket-group} (default: @code{nginx})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{php-ini-file} (default @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid ""
"(service gmnisrv-service-type\n"
"         (gmnisrv-configuration\n"
"           (config-file (local-file \"./my-gmnisrv.ini\"))))\n"
msgstr ""
"(service gmnisrv-service-type\n"
"         (gmnisrv-configuration\n"
"           (config-file (local-file \"./my-gmnisrv.ini\"))))\n"

msgid "{Data Type} gmnisrv-configuration"
msgstr "Конфигурирование системы"

msgid "Data type representing the configuration of gmnisrv."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{package} (default: @var{gmnisrv})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{config-file} (default: @code{%default-gmnisrv-config-file})"
msgstr "@code{features} (default: @code{'()})"

msgid "{Data Type} agate-configuration"
msgstr "{Data Type} pagekite-configuration"

msgid "Data type representing the configuration of Agate."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{package} (default: @code{agate})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "The package object of the Agate server."
msgstr "Пакет для использования."

msgid "@code{content} (default: @file{\"/srv/gemini\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{serve-secret?} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{log-ip?} (default: @code{#t})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{user} (default: @code{\"agate\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{group} (default: @code{\"agate\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{log-file} (default: @file{\"/var/log/agate.log\"})"
msgstr "@code{daemon-socket} (default: @code{\"/var/guix/daemon-socket/socket\"})"

msgid "@code{email} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{server} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "Knot Resolver Service"
msgstr "Сервисы Kerberos"

msgid "Data type representing the configuration of knot-resolver."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{package} (default: @var{knot-resolver})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{kresd-config-file} (default: %kresd.conf)"
msgstr "@code{compression-level} (default: @code{3})"

msgid "@code{garbage-collection-interval} (default: 1000)"
msgstr "@code{parallel-builds} (default: @code{1})"

msgid "@code{addresses} (default: @code{'()})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{tftp-enable?} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{tftp-no-fail?} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{tftp-single-port?} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{tftp-secure?} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{tftp-max} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{tftp-mtu} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{tftp-no-blocksize?} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{tftp-lowercase?} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{tftp-port-range} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{tftp-root} (default: @code{/var/empty,lo})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{tftp-unique-root} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "The @code{(gnu services vpn)} module provides services related to @dfn{virtual private networks} (VPNs)."
msgstr "Модуль @code{(gnu services file-sharing)} предоставляет следующие сервисы, помогающие с передачей файлов через одноранговые сети."

msgid "Bitmask"
msgstr "Bitmask"

msgid "{Data Type} wireguard-configuration"
msgstr "{Тип данных} build-machine"

msgid "Data type representing the configuration of the Wireguard service."
msgstr "Управление конфигурацией операционной системы."

msgid "The wireguard package to use for this service."
msgstr "Пакет @code{ganeti} для использования в этой службе."

msgid "@code{interface} (default: @code{\"wg0\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{addresses} (default: @code{'(\"10.0.0.1/32\")})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{private-key} (default: @code{\"/etc/wireguard/private.key\"})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{peers} (default: @code{'()})"
msgstr "@code{features} (default: @code{'()})"

msgid "{Data Type} wireguard-peer"
msgstr "{Тип данных} build-machine"

msgid "Data type representing a Wireguard peer attached to a given interface."
msgstr "Управление конфигурацией операционной системы."

msgid "The peer name."
msgstr "Имя роли."

msgid "@code{endpoint} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{keep-alive} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "NFS Service"
msgstr "Сервисы DNS"

msgid "NFS, server"
msgstr "NFS, сервер"

msgid "{Data Type} nfs-configuration"
msgstr "Конфигурирование системы"

msgid "It has the following parameters:"
msgstr "GNU Guix зависит от следующих пакетов:"

msgid "The nfs-utils package to use."
msgstr "Используемый пакет nfs-utils."

msgid "@code{nfs-versions} (default: @code{'(\"4.2\" \"4.1\" \"4.0\")})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{exports} (default: @code{'()})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{rpcmountd-port} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{rpcstatd-port} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{idmap-domain} (default: @code{\"localdomain\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{nfsd-port} (default: @code{2049})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{nfsd-threads} (default: @code{8})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{nfsd-tcp?} (default: @code{#t})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{nfsd-udp?} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{debug} (default: @code{'()\"})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{verbosity} (default: @code{0})"
msgstr "@code{port} (default: @code{22})"

msgid "The verbosity level of the daemon."
msgstr "Уровень детализации демона."

msgid "The @code{(gnu services samba)} module provides service definitions for Samba as well as additional helper services.  Currently it provides the following services."
msgstr "Модуль @code{(gnu services samba)} предоставляет определения служб для Samba, а также дополнительные вспомогательные службы.  В настоящее время он предоставляет следующие сервисы."

msgid "Web Service Discovery Daemon"
msgstr "Демон выявлення веб-сервисов"

msgid "@code{web-log-file} (default: @code{\"/var/log/cuirass-web.log\"})"
msgstr "@code{daemon-socket} (default: @code{\"/var/guix/daemon-socket/socket\"})"

msgid "@code{parameters} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{remote-server} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{database} (default: @code{\"dbname=cuirass host=/var/run/postgresql\"})"
msgstr "@code{port} (default: @code{22})"

msgid "remote build"
msgstr "воспроизводимые сборки"

msgid "Cuirass remote building"
msgstr "последний коммит, сборка"

msgid "Using the local Guix daemon."
msgstr "Запуск демона сборки."

msgid "Using the remote build mechanism."
msgstr "Подготовка отдельного окружения сборки."

msgid "{Data Type} cuirass-remote-server-configuration"
msgstr "{Data Type} pagekite-configuration"

msgid "Data type representing the configuration of the Cuirass remote-server."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{backend-port} (default: @code{5555})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{log-port} (default: @code{5556})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{publish-port} (default: @code{5557})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{log-file} (default: @code{\"/var/log/cuirass-remote-server.log\"})"
msgstr "@code{daemon-socket} (default: @code{\"/var/guix/daemon-socket/socket\"})"

msgid "@code{cache} (default: @code{\"/var/cache/cuirass/remote\"})"
msgstr "@code{daemon-socket} (default: @code{\"/var/guix/daemon-socket/socket\"})"

msgid "@code{trigger-url} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "{Data Type} cuirass-remote-worker-configuration"
msgstr "{Тип данных} build-machine"

msgid "Data type representing the configuration of the Cuirass remote-worker."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{workers} (default: @code{1})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{systems} (default: @code{(list (%current-system))})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{log-file} (default: @code{\"/var/log/cuirass-remote-worker.log\"})"
msgstr "@code{daemon-socket} (default: @code{\"/var/guix/daemon-socket/socket\"})"

msgid "@code{publish-port} (default: @code{5558})"
msgstr "@code{port} (default: @code{22})"

msgid "(service laminar-service-type)\n"
msgstr "(service openssh-service-type)\n"

msgid "{Data Type} laminar-configuration"
msgstr "{Тип данных} build-machine"

msgid "Data type representing the configuration of Laminar."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{laminar} (default: @code{laminar})"
msgstr "@code{port} (default: @code{22})"

msgid "The Laminar package to use."
msgstr "Используемый пакет Mumi."

msgid "@code{home-directory} (default: @code{\"/var/lib/laminar\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{bind-http} (default: @code{\"*:8080\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{bind-rpc} (default: @code{\"unix-abstract:laminar\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{title} (default: @code{\"Laminar\"})"
msgstr "@code{port} (default: @code{22})"

msgid "The page title to show in the web frontend."
msgstr "Сервис rottlog."

msgid "@code{keep-rundirs} (default: @code{0})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{archive-url} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{base-url} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "Base URL to use for links to laminar itself."
msgstr "URI для использования в базе данных."

msgid "Available @code{mympd-configuration} fields are:"
msgstr "Доступными полями @code{mympd-configuration} являются:"

msgid "Available @code{mympd-ip-acl} fields are:"
msgstr "Доступными полями @code{mympd-ip-acl} являются:"

msgid ""
"(service qemu-binfmt-service-type\n"
"         (qemu-binfmt-configuration\n"
"           (platforms (lookup-qemu-platforms \"arm\" \"aarch64\"))))\n"
msgstr ""
"(service qemu-binfmt-service-type\n"
"         (qemu-binfmt-configuration\n"
"           (platforms (lookup-qemu-platforms \"arm\" \"aarch64\"))))\n"

msgid ""
"(service qemu-binfmt-service-type\n"
"         (qemu-binfmt-configuration\n"
"           (platforms (lookup-qemu-platforms \"arm\"))))\n"
msgstr ""
"(service qemu-binfmt-service-type\n"
"         (qemu-binfmt-configuration\n"
"           (platforms (lookup-qemu-platforms \"arm\" \"aarch64\"))))\n"

msgid "@code{qemu} (default: @code{qemu-minimal})"
msgstr "@code{port} (default: @code{22})"

msgid "image"
msgstr "image"

msgid "The Hurd in a Virtual Machine"
msgstr "Установка Guix на виртуальную машину (VM)"

msgid "{Data Type} hurd-vm-configuration"
msgstr "{Тип данных} build-machine"

msgid "The data type representing the configuration for @code{hurd-vm-service-type}."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{os} (default: @var{%hurd-vm-operating-system})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{image} (default: @var{hurd-vm-disk-image})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{disk-size} (default: @code{'guess})"
msgstr "@code{features} (default: @code{'()})"

msgid "The size of the disk image."
msgstr "Лицензия этого руководства."

msgid "@code{memory-size} (default: @code{512})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{options} (default: @code{'(\"--snapshot\")})"
msgstr "@code{outputs} (default: @code{'(\"out\")})"

msgid "@code{net-options} (default: @var{hurd-vm-net-options})"
msgstr "@code{features} (default: @code{'()})"

msgid "childhurd, offloading"
msgstr "разгрузка"

msgid "Hurd, offloading"
msgstr "разгрузка"

msgid "@code{secret-root} (default: @file{/etc/childhurd})"
msgstr "@code{private-key} (default: @file{~root/.ssh/id_rsa})"

msgid "{Data Type} ganeti-configuration"
msgstr "Конфигурирование системы"

msgid "The @code{ganeti} service takes the following configuration options:"
msgstr "Модуль @code{(guix inferior)} предоставляет следующие процедуры для работы с ранними версиями:"

msgid "@code{ganeti} (default: @code{ganeti})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{noded-configuration} (default: @code{(ganeti-noded-configuration)})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{confd-configuration} (default: @code{(ganeti-confd-configuration)})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{wconfd-configuration} (default: @code{(ganeti-wconfd-configuration)})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{luxid-configuration} (default: @code{(ganeti-luxid-configuration)})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{rapi-configuration} (default: @code{(ganeti-rapi-configuration)})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{kvmd-configuration} (default: @code{(ganeti-kvmd-configuration)})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{mond-configuration} (default: @code{(ganeti-mond-configuration)})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{metad-configuration} (default: @code{(ganeti-metad-configuration)})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{watcher-configuration} (default: @code{(ganeti-watcher-configuration)})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{cleaner-configuration} (default: @code{(ganeti-cleaner-configuration)})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{file-storage-paths} (default: @code{'()})"
msgstr "@code{native-search-paths} (default: @code{'()})"

msgid "@code{os} (default: @code{%default-ganeti-os})"
msgstr "@code{port} (default: @code{22})"

msgid "{Data Type} ganeti-os"
msgstr "{Тип данных} build-machine"

msgid "@code{variants} (default: @code{'()})"
msgstr "@code{inputs} (default: @code{'()})"

msgid "{Data Type} ganeti-os-variant"
msgstr "{Тип данных} build-machine"

msgid "The name of this variant."
msgstr "Лицензия этого руководства."

msgid "configuration"
msgstr "configuration"

msgid "A configuration file for this variant."
msgstr "Файл конфигурации для этого варианта."

msgid "{Data Type} debootstrap-configuration"
msgstr "Конфигурирование системы"

msgid "@code{hooks} (default: @code{%default-debootstrap-hooks})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{proxy} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{mirror} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{arch} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{suite} (default: @code{\"stable\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{extra-pkgs} (default: @code{%default-debootstrap-extra-pkgs})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{components} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{generate-cache?} (default: @code{#t})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{clean-cache} (default: @code{14})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{partition-style} (default: @code{'msdos})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{partition-alignment} (default: @code{2048})"
msgstr "@code{arguments} (default: @code{'()})"

msgid "{Data Type} ganeti-noded-configuration"
msgstr "{Data Type} pagekite-configuration"

msgid "The @code{ganeti} package to use for this service."
msgstr "Пакет @code{ganeti} для использования в этой службе."

msgid "@code{port} (default: @code{1811})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{address} (default: @code{\"0.0.0.0\"})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{max-clients} (default: @code{20})"
msgstr "@code{inputs} (default: @code{'()})"

msgid "@code{ssl?} (default: @code{#t})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{ssl-key} (default: @file{\"/var/lib/ganeti/server.pem\"})"
msgstr "@code{daemon-socket} (default: @code{\"/var/guix/daemon-socket/socket\"})"

msgid "@code{ssl-cert} (default: @file{\"/var/lib/ganeti/server.pem\"})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "{Data Type} ganeti-confd-configuration"
msgstr "Конфигурирование системы"

msgid "@code{port} (default: @code{1814})"
msgstr "@code{port} (default: @code{22})"

msgid "{Data Type} ganeti-wconfd-configuration"
msgstr "Конфигурирование системы"

msgid "@code{no-voting?} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "{Data Type} ganeti-luxid-configuration"
msgstr "{Тип данных} build-machine"

msgid "{Data Type} ganeti-rapi-configuration"
msgstr "Конфигурирование системы"

msgid "@code{require-authentication?} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{port} (default: @code{5080})"
msgstr "@code{port} (default: @code{22})"

msgid "{Data Type} ganeti-kvmd-configuration"
msgstr "{Тип данных} build-machine"

msgid "{Data Type} ganeti-mond-configuration"
msgstr "{Тип данных} build-machine"

msgid "@code{port} (default: @code{1815})"
msgstr "@code{port} (default: @code{22})"

msgid "{Data Type} ganeti-metad-configuration"
msgstr "{Тип данных} build-machine"

msgid "{Data Type} ganeti-watcher-configuration"
msgstr "{Data Type} pagekite-configuration"

msgid "@code{rapi-ip} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{job-age} (default: @code{(* 6 3600)})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{verify-disks?} (default: @code{#t})"
msgstr "@code{port} (default: @code{22})"

msgid "{Data Type} ganeti-cleaner-configuration"
msgstr "{Тип данных} build-machine"

msgid "@code{master-schedule} (default: @code{\"45 1 * * *\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{node-schedule} (default: @code{\"45 2 * * *\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{package} (default: @code{git})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{export-all?} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{user-path} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{listen} (default: @code{'()})"
msgstr "@code{inputs} (default: @code{'()})"

msgid "@code{port} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{whitelist} (default: @code{'()})"
msgstr "@code{inputs} (default: @code{'()})"

msgid "@code{uri-path} (default: @samp{/git/})"
msgstr "@code{port} (default: @code{22})"

msgid "Data type representing the configuration of PAM Mount."
msgstr "Управление конфигурацией операционной системы."

msgid "rules"
msgstr "rules"

msgid "The system user to run the service as."
msgstr "Сервис mcron."

msgid "{Data Type} guix-build-coordinator-configuration"
msgstr "Конфигурирование системы"

msgid "Data type representing the configuration of the Guix Build Coordinator."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{package} (default: @code{guix-build-coordinator})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "The Guix Build Coordinator package to use."
msgstr "Используемый пакет Guix Build Coordinator."

msgid "@code{user} (default: @code{\"guix-build-coordinator\"})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{group} (default: @code{\"guix-build-coordinator\"})"
msgstr "@code{port} (default: @code{22})"

msgid "The URI to use for the database."
msgstr "URI для использования в базе данных."

msgid "@code{agent-communication-uri} (default: @code{\"http://0.0.0.0:8745\"})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{client-communication-uri} (default: @code{\"http://127.0.0.1:8746\"})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{allocation-strategy} (default: @code{#~basic-build-allocation-strategy})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{hooks} (default: @var{'()})"
msgstr "@code{inputs} (default: @code{'()})"

msgid "@code{guile} (default: @code{guile-3.0-latest})"
msgstr "@code{port} (default: @code{22})"

msgid "{Data Type} guix-build-coordinator-agent-configuration"
msgstr "Конфигурирование системы"

msgid "Data type representing the configuration a Guix Build Coordinator agent."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{user} (default: @code{\"guix-build-coordinator-agent\"})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{coordinator} (default: @code{\"http://localhost:8745\"})"
msgstr "@code{port} (default: @code{22})"

msgid "authentication"
msgstr "authentication"

msgid "@code{systems} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "The number of builds to perform in parallel."
msgstr "Число сборок, которые могут быть запущены на машине."

msgid "@code{max-1min-load-average} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{derivation-substitute-urls} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{non-derivation-substitute-urls} (default: @code{#f})"
msgstr "@code{native-inputs} (default: @code{'()})"

msgid "{Data Type} guix-build-coordinator-agent-password-auth"
msgstr "Конфигурирование системы"

msgid "Data type representing an agent authenticating with a coordinator via a UUID and password."
msgstr "Управление конфигурацией операционной системы."

msgid "{Data Type} guix-build-coordinator-agent-password-file-auth"
msgstr "Конфигурирование системы"

msgid "password-file"
msgstr "профиль"

msgid "{Data Type} guix-build-coordinator-agent-dynamic-auth"
msgstr "Конфигурирование системы"

msgid "Data type representing an agent authenticating with a coordinator via a dynamic auth token and agent name."
msgstr "Управление конфигурацией операционной системы."

msgid "agent-name"
msgstr "каналы"

msgid "{Data Type} guix-build-coordinator-agent-dynamic-auth-with-file"
msgstr "Конфигурирование системы"

msgid "Data type representing an agent authenticating with a coordinator via a dynamic auth token read from a file and agent name."
msgstr "Управление конфигурацией операционной системы."

msgid "token-file"
msgstr "профиль"

msgid "Guix Data Service"
msgstr "Сервисы баз данных"

msgid "@code{package} (default: @code{guix-data-service})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{user} (default: @code{\"guix-data-service\"})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{group} (default: @code{\"guix-data-service\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{port} (default: @code{8765})"
msgstr "@code{port} (default: @code{22})"

msgid "The port to bind the web service to."
msgstr "Сервис rottlog."

msgid "The host to bind the web service to."
msgstr "Сервис rottlog."

msgid "@code{getmail-idle-mailboxes} (default: @code{#f})"
msgstr "@code{parallel-builds} (default: @code{1})"

msgid "@code{commits-getmail-retriever-configuration} (default: @code{#f})"
msgstr "@code{compression-level} (default: @code{3})"

msgid "Extra command line options for @code{guix-data-service}."
msgstr "Дополнительные параметры командной строки для @code {guix-data-service}."

msgid "@code{extra-process-jobs-options} (default: @var{'()})"
msgstr "@code{features} (default: @code{'()})"

msgid "Early OOM Service"
msgstr "Почтовые сервисы"

msgid "@code{earlyoom} (default: @var{earlyoom})"
msgstr "@code{port} (default: @code{22})"

msgid "The Earlyoom package to use."
msgstr "Используемый пакет Earlyoom."

msgid "@code{minimum-available-memory} (default: @code{10})"
msgstr "@code{parallel-builds} (default: @code{1})"

msgid "@code{minimum-free-swap} (default: @code{10})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{prefer-regexp} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{avoid-regexp} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{memory-report-interval} (default: @code{0})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{ignore-positive-oom-score-adj?} (default: @code{#f})"
msgstr "@code{compression-level} (default: @code{3})"

msgid "@code{show-debug-messages?} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{send-notification-command} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "Available @code{fstrim-configuration} fields are:"
msgstr "Доступными полями @code{fstrim-configuration} являются:"

msgid "Kernel Module Loader Service"
msgstr "Сервисы Kerberos"

msgid "rasdaemon"
msgstr "демон"

msgid "Rasdaemon Service"
msgstr "Почтовые сервисы"

msgid "faults"
msgstr "по умолчанию"

msgid "(service rasdaemon-service-type)\n"
msgstr "(service openssh-service-type)\n"

msgid "{Data Type} rasdaemon-configuration"
msgstr "{Data Type} pagekite-configuration"

msgid "The data type representing the configuration of @command{rasdaemon}."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{record?} (default: @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "Zram Device Service"
msgstr "Игровые службы"

msgid "{Data Type} zram-device-configuration"
msgstr "{Data Type} pagekite-configuration"

msgid "This is the data type representing the configuration for the zram-device service."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{size} (default @code{\"1G\"})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{compression-algorithm} (default @code{'lzo})"
msgstr "@code{compression-level} (default: @code{3})"

msgid "@code{memory-limit} (default @code{0})"
msgstr "@code{port} (default: @code{22})"

msgid "{Data Type} hurd-console-configuration"
msgstr "Конфигурирование системы"

msgid "This is the data type representing the configuration for the hurd-console-service."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{hurd} (default: @var{hurd})"
msgstr "@code{port} (default: @code{22})"

msgid "The Hurd package to use."
msgstr "Используемый пакет Hurd."

msgid "{Data Type} hurd-getty-configuration"
msgstr "{Тип данных} build-machine"

msgid "This is the data type representing the configuration for the hurd-getty-service."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{baud-rate} (default: @code{38400})"
msgstr "@code{port} (default: @code{22})"

msgid "Since @code{sysctl-service-type} is used in the default lists of services, @code{%base-services} and @code{%desktop-services}, you can use @code{modify-services} to change its configuration and add the kernel parameters that you want (@pxref{Service Reference, @code{modify-services}})."
msgstr "Поскольку @code{sysctl-service-type} используется в списках служб по умолчанию, @code{%base-services} и @code{%desktop-services}, вы можете использовать @code{modify-services}, чтобы изменить его конфигурации и добить нужные параметры ядра (@pxref{Service Reference, @code{modify-services}})."

msgid ""
"(modify-services %base-services\n"
"  (sysctl-service-type config =>\n"
"                       (sysctl-configuration\n"
"                         (settings (append '((\"net.ipv4.ip_forward\" . \"1\"))\n"
"                                           %default-sysctl-settings)))))\n"
msgstr ""
"(service postgresql-role-service-type\n"
"            (postgresql-role-configuration\n"
"             (roles\n"
"              (list (postgresql-role\n"
"                     (name \"test\")\n"
"                     (create-database? #t))))))\n"

msgid "@code{settings} (default: @code{%default-sysctl-settings})"
msgstr "@code{port} (default: @code{22})"

msgid "Dictionary Service"
msgstr "Создание служб"

msgid "The @code{(gnu services docker)} module provides the following services."
msgstr "Модуль @code{(gnu services docker)} предоставляет следующие сервисы."

msgid "@code{debug?} (default @code{#f})"
msgstr "@code{features} (default: @code{'()})"

msgid "Enable or disable debug output."
msgstr "Как включить или отключить подстановки."

msgid "The Docker daemon package to use."
msgstr "Используемый пакет Docker демона."

msgid "The Docker client package to use."
msgstr "Используемый Docker клиент."

msgid "@code{proxy} (default @var{docker-libnetwork-cmd-proxy})"
msgstr "@code{port} (default: @code{22})"

msgid "The Docker user-land networking proxy package to use."
msgstr "Используемый пользователей сетевой прокси-пакет Docker."

msgid "@code{enable-proxy?} (default @code{#t})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{enable-iptables?} (default @code{#t})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "Singularity, container service"
msgstr "целостность, склада"

msgid "Auditd Service"
msgstr "Сервисы аудио"

msgid "The @code{(gnu services auditd)} module provides the following service."
msgstr "Модуль @code{(gnu services auditd)} предоставляет следующие сервисы."

msgid "File accesses"
msgstr "Файловые системы"

msgid "System calls"
msgstr "Установка системы"

msgid "Invoked commands"
msgstr "Вызов @command{guix gc}"

msgid "Network access"
msgstr "Сервисы сети"

msgid "{Data Type} auditd-configuration"
msgstr "{Тип данных} build-machine"

msgid "@code{audit} (default: @code{audit})"
msgstr "@code{port} (default: @code{22})"

msgid "The audit package to use."
msgstr "Пакет аудита для использования."

msgid "@code{configuration-directory} (default: @code{%default-auditd-configuration-directory})"
msgstr "@code{features} (default: @code{'()})"

msgid "R-Shiny service"
msgstr "Сервисы DNS"

msgid "The @code{(gnu services science)} module provides the following service."
msgstr "Модуль @code{(gnu services science)} предоставляет следующие сервис."

msgid "{Data Type} rshiny-configuration"
msgstr "Конфигурирование системы"

msgid "This is the data type representing the configuration of rshiny."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{package} (default: @code{r-shiny})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "The package to use."
msgstr "Пакет для использования."

msgid "Nix service"
msgstr "Сервисы DNS"

msgid "The @code{(gnu services nix)} module provides the following service."
msgstr "Модуль @code{(gnu services nix)} предоставляет следующий сервис."

msgid "{Data Type} nix-configuration"
msgstr "Конфигурирование системы"

msgid "This data type represents the configuration of the Nix daemon."
msgstr "Управление конфигурацией операционной системы."

msgid "@code{nix} (default: @code{nix})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "The Nix package to use."
msgstr "Используемый пакет Nix."

msgid "@code{sandbox} (default: @code{#t})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{build-sandbox-items} (default: @code{'()})"
msgstr "@code{inputs} (default: @code{'()})"

msgid "Extra command line options for @code{nix-service-type}."
msgstr "Дополнительные параметры командной строки для @code{nix-service-type}."

msgid ""
"guix install nss-certs\n"
"export CURL_CA_BUNDLE=\"$HOME/.guix-profile/etc/ssl/certs/ca-certificates.crt\"\n"
msgstr ""
"$ guix install glibc-locales\n"
"$ export GUIX_LOCPATH=$HOME/.guix-profile/lib/locale\n"

msgid "grub-efi-netboot-bootloader"
msgstr "grub-efi-bootloader"

msgid "@code{terminal-outputs} (default: @code{'(gfxterm)})"
msgstr "@code{features} (default: @code{'()})"

msgid "@code{linux} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{initrd} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{multiboot-kernel} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "resolution"
msgstr "изоляция"

msgid "{Data Type} grub-theme"
msgstr "{Тип данных} build-machine"

msgid "@code{gfxmode} (default: @code{'(\"auto\")})"
msgstr "@code{port} (default: @code{22})"

msgid "Once you have written an operating system declaration as seen in the previous section, it can be @dfn{instantiated} using the @command{guix system} command.  The synopsis is:"
msgstr "Однажды объявленное описание операционной системы, описанное в предыдущих разделах, может быть @dfn{применено} с помощью  команды @command{guix system}. Синопсис:"

msgid "@var{file} must be the name of a file containing an @code{operating-system} declaration.  @var{action} specifies how the operating system is instantiated.  Currently the following values are supported:"
msgstr "@var{file} должно быть именем файла, содержащего определение @code{operating-system}. @var{action} указывает, как воспроизводится операционная система. В настоящее время поддерживаются следующие значения:"

msgid "Display available service type definitions that match the given regular expressions, sorted by relevance:"
msgstr "Показывает доступные определения типов служб, в соответствии с указанным регулярным выражениям, отсортированные по релевантности:"

msgid "As for @command{guix package --search}, the result is written in @code{recutils} format, which makes it easy to filter the output (@pxref{Top, GNU recutils databases,, recutils, GNU recutils manual})."
msgstr "Так же как для @command{guix package --search}, результат будет выведен в @code{recutils} формате, что делает его простым для фильтрации и вывода (@pxref{Top, GNU recutils databases, recutils, GNU recutils manual})."

msgid "Build the operating system described in @var{file}, activate it, and switch to it@footnote{This action (and the related actions @code{switch-generation} and @code{roll-back}) are usable only on systems already running Guix System.}."
msgstr "Собирает операционную систему описанную в @var{file}, активирует её и переключается на неё@footnote{Это действие (и связанные с ним @code{switch-generation} и @code{roll-back}) можно использовать только в системах, в которых уже работает Guix System.}."

msgid "It is highly recommended to run @command{guix pull} once before you run @command{guix system reconfigure} for the first time (@pxref{Invoking guix pull}).  Failing to do that you would see an older version of Guix once @command{reconfigure} has completed."
msgstr "Настоятельно рекомендуется запустить команду @command{guix pull} перед первым запуском @command{guix system reconfigure} (@pxref{Invoking guix pull}). В противном случае вы можете получить старую версию Guix после завершения @command{reconfigure}"

msgid "This command creates a new generation whose number is one greater than the current generation (as reported by @command{guix system list-generations}).  If that generation already exists, it will be overwritten.  This behavior mirrors that of @command{guix package} (@pxref{Invoking guix package})."
msgstr "Эта команда создает новое поколение, число которого на единицу больше, чем у текущего поколения (как описано @command{guix system list-generations}). Если это поколение уже существует, оно будет перезаписано. Это поведение описано в @command{guix package} (@pxref{Invoking guix package})."

msgid "It adds a bootloader menu entry for the new OS configuration, ---unless @option{--no-bootloader} is passed.  For GRUB, it moves entries for older configurations to a submenu, allowing you to choose an older system generation at boot time should you need it."
msgstr "Она добавляет пункты меню загрузчика для новой конфигурации ОС, если не передана опция @option{--no-bootloader}. Для GRUB она перемещает записи для более старых конфигураций вподменю, позволяя вам выбрать более старое поколение системы во время загрузки, если вам это понадобится."

msgid "provenance tracking, of the operating system"
msgstr "трекинг источника, артефакты программного обеспечения"

msgid "Upon completion, the new system is deployed under @file{/run/current-system}.  This directory contains @dfn{provenance meta-data}: the list of channels in use (@pxref{Channels}) and @var{file} itself, when available.  You can view it by running:"
msgstr "По завершении новая система развертывается в @file{/run/current-system}. Этот каталог содержит @dfn{метаданные о происхождении}: список используемых каналов (@pxref{Channels}) и сам @var{file}, если он доступен. Вы можете просмотреть его, запустив:"

msgid "This information is useful should you later want to inspect how this particular generation was built.  In fact, assuming @var{file} is self-contained, you can later rebuild generation @var{n} of your operating system with:"
msgstr "Эта информация пригодится, если позже вы захотите проверить, как было собрано это конкретное поколение. Фактически, предполагая, что @var{file} содержит всё необходимое, вы можете позже пересобрать поколение @var{n} в вашей операционной системы с помощью:"

msgid "You can think of it as some sort of built-in version control! Your system is not just a binary artifact: @emph{it carries its own source}.  @xref{Service Reference, @code{provenance-service-type}}, for more information on provenance tracking."
msgstr "Вы можете думать об этом как о чем-то вроде встроенного контроля версий! Ваша система теперь не просто набор двоичных файлов: @emph{она содержит свой собственный источник}. @xref{Service Reference, @code{provenance-service-type}}, для получения дополнительной информации об отслеживании происхождения."

msgid "By default, @command{reconfigure} @emph{prevents you from downgrading your system}, which could (re)introduce security vulnerabilities and also cause problems with ``stateful'' services such as database management systems.  You can override that behavior by passing @option{--allow-downgrades}."
msgstr "По умолчанию @command{reconfigure} @emph{препятствует откату вашей системы}, что может (пере)внести уязвимости безопасности, а также вызвать проблемы со службами \"отслеживающими состояние\", такими как системы управления базами данных. Вы можете переопределить это поведение, передав @option{--allow-downgrades}."

msgid "Switch to an existing system generation.  This action atomically switches the system profile to the specified system generation.  It also rearranges the system's existing bootloader menu entries.  It makes the menu entry for the specified system generation the default, and it moves the entries for the other generations to a submenu, if supported by the bootloader being used.  The next time the system boots, it will use the specified system generation."
msgstr "Переключает на существующее поколение системы. Эта команда атомарной операцией переключает системный профиль на указанное поколение системы. Она также изменяет порядок существующих элементов меню загрузчика системы. Она устанавливает в загрузчике запуск по умолчанию указанного поколения и перемещает другие поколения в подменю, если это поддерживается используемым загрузчиком. При следующей загрузке системы она будет использовать указанное поколение системы."

msgid "The bootloader itself is not being reinstalled when using this command.  Thus, the installed bootloader is used with an updated configuration file."
msgstr "Сам загрузчик не переустанавливается при использовании этой команды. Таким образом, установленный загрузчик используется с обновленным файлом конфигурации."

msgid "The target generation can be specified explicitly by its generation number.  For example, the following invocation would switch to system generation 7:"
msgstr "Нужное поколение может быть явно указано по его номеру. Например, следующий вызов переключится на поколение 7:"

msgid "The target generation can also be specified relative to the current generation with the form @code{+N} or @code{-N}, where @code{+3} means ``3 generations ahead of the current generation,'' and @code{-1} means ``1 generation prior to the current generation.'' When specifying a negative value such as @code{-1}, you must precede it with @code{--} to prevent it from being parsed as an option.  For example:"
msgstr "Нужное поколение также может быть указано относительно текущего поколения @code{+N} или @code{-N}, где @code{+3} означает \"на 3 поколения старше текущего\", а @code{-1} означает \"на 1 поколение младше текущего\". При задании отрицательного значения @code{-1}, перед ним нужно поставить @code{--} чтобы не воспринимать его в качестве опции. Например:"

msgid "Currently, the effect of invoking this action is @emph{only} to switch the system profile to an existing generation and rearrange the bootloader menu entries.  To actually start using the target system generation, you must reboot after running this action.  In the future, it will be updated to do the same things as @command{reconfigure}, like activating and deactivating services."
msgstr "В настоящее время результатом вызова этого действия является @emph{только} переключение профиля на существующее поколение и изменение элементов меню загрузчика. Чтобы начать использовать указанное поколение, вы должны перезагрузиться. В будущем поведение будет аналогично @command{reconfigure}, например, запуск и остановка служб."

msgid "This action will fail if the specified generation does not exist."
msgstr "Это действие завершится ошибкой, если указанное поколение не существует."

msgid "roll-back"
msgstr "откат"

msgid "Switch to the preceding system generation.  The next time the system boots, it will use the preceding system generation.  This is the inverse of @command{reconfigure}, and it is exactly the same as invoking @command{switch-generation} with an argument of @code{-1}."
msgstr "Переключает на предыдущее поколение системы. При следующей загрузке система будет использовать предыдущее. Команда отменяет @command{reconfigure}, и делает то же самое, что @command{switch-generation} с аргументом @code{-1}."

msgid "Currently, as with @command{switch-generation}, you must reboot after running this action to actually start using the preceding system generation."
msgstr "В настоящее время, как и в случае с @command{switch-generation}, вы должны перезагрузиться после выполнения этого действия, чтобы фактически начать использовать предыдущее поколение системы."

msgid "Delete system generations, making them candidates for garbage collection (@pxref{Invoking guix gc}, for information on how to run the ``garbage collector'')."
msgstr "Удаляет поколение, делая их кандидатами на для сборщика мусора (@pxref{Invoking guix gc}, для получения информации о том, как запустить \"сборщик мусора\")."

msgid "This works in the same way as @samp{guix package --delete-generations} (@pxref{Invoking guix package, @option{--delete-generations}}).  With no arguments, all system generations but the current one are deleted:"
msgstr "Работает так же, как и @samp{guix package --delete-generations} (@pxref{Invoking guix package, @option{--delete-generations}}). Без аргументов удаляются все системные поколения, кроме текущего:"

msgid "Running this command automatically reinstalls the bootloader with an updated list of menu entries---e.g., the ``old generations'' sub-menu in GRUB no longer lists the generations that have been deleted."
msgstr "Выполнение этой команды автоматически переустановит загрузчик с обновлением меню—например, подменю \"old generations\" в GRUB не будет содержать удаленные поколения."

msgid "Build the derivation of the operating system, which includes all the configuration files and programs needed to boot and run the system.  This action does not actually install anything."
msgstr "Собирает деривацию операционной системы, которая включает в себя все файлы конфигурации и программы, необходимые для загрузки и запуска системы. Это действие на самом деле ничего не устанавливает."

msgid "Populate the given directory with all the files necessary to run the operating system specified in @var{file}.  This is useful for first-time installations of Guix System.  For instance:"
msgstr "Наполняет указанную директорию всем необходимым для запуска операционной системы, указанным в @var{файле}. Это полезно при первой установке системы Guix. В качестве примера:"

msgid "copies to @file{/mnt} all the store items required by the configuration specified in @file{my-os-config.scm}.  This includes configuration files, packages, and so on.  It also creates other essential files needed for the system to operate correctly---e.g., the @file{/etc}, @file{/var}, and @file{/run} directories, and the @file{/bin/sh} file."
msgstr "копирует в @file{/mnt} все элементы хранилища, необходимые для конфигурации, указанной в @file{my-os-config.scm}. Включая файлы конфигурации, пакеты и так далее. Он также создает другие важные файлы, необходимые для правильной работы системы, такие как каталоги @file{/etc}, @file{/var} и @file{/run} и файл @file{/bin/sh}."

msgid "The @code{vm} action and others below can use KVM support in the Linux-libre kernel.  Specifically, if the machine has hardware virtualization support, the corresponding KVM kernel module should be loaded, and the @file{/dev/kvm} device node must exist and be readable and writable by the user and by the build users of the daemon (@pxref{Build Environment Setup})."
msgstr "Параметры @code{vm} и другие, приведенные ниже, могут использовать поддержку KVM ядра Linux-libre. В частности, если машина поддерживает аппаратную виртуализацию,следует загрузить соответствующий модуль ядра KVM а файл устройства @file{/dev/kvm} должен существовать и быть доступен для чтения и записи пользователю и процессамсборки демона (@pxref{Build Environment Setup})."

msgid "Arguments given to the script are passed to QEMU as in the example below, which enables networking and requests 1@tie{}GiB of RAM for the emulated machine:"
msgstr "Аргументы, переданные скрипту, передаются в QEMU, как в приведенном ниже примере,который включает сеть и запрашивает 1@tie{}GiB оперативной памяти для эмулируемоймашины:"

msgid "The VM shares its store with the host system."
msgstr "Виртуальная машина использует свое хранилище совместно с хост-системой."

msgid "Additional file systems can be shared between the host and the VM using the @option{--share} and @option{--expose} command-line options: the former specifies a directory to be shared with write access, while the latter provides read-only access to the shared directory."
msgstr "Дополнительные файловые системы могут быть разделены между хостом и виртуальной машиной с помощью параметров @option{--share} и @option{--expose}: первый указывает директорию, к которой должен быть предоставлен общий доступ с правом на запись, последний обеспечивает доступ только на чтение."

msgid "The example below creates a VM in which the user's home directory is accessible read-only, and where the @file{/exchange} directory is a read-write mapping of @file{$HOME/tmp} on the host:"
msgstr "Пример ниже создает виртуальную машину, которой доступна домашняя директория пользователя с правами на чтение, а директория @file{$HOME/tmp} хоста размещена в @file{/exchange} с правами на чтение и запись:"

msgid "On GNU/Linux, the default is to boot directly to the kernel; this has the advantage of requiring only a very tiny root disk image since the store of the host can then be mounted."
msgstr "В GNU / Linux по умолчанию загрузка выполняется непосредственно в ядро; это имеет преимущество в том, что требуется только очень крошечный образ корневого диска, так как затем можно смонтировать хранилище хоста."

msgid "# dd if=$(guix system image my-os.scm) of=/dev/sdc status=progress\n"
msgstr "# dd if=$(guix system image my-os.scm) of=/dev/sdc status=progress\n"

msgid "--image-type=@var{type}"
msgstr "--target=@var{triplet}"

msgid "For the @code{image} action, create an image of the given @var{size}.  @var{size} may be a number of bytes, or it may include a unit as a suffix (@pxref{Block size, size specifications,, coreutils, GNU Coreutils})."
msgstr "Если задана @var{min}, остановиться, когда @var{min} байт собрано.  @var{min} может быть числом байт или может содержать единицу измерения в суффиксе, как например, @code{MiB} для мебибайт и @code{GB} гигабайт (@pxref{Block size, size specifications,, coreutils, GNU Coreutils})."

msgid "guix deploy @var{file}\n"
msgstr "guix deploy @var{file}\n"

msgid "Do note that you first need to generate a key pair on the coordinator machine to allow the daemon to export signed archives of files from the store (@pxref{Invoking guix archive}), though this step is automatic on Guix System:"
msgstr "Есть ещё одна вещь, которую нужно выполнить после размещения @file{machines.scm}. Выше описано, что при разгрузке файлы передаются вперёд и назад между складами на машинах. Для этого необходимо сгенерировать ключ-пару на кадой машине, чтобы позволить демону экспортировать подписанные архивы файлов из склада (@pxref{Invoking guix archive}):"

msgid "Each target machine must authorize the key of the master machine so that it accepts store items it receives from the coordinator:"
msgstr "Каждая машина для сорки должна авторизовать ключ машины-инициатора, чтобы принимать элементы из склада, которые присылает инициатор:"

msgid "# guix archive --authorize < coordinator-public-key.txt\n"
msgstr "# guix archive --authorize < master-public-key.txt\n"

msgid "{Data Type} machine"
msgstr "{Тип данных} build-machine"

msgid "The object of the operating system configuration to deploy."
msgstr "Управление конфигурацией операционной системы."

msgid "environment"
msgstr "environment"

msgid "@code{configuration} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "{Data Type} machine-ssh-configuration"
msgstr "{Тип данных} build-machine"

msgid "@code{build-locally?} (default: @code{#t})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "system"
msgstr "system"

msgid "The system type describing the architecture of the machine being deployed to---e.g., @code{\"x86_64-linux\"}."
msgstr "Тип системы удалённой машины, то есть @code{x86_64-linux}."

msgid "@code{authorize?} (default: @code{#t})"
msgstr "@code{port} (default: @code{22})"

msgid "@code{identity} (default: @code{#f})"
msgstr "@code{speed} (default: @code{1.0})"

msgid "@code{host-key} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "ssh-ed25519 AAAAC3Nz@dots{} root@@example.org\n"
msgstr "ssh-ed25519 AAAAC3NzaC@dots{}mde+UhL hint@@example.org\n"

msgid "@code{allow-downgrades?} (default: @code{#f})"
msgstr "@code{port} (default: @code{22})"

msgid "ssh-key"
msgstr "ssh-key"

msgid "service types"
msgstr "service types"

msgid ""
"(define guix-service-type\n"
"  (service-type\n"
"   (name 'guix)\n"
"   (extensions\n"
"    (list (service-extension shepherd-root-service-type guix-shepherd-service)\n"
"          (service-extension account-service-type guix-accounts)\n"
"          (service-extension activation-service-type guix-activation)))\n"
"   (default-value (guix-configuration))))\n"
msgstr ""
"(define guix-service-type\n"
"  (service-type\n"
"   (name 'guix)\n"
"   (extensions\n"
"    (list (service-extension shepherd-root-service-type guix-shepherd-service)\n"
"          (service-extension account-service-type guix-accounts)\n"
"          (service-extension activation-service-type guix-activation)))\n"
"   (default-value (guix-configuration))))\n"

msgid "shepherd-root-service-type"
msgstr "shepherd-root-service-type"

msgid "activation-service-type"
msgstr "activation-service-type"

msgid ""
"(service guix-service-type\n"
"         (guix-configuration\n"
"           (build-accounts 5)\n"
"           (extra-options '(\"--gc-keep-derivations\"))))\n"
msgstr ""
"(service guix-service-type\n"
"         (guix-configuration\n"
"           (build-accounts 5)\n"
"           (use-substitutes? #f)))\n"

msgid ""
"(define udev-service-type\n"
"  (service-type (name 'udev)\n"
"                (extensions\n"
"                 (list (service-extension shepherd-root-service-type\n"
"                                          udev-shepherd-service)))\n"
"\n"
msgstr ""
"(define udev-service-type\n"
"  (service-type (name 'udev)\n"
"                (extensions\n"
"                 (list (service-extension shepherd-root-service-type\n"
"                                          udev-shepherd-service)))\n"
"\n"

msgid "For instance, this:"
msgstr "Например:"

msgid "(service openssh-service-type)\n"
msgstr "(service openssh-service-type)\n"

msgid "is equivalent to this:"
msgstr "равнозачно этому:"

msgid ""
"(service openssh-service-type\n"
"         (openssh-configuration))\n"
msgstr ""
"(service openssh-service-type\n"
"         (openssh-configuration))\n"

msgid "@code{default-value} (default: @code{&no-default-value})"
msgstr "@code{port} (default: @code{22})"

msgid "(service @var{type})\n"
msgstr "(service @var{type})\n"

msgid "@xref{Service Types and Services}, for examples."
msgstr "@xref{Service Types and Services}, for examples."

msgid ""
"(simple-service 'my-mcron-job mcron-service-type\n"
"                #~(job '(next-hour (3)) \"guix gc -F 2G\"))\n"
msgstr ""
"(simple-service 'my-mcron-job mcron-service-type\n"
"                #~(job '(next-hour (3)) \"guix gc -F 2G\"))\n"

msgid "privileged-program-service-type"
msgstr "privileged-program-service-type"

msgid "provenance-service-type"
msgstr "provenance-service-type"

msgid "channels.scm"
msgstr "каналы"

msgid "configuration.scm"
msgstr "Конфигурирование системы"

msgid "shepherd services"
msgstr "сервисы shepherd"

msgid "PID 1"
msgstr "PID 1"

msgid "@code{requirement} (default: @code{'()})"
msgstr "@code{features} (default: @code{'()})"

msgid "herd doc @var{service-name}\n"
msgstr "herd doc @var{service-name}\n"

msgid "{Data Type} shepherd-action"
msgstr "{Data Type} shepherd-action"

msgid "herd doc @var{service} action @var{action}\n"
msgstr "herd doc @var{service} action @var{action}\n"

msgid "procedure"
msgstr "procedure"

msgid "{Data Type} shepherd-configuration"
msgstr "Конфигурирование системы"

msgid "This data type represents the Shepherd's configuration."
msgstr "Управление конфигурацией операционной системы."

msgid "shepherd (default: @code{shepherd})"
msgstr "@code{port} (default: @code{22})"

msgid "The Shepherd package to use."
msgstr "Используемый пакет Hurd."

msgid "services (default: @code{'()})"
msgstr "@code{features} (default: @code{'()})"

msgid "The following example specifies the Shepherd package for the operating system:"
msgstr "Следующий пример порождает новую оболочку, установленную для разработки GNU@tie{}Guile:"

msgid "guix system troubleshooting"
msgstr "guix system troubleshooting"

msgid "Available @code{home-mcron-configuration} fields are:"
msgstr "Доступными полями @code{home-mcron-configuration} являются:"

msgid "Available @code{proxy-jump} fields are:"
msgstr "Доступными полями @code{proxy-jump} являются:"

msgid "Available @code{home-ssh-agent-configuration} fields are:"
msgstr "Доступными полями @code{home-ssh-agent-configuration} являются:"

msgid "Available @code{home-gpg-agent-configuration} fields are:"
msgstr "Доступными полями @code{home-gpg-agent-configuration} являются:"

msgid "The configuration record for @code{home-xmodmap-service-type}.  Its available fields are:"
msgstr "Запись конфигурации для @code{home-xmodmap-service-type}.  Доступными полями являются:"

msgid "Available @code{home-znc-configuration} fields are:"
msgstr "Доступными полями @code{home-znc-configuration} являются:"

msgid "Available @code{home-kodi-configuration} fields are:"
msgstr "Доступными полями @code{home-kodi-configuration} являются:"

msgid "import"
msgstr "import"

msgid ""
"$ info -k TLS\n"
"\"(emacs)Network Security\" -- STARTTLS\n"
"\"(emacs)Network Security\" -- TLS\n"
"\"(gnutls)Core TLS API\" -- gnutls_certificate_set_verify_flags\n"
"\"(gnutls)Core TLS API\" -- gnutls_certificate_set_verify_function\n"
"@dots{}\n"
msgstr ""
"$ info -k TLS\n"
"\"(emacs)Network Security\" -- STARTTLS\n"
"\"(emacs)Network Security\" -- TLS\n"
"\"(gnutls)Core TLS API\" -- gnutls_certificate_set_verify_flags\n"
"\"(gnutls)Core TLS API\" -- gnutls_certificate_set_verify_function\n"
"@dots{}\n"

msgid ""
"$ man -k TLS\n"
"SSL (7)              - OpenSSL SSL/TLS library\n"
"certtool (1)         - GnuTLS certificate tool\n"
"@dots {}\n"
msgstr ""
"$ man -k TLS\n"
"SSL (7)              - OpenSSL SSL/TLS library\n"
"certtool (1)         - GnuTLS certificate tool\n"
"@dots{}\n"

msgid "$ info \"(gnutls)Core TLS API\"\n"
msgstr "$ info \"(gnutls)Core TLS API\"\n"

msgid "or:"
msgstr "или:"

msgid "$ man certtool\n"
msgstr "$ man certtool\n"

msgid "debugging files"
msgstr "отладка файлов"

msgid "guix install glibc:debug guile:debug\n"
msgstr "guix install glibc:debug guile:debug\n"

msgid "security updates"
msgstr "обновление безопасности"

msgid "@xref{Invoking guix lint}, for more information."
msgstr "@xref{Invoking guix lint}, для получения дополнительной информации."

msgid "guix build bash --no-grafts\n"
msgstr "guix build bash --no-grafts\n"

msgid "guix build bash\n"
msgstr "guix build bash\n"

msgid "To verify which Bash your whole profile refers to, you can run (@pxref{Invoking guix gc}):"
msgstr "Чтобы проверить, к какому именно Bash установлен в вашем профилt, вы можете запустить (@pxref{Invoking guix gc}):"

msgid "guix gc -R $(readlink -f ~/.guix-profile) | grep bash\n"
msgstr "guix gc -R `readlink -f ~/.guix-profile` | grep bash\n"

msgid "guix gc -R $(guix system build my-config.scm) | grep bash\n"
msgstr "guix gc -R `guix system build my-config.scm` | grep bash\n"

msgid "lsof | grep /gnu/store/.*bash\n"
msgstr "lsof | grep /gnu/store/.*bash\n"

msgid "@image{images/gcc-core-mesboot0-graph,6in,,Dependency graph of gcc-core-mesboot0}"
msgstr "@image{images/gcc-core-mesboot0-graph,6in,,Dependency graph of gcc-core-mesboot0}"

msgid "If you are interested, join us on @samp{#bootstrappable} on the Libera.Chat IRC network or discuss on @email{bug-mes@@gnu.org} or @email{gash-devel@@nongnu.org}."
msgstr "Если вам интересно, то присоединяйтесь к нам на @samp{#bootstrappable} в IRC-сети Libera.Chat или обсуждайте на @email{bug-mes@@gnu.org} или @email{gash-devel@@nongnu.org}."

msgid "@image{images/bootstrap-graph,6in,,Dependency graph of the early bootstrap derivations}"
msgstr "@image{images/bootstrap-graph,6in,,Dependency graph of the early bootstrap derivations}"

msgid ""
"guix graph -t derivation \\\n"
"  -e '(@@@@ (gnu packages bootstrap) %bootstrap-gcc)' \\\n"
"  | dot -Tps > gcc.ps\n"
msgstr ""
"guix graph -t derivation \\\n"
"  -e '(@@@@ (gnu packages bootstrap) %bootstrap-gcc)' \\\n"
"  | dot -Tps > gcc.ps\n"

msgid ""
"guix graph -t derivation \\\n"
"  -e '(@@@@ (gnu packages bootstrap) %bootstrap-mes)' \\\n"
"  | dot -Tps > mes.ps\n"
msgstr ""
"guix graph -t derivation \\\n"
"  -e '(@@@@ (gnu packages bootstrap) %bootstrap-mes)' \\\n"
"  | dot -Tps > mes.ps\n"

msgid "Building the Build Tools"
msgstr "Сборка инструментов сборки"

msgid ""
"guix graph -t bag \\\n"
"  -e '(@@@@ (gnu packages commencement)\n"
"          glibc-final-with-bootstrap-bash)' | xdot -\n"
msgstr ""
"guix graph -t bag \\\n"
"  -e '(@@@@ (gnu packages commencement)\n"
"          glibc-final-with-bootstrap-bash)' | xdot -\n"

msgid "@image{images/bootstrap-packages,6in,,Dependency graph of the early packages}"
msgstr "@image{images/bootstrap-packages,6in,,График зависимости ранних пакетов}"

msgid "The first tool that gets built with the bootstrap binaries is GNU@tie{}Make---noted @code{make-boot0} above---which is a prerequisite for all the following packages.  From there Findutils and Diffutils get built."
msgstr "Первый инструмент, который собирается с помощью двоичных файлов начальной загрузки, - это GNU@tie{}Make---отмеченный @code{make-boot0} выше---который является обязательным для всех следующих пакетов. После собираются Findutils и Diffutils."

msgid "Then come the first-stage Binutils and GCC, built as pseudo cross tools---i.e., with @option{--target} equal to @option{--host}.  They are used to build libc.  Thanks to this cross-build trick, this libc is guaranteed not to hold any reference to the initial tool chain."
msgstr "Затем идут Binutils и GCC, построенные как псевдо-кросс-инструменты---т.е. с @code{--target}, равным @code{--host}. Они используются для сборки libc. Благодаря этому кросс-сборочному трюку, libc гарантированно не будет содержать никаких ссылок на начальный набор инструментов."

msgid "From there the final Binutils and GCC (not shown above) are built.  GCC uses @command{ld} from the final Binutils, and links programs against the just-built libc.  This tool chain is used to build the other packages used by Guix and by the GNU Build System: Guile, Bash, Coreutils, etc."
msgstr "Оттуда создаются финальные версии Binutils и GCC (не показаны выше). GCC использует @code{ld} из финального Binutils и связывает программы с только что созданным libc. Эта цепочка инструментов используется для сборки других пакетов, используемых Guix и система сборки GNU: Guile, Bash, Coreutils и т.д."

msgid "And voilà! At this point we have the complete set of build tools that the GNU Build System expects.  These are in the @code{%final-inputs} variable of the @code{(gnu packages commencement)} module, and are implicitly used by any package that uses @code{gnu-build-system} (@pxref{Build Systems, @code{gnu-build-system}})."
msgstr "И вуаля! Теперь у нас есть полный набор инструментов сборки, который ожидает система сборки GNU. Они находятся в переменной @code{%final-input} модуля @code{(gnu packages commencement)} и неявно используются любым пакетом, использующим @code{gnu-build-system} (@pxref{Build Systems, @code{gnu-build-system}})."

msgid "Building the Bootstrap Binaries"
msgstr "Сборка двоичных файлов двоичной загрузки"

msgid "Because the final tool chain does not depend on the bootstrap binaries, those rarely need to be updated.  Nevertheless, it is useful to have an automated way to produce them, should an update occur, and this is what the @code{(gnu packages make-bootstrap)} module provides."
msgstr "Поскольку окончательный набор инструментов не зависит от двоичных файлов начальной загрузки, их редко требуется обновлять. Тем не менее, полезно иметь автоматический способ их создания, если произойдет обновление, и это то, что обеспечивает модуль @code{(gnu packages make-bootstrap)}."

msgid "The following command builds the tarballs containing the bootstrap binaries (Binutils, GCC, glibc, for the traditional bootstrap and linux-libre-headers, bootstrap-mescc-tools, bootstrap-mes for the Reduced Binary Seed bootstrap, and Guile, and a tarball containing a mixture of Coreutils and other basic command-line tools):"
msgstr "Следующая команда создает tar-архивы, содержащие двоичные файлы начальной загрузки (Binutils, GCC, glibc, для традиционной загрузки и linux-libre-headers, bootstrap-mescc-tools, bootstrap-mes для начальной загрузки Reduced Binary Seed, Guile и tarball содержащий смесь Coreutils и других основных инструментов командной строки):"

msgid "guix build bootstrap-tarballs\n"
msgstr "tar архив начальной сборки guix\n"

msgid "The generated tarballs are those that should be referred to in the @code{(gnu packages bootstrap)} module mentioned at the beginning of this section."
msgstr "Сгенерированные тарболы - это те, на которые нужно ссылаться в модуле @code{(gnu packages bootstrap)}, упомянутом в начале этого раздела."

msgid "Still here? Then perhaps by now you've started to wonder: when do we reach a fixed point? That is an interesting question! The answer is unknown, but if you would like to investigate further (and have significant computational and storage resources to do so), then let us know."
msgstr "Все еще здесь? Тогда, может быть, вы задались вопросом: когда мы достигнем фиксированной точки? Это интересный вопрос! Ответ неизвестен, но если вы хотите продолжить исследование (и располагаете значительными вычислительными ресурсами для этого), сообщите нам."

msgid "Reducing the Set of Bootstrap Binaries"
msgstr "Сокращение набора Bootstrap Binaries"

msgid "Porting to a New Platform"
msgstr "Портирование на новую платформу"

msgid "guix build --target=armv5tel-linux-gnueabi bootstrap-tarballs\n"
msgstr "guix build --target=armv5tel-linux-gnueabi bootstrap-tarballs\n"

msgid "contributing.texi"
msgstr "contributing.ru.texi"

msgid "The Nix-based software distributions, Nixpkgs and NixOS, have also been an inspiration for Guix."
msgstr "Дистрибутивы, основанный на Nix, Nixpkgs and NixOS, также были источником вдохновения для Guix."

msgid "license, GNU Free Documentation License"
msgstr "лицензия, GNU Free Documentation License"

msgid "fdl-1.3.texi"
msgstr "fdl-1.3.texi"
